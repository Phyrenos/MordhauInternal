#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentDisplay

#include "Basic.hpp"

#include "BP_EquipmentDisplay_classes.hpp"
#include "BP_EquipmentDisplay_parameters.hpp"


namespace SDK
{

// Function BP_EquipmentDisplay.BP_EquipmentDisplay_C.ExecuteUbergraph_BP_EquipmentDisplay
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EquipmentDisplay_C::ExecuteUbergraph_BP_EquipmentDisplay(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentDisplay_C", "ExecuteUbergraph_BP_EquipmentDisplay");

	Params::BP_EquipmentDisplay_C_ExecuteUbergraph_BP_EquipmentDisplay Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentDisplay.BP_EquipmentDisplay_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EquipmentDisplay_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentDisplay_C", "Tick");

	Params::BP_EquipmentDisplay_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentDisplay.BP_EquipmentDisplay_C.Hide
// (BlueprintCallable, BlueprintEvent)

void UBP_EquipmentDisplay_C::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentDisplay_C", "Hide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentDisplay.BP_EquipmentDisplay_C.Show
// (BlueprintCallable, BlueprintEvent)

void UBP_EquipmentDisplay_C::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentDisplay_C", "Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentDisplay.BP_EquipmentDisplay_C.Find Shield
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AMordhauEquipment*>        Equipment                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Found_Shield_                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_EquipmentDisplay_C::Find_Shield(TArray<class AMordhauEquipment*>& Equipment, bool* Found_Shield_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentDisplay_C", "Find Shield");

	Params::BP_EquipmentDisplay_C_Find_Shield Parms{};

	Parms.Equipment = std::move(Equipment);

	UObject::ProcessEvent(Func, &Parms);

	Equipment = std::move(Parms.Equipment);

	if (Found_Shield_ != nullptr)
		*Found_Shield_ = Parms.Found_Shield_;
}


// Function BP_EquipmentDisplay.BP_EquipmentDisplay_C.GetVisibility_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_EquipmentDisplay_C::GetVisibility_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentDisplay_C", "GetVisibility_0");

	Params::BP_EquipmentDisplay_C_GetVisibility_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

