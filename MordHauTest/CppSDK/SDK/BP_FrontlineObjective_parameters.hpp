#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrontlineObjective

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FrontlineObjective.BP_FrontlineObjective_C.OnInitialize
// 0x0008 (0x0008 - 0x0000)
struct BP_FrontlineObjective_C_OnInitialize final
{
public:
	class ABP_CapturePoint_C*                     Point;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontlineObjective_C_OnInitialize) == 0x000008, "Wrong alignment on BP_FrontlineObjective_C_OnInitialize");
static_assert(sizeof(BP_FrontlineObjective_C_OnInitialize) == 0x000008, "Wrong size on BP_FrontlineObjective_C_OnInitialize");
static_assert(offsetof(BP_FrontlineObjective_C_OnInitialize, Point) == 0x000000, "Member 'BP_FrontlineObjective_C_OnInitialize::Point' has a wrong offset!");

// Function BP_FrontlineObjective.BP_FrontlineObjective_C.IsCompleted
// 0x0001 (0x0001 - 0x0000)
struct BP_FrontlineObjective_C_IsCompleted final
{
public:
	bool                                          Completed;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FrontlineObjective_C_IsCompleted) == 0x000001, "Wrong alignment on BP_FrontlineObjective_C_IsCompleted");
static_assert(sizeof(BP_FrontlineObjective_C_IsCompleted) == 0x000001, "Wrong size on BP_FrontlineObjective_C_IsCompleted");
static_assert(offsetof(BP_FrontlineObjective_C_IsCompleted, Completed) == 0x000000, "Member 'BP_FrontlineObjective_C_IsCompleted::Completed' has a wrong offset!");

// Function BP_FrontlineObjective.BP_FrontlineObjective_C.IsInObjectiveArea
// 0x0010 (0x0010 - 0x0000)
struct BP_FrontlineObjective_C_IsInObjectiveArea final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InArea;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FrontlineObjective_C_IsInObjectiveArea) == 0x000004, "Wrong alignment on BP_FrontlineObjective_C_IsInObjectiveArea");
static_assert(sizeof(BP_FrontlineObjective_C_IsInObjectiveArea) == 0x000010, "Wrong size on BP_FrontlineObjective_C_IsInObjectiveArea");
static_assert(offsetof(BP_FrontlineObjective_C_IsInObjectiveArea, Location) == 0x000000, "Member 'BP_FrontlineObjective_C_IsInObjectiveArea::Location' has a wrong offset!");
static_assert(offsetof(BP_FrontlineObjective_C_IsInObjectiveArea, InArea) == 0x00000C, "Member 'BP_FrontlineObjective_C_IsInObjectiveArea::InArea' has a wrong offset!");

// Function BP_FrontlineObjective.BP_FrontlineObjective_C.GetObjectiveProgress
// 0x0004 (0x0004 - 0x0000)
struct BP_FrontlineObjective_C_GetObjectiveProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontlineObjective_C_GetObjectiveProgress) == 0x000004, "Wrong alignment on BP_FrontlineObjective_C_GetObjectiveProgress");
static_assert(sizeof(BP_FrontlineObjective_C_GetObjectiveProgress) == 0x000004, "Wrong size on BP_FrontlineObjective_C_GetObjectiveProgress");
static_assert(offsetof(BP_FrontlineObjective_C_GetObjectiveProgress, Progress) == 0x000000, "Member 'BP_FrontlineObjective_C_GetObjectiveProgress::Progress' has a wrong offset!");

}

