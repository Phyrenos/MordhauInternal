#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WearablePickup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_structs.hpp"
#include "Mordhau_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WearablePickup.BP_WearablePickup_C
// 0x0090 (0x0480 - 0x03F0)
class ABP_WearablePickup_C : public ASkeletalMeshMordhauActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	TMap<EWearableSlot, struct FWearableCustomization> Wearables;                                         // 0x03F8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Tier;                                              // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              EquipSound;                                        // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMainWearableSlot                             MainSlot;                                          // 0x0458(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Name_0;                                            // 0x0460(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_WearablePickup(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OnInteractionStart(class AMordhauCharacter* Character);
	void AssignToCharacter(class AMordhauCharacter* Character, class ACustomizationReplicationActor* CustomizatonReplicationActor);
	void Equip(class AMordhauCharacter* Char);
	void EquipIfUpgrade(class AMordhauCharacter* Char);

	void IsAnUpgrade(class AMordhauCharacter* Char, bool* Value) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WearablePickup_C">();
	}
	static class ABP_WearablePickup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WearablePickup_C>();
	}
};
static_assert(alignof(ABP_WearablePickup_C) == 0x000010, "Wrong alignment on ABP_WearablePickup_C");
static_assert(sizeof(ABP_WearablePickup_C) == 0x000480, "Wrong size on ABP_WearablePickup_C");
static_assert(offsetof(ABP_WearablePickup_C, UberGraphFrame) == 0x0003F0, "Member 'ABP_WearablePickup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_WearablePickup_C, Wearables) == 0x0003F8, "Member 'ABP_WearablePickup_C::Wearables' has a wrong offset!");
static_assert(offsetof(ABP_WearablePickup_C, Tier) == 0x000448, "Member 'ABP_WearablePickup_C::Tier' has a wrong offset!");
static_assert(offsetof(ABP_WearablePickup_C, EquipSound) == 0x000450, "Member 'ABP_WearablePickup_C::EquipSound' has a wrong offset!");
static_assert(offsetof(ABP_WearablePickup_C, MainSlot) == 0x000458, "Member 'ABP_WearablePickup_C::MainSlot' has a wrong offset!");
static_assert(offsetof(ABP_WearablePickup_C, Name_0) == 0x000460, "Member 'ABP_WearablePickup_C::Name_0' has a wrong offset!");

}

