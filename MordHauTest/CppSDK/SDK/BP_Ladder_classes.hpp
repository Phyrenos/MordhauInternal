#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Ladder

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_MordhauActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Ladder.BP_Ladder_C
// 0x00D0 (0x04B0 - 0x03E0)
class ABP_Ladder_C final : public ABP_MordhauActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UArrowComponent*                        Arrow1;                                            // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DroppedMesh;                                       // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LadderMesh;                                        // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class USceneComponent*                        LadderExit;                                        // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class USceneComponent*                        LadderEnd;                                         // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class USceneComponent*                        LadderStart;                                       // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<class ABP_LadderMover_C*>              Movers;                                            // 0x0420(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	uint8                                         LadderState;                                       // 0x0430(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LadderStateChangeTime;                             // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_438[0x8];                                      // 0x0438(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DroppedMeshTransform;                              // 0x0440(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanDropAndRaise;                                   // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          StartAsRaised;                                     // 0x0471(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_472[0x6];                                      // 0x0472(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            RaiseCurve;                                        // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            DropCurve;                                         // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RaiseDuration;                                     // 0x0488(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DropDuration;                                      // 0x048C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         FallIgnoreActors;                                  // 0x0490(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class AController*                            InteractInstigator;                                // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DropDamage;                                        // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Ladder(int32 EntryPoint);
	void ToggleLadderState(class AController* Instigator_0);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnInteractionStart(class AMordhauCharacter* Character);
	void BeginAnimatingLadder(bool DoEffects);
	void OnHighlightMaintained(class AMordhauCharacter* Character);
	void ReceiveBeginPlay();
	void OnHeldInteractionStart(class AMordhauCharacter* Character);
	void UserConstructionScript();
	void OnRep_LadderState();
	void UpdateInteractionText();

	bool CanInteract(class AMordhauCharacter* Character) const;
	bool CanHeldInteract(class AMordhauCharacter* Character) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Ladder_C">();
	}
	static class ABP_Ladder_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Ladder_C>();
	}
};
static_assert(alignof(ABP_Ladder_C) == 0x000010, "Wrong alignment on ABP_Ladder_C");
static_assert(sizeof(ABP_Ladder_C) == 0x0004B0, "Wrong size on ABP_Ladder_C");
static_assert(offsetof(ABP_Ladder_C, UberGraphFrame) == 0x0003E0, "Member 'ABP_Ladder_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, Arrow1) == 0x0003E8, "Member 'ABP_Ladder_C::Arrow1' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, Arrow) == 0x0003F0, "Member 'ABP_Ladder_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, DroppedMesh) == 0x0003F8, "Member 'ABP_Ladder_C::DroppedMesh' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, LadderMesh) == 0x000400, "Member 'ABP_Ladder_C::LadderMesh' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, LadderExit) == 0x000408, "Member 'ABP_Ladder_C::LadderExit' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, LadderEnd) == 0x000410, "Member 'ABP_Ladder_C::LadderEnd' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, LadderStart) == 0x000418, "Member 'ABP_Ladder_C::LadderStart' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, Movers) == 0x000420, "Member 'ABP_Ladder_C::Movers' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, LadderState) == 0x000430, "Member 'ABP_Ladder_C::LadderState' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, LadderStateChangeTime) == 0x000434, "Member 'ABP_Ladder_C::LadderStateChangeTime' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, DroppedMeshTransform) == 0x000440, "Member 'ABP_Ladder_C::DroppedMeshTransform' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, CanDropAndRaise) == 0x000470, "Member 'ABP_Ladder_C::CanDropAndRaise' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, StartAsRaised) == 0x000471, "Member 'ABP_Ladder_C::StartAsRaised' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, RaiseCurve) == 0x000478, "Member 'ABP_Ladder_C::RaiseCurve' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, DropCurve) == 0x000480, "Member 'ABP_Ladder_C::DropCurve' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, RaiseDuration) == 0x000488, "Member 'ABP_Ladder_C::RaiseDuration' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, DropDuration) == 0x00048C, "Member 'ABP_Ladder_C::DropDuration' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, FallIgnoreActors) == 0x000490, "Member 'ABP_Ladder_C::FallIgnoreActors' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, InteractInstigator) == 0x0004A0, "Member 'ABP_Ladder_C::InteractInstigator' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, DropDamage) == 0x0004A8, "Member 'ABP_Ladder_C::DropDamage' has a wrong offset!");

}

