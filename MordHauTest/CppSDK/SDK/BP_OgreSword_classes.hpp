#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OgreSword

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_TwoHandedSword_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_OgreSword.BP_OgreSword_C
// 0x0020 (0x1CC0 - 0x1CA0)
class ABP_OgreSword_C final : public ABP_TwoHandedSword_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1C98(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UParticleSystemComponent*               P_WeaponTrailDistort;                              // 0x1CA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        SC_BladedLarge_Slide_Start;                        // 0x1CA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_OgreSwordSparks;                                 // 0x1CB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_OgreSword(int32 EntryPoint);
	void ToggleSparks();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_OgreSword_C">();
	}
	static class ABP_OgreSword_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_OgreSword_C>();
	}
};
static_assert(alignof(ABP_OgreSword_C) == 0x000010, "Wrong alignment on ABP_OgreSword_C");
static_assert(sizeof(ABP_OgreSword_C) == 0x001CC0, "Wrong size on ABP_OgreSword_C");
static_assert(offsetof(ABP_OgreSword_C, UberGraphFrame) == 0x001C98, "Member 'ABP_OgreSword_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_OgreSword_C, P_WeaponTrailDistort) == 0x001CA0, "Member 'ABP_OgreSword_C::P_WeaponTrailDistort' has a wrong offset!");
static_assert(offsetof(ABP_OgreSword_C, SC_BladedLarge_Slide_Start) == 0x001CA8, "Member 'ABP_OgreSword_C::SC_BladedLarge_Slide_Start' has a wrong offset!");
static_assert(offsetof(ABP_OgreSword_C, P_OgreSwordSparks) == 0x001CB0, "Member 'ABP_OgreSword_C::P_OgreSwordSparks' has a wrong offset!");

}

