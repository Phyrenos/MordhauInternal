#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordeSellVendorBase

#include "Basic.hpp"

#include "BP_HordeSellVendorBase_classes.hpp"
#include "BP_HordeSellVendorBase_parameters.hpp"


namespace SDK
{

// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.ExecuteUbergraph_BP_HordeSellVendorBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeSellVendorBase_C::ExecuteUbergraph_BP_HordeSellVendorBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "ExecuteUbergraph_BP_HordeSellVendorBase");

	Params::BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.OnSelectNextAvailableEquipment
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                MordhauCharacter                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeSellVendorBase_C::OnSelectNextAvailableEquipment(class AMordhauCharacter* MordhauCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "OnSelectNextAvailableEquipment");

	Params::BP_HordeSellVendorBase_C_OnSelectNextAvailableEquipment Parms{};

	Parms.MordhauCharacter = MordhauCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.MakeSellerAvailable
// (BlueprintCallable, BlueprintEvent)

void ABP_HordeSellVendorBase_C::MakeSellerAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "MakeSellerAvailable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.OnHeldInteractionStart
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeSellVendorBase_C::OnHeldInteractionStart(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "OnHeldInteractionStart");

	Params::BP_HordeSellVendorBase_C_OnHeldInteractionStart Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_HordeSellVendorBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.UpdateVisuals
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HordeSellVendorBase_C::UpdateVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "UpdateVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.New IsAvailable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAvailable_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HordeSellVendorBase_C::New_IsAvailable(bool IsAvailable_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "New IsAvailable");

	Params::BP_HordeSellVendorBase_C_New_IsAvailable Parms{};

	Parms.IsAvailable_0 = IsAvailable_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.GetEquippedItemPrice
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_HordePlayerController_C*      HordePlayerController                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Price                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeSellVendorBase_C::GetEquippedItemPrice(class ABP_HordePlayerController_C* HordePlayerController, int32* Price)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "GetEquippedItemPrice");

	Params::BP_HordeSellVendorBase_C_GetEquippedItemPrice Parms{};

	Parms.HordePlayerController = HordePlayerController;

	UObject::ProcessEvent(Func, &Parms);

	if (Price != nullptr)
		*Price = Parms.Price;
}


// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.RemoveEquipment
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEquipmentRemovedSuccesfully                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HordeSellVendorBase_C::RemoveEquipment(class AMordhauCharacter* Character, bool* IsEquipmentRemovedSuccesfully)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "RemoveEquipment");

	Params::BP_HordeSellVendorBase_C_RemoveEquipment Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (IsEquipmentRemovedSuccesfully != nullptr)
		*IsEquipmentRemovedSuccesfully = Parms.IsEquipmentRemovedSuccesfully;
}


// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.CheckPlayerProximity
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HordeSellVendorBase_C::CheckPlayerProximity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "CheckPlayerProximity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.UpdateSellerAnimationState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HordeSellVendorBase_C::UpdateSellerAnimationState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "UpdateSellerAnimationState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.OnRep_IsVendorHidden
// (BlueprintCallable, BlueprintEvent)

void ABP_HordeSellVendorBase_C::OnRep_IsVendorHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "OnRep_IsVendorHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.Get First Equipment Item
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AMordhauCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AMordhauEquipment*                MordhauEquipment                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeSellVendorBase_C::Get_First_Equipment_Item(class AMordhauCharacter* Character, class AMordhauEquipment** MordhauEquipment) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "Get First Equipment Item");

	Params::BP_HordeSellVendorBase_C_Get_First_Equipment_Item Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (MordhauEquipment != nullptr)
		*MordhauEquipment = Parms.MordhauEquipment;
}


// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.IsEquipmentNotInBanList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             InEquipmentName                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsEquipmentSellable_0                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HordeSellVendorBase_C::IsEquipmentNotInBanList(const class FText& InEquipmentName, bool* IsEquipmentSellable_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "IsEquipmentNotInBanList");

	Params::BP_HordeSellVendorBase_C_IsEquipmentNotInBanList Parms{};

	Parms.InEquipmentName = std::move(InEquipmentName);

	UObject::ProcessEvent(Func, &Parms);

	if (IsEquipmentSellable_0 != nullptr)
		*IsEquipmentSellable_0 = Parms.IsEquipmentSellable_0;
}


// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.GetPurchasableEquipmentItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             Equipment_Name                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class ABP_HordePurchasable_C*           PurchasableItem                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsItemFromChest                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             ChestItemName                                          (Parm, OutParm)
// int32                                   ChestCost                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeSellVendorBase_C::GetPurchasableEquipmentItem(const class FText& Equipment_Name, class ABP_HordePurchasable_C** PurchasableItem, bool* IsItemFromChest, class FText* ChestItemName, int32* ChestCost) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "GetPurchasableEquipmentItem");

	Params::BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem Parms{};

	Parms.Equipment_Name = std::move(Equipment_Name);

	UObject::ProcessEvent(Func, &Parms);

	if (PurchasableItem != nullptr)
		*PurchasableItem = Parms.PurchasableItem;

	if (IsItemFromChest != nullptr)
		*IsItemFromChest = Parms.IsItemFromChest;

	if (ChestItemName != nullptr)
		*ChestItemName = std::move(Parms.ChestItemName);

	if (ChestCost != nullptr)
		*ChestCost = Parms.ChestCost;
}


// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.CanHeldInteract
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AMordhauCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_HordeSellVendorBase_C::CanHeldInteract(class AMordhauCharacter* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "CanHeldInteract");

	Params::BP_HordeSellVendorBase_C_CanHeldInteract Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.IsEquipmentSellable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AMordhauCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_HordeSellVendorBase_C::IsEquipmentSellable(class AMordhauCharacter* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "IsEquipmentSellable");

	Params::BP_HordeSellVendorBase_C_IsEquipmentSellable Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.CanInteract
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AMordhauCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_HordeSellVendorBase_C::CanInteract(class AMordhauCharacter* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "CanInteract");

	Params::BP_HordeSellVendorBase_C_CanInteract Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.GetPurchasableNew
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AMordhauEquipment*                Mordhau_Equipment                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sellable                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Base_Cost                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeSellVendorBase_C::GetPurchasableNew(class AMordhauEquipment* Mordhau_Equipment, bool* Sellable, int32* Base_Cost) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSellVendorBase_C", "GetPurchasableNew");

	Params::BP_HordeSellVendorBase_C_GetPurchasableNew Parms{};

	Parms.Mordhau_Equipment = Mordhau_Equipment;

	UObject::ProcessEvent(Func, &Parms);

	if (Sellable != nullptr)
		*Sellable = Parms.Sellable;

	if (Base_Cost != nullptr)
		*Base_Cost = Parms.Base_Cost;
}

}

