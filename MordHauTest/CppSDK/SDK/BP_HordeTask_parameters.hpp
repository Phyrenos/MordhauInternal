#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordeTask

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HordeTask.BP_HordeTask_C.TaskTriggered
// 0x0008 (0x0008 - 0x0000)
struct BP_HordeTask_C_TaskTriggered final
{
public:
	class ABP_HordeEnemy_C*                       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeTask_C_TaskTriggered) == 0x000008, "Wrong alignment on BP_HordeTask_C_TaskTriggered");
static_assert(sizeof(BP_HordeTask_C_TaskTriggered) == 0x000008, "Wrong size on BP_HordeTask_C_TaskTriggered");
static_assert(offsetof(BP_HordeTask_C_TaskTriggered, Character) == 0x000000, "Member 'BP_HordeTask_C_TaskTriggered::Character' has a wrong offset!");

// Function BP_HordeTask.BP_HordeTask_C.IsTaskValidFor
// 0x0010 (0x0010 - 0x0000)
struct BP_HordeTask_C_IsTaskValidFor final
{
public:
	class ABP_HordeEnemy_C*                       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeTask_C_IsTaskValidFor) == 0x000008, "Wrong alignment on BP_HordeTask_C_IsTaskValidFor");
static_assert(sizeof(BP_HordeTask_C_IsTaskValidFor) == 0x000010, "Wrong size on BP_HordeTask_C_IsTaskValidFor");
static_assert(offsetof(BP_HordeTask_C_IsTaskValidFor, Character) == 0x000000, "Member 'BP_HordeTask_C_IsTaskValidFor::Character' has a wrong offset!");
static_assert(offsetof(BP_HordeTask_C_IsTaskValidFor, IsValid) == 0x000008, "Member 'BP_HordeTask_C_IsTaskValidFor::IsValid' has a wrong offset!");
static_assert(offsetof(BP_HordeTask_C_IsTaskValidFor, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000009, "Member 'BP_HordeTask_C_IsTaskValidFor::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeTask_C_IsTaskValidFor, CallFunc_Set_Contains_ReturnValue) == 0x00000A, "Member 'BP_HordeTask_C_IsTaskValidFor::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeTask_C_IsTaskValidFor, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'BP_HordeTask_C_IsTaskValidFor::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_HordeTask.BP_HordeTask_C.GetLocationTarget
// 0x0020 (0x0020 - 0x0000)
struct BP_HordeTask_C_GetLocationTarget final
{
public:
	class ABP_HordeEnemy_C*                       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target;                                            // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeTask_C_GetLocationTarget) == 0x000008, "Wrong alignment on BP_HordeTask_C_GetLocationTarget");
static_assert(sizeof(BP_HordeTask_C_GetLocationTarget) == 0x000020, "Wrong size on BP_HordeTask_C_GetLocationTarget");
static_assert(offsetof(BP_HordeTask_C_GetLocationTarget, Character) == 0x000000, "Member 'BP_HordeTask_C_GetLocationTarget::Character' has a wrong offset!");
static_assert(offsetof(BP_HordeTask_C_GetLocationTarget, Target) == 0x000008, "Member 'BP_HordeTask_C_GetLocationTarget::Target' has a wrong offset!");
static_assert(offsetof(BP_HordeTask_C_GetLocationTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'BP_HordeTask_C_GetLocationTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

}

