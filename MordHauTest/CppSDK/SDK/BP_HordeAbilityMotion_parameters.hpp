#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordeAbilityMotion

#include "Basic.hpp"

#include "Mordhau_structs.hpp"


namespace SDK::Params
{

// Function BP_HordeAbilityMotion.BP_HordeAbilityMotion_C.ExecuteUbergraph_BP_HordeAbilityMotion
// 0x0058 (0x0058 - 0x0000)
struct BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetOwnerMordhauCharacter_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeCharacter_C*                   K2Node_DynamicCast_AsBP_Horde_Character;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FNetMotion                             CallFunc_GetCurrentNetMotion_ReturnValue;          // 0x0019(0x0006)(NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Interrupted;                          // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTime;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetOwnerMordhauCharacter_ReturnValue_1;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeCharacter_C*                   K2Node_DynamicCast_AsBP_Horde_Character_1;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FNetMotion                             CallFunc_GetCurrentNetMotion_ReturnValue_1;        // 0x0049(0x0006)(NoDestructor)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion) == 0x000008, "Wrong alignment on BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion");
static_assert(sizeof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion) == 0x000058, "Wrong size on BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, EntryPoint) == 0x000000, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, CallFunc_GetOwnerMordhauCharacter_ReturnValue) == 0x000008, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::CallFunc_GetOwnerMordhauCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, K2Node_DynamicCast_AsBP_Horde_Character) == 0x000010, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::K2Node_DynamicCast_AsBP_Horde_Character' has a wrong offset!");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, CallFunc_GetCurrentNetMotion_ReturnValue) == 0x000019, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::CallFunc_GetCurrentNetMotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, K2Node_SwitchInteger_CmpSuccess) == 0x000024, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, K2Node_Event_Interrupted) == 0x000025, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::K2Node_Event_Interrupted' has a wrong offset!");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, CallFunc_IsValid_ReturnValue) == 0x000026, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, K2Node_Event_DeltaTime) == 0x000028, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, CallFunc_GetOwnerMordhauCharacter_ReturnValue_1) == 0x000038, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::CallFunc_GetOwnerMordhauCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, K2Node_DynamicCast_AsBP_Horde_Character_1) == 0x000040, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::K2Node_DynamicCast_AsBP_Horde_Character_1' has a wrong offset!");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, CallFunc_GetCurrentNetMotion_ReturnValue_1) == 0x000049, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::CallFunc_GetCurrentNetMotion_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000050, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion, K2Node_SwitchInteger_CmpSuccess_1) == 0x000054, "Member 'BP_HordeAbilityMotion_C_ExecuteUbergraph_BP_HordeAbilityMotion::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");

// Function BP_HordeAbilityMotion.BP_HordeAbilityMotion_C.OnTick
// 0x0004 (0x0004 - 0x0000)
struct BP_HordeAbilityMotion_C_OnTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeAbilityMotion_C_OnTick) == 0x000004, "Wrong alignment on BP_HordeAbilityMotion_C_OnTick");
static_assert(sizeof(BP_HordeAbilityMotion_C_OnTick) == 0x000004, "Wrong size on BP_HordeAbilityMotion_C_OnTick");
static_assert(offsetof(BP_HordeAbilityMotion_C_OnTick, DeltaTime) == 0x000000, "Member 'BP_HordeAbilityMotion_C_OnTick::DeltaTime' has a wrong offset!");

// Function BP_HordeAbilityMotion.BP_HordeAbilityMotion_C.OnLeave
// 0x0001 (0x0001 - 0x0000)
struct BP_HordeAbilityMotion_C_OnLeave final
{
public:
	bool                                          Interrupted;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeAbilityMotion_C_OnLeave) == 0x000001, "Wrong alignment on BP_HordeAbilityMotion_C_OnLeave");
static_assert(sizeof(BP_HordeAbilityMotion_C_OnLeave) == 0x000001, "Wrong size on BP_HordeAbilityMotion_C_OnLeave");
static_assert(offsetof(BP_HordeAbilityMotion_C_OnLeave, Interrupted) == 0x000000, "Member 'BP_HordeAbilityMotion_C_OnLeave::Interrupted' has a wrong offset!");

}

