#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_BaseHorse

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AB_BaseHorse.AB_BaseHorse_C.ExecuteUbergraph_AB_BaseHorse
// 0x03C0 (0x03C0 - 0x0000)
struct AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEnd_ReturnValue; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_2;            // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_3;            // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B[0x1];                                      // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NegateRotator_ReturnValue_1;              // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NegateRotator_ReturnValue_2;              // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Horse_C*                            K2Node_DynamicCast_AsBP_Horse;                     // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetDriver_ReturnValue;                    // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EE[0x2];                                      // 0x01EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_2;         // 0x0280(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_1;            // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_322[0x2];                                      // 0x0322(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0340(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0348(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_2;            // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter_1;                  // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_2;          // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_1;       // 0x0380(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x038A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x038B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpToSeparate_ReturnValue;            // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_3;            // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter_2;                  // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse) == 0x000010, "Wrong alignment on AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse");
static_assert(sizeof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse) == 0x0003C0, "Wrong size on AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, EntryPoint) == 0x000000, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Not_PreBool_ReturnValue_1) == 0x000005, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00000D, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_VSize_ReturnValue) == 0x000010, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000018, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x000019, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_NotEqual_NameName_ReturnValue) == 0x00001A, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x00001B, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_GetInstanceAssetPlayerTimeFromEnd_ReturnValue) == 0x00001C, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_GetInstanceAssetPlayerTimeFromEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_NegateRotator_ReturnValue) == 0x000020, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x00002C, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_IsDedicatedServer_ReturnValue) == 0x00002D, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00002E, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue) == 0x000030, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000034, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BreakTransform_Location) == 0x000040, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_ComposeRotators_ReturnValue) == 0x000064, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BreakTransform_Location_1) == 0x000070, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BreakTransform_Rotation_1) == 0x00007C, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BreakTransform_Scale_1) == 0x000088, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_ComposeRotators_ReturnValue_1) == 0x000094, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_ComposeRotators_ReturnValue_2) == 0x0000A0, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_ComposeRotators_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000AC, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_ComposeRotators_ReturnValue_3) == 0x0000B8, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_ComposeRotators_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000C4, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BreakTransform_Location_2) == 0x0000D0, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BreakTransform_Rotation_2) == 0x0000DC, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BreakTransform_Scale_2) == 0x0000E8, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F4, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000100, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x00010C, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Not_PreBool_ReturnValue_2) == 0x000118, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Not_PreBool_ReturnValue_3) == 0x000119, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BooleanAND_ReturnValue_1) == 0x00011A, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_NegateRotator_ReturnValue_1) == 0x00011C, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_NegateRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Not_PreBool_ReturnValue_4) == 0x000128, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BooleanAND_ReturnValue_2) == 0x000129, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_NegateRotator_ReturnValue_2) == 0x00012C, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_NegateRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BreakRotator_Roll) == 0x000138, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BreakRotator_Pitch) == 0x00013C, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BreakRotator_Yaw) == 0x000140, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Abs_ReturnValue) == 0x000144, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000148, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BreakRotator_Roll_1) == 0x00014C, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BreakRotator_Pitch_1) == 0x000150, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BreakRotator_Yaw_1) == 0x000154, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_MakeVector_ReturnValue) == 0x000158, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000164, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_MakeVector_ReturnValue_1) == 0x000168, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000174, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Add_VectorVector_ReturnValue) == 0x000178, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_MakeVector_ReturnValue_2) == 0x000184, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000190, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00019C, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0001A8, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, K2Node_Event_DeltaTimeX) == 0x0001B4, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x0001B8, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_TryGetPawnOwner_ReturnValue) == 0x0001C0, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, K2Node_DynamicCast_AsBP_Horse) == 0x0001C8, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::K2Node_DynamicCast_AsBP_Horse' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_GetDriver_ReturnValue) == 0x0001D8, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_GetDriver_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_GetVelocity_ReturnValue) == 0x0001E0, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_IsValid_ReturnValue) == 0x0001EC, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Not_PreBool_ReturnValue_5) == 0x0001ED, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_GetSocketTransform_ReturnValue) == 0x0001F0, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_GetSocketTransform_ReturnValue_1) == 0x000220, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_TransformDirection_ReturnValue) == 0x000250, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BreakTransform_Location_3) == 0x00025C, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BreakTransform_Rotation_3) == 0x000268, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BreakTransform_Scale_3) == 0x000274, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_GetSocketTransform_ReturnValue_2) == 0x000280, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_GetSocketTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0002B0, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_MakeTransform_ReturnValue) == 0x0002C0, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_GetSocketLocation_ReturnValue) == 0x0002F0, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0002FC, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_VSize_ReturnValue_1) == 0x000308, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_TryGetPawnOwner_ReturnValue_1) == 0x000310, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_TryGetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, K2Node_DynamicCast_AsCharacter) == 0x000318, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, K2Node_DynamicCast_bSuccess_1) == 0x000320, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000321, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000324, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000330, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000340, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000348, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_TryGetPawnOwner_ReturnValue_2) == 0x000350, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_TryGetPawnOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, K2Node_DynamicCast_AsCharacter_1) == 0x000358, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::K2Node_DynamicCast_AsCharacter_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, K2Node_DynamicCast_bSuccess_2) == 0x000360, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_GetSocketLocation_ReturnValue_2) == 0x000364, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_GetSocketLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000370, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Add_VectorVector_ReturnValue_6) == 0x000374, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_SpawnSoundAtLocation_ReturnValue_1) == 0x000380, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_SpawnSoundAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Less_FloatFloat_ReturnValue) == 0x000388, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000389, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BooleanAND_ReturnValue_3) == 0x00038A, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_BooleanAND_ReturnValue_4) == 0x00038B, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00038C, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_FInterpToSeparate_ReturnValue) == 0x000390, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_FInterpToSeparate_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_TryGetPawnOwner_ReturnValue_3) == 0x000398, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_TryGetPawnOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, K2Node_DynamicCast_AsCharacter_2) == 0x0003A0, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::K2Node_DynamicCast_AsCharacter_2' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, K2Node_DynamicCast_bSuccess_3) == 0x0003A8, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0003B0, "Member 'AB_BaseHorse_C_ExecuteUbergraph_AB_BaseHorse::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function AB_BaseHorse.AB_BaseHorse_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AB_BaseHorse_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_BaseHorse_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AB_BaseHorse_C_BlueprintUpdateAnimation");
static_assert(sizeof(AB_BaseHorse_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AB_BaseHorse_C_BlueprintUpdateAnimation");
static_assert(offsetof(AB_BaseHorse_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AB_BaseHorse_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AB_BaseHorse.AB_BaseHorse_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseHorse_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseHorse_C_AnimGraph) == 0x000008, "Wrong alignment on AB_BaseHorse_C_AnimGraph");
static_assert(sizeof(AB_BaseHorse_C_AnimGraph) == 0x000010, "Wrong size on AB_BaseHorse_C_AnimGraph");
static_assert(offsetof(AB_BaseHorse_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AB_BaseHorse_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

