#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TeamSelect

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_TeamSelect.BP_TeamSelect_C.SelectTeam
// 0x0020 (0x0020 - 0x0000)
struct BP_TeamSelect_C_SelectTeam final
{
public:
	int32                                         Team;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauPlayerController_C*          K2Node_DynamicCast_AsBP_Mordhau_Player_Controller; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TeamSelect_C_SelectTeam) == 0x000008, "Wrong alignment on BP_TeamSelect_C_SelectTeam");
static_assert(sizeof(BP_TeamSelect_C_SelectTeam) == 0x000020, "Wrong size on BP_TeamSelect_C_SelectTeam");
static_assert(offsetof(BP_TeamSelect_C_SelectTeam, Team) == 0x000000, "Member 'BP_TeamSelect_C_SelectTeam::Team' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_SelectTeam, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_TeamSelect_C_SelectTeam::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_SelectTeam, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_TeamSelect_C_SelectTeam::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_SelectTeam, K2Node_DynamicCast_AsBP_Mordhau_Player_Controller) == 0x000010, "Member 'BP_TeamSelect_C_SelectTeam::K2Node_DynamicCast_AsBP_Mordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_SelectTeam, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_TeamSelect_C_SelectTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_SelectTeam, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_TeamSelect_C_SelectTeam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_SelectTeam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001A, "Member 'BP_TeamSelect_C_SelectTeam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_SelectTeam, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00001B, "Member 'BP_TeamSelect_C_SelectTeam::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_SelectTeam, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'BP_TeamSelect_C_SelectTeam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_SelectTeam, CallFunc_BooleanAND_ReturnValue_1) == 0x00001D, "Member 'BP_TeamSelect_C_SelectTeam::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_TeamSelect.BP_TeamSelect_C.Show
// 0x0008 (0x0008 - 0x0000)
struct BP_TeamSelect_C_Show final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamSelect_C_Show) == 0x000008, "Wrong alignment on BP_TeamSelect_C_Show");
static_assert(sizeof(BP_TeamSelect_C_Show) == 0x000008, "Wrong size on BP_TeamSelect_C_Show");
static_assert(offsetof(BP_TeamSelect_C_Show, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_TeamSelect_C_Show::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_TeamSelect.BP_TeamSelect_C.GetGameModeName
// 0x0030 (0x0030 - 0x0000)
struct BP_TeamSelect_C_GetGameModeName final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauGameState*                      K2Node_DynamicCast_AsMordhau_Game_State;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TeamSelect_C_GetGameModeName) == 0x000008, "Wrong alignment on BP_TeamSelect_C_GetGameModeName");
static_assert(sizeof(BP_TeamSelect_C_GetGameModeName) == 0x000030, "Wrong size on BP_TeamSelect_C_GetGameModeName");
static_assert(offsetof(BP_TeamSelect_C_GetGameModeName, Text) == 0x000000, "Member 'BP_TeamSelect_C_GetGameModeName::Text' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_GetGameModeName, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'BP_TeamSelect_C_GetGameModeName::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_GetGameModeName, K2Node_DynamicCast_AsMordhau_Game_State) == 0x000020, "Member 'BP_TeamSelect_C_GetGameModeName::K2Node_DynamicCast_AsMordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_GetGameModeName, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_TeamSelect_C_GetGameModeName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_GetGameModeName, CallFunc_IsValidClass_ReturnValue) == 0x000029, "Member 'BP_TeamSelect_C_GetGameModeName::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_TeamSelect.BP_TeamSelect_C.GetMapName
// 0x0020 (0x0020 - 0x0000)
struct BP_TeamSelect_C_GetMapName final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetMapName_ReturnValue;                   // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamSelect_C_GetMapName) == 0x000008, "Wrong alignment on BP_TeamSelect_C_GetMapName");
static_assert(sizeof(BP_TeamSelect_C_GetMapName) == 0x000020, "Wrong size on BP_TeamSelect_C_GetMapName");
static_assert(offsetof(BP_TeamSelect_C_GetMapName, NewParam) == 0x000000, "Member 'BP_TeamSelect_C_GetMapName::NewParam' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_GetMapName, CallFunc_GetMapName_ReturnValue) == 0x000010, "Member 'BP_TeamSelect_C_GetMapName::CallFunc_GetMapName_ReturnValue' has a wrong offset!");

// Function BP_TeamSelect.BP_TeamSelect_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct BP_TeamSelect_C_Hide final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamSelect_C_Hide) == 0x000008, "Wrong alignment on BP_TeamSelect_C_Hide");
static_assert(sizeof(BP_TeamSelect_C_Hide) == 0x000008, "Wrong size on BP_TeamSelect_C_Hide");
static_assert(offsetof(BP_TeamSelect_C_Hide, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_TeamSelect_C_Hide::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_TeamSelect.BP_TeamSelect_C.OnKeyDown
// 0x0368 (0x0368 - 0x0000)
struct BP_TeamSelect_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetGamepadCancelButton_CancelKey;         // 0x0128(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0140(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_2;          // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15B[0x5];                                      // 0x015B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetKeyInfoFromActionName_Secondary_Icon;  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetKeyInfoFromActionName_Secondary_Secondary_Key; // 0x0168(0x0018)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetKeyInfoFromActionName_Secondary_Secondary_Key_Display_Name; // 0x0180(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_3;          // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19A[0x6];                                      // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetKeyInfoFromActionName_Primary_Icon;    // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetKeyInfoFromActionName_Primary_Key;     // 0x01A8(0x0018)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetKeyInfoFromActionName_Primary_Key_Display_Name; // 0x01C0(0x0018)()
	class AMordhauHUD*                            CallFunc_GetMordhauHUD_ReturnValue;                // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_4;          // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MordhauHUD_C*                       K2Node_DynamicCast_AsBP_Mordhau_HUD;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F3[0x5];                                      // 0x01F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x01F8(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x02B0(0x00B8)()
};
static_assert(alignof(BP_TeamSelect_C_OnKeyDown) == 0x000008, "Wrong alignment on BP_TeamSelect_C_OnKeyDown");
static_assert(sizeof(BP_TeamSelect_C_OnKeyDown) == 0x000368, "Wrong size on BP_TeamSelect_C_OnKeyDown");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'BP_TeamSelect_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'BP_TeamSelect_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'BP_TeamSelect_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_GetGamepadCancelButton_CancelKey) == 0x000128, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_GetGamepadCancelButton_CancelKey' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x000140, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000158, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000159, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_2) == 0x00015A, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_GetKeyInfoFromActionName_Secondary_Icon) == 0x000160, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_GetKeyInfoFromActionName_Secondary_Icon' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_GetKeyInfoFromActionName_Secondary_Secondary_Key) == 0x000168, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_GetKeyInfoFromActionName_Secondary_Secondary_Key' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_GetKeyInfoFromActionName_Secondary_Secondary_Key_Display_Name) == 0x000180, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_GetKeyInfoFromActionName_Secondary_Secondary_Key_Display_Name' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue) == 0x000198, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_3) == 0x000199, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_GetKeyInfoFromActionName_Primary_Icon) == 0x0001A0, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_GetKeyInfoFromActionName_Primary_Icon' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_GetKeyInfoFromActionName_Primary_Key) == 0x0001A8, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_GetKeyInfoFromActionName_Primary_Key' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_GetKeyInfoFromActionName_Primary_Key_Display_Name) == 0x0001C0, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_GetKeyInfoFromActionName_Primary_Key_Display_Name' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_GetMordhauHUD_ReturnValue) == 0x0001D8, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_GetMordhauHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_4) == 0x0001E0, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, K2Node_DynamicCast_AsBP_Mordhau_HUD) == 0x0001E8, "Member 'BP_TeamSelect_C_OnKeyDown::K2Node_DynamicCast_AsBP_Mordhau_HUD' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, K2Node_DynamicCast_bSuccess) == 0x0001F0, "Member 'BP_TeamSelect_C_OnKeyDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue_1) == 0x0001F1, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue_2) == 0x0001F2, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x0001F8, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamSelect_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x0002B0, "Member 'BP_TeamSelect_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

}

