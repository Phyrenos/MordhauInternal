#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CustomizationTopBar

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Mordhau_structs.hpp"


namespace SDK::Params
{

// Function BP_CustomizationTopBar.BP_CustomizationTopBar_C.ExecuteUbergraph_BP_CustomizationTopBar
// 0x0020 (0x0020 - 0x0000)
struct BP_CustomizationTopBar_C_ExecuteUbergraph_BP_CustomizationTopBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_LoadoutPointListTooltip_C*          CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_Breadcrumb;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomizationTopBar_C_ExecuteUbergraph_BP_CustomizationTopBar) == 0x000008, "Wrong alignment on BP_CustomizationTopBar_C_ExecuteUbergraph_BP_CustomizationTopBar");
static_assert(sizeof(BP_CustomizationTopBar_C_ExecuteUbergraph_BP_CustomizationTopBar) == 0x000020, "Wrong size on BP_CustomizationTopBar_C_ExecuteUbergraph_BP_CustomizationTopBar");
static_assert(offsetof(BP_CustomizationTopBar_C_ExecuteUbergraph_BP_CustomizationTopBar, EntryPoint) == 0x000000, "Member 'BP_CustomizationTopBar_C_ExecuteUbergraph_BP_CustomizationTopBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CustomizationTopBar_C_ExecuteUbergraph_BP_CustomizationTopBar, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_CustomizationTopBar_C_ExecuteUbergraph_BP_CustomizationTopBar::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomizationTopBar_C_ExecuteUbergraph_BP_CustomizationTopBar, K2Node_ComponentBoundEvent_Breadcrumb) == 0x000010, "Member 'BP_CustomizationTopBar_C_ExecuteUbergraph_BP_CustomizationTopBar::K2Node_ComponentBoundEvent_Breadcrumb' has a wrong offset!");

// Function BP_CustomizationTopBar.BP_CustomizationTopBar_C.BndEvt__BP_CustomizationTopBar_BP_Breadcrumbs_K2Node_ComponentBoundEvent_0_Breadcrumb Clicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_CustomizationTopBar_C_BndEvt__BP_CustomizationTopBar_BP_Breadcrumbs_K2Node_ComponentBoundEvent_0_Breadcrumb_Clicked__DelegateSignature final
{
public:
	class FString                                 Breadcrumb;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomizationTopBar_C_BndEvt__BP_CustomizationTopBar_BP_Breadcrumbs_K2Node_ComponentBoundEvent_0_Breadcrumb_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on BP_CustomizationTopBar_C_BndEvt__BP_CustomizationTopBar_BP_Breadcrumbs_K2Node_ComponentBoundEvent_0_Breadcrumb_Clicked__DelegateSignature");
static_assert(sizeof(BP_CustomizationTopBar_C_BndEvt__BP_CustomizationTopBar_BP_Breadcrumbs_K2Node_ComponentBoundEvent_0_Breadcrumb_Clicked__DelegateSignature) == 0x000010, "Wrong size on BP_CustomizationTopBar_C_BndEvt__BP_CustomizationTopBar_BP_Breadcrumbs_K2Node_ComponentBoundEvent_0_Breadcrumb_Clicked__DelegateSignature");
static_assert(offsetof(BP_CustomizationTopBar_C_BndEvt__BP_CustomizationTopBar_BP_Breadcrumbs_K2Node_ComponentBoundEvent_0_Breadcrumb_Clicked__DelegateSignature, Breadcrumb) == 0x000000, "Member 'BP_CustomizationTopBar_C_BndEvt__BP_CustomizationTopBar_BP_Breadcrumbs_K2Node_ComponentBoundEvent_0_Breadcrumb_Clicked__DelegateSignature::Breadcrumb' has a wrong offset!");

// Function BP_CustomizationTopBar.BP_CustomizationTopBar_C.Update Breadcrumbs
// 0x0048 (0x0048 - 0x0000)
struct BP_CustomizationTopBar_C_Update_Breadcrumbs final
{
public:
	TArray<class FString>                         Breadcrumbs;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FText>                           Displayed_Text;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UTexture2D*                             Icon;                                              // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Main_Header;                                       // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Clear_Arrays;                                      // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CustomizationTopBar_C_Update_Breadcrumbs) == 0x000008, "Wrong alignment on BP_CustomizationTopBar_C_Update_Breadcrumbs");
static_assert(sizeof(BP_CustomizationTopBar_C_Update_Breadcrumbs) == 0x000048, "Wrong size on BP_CustomizationTopBar_C_Update_Breadcrumbs");
static_assert(offsetof(BP_CustomizationTopBar_C_Update_Breadcrumbs, Breadcrumbs) == 0x000000, "Member 'BP_CustomizationTopBar_C_Update_Breadcrumbs::Breadcrumbs' has a wrong offset!");
static_assert(offsetof(BP_CustomizationTopBar_C_Update_Breadcrumbs, Displayed_Text) == 0x000010, "Member 'BP_CustomizationTopBar_C_Update_Breadcrumbs::Displayed_Text' has a wrong offset!");
static_assert(offsetof(BP_CustomizationTopBar_C_Update_Breadcrumbs, Icon) == 0x000020, "Member 'BP_CustomizationTopBar_C_Update_Breadcrumbs::Icon' has a wrong offset!");
static_assert(offsetof(BP_CustomizationTopBar_C_Update_Breadcrumbs, Main_Header) == 0x000028, "Member 'BP_CustomizationTopBar_C_Update_Breadcrumbs::Main_Header' has a wrong offset!");
static_assert(offsetof(BP_CustomizationTopBar_C_Update_Breadcrumbs, Clear_Arrays) == 0x000040, "Member 'BP_CustomizationTopBar_C_Update_Breadcrumbs::Clear_Arrays' has a wrong offset!");

// Function BP_CustomizationTopBar.BP_CustomizationTopBar_C.Update Loadout Name
// 0x00B8 (0x00B8 - 0x0000)
struct BP_CustomizationTopBar_C_Update_Loadout_Name final
{
public:
	struct FCharacterProfile                      Profile_0;                                         // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_CustomizationTopBar_C_Update_Loadout_Name) == 0x000008, "Wrong alignment on BP_CustomizationTopBar_C_Update_Loadout_Name");
static_assert(sizeof(BP_CustomizationTopBar_C_Update_Loadout_Name) == 0x0000B8, "Wrong size on BP_CustomizationTopBar_C_Update_Loadout_Name");
static_assert(offsetof(BP_CustomizationTopBar_C_Update_Loadout_Name, Profile_0) == 0x000000, "Member 'BP_CustomizationTopBar_C_Update_Loadout_Name::Profile_0' has a wrong offset!");

// Function BP_CustomizationTopBar.BP_CustomizationTopBar_C.Update Loadout Points
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomizationTopBar_C_Update_Loadout_Points final
{
public:
	int32                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Preview_Points;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomizationTopBar_C_Update_Loadout_Points) == 0x000004, "Wrong alignment on BP_CustomizationTopBar_C_Update_Loadout_Points");
static_assert(sizeof(BP_CustomizationTopBar_C_Update_Loadout_Points) == 0x000008, "Wrong size on BP_CustomizationTopBar_C_Update_Loadout_Points");
static_assert(offsetof(BP_CustomizationTopBar_C_Update_Loadout_Points, Points) == 0x000000, "Member 'BP_CustomizationTopBar_C_Update_Loadout_Points::Points' has a wrong offset!");
static_assert(offsetof(BP_CustomizationTopBar_C_Update_Loadout_Points, Preview_Points) == 0x000004, "Member 'BP_CustomizationTopBar_C_Update_Loadout_Points::Preview_Points' has a wrong offset!");

// Function BP_CustomizationTopBar.BP_CustomizationTopBar_C.GetVisibility_0
// 0x0005 (0x0005 - 0x0000)
struct BP_CustomizationTopBar_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomizationTopBar_C_GetVisibility_0) == 0x000001, "Wrong alignment on BP_CustomizationTopBar_C_GetVisibility_0");
static_assert(sizeof(BP_CustomizationTopBar_C_GetVisibility_0) == 0x000005, "Wrong size on BP_CustomizationTopBar_C_GetVisibility_0");
static_assert(offsetof(BP_CustomizationTopBar_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_CustomizationTopBar_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomizationTopBar_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_CustomizationTopBar_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CustomizationTopBar_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_CustomizationTopBar_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CustomizationTopBar_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_CustomizationTopBar_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CustomizationTopBar_C_GetVisibility_0, K2Node_Select_Default) == 0x000004, "Member 'BP_CustomizationTopBar_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_CustomizationTopBar.BP_CustomizationTopBar_C.GetToolTipWidget_0
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomizationTopBar_C_GetToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomizationTopBar_C_GetToolTipWidget_0) == 0x000008, "Wrong alignment on BP_CustomizationTopBar_C_GetToolTipWidget_0");
static_assert(sizeof(BP_CustomizationTopBar_C_GetToolTipWidget_0) == 0x000008, "Wrong size on BP_CustomizationTopBar_C_GetToolTipWidget_0");
static_assert(offsetof(BP_CustomizationTopBar_C_GetToolTipWidget_0, ReturnValue) == 0x000000, "Member 'BP_CustomizationTopBar_C_GetToolTipWidget_0::ReturnValue' has a wrong offset!");

// Function BP_CustomizationTopBar.BP_CustomizationTopBar_C.Update Gold XP Widget
// 0x0018 (0x0018 - 0x0000)
struct BP_CustomizationTopBar_C_Update_Gold_XP_Widget final
{
public:
	class UMordhauInventory*                      CallFunc_GetMordhauInventory_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetXP_ReturnValue;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGold_ReturnValue;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRankFromXP_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomizationTopBar_C_Update_Gold_XP_Widget) == 0x000008, "Wrong alignment on BP_CustomizationTopBar_C_Update_Gold_XP_Widget");
static_assert(sizeof(BP_CustomizationTopBar_C_Update_Gold_XP_Widget) == 0x000018, "Wrong size on BP_CustomizationTopBar_C_Update_Gold_XP_Widget");
static_assert(offsetof(BP_CustomizationTopBar_C_Update_Gold_XP_Widget, CallFunc_GetMordhauInventory_ReturnValue) == 0x000000, "Member 'BP_CustomizationTopBar_C_Update_Gold_XP_Widget::CallFunc_GetMordhauInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomizationTopBar_C_Update_Gold_XP_Widget, CallFunc_GetXP_ReturnValue) == 0x000008, "Member 'BP_CustomizationTopBar_C_Update_Gold_XP_Widget::CallFunc_GetXP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomizationTopBar_C_Update_Gold_XP_Widget, CallFunc_GetGold_ReturnValue) == 0x00000C, "Member 'BP_CustomizationTopBar_C_Update_Gold_XP_Widget::CallFunc_GetGold_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomizationTopBar_C_Update_Gold_XP_Widget, CallFunc_GetRankFromXP_ReturnValue) == 0x000010, "Member 'BP_CustomizationTopBar_C_Update_Gold_XP_Widget::CallFunc_GetRankFromXP_ReturnValue' has a wrong offset!");

}

