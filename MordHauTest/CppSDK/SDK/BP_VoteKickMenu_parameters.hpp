#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VoteKickMenu

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "MordhauOnlineSubsystem_structs.hpp"


namespace SDK::Params
{

// Function BP_VoteKickMenu.BP_VoteKickMenu_C.ExecuteUbergraph_BP_VoteKickMenu
// 0x000C (0x000C - 0x0000)
struct BP_VoteKickMenu_C_ExecuteUbergraph_BP_VoteKickMenu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoteKickMenu_C_ExecuteUbergraph_BP_VoteKickMenu) == 0x000004, "Wrong alignment on BP_VoteKickMenu_C_ExecuteUbergraph_BP_VoteKickMenu");
static_assert(sizeof(BP_VoteKickMenu_C_ExecuteUbergraph_BP_VoteKickMenu) == 0x00000C, "Wrong size on BP_VoteKickMenu_C_ExecuteUbergraph_BP_VoteKickMenu");
static_assert(offsetof(BP_VoteKickMenu_C_ExecuteUbergraph_BP_VoteKickMenu, EntryPoint) == 0x000000, "Member 'BP_VoteKickMenu_C_ExecuteUbergraph_BP_VoteKickMenu::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_ExecuteUbergraph_BP_VoteKickMenu, Temp_bool_Variable) == 0x000004, "Member 'BP_VoteKickMenu_C_ExecuteUbergraph_BP_VoteKickMenu::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_ExecuteUbergraph_BP_VoteKickMenu, Temp_byte_Variable) == 0x000005, "Member 'BP_VoteKickMenu_C_ExecuteUbergraph_BP_VoteKickMenu::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_ExecuteUbergraph_BP_VoteKickMenu, Temp_byte_Variable_1) == 0x000006, "Member 'BP_VoteKickMenu_C_ExecuteUbergraph_BP_VoteKickMenu::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_ExecuteUbergraph_BP_VoteKickMenu, CallFunc_IsConsolePlatform_ReturnValue) == 0x000007, "Member 'BP_VoteKickMenu_C_ExecuteUbergraph_BP_VoteKickMenu::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_ExecuteUbergraph_BP_VoteKickMenu, K2Node_Select_Default) == 0x000008, "Member 'BP_VoteKickMenu_C_ExecuteUbergraph_BP_VoteKickMenu::K2Node_Select_Default' has a wrong offset!");

// Function BP_VoteKickMenu.BP_VoteKickMenu_C.Show
// 0x0278 (0x0278 - 0x0000)
struct BP_VoteKickMenu_C_Show final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0060(0x0018)()
	class AMordhauPlayerController*               K2Node_DynamicCast_AsMordhau_Player_Controller;    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauGameState_C*                 K2Node_DynamicCast_AsBP_Mordhau_Game_State;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D0(0x0040)(HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayFabPlayer                         CallFunc_GetPlayFabPlayer_ReturnValue;             // 0x0118(0x0060)(ConstParm, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue_1;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0188(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01A0(0x0040)(HasGetValueTypeHash)
	struct FPlayFabPlayer                         CallFunc_GetPlayFabPlayer_ReturnValue_1;           // 0x01E0(0x0060)(ConstParm, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0240(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0250(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoteKickMenu_C_Show) == 0x000008, "Wrong alignment on BP_VoteKickMenu_C_Show");
static_assert(sizeof(BP_VoteKickMenu_C_Show) == 0x000278, "Wrong size on BP_VoteKickMenu_C_Show");
static_assert(offsetof(BP_VoteKickMenu_C_Show, Temp_bool_Variable) == 0x000000, "Member 'BP_VoteKickMenu_C_Show::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, Temp_byte_Variable) == 0x000001, "Member 'BP_VoteKickMenu_C_Show::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, Temp_byte_Variable_1) == 0x000002, "Member 'BP_VoteKickMenu_C_Show::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'BP_VoteKickMenu_C_Show::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_VoteKickMenu_C_Show::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, CallFunc_GetOwningPlayer_ReturnValue) == 0x000058, "Member 'BP_VoteKickMenu_C_Show::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, CallFunc_Format_ReturnValue) == 0x000060, "Member 'BP_VoteKickMenu_C_Show::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, K2Node_DynamicCast_AsMordhau_Player_Controller) == 0x000078, "Member 'BP_VoteKickMenu_C_Show::K2Node_DynamicCast_AsMordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_VoteKickMenu_C_Show::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, CallFunc_GetGameState_ReturnValue) == 0x000088, "Member 'BP_VoteKickMenu_C_Show::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, K2Node_DynamicCast_AsBP_Mordhau_Game_State) == 0x000090, "Member 'BP_VoteKickMenu_C_Show::K2Node_DynamicCast_AsBP_Mordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BP_VoteKickMenu_C_Show::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, CallFunc_GetPlayerName_ReturnValue) == 0x0000A0, "Member 'BP_VoteKickMenu_C_Show::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B0, "Member 'BP_VoteKickMenu_C_Show::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B8, "Member 'BP_VoteKickMenu_C_Show::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D0, "Member 'BP_VoteKickMenu_C_Show::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, K2Node_Select_Default) == 0x000110, "Member 'BP_VoteKickMenu_C_Show::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000114, "Member 'BP_VoteKickMenu_C_Show::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, CallFunc_GetPlayFabPlayer_ReturnValue) == 0x000118, "Member 'BP_VoteKickMenu_C_Show::CallFunc_GetPlayFabPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, CallFunc_GetPlayerName_ReturnValue_1) == 0x000178, "Member 'BP_VoteKickMenu_C_Show::CallFunc_GetPlayerName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000188, "Member 'BP_VoteKickMenu_C_Show::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001A0, "Member 'BP_VoteKickMenu_C_Show::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, CallFunc_GetPlayFabPlayer_ReturnValue_1) == 0x0001E0, "Member 'BP_VoteKickMenu_C_Show::CallFunc_GetPlayFabPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, K2Node_MakeArray_Array_1) == 0x000240, "Member 'BP_VoteKickMenu_C_Show::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, CallFunc_Format_ReturnValue_1) == 0x000250, "Member 'BP_VoteKickMenu_C_Show::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Show, CallFunc_Conv_TextToString_ReturnValue) == 0x000268, "Member 'BP_VoteKickMenu_C_Show::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_VoteKickMenu.BP_VoteKickMenu_C.Get_TextBlock_0_Text_0
// 0x00B0 (0x00B0 - 0x0000)
struct BP_VoteKickMenu_C_Get_TextBlock_0_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
};
static_assert(alignof(BP_VoteKickMenu_C_Get_TextBlock_0_Text_0) == 0x000008, "Wrong alignment on BP_VoteKickMenu_C_Get_TextBlock_0_Text_0");
static_assert(sizeof(BP_VoteKickMenu_C_Get_TextBlock_0_Text_0) == 0x0000B0, "Wrong size on BP_VoteKickMenu_C_Get_TextBlock_0_Text_0");
static_assert(offsetof(BP_VoteKickMenu_C_Get_TextBlock_0_Text_0, ReturnValue) == 0x000000, "Member 'BP_VoteKickMenu_C_Get_TextBlock_0_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Get_TextBlock_0_Text_0, CallFunc_Len_ReturnValue) == 0x000018, "Member 'BP_VoteKickMenu_C_Get_TextBlock_0_Text_0::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Get_TextBlock_0_Text_0, CallFunc_Min_ReturnValue) == 0x00001C, "Member 'BP_VoteKickMenu_C_Get_TextBlock_0_Text_0::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Get_TextBlock_0_Text_0, CallFunc_GetSubstring_ReturnValue) == 0x000020, "Member 'BP_VoteKickMenu_C_Get_TextBlock_0_Text_0::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Get_TextBlock_0_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'BP_VoteKickMenu_C_Get_TextBlock_0_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Get_TextBlock_0_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_VoteKickMenu_C_Get_TextBlock_0_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Get_TextBlock_0_Text_0, K2Node_MakeArray_Array) == 0x000088, "Member 'BP_VoteKickMenu_C_Get_TextBlock_0_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Get_TextBlock_0_Text_0, CallFunc_Format_ReturnValue) == 0x000098, "Member 'BP_VoteKickMenu_C_Get_TextBlock_0_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_VoteKickMenu.BP_VoteKickMenu_C.Get_TextBlock_3_Text_0
// 0x00B0 (0x00B0 - 0x0000)
struct BP_VoteKickMenu_C_Get_TextBlock_3_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
};
static_assert(alignof(BP_VoteKickMenu_C_Get_TextBlock_3_Text_0) == 0x000008, "Wrong alignment on BP_VoteKickMenu_C_Get_TextBlock_3_Text_0");
static_assert(sizeof(BP_VoteKickMenu_C_Get_TextBlock_3_Text_0) == 0x0000B0, "Wrong size on BP_VoteKickMenu_C_Get_TextBlock_3_Text_0");
static_assert(offsetof(BP_VoteKickMenu_C_Get_TextBlock_3_Text_0, ReturnValue) == 0x000000, "Member 'BP_VoteKickMenu_C_Get_TextBlock_3_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Get_TextBlock_3_Text_0, CallFunc_Len_ReturnValue) == 0x000018, "Member 'BP_VoteKickMenu_C_Get_TextBlock_3_Text_0::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Get_TextBlock_3_Text_0, CallFunc_Min_ReturnValue) == 0x00001C, "Member 'BP_VoteKickMenu_C_Get_TextBlock_3_Text_0::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Get_TextBlock_3_Text_0, CallFunc_GetSubstring_ReturnValue) == 0x000020, "Member 'BP_VoteKickMenu_C_Get_TextBlock_3_Text_0::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Get_TextBlock_3_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'BP_VoteKickMenu_C_Get_TextBlock_3_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Get_TextBlock_3_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_VoteKickMenu_C_Get_TextBlock_3_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Get_TextBlock_3_Text_0, K2Node_MakeArray_Array) == 0x000088, "Member 'BP_VoteKickMenu_C_Get_TextBlock_3_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_VoteKickMenu_C_Get_TextBlock_3_Text_0, CallFunc_Format_ReturnValue) == 0x000098, "Member 'BP_VoteKickMenu_C_Get_TextBlock_3_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

}

