#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RankIcon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_RankIcon.BP_RankIcon_C
// 0x0120 (0x0380 - 0x0260)
class UBP_RankIcon_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UImage*                                 Image_0;                                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Rank_Index;                                        // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ImageSize;                                         // 0x0274(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            RankImage;                                         // 0x0280(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FText>                           RankNames;                                         // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSlateBrush>                    RankImages;                                        // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Rank_Title;                                        // 0x0328(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            Division_Color;                                    // 0x0340(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSlateColor>                    TitleColors;                                       // 0x0368(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Rank_MMR;                                          // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_RankIcon(int32 EntryPoint);
	void Construct();
	void Update_Widget_with_MMR(int32 Rank_MMR_0, const struct FVector2D& Image_Size);
	void GetRankDivisionColorFromIndex(int32 Rank_Index_0, struct FSlateColor* Text_Color);
	void UpdateRankIndexFromMMR(int32 MMR, int32* Rank_Index_0);
	void Update_Widget_with_Rank_Index(int32 Rank_Index_, const struct FVector2D& Image_Size);
	void GetRankIndexFromMMR(int32 MMR, int32* Rank_Index_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RankIcon_C">();
	}
	static class UBP_RankIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_RankIcon_C>();
	}
};
static_assert(alignof(UBP_RankIcon_C) == 0x000008, "Wrong alignment on UBP_RankIcon_C");
static_assert(sizeof(UBP_RankIcon_C) == 0x000380, "Wrong size on UBP_RankIcon_C");
static_assert(offsetof(UBP_RankIcon_C, UberGraphFrame) == 0x000260, "Member 'UBP_RankIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_RankIcon_C, Image_0) == 0x000268, "Member 'UBP_RankIcon_C::Image_0' has a wrong offset!");
static_assert(offsetof(UBP_RankIcon_C, Rank_Index) == 0x000270, "Member 'UBP_RankIcon_C::Rank_Index' has a wrong offset!");
static_assert(offsetof(UBP_RankIcon_C, ImageSize) == 0x000274, "Member 'UBP_RankIcon_C::ImageSize' has a wrong offset!");
static_assert(offsetof(UBP_RankIcon_C, RankImage) == 0x000280, "Member 'UBP_RankIcon_C::RankImage' has a wrong offset!");
static_assert(offsetof(UBP_RankIcon_C, RankNames) == 0x000308, "Member 'UBP_RankIcon_C::RankNames' has a wrong offset!");
static_assert(offsetof(UBP_RankIcon_C, RankImages) == 0x000318, "Member 'UBP_RankIcon_C::RankImages' has a wrong offset!");
static_assert(offsetof(UBP_RankIcon_C, Rank_Title) == 0x000328, "Member 'UBP_RankIcon_C::Rank_Title' has a wrong offset!");
static_assert(offsetof(UBP_RankIcon_C, Division_Color) == 0x000340, "Member 'UBP_RankIcon_C::Division_Color' has a wrong offset!");
static_assert(offsetof(UBP_RankIcon_C, TitleColors) == 0x000368, "Member 'UBP_RankIcon_C::TitleColors' has a wrong offset!");
static_assert(offsetof(UBP_RankIcon_C, Rank_MMR) == 0x000378, "Member 'UBP_RankIcon_C::Rank_MMR' has a wrong offset!");

}

