#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordeSellVendorBase

#include "Basic.hpp"

#include "HordeBuyMenuEntry_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.ExecuteUbergraph_BP_HordeSellVendorBase
// 0x0088 (0x0088 - 0x0000)
struct BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeGameState_C*                   K2Node_DynamicCast_AsBP_Horde_Game_State;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_Event_Character;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveEquipment_IsEquipmentRemovedSuccesfully; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordePlayerController_C*            K2Node_DynamicCast_AsBP_Horde_Player_Controller;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEquippedItemPrice_Price;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AMordhauCharacter*                      K2Node_CustomEvent_MordhauCharacter;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase) == 0x000008, "Wrong alignment on BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase");
static_assert(sizeof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase) == 0x000088, "Wrong size on BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, EntryPoint) == 0x000000, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, K2Node_DynamicCast_AsBP_Horde_Game_State) == 0x000010, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::K2Node_DynamicCast_AsBP_Horde_Game_State' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, K2Node_Event_Character) == 0x000020, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, CallFunc_RemoveEquipment_IsEquipmentRemovedSuccesfully) == 0x000028, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::CallFunc_RemoveEquipment_IsEquipmentRemovedSuccesfully' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x000030, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, CallFunc_Array_AddUnique_ReturnValue) == 0x00003C, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, K2Node_DynamicCast_AsBP_Horde_Player_Controller) == 0x000048, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::K2Node_DynamicCast_AsBP_Horde_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, CallFunc_Add_ByteByte_ReturnValue) == 0x000051, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, CallFunc_GetEquippedItemPrice_Price) == 0x000054, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::CallFunc_GetEquippedItemPrice_Price' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, CallFunc_IsDedicatedServer_ReturnValue) == 0x000058, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, CallFunc_BooleanAND_ReturnValue) == 0x000061, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, K2Node_CreateDelegate_OutputDelegate) == 0x000064, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000078, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase, K2Node_CustomEvent_MordhauCharacter) == 0x000080, "Member 'BP_HordeSellVendorBase_C_ExecuteUbergraph_BP_HordeSellVendorBase::K2Node_CustomEvent_MordhauCharacter' has a wrong offset!");

// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.OnSelectNextAvailableEquipment
// 0x0008 (0x0008 - 0x0000)
struct BP_HordeSellVendorBase_C_OnSelectNextAvailableEquipment final
{
public:
	class AMordhauCharacter*                      MordhauCharacter;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeSellVendorBase_C_OnSelectNextAvailableEquipment) == 0x000008, "Wrong alignment on BP_HordeSellVendorBase_C_OnSelectNextAvailableEquipment");
static_assert(sizeof(BP_HordeSellVendorBase_C_OnSelectNextAvailableEquipment) == 0x000008, "Wrong size on BP_HordeSellVendorBase_C_OnSelectNextAvailableEquipment");
static_assert(offsetof(BP_HordeSellVendorBase_C_OnSelectNextAvailableEquipment, MordhauCharacter) == 0x000000, "Member 'BP_HordeSellVendorBase_C_OnSelectNextAvailableEquipment::MordhauCharacter' has a wrong offset!");

// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.OnHeldInteractionStart
// 0x0008 (0x0008 - 0x0000)
struct BP_HordeSellVendorBase_C_OnHeldInteractionStart final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeSellVendorBase_C_OnHeldInteractionStart) == 0x000008, "Wrong alignment on BP_HordeSellVendorBase_C_OnHeldInteractionStart");
static_assert(sizeof(BP_HordeSellVendorBase_C_OnHeldInteractionStart) == 0x000008, "Wrong size on BP_HordeSellVendorBase_C_OnHeldInteractionStart");
static_assert(offsetof(BP_HordeSellVendorBase_C_OnHeldInteractionStart, Character) == 0x000000, "Member 'BP_HordeSellVendorBase_C_OnHeldInteractionStart::Character' has a wrong offset!");

// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.UpdateVisuals
// 0x0070 (0x0070 - 0x0000)
struct BP_HordeSellVendorBase_C_UpdateVisuals final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeGameState_C*                   K2Node_DynamicCast_AsBP_Horde_Game_State;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeSellVendorBase_C_UpdateVisuals) == 0x000008, "Wrong alignment on BP_HordeSellVendorBase_C_UpdateVisuals");
static_assert(sizeof(BP_HordeSellVendorBase_C_UpdateVisuals) == 0x000070, "Wrong size on BP_HordeSellVendorBase_C_UpdateVisuals");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, K2Node_DynamicCast_AsBP_Horde_Game_State) == 0x000008, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::K2Node_DynamicCast_AsBP_Horde_Game_State' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000011, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000012, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000014, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000028, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, CallFunc_GetCameraLocation_ReturnValue) == 0x000030, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00003C, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, CallFunc_VSize_ReturnValue) == 0x000048, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, CallFunc_Less_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00004D, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, CallFunc_GetPlayerController_ReturnValue) == 0x000050, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000058, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x000060, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, CallFunc_BooleanAND_ReturnValue) == 0x00006A, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateVisuals, CallFunc_BooleanAND_ReturnValue_1) == 0x00006B, "Member 'BP_HordeSellVendorBase_C_UpdateVisuals::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.New IsAvailable
// 0x0001 (0x0001 - 0x0000)
struct BP_HordeSellVendorBase_C_New_IsAvailable final
{
public:
	bool                                          IsAvailable_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeSellVendorBase_C_New_IsAvailable) == 0x000001, "Wrong alignment on BP_HordeSellVendorBase_C_New_IsAvailable");
static_assert(sizeof(BP_HordeSellVendorBase_C_New_IsAvailable) == 0x000001, "Wrong size on BP_HordeSellVendorBase_C_New_IsAvailable");
static_assert(offsetof(BP_HordeSellVendorBase_C_New_IsAvailable, IsAvailable_0) == 0x000000, "Member 'BP_HordeSellVendorBase_C_New_IsAvailable::IsAvailable_0' has a wrong offset!");

// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.GetEquippedItemPrice
// 0x0070 (0x0070 - 0x0000)
struct BP_HordeSellVendorBase_C_GetEquippedItemPrice final
{
public:
	class ABP_HordePlayerController_C*            HordePlayerController;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Price;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauEquipment*                      LocalEquipmentToSell;                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   FoundEquipmentName;                                // 0x0018(0x0018)(Edit, BlueprintVisible)
	int32                                         CostOfItem;                                        // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RoundedDiscountedCost;                             // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauEquipment*                      CallFunc_Get_First_Equipment_Item_MordhauEquipment; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPurchasableNew_Sellable;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPurchasableNew_Base_Cost;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetControlledMordhauCharacter_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauEquipment*                      CallFunc_Get_First_Equipment_Item_MordhauEquipment_1; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeSellVendorBase_C_GetEquippedItemPrice) == 0x000008, "Wrong alignment on BP_HordeSellVendorBase_C_GetEquippedItemPrice");
static_assert(sizeof(BP_HordeSellVendorBase_C_GetEquippedItemPrice) == 0x000070, "Wrong size on BP_HordeSellVendorBase_C_GetEquippedItemPrice");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetEquippedItemPrice, HordePlayerController) == 0x000000, "Member 'BP_HordeSellVendorBase_C_GetEquippedItemPrice::HordePlayerController' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetEquippedItemPrice, Price) == 0x000008, "Member 'BP_HordeSellVendorBase_C_GetEquippedItemPrice::Price' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetEquippedItemPrice, LocalEquipmentToSell) == 0x000010, "Member 'BP_HordeSellVendorBase_C_GetEquippedItemPrice::LocalEquipmentToSell' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetEquippedItemPrice, FoundEquipmentName) == 0x000018, "Member 'BP_HordeSellVendorBase_C_GetEquippedItemPrice::FoundEquipmentName' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetEquippedItemPrice, CostOfItem) == 0x000030, "Member 'BP_HordeSellVendorBase_C_GetEquippedItemPrice::CostOfItem' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetEquippedItemPrice, RoundedDiscountedCost) == 0x000034, "Member 'BP_HordeSellVendorBase_C_GetEquippedItemPrice::RoundedDiscountedCost' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetEquippedItemPrice, CallFunc_Get_First_Equipment_Item_MordhauEquipment) == 0x000038, "Member 'BP_HordeSellVendorBase_C_GetEquippedItemPrice::CallFunc_Get_First_Equipment_Item_MordhauEquipment' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetEquippedItemPrice, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_HordeSellVendorBase_C_GetEquippedItemPrice::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetEquippedItemPrice, CallFunc_GetPurchasableNew_Sellable) == 0x000041, "Member 'BP_HordeSellVendorBase_C_GetEquippedItemPrice::CallFunc_GetPurchasableNew_Sellable' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetEquippedItemPrice, CallFunc_GetPurchasableNew_Base_Cost) == 0x000044, "Member 'BP_HordeSellVendorBase_C_GetEquippedItemPrice::CallFunc_GetPurchasableNew_Base_Cost' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetEquippedItemPrice, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_HordeSellVendorBase_C_GetEquippedItemPrice::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetEquippedItemPrice, CallFunc_GetControlledMordhauCharacter_ReturnValue) == 0x000050, "Member 'BP_HordeSellVendorBase_C_GetEquippedItemPrice::CallFunc_GetControlledMordhauCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetEquippedItemPrice, CallFunc_Get_First_Equipment_Item_MordhauEquipment_1) == 0x000058, "Member 'BP_HordeSellVendorBase_C_GetEquippedItemPrice::CallFunc_Get_First_Equipment_Item_MordhauEquipment_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetEquippedItemPrice, CallFunc_IsValid_ReturnValue_2) == 0x000060, "Member 'BP_HordeSellVendorBase_C_GetEquippedItemPrice::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetEquippedItemPrice, CallFunc_BooleanAND_ReturnValue) == 0x000061, "Member 'BP_HordeSellVendorBase_C_GetEquippedItemPrice::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetEquippedItemPrice, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000064, "Member 'BP_HordeSellVendorBase_C_GetEquippedItemPrice::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetEquippedItemPrice, CallFunc_Round_ReturnValue) == 0x000068, "Member 'BP_HordeSellVendorBase_C_GetEquippedItemPrice::CallFunc_Round_ReturnValue' has a wrong offset!");

// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.RemoveEquipment
// 0x0040 (0x0040 - 0x0000)
struct BP_HordeSellVendorBase_C_RemoveEquipment final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquipmentRemovedSuccesfully;                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauEquipment*                      CallFunc_Get_First_Equipment_Item_MordhauEquipment; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerController*               K2Node_DynamicCast_AsMordhau_Player_Controller;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauEquipment*                      CallFunc_DropEquipment_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeSellVendorBase_C_RemoveEquipment) == 0x000008, "Wrong alignment on BP_HordeSellVendorBase_C_RemoveEquipment");
static_assert(sizeof(BP_HordeSellVendorBase_C_RemoveEquipment) == 0x000040, "Wrong size on BP_HordeSellVendorBase_C_RemoveEquipment");
static_assert(offsetof(BP_HordeSellVendorBase_C_RemoveEquipment, Character) == 0x000000, "Member 'BP_HordeSellVendorBase_C_RemoveEquipment::Character' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_RemoveEquipment, IsEquipmentRemovedSuccesfully) == 0x000008, "Member 'BP_HordeSellVendorBase_C_RemoveEquipment::IsEquipmentRemovedSuccesfully' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_RemoveEquipment, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_HordeSellVendorBase_C_RemoveEquipment::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_RemoveEquipment, CallFunc_Get_First_Equipment_Item_MordhauEquipment) == 0x000018, "Member 'BP_HordeSellVendorBase_C_RemoveEquipment::CallFunc_Get_First_Equipment_Item_MordhauEquipment' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_RemoveEquipment, K2Node_DynamicCast_AsMordhau_Player_Controller) == 0x000020, "Member 'BP_HordeSellVendorBase_C_RemoveEquipment::K2Node_DynamicCast_AsMordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_RemoveEquipment, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_HordeSellVendorBase_C_RemoveEquipment::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_RemoveEquipment, CallFunc_DropEquipment_ReturnValue) == 0x000030, "Member 'BP_HordeSellVendorBase_C_RemoveEquipment::CallFunc_DropEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_RemoveEquipment, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_HordeSellVendorBase_C_RemoveEquipment::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.CheckPlayerProximity
// 0x0060 (0x0060 - 0x0000)
struct BP_HordeSellVendorBase_C_CheckPlayerProximity final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_HordeCharacter_C*>           CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordeCharacter_C*                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeSellVendorBase_C_CheckPlayerProximity) == 0x000008, "Wrong alignment on BP_HordeSellVendorBase_C_CheckPlayerProximity");
static_assert(sizeof(BP_HordeSellVendorBase_C_CheckPlayerProximity) == 0x000060, "Wrong size on BP_HordeSellVendorBase_C_CheckPlayerProximity");
static_assert(offsetof(BP_HordeSellVendorBase_C_CheckPlayerProximity, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_HordeSellVendorBase_C_CheckPlayerProximity::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CheckPlayerProximity, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_HordeSellVendorBase_C_CheckPlayerProximity::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CheckPlayerProximity, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_HordeSellVendorBase_C_CheckPlayerProximity::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CheckPlayerProximity, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000C, "Member 'BP_HordeSellVendorBase_C_CheckPlayerProximity::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CheckPlayerProximity, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000D, "Member 'BP_HordeSellVendorBase_C_CheckPlayerProximity::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CheckPlayerProximity, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00000E, "Member 'BP_HordeSellVendorBase_C_CheckPlayerProximity::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CheckPlayerProximity, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000F, "Member 'BP_HordeSellVendorBase_C_CheckPlayerProximity::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CheckPlayerProximity, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_HordeSellVendorBase_C_CheckPlayerProximity::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CheckPlayerProximity, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'BP_HordeSellVendorBase_C_CheckPlayerProximity::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CheckPlayerProximity, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'BP_HordeSellVendorBase_C_CheckPlayerProximity::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CheckPlayerProximity, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_HordeSellVendorBase_C_CheckPlayerProximity::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CheckPlayerProximity, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_HordeSellVendorBase_C_CheckPlayerProximity::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CheckPlayerProximity, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000044, "Member 'BP_HordeSellVendorBase_C_CheckPlayerProximity::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CheckPlayerProximity, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_HordeSellVendorBase_C_CheckPlayerProximity::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CheckPlayerProximity, CallFunc_Vector_Distance_ReturnValue) == 0x000054, "Member 'BP_HordeSellVendorBase_C_CheckPlayerProximity::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CheckPlayerProximity, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000058, "Member 'BP_HordeSellVendorBase_C_CheckPlayerProximity::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CheckPlayerProximity, CallFunc_BooleanOR_ReturnValue) == 0x000059, "Member 'BP_HordeSellVendorBase_C_CheckPlayerProximity::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.UpdateSellerAnimationState
// 0x0030 (0x0030 - 0x0000)
struct BP_HordeSellVendorBase_C_UpdateSellerAnimationState final
{
public:
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAB_GoblinSeller_C*                     K2Node_DynamicCast_AsAB_Goblin_Seller;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAB_SellingWagon_C*                     K2Node_DynamicCast_AsAB_Selling_Wagon;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeSellVendorBase_C_UpdateSellerAnimationState) == 0x000008, "Wrong alignment on BP_HordeSellVendorBase_C_UpdateSellerAnimationState");
static_assert(sizeof(BP_HordeSellVendorBase_C_UpdateSellerAnimationState) == 0x000030, "Wrong size on BP_HordeSellVendorBase_C_UpdateSellerAnimationState");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateSellerAnimationState, CallFunc_GetAnimInstance_ReturnValue) == 0x000000, "Member 'BP_HordeSellVendorBase_C_UpdateSellerAnimationState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateSellerAnimationState, K2Node_DynamicCast_AsAB_Goblin_Seller) == 0x000008, "Member 'BP_HordeSellVendorBase_C_UpdateSellerAnimationState::K2Node_DynamicCast_AsAB_Goblin_Seller' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateSellerAnimationState, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_HordeSellVendorBase_C_UpdateSellerAnimationState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateSellerAnimationState, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000018, "Member 'BP_HordeSellVendorBase_C_UpdateSellerAnimationState::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateSellerAnimationState, K2Node_DynamicCast_AsAB_Selling_Wagon) == 0x000020, "Member 'BP_HordeSellVendorBase_C_UpdateSellerAnimationState::K2Node_DynamicCast_AsAB_Selling_Wagon' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_UpdateSellerAnimationState, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_HordeSellVendorBase_C_UpdateSellerAnimationState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.OnRep_IsVendorHidden
// 0x0003 (0x0003 - 0x0000)
struct BP_HordeSellVendorBase_C_OnRep_IsVendorHidden final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeSellVendorBase_C_OnRep_IsVendorHidden) == 0x000001, "Wrong alignment on BP_HordeSellVendorBase_C_OnRep_IsVendorHidden");
static_assert(sizeof(BP_HordeSellVendorBase_C_OnRep_IsVendorHidden) == 0x000003, "Wrong size on BP_HordeSellVendorBase_C_OnRep_IsVendorHidden");
static_assert(offsetof(BP_HordeSellVendorBase_C_OnRep_IsVendorHidden, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_HordeSellVendorBase_C_OnRep_IsVendorHidden::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_OnRep_IsVendorHidden, CallFunc_IsDedicatedServer_ReturnValue) == 0x000001, "Member 'BP_HordeSellVendorBase_C_OnRep_IsVendorHidden::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_OnRep_IsVendorHidden, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_HordeSellVendorBase_C_OnRep_IsVendorHidden::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.Get First Equipment Item
// 0x0050 (0x0050 - 0x0000)
struct BP_HordeSellVendorBase_C_Get_First_Equipment_Item final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauEquipment*                      MordhauEquipment;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauCharacter*                      currentCharacter;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipmentNotInBanList_IsEquipmentSellable; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipmentNotInBanList_IsEquipmentSellable_1; // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordePlayerController_C*            K2Node_DynamicCast_AsBP_Horde_Player_Controller;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetControlledMordhauCharacter_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BattleRoyaleCharacter_C*            K2Node_DynamicCast_AsBP_Battle_Royale_Character;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeSellVendorBase_C_Get_First_Equipment_Item) == 0x000008, "Wrong alignment on BP_HordeSellVendorBase_C_Get_First_Equipment_Item");
static_assert(sizeof(BP_HordeSellVendorBase_C_Get_First_Equipment_Item) == 0x000050, "Wrong size on BP_HordeSellVendorBase_C_Get_First_Equipment_Item");
static_assert(offsetof(BP_HordeSellVendorBase_C_Get_First_Equipment_Item, Character) == 0x000000, "Member 'BP_HordeSellVendorBase_C_Get_First_Equipment_Item::Character' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_Get_First_Equipment_Item, MordhauEquipment) == 0x000008, "Member 'BP_HordeSellVendorBase_C_Get_First_Equipment_Item::MordhauEquipment' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_Get_First_Equipment_Item, currentCharacter) == 0x000010, "Member 'BP_HordeSellVendorBase_C_Get_First_Equipment_Item::currentCharacter' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_Get_First_Equipment_Item, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_HordeSellVendorBase_C_Get_First_Equipment_Item::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_Get_First_Equipment_Item, CallFunc_IsEquipmentNotInBanList_IsEquipmentSellable) == 0x000019, "Member 'BP_HordeSellVendorBase_C_Get_First_Equipment_Item::CallFunc_IsEquipmentNotInBanList_IsEquipmentSellable' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_Get_First_Equipment_Item, CallFunc_IsEquipmentNotInBanList_IsEquipmentSellable_1) == 0x00001A, "Member 'BP_HordeSellVendorBase_C_Get_First_Equipment_Item::CallFunc_IsEquipmentNotInBanList_IsEquipmentSellable_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_Get_First_Equipment_Item, CallFunc_IsValid_ReturnValue_1) == 0x00001B, "Member 'BP_HordeSellVendorBase_C_Get_First_Equipment_Item::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_Get_First_Equipment_Item, CallFunc_IsValid_ReturnValue_2) == 0x00001C, "Member 'BP_HordeSellVendorBase_C_Get_First_Equipment_Item::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_Get_First_Equipment_Item, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'BP_HordeSellVendorBase_C_Get_First_Equipment_Item::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_Get_First_Equipment_Item, K2Node_DynamicCast_AsBP_Horde_Player_Controller) == 0x000028, "Member 'BP_HordeSellVendorBase_C_Get_First_Equipment_Item::K2Node_DynamicCast_AsBP_Horde_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_Get_First_Equipment_Item, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_HordeSellVendorBase_C_Get_First_Equipment_Item::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_Get_First_Equipment_Item, CallFunc_GetControlledMordhauCharacter_ReturnValue) == 0x000038, "Member 'BP_HordeSellVendorBase_C_Get_First_Equipment_Item::CallFunc_GetControlledMordhauCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_Get_First_Equipment_Item, K2Node_DynamicCast_AsBP_Battle_Royale_Character) == 0x000040, "Member 'BP_HordeSellVendorBase_C_Get_First_Equipment_Item::K2Node_DynamicCast_AsBP_Battle_Royale_Character' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_Get_First_Equipment_Item, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_HordeSellVendorBase_C_Get_First_Equipment_Item::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.IsEquipmentNotInBanList
// 0x0020 (0x0020 - 0x0000)
struct BP_HordeSellVendorBase_C_IsEquipmentNotInBanList final
{
public:
	class FText                                   InEquipmentName;                                   // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsEquipmentSellable_0;                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeSellVendorBase_C_IsEquipmentNotInBanList) == 0x000008, "Wrong alignment on BP_HordeSellVendorBase_C_IsEquipmentNotInBanList");
static_assert(sizeof(BP_HordeSellVendorBase_C_IsEquipmentNotInBanList) == 0x000020, "Wrong size on BP_HordeSellVendorBase_C_IsEquipmentNotInBanList");
static_assert(offsetof(BP_HordeSellVendorBase_C_IsEquipmentNotInBanList, InEquipmentName) == 0x000000, "Member 'BP_HordeSellVendorBase_C_IsEquipmentNotInBanList::InEquipmentName' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_IsEquipmentNotInBanList, IsEquipmentSellable_0) == 0x000018, "Member 'BP_HordeSellVendorBase_C_IsEquipmentNotInBanList::IsEquipmentSellable_0' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_IsEquipmentNotInBanList, CallFunc_Array_Contains_ReturnValue) == 0x000019, "Member 'BP_HordeSellVendorBase_C_IsEquipmentNotInBanList::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_IsEquipmentNotInBanList, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'BP_HordeSellVendorBase_C_IsEquipmentNotInBanList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.GetPurchasableEquipmentItem
// 0x0180 (0x0180 - 0x0000)
struct BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem final
{
public:
	class FText                                   Equipment_Name;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class ABP_HordePurchasable_C*                 PurchasableItem;                                   // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsItemFromChest;                                   // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ChestItemName;                                     // 0x0028(0x0018)(Parm, OutParm)
	int32                                         ChestCost;                                         // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFoundItemFromChest;                              // 0x0044(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FoundChestCost;                                    // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   FoundEquipmentName;                                // 0x0050(0x0018)(Edit, BlueprintVisible)
	class ABP_HordePurchasable_C*                 FoundPurchasableItem;                              // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0018)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_HordeGameState_C*                   K2Node_DynamicCast_AsBP_Horde_Game_State;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordeChestBase_C*                   K2Node_DynamicCast_AsBP_Horde_Chest_Base;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys;                            // 0x0118(0x0010)(ReferenceParm)
	class ABP_HordePurchasable_C*                 K2Node_DynamicCast_AsBP_Horde_Purchasable;         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_2;                         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class AMordhauEquipment>          K2Node_ClassDynamicCast_AsMordhau_Equipment;       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetDefaultActor_ReturnValue;              // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauEquipment*                      K2Node_DynamicCast_AsMordhau_Equipment;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue_1;        // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x2];                                      // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem) == 0x000008, "Wrong alignment on BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem");
static_assert(sizeof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem) == 0x000180, "Wrong size on BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, Equipment_Name) == 0x000000, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::Equipment_Name' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, PurchasableItem) == 0x000018, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::PurchasableItem' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, IsItemFromChest) == 0x000020, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::IsItemFromChest' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, ChestItemName) == 0x000028, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::ChestItemName' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, ChestCost) == 0x000040, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::ChestCost' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, IsFoundItemFromChest) == 0x000044, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::IsFoundItemFromChest' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, FoundChestCost) == 0x000048, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::FoundChestCost' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, FoundEquipmentName) == 0x000050, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::FoundEquipmentName' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, FoundPurchasableItem) == 0x000068, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::FoundPurchasableItem' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, Temp_bool_True_if_break_was_hit_Variable) == 0x000080, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, Temp_int_Array_Index_Variable_2) == 0x000084, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_Not_PreBool_ReturnValue) == 0x000088, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, Temp_bool_True_if_break_was_hit_Variable_1) == 0x00008A, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_Not_PreBool_ReturnValue_1) == 0x00008B, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, Temp_int_Loop_Counter_Variable_1) == 0x00008C, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, Temp_int_Loop_Counter_Variable_2) == 0x000094, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_Add_IntInt_ReturnValue_2) == 0x000098, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, K2Node_MakeArray_Array) == 0x0000A0, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_GetGameState_ReturnValue) == 0x0000C8, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D0, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, K2Node_DynamicCast_AsBP_Horde_Game_State) == 0x0000E0, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::K2Node_DynamicCast_AsBP_Horde_Game_State' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_Array_Length_ReturnValue) == 0x0000EC, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, K2Node_DynamicCast_AsBP_Horde_Chest_Base) == 0x000100, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::K2Node_DynamicCast_AsBP_Horde_Chest_Base' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_BooleanAND_ReturnValue) == 0x000109, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_Array_Get_Item_1) == 0x000110, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_Map_Keys_Keys) == 0x000118, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, K2Node_DynamicCast_AsBP_Horde_Purchasable) == 0x000128, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::K2Node_DynamicCast_AsBP_Horde_Purchasable' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, K2Node_DynamicCast_bSuccess_2) == 0x000130, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_Array_Get_Item_2) == 0x000138, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, K2Node_ClassDynamicCast_AsMordhau_Equipment) == 0x000140, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::K2Node_ClassDynamicCast_AsMordhau_Equipment' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, K2Node_ClassDynamicCast_bSuccess) == 0x000148, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_GetDefaultActor_ReturnValue) == 0x000150, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_GetDefaultActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000158, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, K2Node_DynamicCast_AsMordhau_Equipment) == 0x000160, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::K2Node_DynamicCast_AsMordhau_Equipment' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, K2Node_DynamicCast_bSuccess_3) == 0x000168, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_EqualEqual_TextText_ReturnValue_1) == 0x000169, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_EqualEqual_TextText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_Array_Length_ReturnValue_1) == 0x00016C, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_Less_IntInt_ReturnValue_1) == 0x000170, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_Array_Length_ReturnValue_2) == 0x000174, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_Less_IntInt_ReturnValue_2) == 0x000178, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem, CallFunc_BooleanAND_ReturnValue_1) == 0x000179, "Member 'BP_HordeSellVendorBase_C_GetPurchasableEquipmentItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.CanHeldInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_HordeSellVendorBase_C_CanHeldInteract final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipmentSellable_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeSellVendorBase_C_CanHeldInteract) == 0x000008, "Wrong alignment on BP_HordeSellVendorBase_C_CanHeldInteract");
static_assert(sizeof(BP_HordeSellVendorBase_C_CanHeldInteract) == 0x000010, "Wrong size on BP_HordeSellVendorBase_C_CanHeldInteract");
static_assert(offsetof(BP_HordeSellVendorBase_C_CanHeldInteract, Character) == 0x000000, "Member 'BP_HordeSellVendorBase_C_CanHeldInteract::Character' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CanHeldInteract, ReturnValue) == 0x000008, "Member 'BP_HordeSellVendorBase_C_CanHeldInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CanHeldInteract, CallFunc_IsEquipmentSellable_ReturnValue) == 0x000009, "Member 'BP_HordeSellVendorBase_C_CanHeldInteract::CallFunc_IsEquipmentSellable_ReturnValue' has a wrong offset!");

// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.IsEquipmentSellable
// 0x0028 (0x0028 - 0x0000)
struct BP_HordeSellVendorBase_C_IsEquipmentSellable final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauEquipment*                      CallFunc_Get_First_Equipment_Item_MordhauEquipment; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPurchasableNew_Sellable;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPurchasableNew_Base_Cost;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipmentNotInBanList_IsEquipmentSellable; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeSellVendorBase_C_IsEquipmentSellable) == 0x000008, "Wrong alignment on BP_HordeSellVendorBase_C_IsEquipmentSellable");
static_assert(sizeof(BP_HordeSellVendorBase_C_IsEquipmentSellable) == 0x000028, "Wrong size on BP_HordeSellVendorBase_C_IsEquipmentSellable");
static_assert(offsetof(BP_HordeSellVendorBase_C_IsEquipmentSellable, Character) == 0x000000, "Member 'BP_HordeSellVendorBase_C_IsEquipmentSellable::Character' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_IsEquipmentSellable, ReturnValue) == 0x000008, "Member 'BP_HordeSellVendorBase_C_IsEquipmentSellable::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_IsEquipmentSellable, CallFunc_Get_First_Equipment_Item_MordhauEquipment) == 0x000010, "Member 'BP_HordeSellVendorBase_C_IsEquipmentSellable::CallFunc_Get_First_Equipment_Item_MordhauEquipment' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_IsEquipmentSellable, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_HordeSellVendorBase_C_IsEquipmentSellable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_IsEquipmentSellable, CallFunc_GetPurchasableNew_Sellable) == 0x000019, "Member 'BP_HordeSellVendorBase_C_IsEquipmentSellable::CallFunc_GetPurchasableNew_Sellable' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_IsEquipmentSellable, CallFunc_GetPurchasableNew_Base_Cost) == 0x00001C, "Member 'BP_HordeSellVendorBase_C_IsEquipmentSellable::CallFunc_GetPurchasableNew_Base_Cost' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_IsEquipmentSellable, CallFunc_IsEquipmentNotInBanList_IsEquipmentSellable) == 0x000020, "Member 'BP_HordeSellVendorBase_C_IsEquipmentSellable::CallFunc_IsEquipmentNotInBanList_IsEquipmentSellable' has a wrong offset!");

// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.CanInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_HordeSellVendorBase_C_CanInteract final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipmentSellable_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeSellVendorBase_C_CanInteract) == 0x000008, "Wrong alignment on BP_HordeSellVendorBase_C_CanInteract");
static_assert(sizeof(BP_HordeSellVendorBase_C_CanInteract) == 0x000010, "Wrong size on BP_HordeSellVendorBase_C_CanInteract");
static_assert(offsetof(BP_HordeSellVendorBase_C_CanInteract, Character) == 0x000000, "Member 'BP_HordeSellVendorBase_C_CanInteract::Character' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CanInteract, ReturnValue) == 0x000008, "Member 'BP_HordeSellVendorBase_C_CanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_CanInteract, CallFunc_IsEquipmentSellable_ReturnValue) == 0x000009, "Member 'BP_HordeSellVendorBase_C_CanInteract::CallFunc_IsEquipmentSellable_ReturnValue' has a wrong offset!");

// Function BP_HordeSellVendorBase.BP_HordeSellVendorBase_C.GetPurchasableNew
// 0x0098 (0x0098 - 0x0000)
struct BP_HordeSellVendorBase_C_GetPurchasableNew final
{
public:
	class AMordhauEquipment*                      Mordhau_Equipment;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sellable;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Base_Cost;                                         // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeGameState_C*                   K2Node_DynamicCast_AsBP_Horde_Game_State;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHordeBuyMenuEntry>             CallFunc_Map_Values_Values;                        // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHordeBuyMenuEntry                     CallFunc_Array_Get_Item;                           // 0x0058(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeSellVendorBase_C_GetPurchasableNew) == 0x000008, "Wrong alignment on BP_HordeSellVendorBase_C_GetPurchasableNew");
static_assert(sizeof(BP_HordeSellVendorBase_C_GetPurchasableNew) == 0x000098, "Wrong size on BP_HordeSellVendorBase_C_GetPurchasableNew");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableNew, Mordhau_Equipment) == 0x000000, "Member 'BP_HordeSellVendorBase_C_GetPurchasableNew::Mordhau_Equipment' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableNew, Sellable) == 0x000008, "Member 'BP_HordeSellVendorBase_C_GetPurchasableNew::Sellable' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableNew, Base_Cost) == 0x00000C, "Member 'BP_HordeSellVendorBase_C_GetPurchasableNew::Base_Cost' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableNew, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'BP_HordeSellVendorBase_C_GetPurchasableNew::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableNew, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_HordeSellVendorBase_C_GetPurchasableNew::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableNew, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_HordeSellVendorBase_C_GetPurchasableNew::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableNew, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_HordeSellVendorBase_C_GetPurchasableNew::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableNew, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'BP_HordeSellVendorBase_C_GetPurchasableNew::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableNew, K2Node_DynamicCast_AsBP_Horde_Game_State) == 0x000030, "Member 'BP_HordeSellVendorBase_C_GetPurchasableNew::K2Node_DynamicCast_AsBP_Horde_Game_State' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableNew, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_HordeSellVendorBase_C_GetPurchasableNew::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableNew, CallFunc_Map_Values_Values) == 0x000040, "Member 'BP_HordeSellVendorBase_C_GetPurchasableNew::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableNew, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_HordeSellVendorBase_C_GetPurchasableNew::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableNew, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_HordeSellVendorBase_C_GetPurchasableNew::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableNew, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_HordeSellVendorBase_C_GetPurchasableNew::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSellVendorBase_C_GetPurchasableNew, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000091, "Member 'BP_HordeSellVendorBase_C_GetPurchasableNew::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

}

