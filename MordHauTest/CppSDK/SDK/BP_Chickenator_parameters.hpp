#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Chickenator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Chickenator.BP_Chickenator_C.ExecuteUbergraph_BP_Chickenator
// 0x0090 (0x0090 - 0x0000)
struct BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Origin;                               // 0x0030(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_Orientation;                          // 0x003C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                            K2Node_Event_OwningController;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ExpectedDelay;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_Event_Character;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetParentCharacter_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetAmmo_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetCurrentMaxAmmo_ReturnValue;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetAmmo_ReturnValue_1;                    // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetCurrentMaxAmmo_ReturnValue_1;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue_1;              // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator) == 0x000008, "Wrong alignment on BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator");
static_assert(sizeof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator) == 0x000090, "Wrong size on BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, EntryPoint) == 0x000000, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_HasAuthority_ReturnValue) == 0x000024, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, K2Node_Event_Origin) == 0x000030, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::K2Node_Event_Origin' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, K2Node_Event_Orientation) == 0x00003C, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::K2Node_Event_Orientation' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, K2Node_Event_OwningController) == 0x000048, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::K2Node_Event_OwningController' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, K2Node_Event_ExpectedDelay) == 0x000050, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::K2Node_Event_ExpectedDelay' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, K2Node_Event_Character) == 0x000058, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_HasAuthority_ReturnValue_1) == 0x000060, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_IsPlaying_ReturnValue) == 0x000061, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_GetParentCharacter_ReturnValue) == 0x000068, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_GetParentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_GetAmmo_ReturnValue) == 0x000071, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_GetAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_Add_ByteByte_ReturnValue) == 0x000072, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000073, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_GetCurrentMaxAmmo_ReturnValue) == 0x000074, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_GetCurrentMaxAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_Less_ByteByte_ReturnValue) == 0x000075, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_BooleanAND_ReturnValue) == 0x000076, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_GetAmmo_ReturnValue_1) == 0x000077, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_GetAmmo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000078, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_GetCurrentMaxAmmo_ReturnValue_1) == 0x000079, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_GetCurrentMaxAmmo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_Less_ByteByte_ReturnValue_1) == 0x00007A, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_Less_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_BooleanAND_ReturnValue_1) == 0x00007B, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000080, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Chickenator.BP_Chickenator_C.OnDropped
// 0x0008 (0x0008 - 0x0000)
struct BP_Chickenator_C_OnDropped final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chickenator_C_OnDropped) == 0x000008, "Wrong alignment on BP_Chickenator_C_OnDropped");
static_assert(sizeof(BP_Chickenator_C_OnDropped) == 0x000008, "Wrong size on BP_Chickenator_C_OnDropped");
static_assert(offsetof(BP_Chickenator_C_OnDropped, Character) == 0x000000, "Member 'BP_Chickenator_C_OnDropped::Character' has a wrong offset!");

// Function BP_Chickenator.BP_Chickenator_C.FireProjectile
// 0x0028 (0x0028 - 0x0000)
struct BP_Chickenator_C_FireProjectile final
{
public:
	struct FVector                                Origin;                                            // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Orientation;                                       // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class AController*                            OwningController;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExpectedDelay;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chickenator_C_FireProjectile) == 0x000008, "Wrong alignment on BP_Chickenator_C_FireProjectile");
static_assert(sizeof(BP_Chickenator_C_FireProjectile) == 0x000028, "Wrong size on BP_Chickenator_C_FireProjectile");
static_assert(offsetof(BP_Chickenator_C_FireProjectile, Origin) == 0x000000, "Member 'BP_Chickenator_C_FireProjectile::Origin' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_FireProjectile, Orientation) == 0x00000C, "Member 'BP_Chickenator_C_FireProjectile::Orientation' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_FireProjectile, OwningController) == 0x000018, "Member 'BP_Chickenator_C_FireProjectile::OwningController' has a wrong offset!");
static_assert(offsetof(BP_Chickenator_C_FireProjectile, ExpectedDelay) == 0x000020, "Member 'BP_Chickenator_C_FireProjectile::ExpectedDelay' has a wrong offset!");

}

