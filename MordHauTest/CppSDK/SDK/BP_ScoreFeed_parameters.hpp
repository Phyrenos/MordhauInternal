#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ScoreFeed

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "MordhauOnlineSubsystem_structs.hpp"


namespace SDK::Params
{

// Function BP_ScoreFeed.BP_ScoreFeed_C.ExecuteUbergraph_BP_ScoreFeed
// 0x0020 (0x0020 - 0x0000)
struct BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ScoreEntry_C*                       CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed) == 0x000008, "Wrong alignment on BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed");
static_assert(sizeof(BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed) == 0x000020, "Wrong size on BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed");
static_assert(offsetof(BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed, EntryPoint) == 0x000000, "Member 'BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddEntry
// 0x0098 (0x0098 - 0x0000)
struct BP_ScoreFeed_C_AddEntry final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PlayerName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Label;                                             // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CanGroup;                                          // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ScoreEntry_C*                       Entry;                                             // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ScoreEntry_C*                       CallFunc_Create_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowScoreFeed_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ScoreEntry_C*                       CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddEntry) == 0x000008, "Wrong alignment on BP_ScoreFeed_C_AddEntry");
static_assert(sizeof(BP_ScoreFeed_C_AddEntry) == 0x000098, "Wrong size on BP_ScoreFeed_C_AddEntry");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddEntry::Points' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, PlayerName) == 0x000008, "Member 'BP_ScoreFeed_C_AddEntry::PlayerName' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, Label) == 0x000018, "Member 'BP_ScoreFeed_C_AddEntry::Label' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, CanGroup) == 0x000030, "Member 'BP_ScoreFeed_C_AddEntry::CanGroup' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, Entry) == 0x000038, "Member 'BP_ScoreFeed_C_AddEntry::Entry' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_ScoreFeed_C_AddEntry::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, CallFunc_Create_ReturnValue) == 0x000048, "Member 'BP_ScoreFeed_C_AddEntry::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000050, "Member 'BP_ScoreFeed_C_AddEntry::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, CallFunc_ShouldShowScoreFeed_ReturnValue) == 0x000058, "Member 'BP_ScoreFeed_C_AddEntry::CallFunc_ShouldShowScoreFeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_ScoreFeed_C_AddEntry::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'BP_ScoreFeed_C_AddEntry::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_ScoreFeed_C_AddEntry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'BP_ScoreFeed_C_AddEntry::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BP_ScoreFeed_C_AddEntry::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000078, "Member 'BP_ScoreFeed_C_AddEntry::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, CallFunc_Less_IntInt_ReturnValue) == 0x000079, "Member 'BP_ScoreFeed_C_AddEntry::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_ScoreFeed_C_AddEntry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_ScoreFeed_C_AddEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, CallFunc_IsValid_ReturnValue_1) == 0x000081, "Member 'BP_ScoreFeed_C_AddEntry::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, CallFunc_AddChild_ReturnValue) == 0x000088, "Member 'BP_ScoreFeed_C_AddEntry::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddEntry, CallFunc_Array_Add_ReturnValue) == 0x000090, "Member 'BP_ScoreFeed_C_AddEntry::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddKill
// 0x0048 (0x0048 - 0x0000)
struct BP_ScoreFeed_C_AddKill final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name_0;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Label;                                             // 0x0018(0x0018)(Edit, BlueprintVisible)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddKill) == 0x000008, "Wrong alignment on BP_ScoreFeed_C_AddKill");
static_assert(sizeof(BP_ScoreFeed_C_AddKill) == 0x000048, "Wrong size on BP_ScoreFeed_C_AddKill");
static_assert(offsetof(BP_ScoreFeed_C_AddKill, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddKill::Points' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddKill, Name_0) == 0x000008, "Member 'BP_ScoreFeed_C_AddKill::Name_0' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddKill, Label) == 0x000018, "Member 'BP_ScoreFeed_C_AddKill::Label' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddKill, CallFunc_RandomFloat_ReturnValue) == 0x000030, "Member 'BP_ScoreFeed_C_AddKill::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddKill, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_ScoreFeed_C_AddKill::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddKill, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_ScoreFeed_C_AddKill::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddKill, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'BP_ScoreFeed_C_AddKill::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddKill, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000040, "Member 'BP_ScoreFeed_C_AddKill::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddAssist
// 0x0004 (0x0004 - 0x0000)
struct BP_ScoreFeed_C_AddAssist final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddAssist) == 0x000004, "Wrong alignment on BP_ScoreFeed_C_AddAssist");
static_assert(sizeof(BP_ScoreFeed_C_AddAssist) == 0x000004, "Wrong size on BP_ScoreFeed_C_AddAssist");
static_assert(offsetof(BP_ScoreFeed_C_AddAssist, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddAssist::Points' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddTeamKill
// 0x0018 (0x0018 - 0x0000)
struct BP_ScoreFeed_C_AddTeamKill final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name_0;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddTeamKill) == 0x000008, "Wrong alignment on BP_ScoreFeed_C_AddTeamKill");
static_assert(sizeof(BP_ScoreFeed_C_AddTeamKill) == 0x000018, "Wrong size on BP_ScoreFeed_C_AddTeamKill");
static_assert(offsetof(BP_ScoreFeed_C_AddTeamKill, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddTeamKill::Points' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddTeamKill, Name_0) == 0x000008, "Member 'BP_ScoreFeed_C_AddTeamKill::Name_0' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddSuicide
// 0x0038 (0x0038 - 0x0000)
struct BP_ScoreFeed_C_AddSuicide final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Label;                                             // 0x0008(0x0018)(Edit, BlueprintVisible)
	EPlatform                                     CallFunc_GetPlatform_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddSuicide) == 0x000008, "Wrong alignment on BP_ScoreFeed_C_AddSuicide");
static_assert(sizeof(BP_ScoreFeed_C_AddSuicide) == 0x000038, "Wrong size on BP_ScoreFeed_C_AddSuicide");
static_assert(offsetof(BP_ScoreFeed_C_AddSuicide, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddSuicide::Points' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddSuicide, Label) == 0x000008, "Member 'BP_ScoreFeed_C_AddSuicide::Label' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddSuicide, CallFunc_GetPlatform_ReturnValue) == 0x000020, "Member 'BP_ScoreFeed_C_AddSuicide::CallFunc_GetPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddSuicide, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'BP_ScoreFeed_C_AddSuicide::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddSuicide, CallFunc_RandomFloat_ReturnValue) == 0x000024, "Member 'BP_ScoreFeed_C_AddSuicide::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddSuicide, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_ScoreFeed_C_AddSuicide::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddSuicide, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_ScoreFeed_C_AddSuicide::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddSuicide, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_ScoreFeed_C_AddSuicide::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddSuicide, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000034, "Member 'BP_ScoreFeed_C_AddSuicide::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.CollectPoints
// 0x0048 (0x0048 - 0x0000)
struct BP_ScoreFeed_C_CollectPoints final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_CollectPoints) == 0x000008, "Wrong alignment on BP_ScoreFeed_C_CollectPoints");
static_assert(sizeof(BP_ScoreFeed_C_CollectPoints) == 0x000048, "Wrong size on BP_ScoreFeed_C_CollectPoints");
static_assert(offsetof(BP_ScoreFeed_C_CollectPoints, Points) == 0x000000, "Member 'BP_ScoreFeed_C_CollectPoints::Points' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_CollectPoints, CallFunc_FTrunc_ReturnValue) == 0x000004, "Member 'BP_ScoreFeed_C_CollectPoints::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_CollectPoints, CallFunc_IsVisible_ReturnValue) == 0x000008, "Member 'BP_ScoreFeed_C_CollectPoints::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_CollectPoints, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'BP_ScoreFeed_C_CollectPoints::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_CollectPoints, CallFunc_FTrunc_ReturnValue_1) == 0x000018, "Member 'BP_ScoreFeed_C_CollectPoints::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_CollectPoints, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'BP_ScoreFeed_C_CollectPoints::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_CollectPoints, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_ScoreFeed_C_CollectPoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_CollectPoints, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00002C, "Member 'BP_ScoreFeed_C_CollectPoints::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_CollectPoints, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'BP_ScoreFeed_C_CollectPoints::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_CollectPoints, CallFunc_Add_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_ScoreFeed_C_CollectPoints::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_CollectPoints, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_ScoreFeed_C_CollectPoints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_CollectPoints, CallFunc_PlayAnimation_ReturnValue_2) == 0x000040, "Member 'BP_ScoreFeed_C_CollectPoints::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddDamage
// 0x0008 (0x0008 - 0x0000)
struct BP_ScoreFeed_C_AddDamage final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitZone;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddDamage) == 0x000004, "Wrong alignment on BP_ScoreFeed_C_AddDamage");
static_assert(sizeof(BP_ScoreFeed_C_AddDamage) == 0x000008, "Wrong size on BP_ScoreFeed_C_AddDamage");
static_assert(offsetof(BP_ScoreFeed_C_AddDamage, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddDamage::Points' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddDamage, HitZone) == 0x000004, "Member 'BP_ScoreFeed_C_AddDamage::HitZone' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddTeamDamage
// 0x0008 (0x0008 - 0x0000)
struct BP_ScoreFeed_C_AddTeamDamage final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddTeamDamage) == 0x000004, "Wrong alignment on BP_ScoreFeed_C_AddTeamDamage");
static_assert(sizeof(BP_ScoreFeed_C_AddTeamDamage) == 0x000008, "Wrong size on BP_ScoreFeed_C_AddTeamDamage");
static_assert(offsetof(BP_ScoreFeed_C_AddTeamDamage, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddTeamDamage::Points' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddTeamDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_ScoreFeed_C_AddTeamDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.RemoveFromFeed
// 0x0018 (0x0018 - 0x0000)
struct BP_ScoreFeed_C_RemoveFromFeed final
{
public:
	class UBP_ScoreEntry_C*                       ToRemove;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScoreFeed_C_RemoveFromFeed) == 0x000008, "Wrong alignment on BP_ScoreFeed_C_RemoveFromFeed");
static_assert(sizeof(BP_ScoreFeed_C_RemoveFromFeed) == 0x000018, "Wrong size on BP_ScoreFeed_C_RemoveFromFeed");
static_assert(offsetof(BP_ScoreFeed_C_RemoveFromFeed, ToRemove) == 0x000000, "Member 'BP_ScoreFeed_C_RemoveFromFeed::ToRemove' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_RemoveFromFeed, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'BP_ScoreFeed_C_RemoveFromFeed::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_RemoveFromFeed, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_ScoreFeed_C_RemoveFromFeed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_RemoveFromFeed, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_ScoreFeed_C_RemoveFromFeed::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.UpdateComboVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_ScoreFeed_C_UpdateComboVisibility final
{
public:
	bool                                          ShouldHide;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScoreFeed_C_UpdateComboVisibility) == 0x000001, "Wrong alignment on BP_ScoreFeed_C_UpdateComboVisibility");
static_assert(sizeof(BP_ScoreFeed_C_UpdateComboVisibility) == 0x000001, "Wrong size on BP_ScoreFeed_C_UpdateComboVisibility");
static_assert(offsetof(BP_ScoreFeed_C_UpdateComboVisibility, ShouldHide) == 0x000000, "Member 'BP_ScoreFeed_C_UpdateComboVisibility::ShouldHide' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.UpdateCurrentPointsText
// 0x0108 (0x0108 - 0x0000)
struct BP_ScoreFeed_C_UpdateCurrentPointsText final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)(UObjectWrapper)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0028(0x0028)(UObjectWrapper)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0050(0x0028)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0078(0x0018)()
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScoreFeed_C_UpdateCurrentPointsText) == 0x000008, "Wrong alignment on BP_ScoreFeed_C_UpdateCurrentPointsText");
static_assert(sizeof(BP_ScoreFeed_C_UpdateCurrentPointsText) == 0x000108, "Wrong size on BP_ScoreFeed_C_UpdateCurrentPointsText");
static_assert(offsetof(BP_ScoreFeed_C_UpdateCurrentPointsText, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'BP_ScoreFeed_C_UpdateCurrentPointsText::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_UpdateCurrentPointsText, K2Node_MakeStruct_SlateColor_1) == 0x000028, "Member 'BP_ScoreFeed_C_UpdateCurrentPointsText::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_UpdateCurrentPointsText, K2Node_MakeStruct_SlateColor_2) == 0x000050, "Member 'BP_ScoreFeed_C_UpdateCurrentPointsText::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_UpdateCurrentPointsText, CallFunc_Conv_FloatToText_ReturnValue) == 0x000078, "Member 'BP_ScoreFeed_C_UpdateCurrentPointsText::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_UpdateCurrentPointsText, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_ScoreFeed_C_UpdateCurrentPointsText::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_UpdateCurrentPointsText, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'BP_ScoreFeed_C_UpdateCurrentPointsText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_UpdateCurrentPointsText, K2Node_MakeArray_Array) == 0x0000D8, "Member 'BP_ScoreFeed_C_UpdateCurrentPointsText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_UpdateCurrentPointsText, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'BP_ScoreFeed_C_UpdateCurrentPointsText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_UpdateCurrentPointsText, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000100, "Member 'BP_ScoreFeed_C_UpdateCurrentPointsText::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddHeadshot
// 0x0004 (0x0004 - 0x0000)
struct BP_ScoreFeed_C_AddHeadshot final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddHeadshot) == 0x000004, "Wrong alignment on BP_ScoreFeed_C_AddHeadshot");
static_assert(sizeof(BP_ScoreFeed_C_AddHeadshot) == 0x000004, "Wrong size on BP_ScoreFeed_C_AddHeadshot");
static_assert(offsetof(BP_ScoreFeed_C_AddHeadshot, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddHeadshot::Points' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddCapturing
// 0x0004 (0x0004 - 0x0000)
struct BP_ScoreFeed_C_AddCapturing final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddCapturing) == 0x000004, "Wrong alignment on BP_ScoreFeed_C_AddCapturing");
static_assert(sizeof(BP_ScoreFeed_C_AddCapturing) == 0x000004, "Wrong size on BP_ScoreFeed_C_AddCapturing");
static_assert(offsetof(BP_ScoreFeed_C_AddCapturing, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddCapturing::Points' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddCaptured
// 0x0004 (0x0004 - 0x0000)
struct BP_ScoreFeed_C_AddCaptured final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddCaptured) == 0x000004, "Wrong alignment on BP_ScoreFeed_C_AddCaptured");
static_assert(sizeof(BP_ScoreFeed_C_AddCaptured) == 0x000004, "Wrong size on BP_ScoreFeed_C_AddCaptured");
static_assert(offsetof(BP_ScoreFeed_C_AddCaptured, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddCaptured::Points' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddNeutralizing
// 0x0004 (0x0004 - 0x0000)
struct BP_ScoreFeed_C_AddNeutralizing final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddNeutralizing) == 0x000004, "Wrong alignment on BP_ScoreFeed_C_AddNeutralizing");
static_assert(sizeof(BP_ScoreFeed_C_AddNeutralizing) == 0x000004, "Wrong size on BP_ScoreFeed_C_AddNeutralizing");
static_assert(offsetof(BP_ScoreFeed_C_AddNeutralizing, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddNeutralizing::Points' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddNeutralized
// 0x0004 (0x0004 - 0x0000)
struct BP_ScoreFeed_C_AddNeutralized final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddNeutralized) == 0x000004, "Wrong alignment on BP_ScoreFeed_C_AddNeutralized");
static_assert(sizeof(BP_ScoreFeed_C_AddNeutralized) == 0x000004, "Wrong size on BP_ScoreFeed_C_AddNeutralized");
static_assert(offsetof(BP_ScoreFeed_C_AddNeutralized, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddNeutralized::Points' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddHeal
// 0x0004 (0x0004 - 0x0000)
struct BP_ScoreFeed_C_AddHeal final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddHeal) == 0x000004, "Wrong alignment on BP_ScoreFeed_C_AddHeal");
static_assert(sizeof(BP_ScoreFeed_C_AddHeal) == 0x000004, "Wrong size on BP_ScoreFeed_C_AddHeal");
static_assert(offsetof(BP_ScoreFeed_C_AddHeal, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddHeal::Points' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddWaveCleared
// 0x0004 (0x0004 - 0x0000)
struct BP_ScoreFeed_C_AddWaveCleared final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddWaveCleared) == 0x000004, "Wrong alignment on BP_ScoreFeed_C_AddWaveCleared");
static_assert(sizeof(BP_ScoreFeed_C_AddWaveCleared) == 0x000004, "Wrong size on BP_ScoreFeed_C_AddWaveCleared");
static_assert(offsetof(BP_ScoreFeed_C_AddWaveCleared, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddWaveCleared::Points' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddObjective
// 0x0004 (0x0004 - 0x0000)
struct BP_ScoreFeed_C_AddObjective final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddObjective) == 0x000004, "Wrong alignment on BP_ScoreFeed_C_AddObjective");
static_assert(sizeof(BP_ScoreFeed_C_AddObjective) == 0x000004, "Wrong size on BP_ScoreFeed_C_AddObjective");
static_assert(offsetof(BP_ScoreFeed_C_AddObjective, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddObjective::Points' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddRepair
// 0x0004 (0x0004 - 0x0000)
struct BP_ScoreFeed_C_AddRepair final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddRepair) == 0x000004, "Wrong alignment on BP_ScoreFeed_C_AddRepair");
static_assert(sizeof(BP_ScoreFeed_C_AddRepair) == 0x000004, "Wrong size on BP_ScoreFeed_C_AddRepair");
static_assert(offsetof(BP_ScoreFeed_C_AddRepair, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddRepair::Points' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddVehicleTeamDamage
// 0x0008 (0x0008 - 0x0000)
struct BP_ScoreFeed_C_AddVehicleTeamDamage final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddVehicleTeamDamage) == 0x000004, "Wrong alignment on BP_ScoreFeed_C_AddVehicleTeamDamage");
static_assert(sizeof(BP_ScoreFeed_C_AddVehicleTeamDamage) == 0x000008, "Wrong size on BP_ScoreFeed_C_AddVehicleTeamDamage");
static_assert(offsetof(BP_ScoreFeed_C_AddVehicleTeamDamage, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddVehicleTeamDamage::Points' has a wrong offset!");
static_assert(offsetof(BP_ScoreFeed_C_AddVehicleTeamDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_ScoreFeed_C_AddVehicleTeamDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddVehicleDamage
// 0x0004 (0x0004 - 0x0000)
struct BP_ScoreFeed_C_AddVehicleDamage final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddVehicleDamage) == 0x000004, "Wrong alignment on BP_ScoreFeed_C_AddVehicleDamage");
static_assert(sizeof(BP_ScoreFeed_C_AddVehicleDamage) == 0x000004, "Wrong size on BP_ScoreFeed_C_AddVehicleDamage");
static_assert(offsetof(BP_ScoreFeed_C_AddVehicleDamage, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddVehicleDamage::Points' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddStructureDamage
// 0x0004 (0x0004 - 0x0000)
struct BP_ScoreFeed_C_AddStructureDamage final
{
public:
	float                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddStructureDamage) == 0x000004, "Wrong alignment on BP_ScoreFeed_C_AddStructureDamage");
static_assert(sizeof(BP_ScoreFeed_C_AddStructureDamage) == 0x000004, "Wrong size on BP_ScoreFeed_C_AddStructureDamage");
static_assert(offsetof(BP_ScoreFeed_C_AddStructureDamage, Points) == 0x000000, "Member 'BP_ScoreFeed_C_AddStructureDamage::Points' has a wrong offset!");

// Function BP_ScoreFeed.BP_ScoreFeed_C.AddSpawn
// 0x0004 (0x0004 - 0x0000)
struct BP_ScoreFeed_C_AddSpawn final
{
public:
	float                                         Score;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreFeed_C_AddSpawn) == 0x000004, "Wrong alignment on BP_ScoreFeed_C_AddSpawn");
static_assert(sizeof(BP_ScoreFeed_C_AddSpawn) == 0x000004, "Wrong size on BP_ScoreFeed_C_AddSpawn");
static_assert(offsetof(BP_ScoreFeed_C_AddSpawn, Score) == 0x000000, "Member 'BP_ScoreFeed_C_AddSpawn::Score' has a wrong offset!");

}

