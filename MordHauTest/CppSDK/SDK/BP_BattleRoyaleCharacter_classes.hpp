#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleRoyaleCharacter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MordhauCharacter_classes.hpp"
#include "Mordhau_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BattleRoyaleCharacter.BP_BattleRoyaleCharacter_C
// 0x0030 (0x1310 - 0x12E0)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_BattleRoyaleCharacter_C : public ABP_MordhauCharacter_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BattleRoyaleCharacter_C;         // 0x12E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UClass*                                 HeadArmor;                                         // 0x12E8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ChestArmor;                                        // 0x12F0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LegArmor;                                          // 0x12F8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          DropArmorOnDeath;                                  // 0x1300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_BattleRoyaleCharacter(int32 EntryPoint);
	void OnKilled(class AController* EventInstigator);
	void SpawnArmorPiece(class UClass* WearablePickupClass);
	void OnRep_HeadArmor();
	void OnRep_ChestArmor();
	void OnRep_LegArmor();
	void PlayWearablePickupSound(class UClass* Wearable);
	void OnArmorReplicated(EWearableSlot Slot);
	void OnBeforeReceiveWearablePickup(class ABP_WearablePickup_C* WearablePickup);
	void IsAnUpgrade(class ABP_WearablePickup_C* Wearable, bool* Return);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BattleRoyaleCharacter_C">();
	}
	static class ABP_BattleRoyaleCharacter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BattleRoyaleCharacter_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_BattleRoyaleCharacter_C) == 0x000010, "Wrong alignment on ABP_BattleRoyaleCharacter_C");
static_assert(sizeof(ABP_BattleRoyaleCharacter_C) == 0x001310, "Wrong size on ABP_BattleRoyaleCharacter_C");
static_assert(offsetof(ABP_BattleRoyaleCharacter_C, UberGraphFrame_BP_BattleRoyaleCharacter_C) == 0x0012E0, "Member 'ABP_BattleRoyaleCharacter_C::UberGraphFrame_BP_BattleRoyaleCharacter_C' has a wrong offset!");
static_assert(offsetof(ABP_BattleRoyaleCharacter_C, HeadArmor) == 0x0012E8, "Member 'ABP_BattleRoyaleCharacter_C::HeadArmor' has a wrong offset!");
static_assert(offsetof(ABP_BattleRoyaleCharacter_C, ChestArmor) == 0x0012F0, "Member 'ABP_BattleRoyaleCharacter_C::ChestArmor' has a wrong offset!");
static_assert(offsetof(ABP_BattleRoyaleCharacter_C, LegArmor) == 0x0012F8, "Member 'ABP_BattleRoyaleCharacter_C::LegArmor' has a wrong offset!");
static_assert(offsetof(ABP_BattleRoyaleCharacter_C, DropArmorOnDeath) == 0x001300, "Member 'ABP_BattleRoyaleCharacter_C::DropArmorOnDeath' has a wrong offset!");

}

