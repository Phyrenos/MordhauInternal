#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mordhau

#include "Basic.hpp"

#include "Mordhau_classes.hpp"
#include "Mordhau_parameters.hpp"


namespace SDK
{

// Function Mordhau.RconCommand.CanExecuteCommand
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FString                           CommandType                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabJsonObject*               InCommand                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ClientId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PacketId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URconCommand::CanExecuteCommand(const class FString& CommandType, class UPlayFabJsonObject* InCommand, const int32 ClientId, const int32 PacketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RconCommand", "CanExecuteCommand");

	Params::RconCommand_CanExecuteCommand Parms{};

	Parms.CommandType = std::move(CommandType);
	Parms.InCommand = InCommand;
	Parms.ClientId = ClientId;
	Parms.PacketId = PacketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.RconCommand.ExecuteCommand
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CommandType                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabJsonObject*               InCommand                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ClientId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PacketId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URconCommand::ExecuteCommand(const class FString& CommandType, class UPlayFabJsonObject* InCommand, const int32 ClientId, const int32 PacketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RconCommand", "ExecuteCommand");

	Params::RconCommand_ExecuteCommand Parms{};

	Parms.CommandType = std::move(CommandType);
	Parms.InCommand = InCommand;
	Parms.ClientId = ClientId;
	Parms.PacketId = PacketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.RconCommand.RequestInfo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ClientId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PacketId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabJsonObject*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabJsonObject* URconCommand::RequestInfo(const int32 ClientId, const int32 PacketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RconCommand", "RequestInfo");

	Params::RconCommand_RequestInfo Parms{};

	Parms.ClientId = ClientId;
	Parms.PacketId = PacketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.RconCommand.SendResponse
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPlayFabJsonObject*               ResponseObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ClientId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PacketId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URconCommand::SendResponse(class UPlayFabJsonObject* ResponseObject, const int32 ClientId, const int32 PacketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RconCommand", "SendResponse");

	Params::RconCommand_SendResponse Parms{};

	Parms.ResponseObject = ResponseObject;
	Parms.ClientId = ClientId;
	Parms.PacketId = PacketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauMotion.CanInitiateMotion
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UMordhauMotion>       NewMotionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauMotion::CanInitiateMotion(TSubclassOf<class UMordhauMotion> NewMotionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMotion", "CanInitiateMotion");

	Params::MordhauMotion_CanInitiateMotion Parms{};

	Parms.NewMotionType = NewMotionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauMotion.OnBegin
// (Native, Event, Public, BlueprintEvent)

void UMordhauMotion::OnBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMotion", "OnBegin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauMotion.OnDynamicParamChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// uint8                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauMotion::OnDynamicParamChanged(uint8 OldValue, uint8 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMotion", "OnDynamicParamChanged");

	Params::MordhauMotion_OnDynamicParamChanged Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauMotion.OnEnded
// (Native, Event, Public, BlueprintEvent)

void UMordhauMotion::OnEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMotion", "OnEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauMotion.OnLateTick
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauMotion::OnLateTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMotion", "OnLateTick");

	Params::MordhauMotion_OnLateTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauMotion.OnLeave
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Interrupted                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauMotion::OnLeave(bool Interrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMotion", "OnLeave");

	Params::MordhauMotion_OnLeave Parms{};

	Parms.Interrupted = Interrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauMotion.OnTick
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauMotion::OnTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMotion", "OnTick");

	Params::MordhauMotion_OnTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauMotion.ProcessAttack
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAttackMove                             Move                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauMotion::ProcessAttack(EAttackMove Move, float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMotion", "ProcessAttack");

	Params::MordhauMotion_ProcessAttack Parms{};

	Parms.Move = Move;
	Parms.Angle = Angle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauMotion.ProcessBlock
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBlockType                              Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauMotion::ProcessBlock(EBlockType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMotion", "ProcessBlock");

	Params::MordhauMotion_ProcessBlock Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauMotion.ProcessFeint
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauMotion::ProcessFeint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMotion", "ProcessFeint");

	Params::MordhauMotion_ProcessFeint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauMotion.GetIsFirstPerson
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauMotion::GetIsFirstPerson() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMotion", "GetIsFirstPerson");

	Params::MordhauMotion_GetIsFirstPerson Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauMotion.GetOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMotionSystemComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMotionSystemComponent* UMordhauMotion::GetOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMotion", "GetOwner");

	Params::MordhauMotion_GetOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauMotion.GetOwnerActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UMordhauMotion::GetOwnerActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMotion", "GetOwnerActor");

	Params::MordhauMotion_GetOwnerActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauMotion.GetOwnerAdvancedCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AAdvancedCharacter*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAdvancedCharacter* UMordhauMotion::GetOwnerAdvancedCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMotion", "GetOwnerAdvancedCharacter");

	Params::MordhauMotion_GetOwnerAdvancedCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauMotion.GetOwnerMordhauCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMordhauCharacter*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauCharacter* UMordhauMotion::GetOwnerMordhauCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMotion", "GetOwnerMordhauCharacter");

	Params::MordhauMotion_GetOwnerMordhauCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauMotion.GetWorld
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWorld*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWorld* UMordhauMotion::GetWorld() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMotion", "GetWorld");

	Params::MordhauMotion_GetWorld Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauMotion.HasAuthority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauMotion::HasAuthority() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMotion", "HasAuthority");

	Params::MordhauMotion_HasAuthority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AttackMotion.ComputeWindup
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAttackMotion::ComputeWindup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttackMotion", "ComputeWindup");

	Params::AttackMotion_ComputeWindup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AttackMotion.FindWeapon
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauWeapon*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauWeapon* UAttackMotion::FindWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttackMotion", "FindWeapon");

	Params::AttackMotion_FindWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AttackMotion.ModifyAttackInfo
// (Native, Event, Public, BlueprintEvent)

void UAttackMotion::ModifyAttackInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttackMotion", "ModifyAttackInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AttackMotion.OverrideAdditionalTrace
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          OutStart                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutEnd                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAttackMotion::OverrideAdditionalTrace(struct FVector* OutStart, struct FVector* OutEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttackMotion", "OverrideAdditionalTrace");

	Params::AttackMotion_OverrideAdditionalTrace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStart != nullptr)
		*OutStart = std::move(Parms.OutStart);

	if (OutEnd != nullptr)
		*OutEnd = std::move(Parms.OutEnd);

	return Parms.ReturnValue;
}


// Function Mordhau.AttackMotion.OverrideIsUsingAdditionalTracers
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    OutResult                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAttackMotion::OverrideIsUsingAdditionalTracers(bool* OutResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttackMotion", "OverrideIsUsingAdditionalTracers");

	Params::AttackMotion_OverrideIsUsingAdditionalTracers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = Parms.OutResult;

	return Parms.ReturnValue;
}


// Function Mordhau.AttackMotion.OverrideTrace
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          OutStart                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutEnd                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAttackMotion::OverrideTrace(struct FVector* OutStart, struct FVector* OutEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttackMotion", "OverrideTrace");

	Params::AttackMotion_OverrideTrace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStart != nullptr)
		*OutStart = std::move(Parms.OutStart);

	if (OutEnd != nullptr)
		*OutEnd = std::move(Parms.OutEnd);

	return Parms.ReturnValue;
}


// Function Mordhau.AttackMotion.PrepareAnimationData
// (Native, Event, Public, BlueprintEvent)

void UAttackMotion::PrepareAnimationData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttackMotion", "PrepareAnimationData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AttackMotion.SetHasHitIncludingCosmeticHit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bPlayHitShake                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAttackMotion::SetHasHitIncludingCosmeticHit(bool bPlayHitShake)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttackMotion", "SetHasHitIncludingCosmeticHit");

	Params::AttackMotion_SetHasHitIncludingCosmeticHit Parms{};

	Parms.bPlayHitShake = bPlayHitShake;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AttackMotion.ShouldStunOnHit
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UMotionSystemComponent*           OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAttackMotion::ShouldStunOnHit(class UMotionSystemComponent* OtherComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AttackMotion", "ShouldStunOnHit");

	Params::AttackMotion_ShouldStunOnHit Parms{};

	Parms.OtherComponent = OtherComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.GetPlayerCombinedInfo.GetPlayerCombinedInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           PlayFabId_0                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGetPlayerCombinedInfo*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGetPlayerCombinedInfo* UGetPlayerCombinedInfo::GetPlayerCombinedInfo(const class FString& PlayFabId_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GetPlayerCombinedInfo", "GetPlayerCombinedInfo");

	Params::GetPlayerCombinedInfo_GetPlayerCombinedInfo Parms{};

	Parms.PlayFabId_0 = std::move(PlayFabId_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.CreatureAnimInstance.DoFootstep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Limb                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreatureAnimInstance::DoFootstep(int32 Limb)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreatureAnimInstance", "DoFootstep");

	Params::CreatureAnimInstance_DoFootstep Parms{};

	Parms.Limb = Limb;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInventoryItem.GetWasSeen
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauInventoryItem::GetWasSeen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventoryItem", "GetWasSeen");

	Params::MordhauInventoryItem_GetWasSeen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventoryItem.MarkSeen
// (Final, Native, Public, BlueprintCallable)

void UMordhauInventoryItem::MarkSeen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventoryItem", "MarkSeen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.LegsWearable.AddFeetWearable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UClass>             Wearable                                               (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULegsWearable::AddFeetWearable(TSoftClassPtr<class UClass> Wearable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegsWearable", "AddFeetWearable");

	Params::LegsWearable_AddFeetWearable Parms{};

	Parms.Wearable = Wearable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.LegsWearable.GetFeetWearable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UMordhauWearable>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UMordhauWearable> ULegsWearable::GetFeetWearable(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegsWearable", "GetFeetWearable");

	Params::LegsWearable_GetFeetWearable Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.LegsWearable.GetFeetWearablesNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULegsWearable::GetFeetWearablesNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegsWearable", "GetFeetWearablesNum");

	Params::LegsWearable_GetFeetWearablesNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.CrowdObstacleComponent.RegisterObstacle
// (Final, Native, Public, BlueprintCallable)

void UCrowdObstacleComponent::RegisterObstacle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrowdObstacleComponent", "RegisterObstacle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CrowdObstacleComponent.UnregisterObstacle
// (Final, Native, Public, BlueprintCallable)

void UCrowdObstacleComponent::UnregisterObstacle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrowdObstacleComponent", "UnregisterObstacle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.InteractionSystemComponent.OnCharacterDestroyed
// (Final, Native, Public)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInteractionSystemComponent::OnCharacterDestroyed(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionSystemComponent", "OnCharacterDestroyed");

	Params::InteractionSystemComponent_OnCharacterDestroyed Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.InteractionSystemComponent.OnLateTick
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInteractionSystemComponent::OnLateTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionSystemComponent", "OnLateTick");

	Params::InteractionSystemComponent_OnLateTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.InteractionSystemComponent.OnLODTick
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInteractionSystemComponent::OnLODTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionSystemComponent", "OnLODTick");

	Params::InteractionSystemComponent_OnLODTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.InteractionSystemComponent.OnUnPossessed
// (Final, Native, Public)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInteractionSystemComponent::OnUnPossessed(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionSystemComponent", "OnUnPossessed");

	Params::InteractionSystemComponent_OnUnPossessed Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.AddTurnDegrees
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::AddTurnDegrees(float Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "AddTurnDegrees");

	Params::AdvancedCharacter_AddTurnDegrees Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.AddWound
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ImpactPoint                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ImpactNormal                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Agent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMordhauDamageType                      DamageType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   DamageSubType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::AddWound(const struct FVector& ImpactPoint, const struct FVector& ImpactNormal, class FName bone, class AActor* Agent, EMordhauDamageType DamageType, uint8 DamageSubType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "AddWound");

	Params::AdvancedCharacter_AddWound Parms{};

	Parms.ImpactPoint = std::move(ImpactPoint);
	Parms.ImpactNormal = std::move(ImpactNormal);
	Parms.bone = bone;
	Parms.Agent = Agent;
	Parms.DamageType = DamageType;
	Parms.DamageSubType = DamageSubType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.ApplyRagdollForce
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMordhauDamageType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SubType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Point                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Agent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::ApplyRagdollForce(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "ApplyRagdollForce");

	Params::AdvancedCharacter_ApplyRagdollForce Parms{};

	Parms.Angle = Angle;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Source = Source;
	Parms.Agent = Agent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.AdvancedCharacter.BeginFlinchAdditiveOverride
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             FlinchOverrideName                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AltFlinchOverrideName                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Degree                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsHead                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SnapDegreeToSteps                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::BeginFlinchAdditiveOverride(const class FName& FlinchOverrideName, const class FName& AltFlinchOverrideName, float Duration, float Degree, bool bIsHead, float SnapDegreeToSteps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "BeginFlinchAdditiveOverride");

	Params::AdvancedCharacter_BeginFlinchAdditiveOverride Parms{};

	Parms.FlinchOverrideName = FlinchOverrideName;
	Parms.AltFlinchOverrideName = AltFlinchOverrideName;
	Parms.Duration = Duration;
	Parms.Degree = Degree;
	Parms.bIsHead = bIsHead;
	Parms.SnapDegreeToSteps = SnapDegreeToSteps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.BoostAnimBlendWeight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BoostAmount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::BoostAnimBlendWeight(class UAnimMontage** Montage, float BoostAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "BoostAnimBlendWeight");

	Params::AdvancedCharacter_BoostAnimBlendWeight Parms{};

	Parms.BoostAmount = BoostAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Montage != nullptr)
		*Montage = Parms.Montage;
}


// Function Mordhau.AdvancedCharacter.BP_PlayCharacterSound
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USoundBase*                       Sound                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachLocation                         AttachLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAttach                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* AAdvancedCharacter::BP_PlayCharacterSound(class USoundBase* Sound, class FName bone, const struct FVector& Location, EAttachLocation AttachLocation, bool bAttach)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "BP_PlayCharacterSound");

	Params::AdvancedCharacter_BP_PlayCharacterSound Parms{};

	Parms.Sound = Sound;
	Parms.bone = bone;
	Parms.Location = std::move(Location);
	Parms.AttachLocation = AttachLocation;
	Parms.bAttach = bAttach;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.BPLODTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::BPLODTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "BPLODTick");

	Params::AdvancedCharacter_BPLODTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.AdvancedCharacter.CanBleedOutFromHit
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// EMordhauDamageType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SubType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Agent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAdvancedCharacter::CanBleedOutFromHit(const struct FHitResult& HitResult, EMordhauDamageType Type, uint8 SubType, class AActor* Source, class AActor* Agent, class AController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "CanBleedOutFromHit");

	Params::AdvancedCharacter_CanBleedOutFromHit Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.Source = Source;
	Parms.Agent = Agent;
	Parms.EventInstigator = EventInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.GetAdditiveOverrideType
// (Final, Native, Public)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AAdvancedCharacter::GetAdditiveOverrideType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "GetAdditiveOverrideType");

	Params::AdvancedCharacter_GetAdditiveOverrideType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.GetAdditiveOverrideTypeNormalizedTime
// (Final, Native, Public)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AAdvancedCharacter::GetAdditiveOverrideTypeNormalizedTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "GetAdditiveOverrideTypeNormalizedTime");

	Params::AdvancedCharacter_GetAdditiveOverrideTypeNormalizedTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.GetAnimWeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AAdvancedCharacter::GetAnimWeight(class UAnimMontage* Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "GetAnimWeight");

	Params::AdvancedCharacter_GetAnimWeight Parms{};

	Parms.Montage = Montage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.GetArmorTierForBone
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 AAdvancedCharacter::GetArmorTierForBone(class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "GetArmorTierForBone");

	Params::AdvancedCharacter_GetArmorTierForBone Parms{};

	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.GetBestStickyLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutNormal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OutBone                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAdvancedCharacter::GetBestStickyLocation(const struct FVector& InLocation, struct FVector* OutLocation, struct FVector* OutNormal, class FName* OutBone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "GetBestStickyLocation");

	Params::AdvancedCharacter_GetBestStickyLocation Parms{};

	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (OutNormal != nullptr)
		*OutNormal = std::move(Parms.OutNormal);

	if (OutBone != nullptr)
		*OutBone = Parms.OutBone;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.GetLastDismemberedBoneForceDir
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AAdvancedCharacter::GetLastDismemberedBoneForceDir()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "GetLastDismemberedBoneForceDir");

	Params::AdvancedCharacter_GetLastDismemberedBoneForceDir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.GetLastNetDamageSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AAdvancedCharacter::GetLastNetDamageSource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "GetLastNetDamageSource");

	Params::AdvancedCharacter_GetLastNetDamageSource Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.GetLastNetDamageType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMordhauDamageType                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMordhauDamageType AAdvancedCharacter::GetLastNetDamageType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "GetLastNetDamageType");

	Params::AdvancedCharacter_GetLastNetDamageType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.IsAnimActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAdvancedCharacter::IsAnimActive(class UAnimMontage* Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "IsAnimActive");

	Params::AdvancedCharacter_IsAnimActive Parms{};

	Parms.Montage = Montage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.IsLastDismemberedBoneBluntForce
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAdvancedCharacter::IsLastDismemberedBoneBluntForce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "IsLastDismemberedBoneBluntForce");

	Params::AdvancedCharacter_IsLastDismemberedBoneBluntForce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.IsLastDismemberedBonePartial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAdvancedCharacter::IsLastDismemberedBonePartial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "IsLastDismemberedBonePartial");

	Params::AdvancedCharacter_IsLastDismemberedBonePartial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.Knockback
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Amount                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAdvancedCharacter::Knockback(const struct FVector& Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "Knockback");

	Params::AdvancedCharacter_Knockback Parms{};

	Parms.Amount = std::move(Amount);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.LookUp
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAbsolute                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::LookUp(float Val, bool bIsAbsolute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "LookUp");

	Params::AdvancedCharacter_LookUp Parms{};

	Parms.Val = Val;
	Parms.bIsAbsolute = bIsAbsolute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.LookUpAtRate
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::LookUpAtRate(float Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "LookUpAtRate");

	Params::AdvancedCharacter_LookUpAtRate Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.LookUpNotAbsolute
// (Final, Native, Public)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::LookUpNotAbsolute(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "LookUpNotAbsolute");

	Params::AdvancedCharacter_LookUpNotAbsolute Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.ModifyDamage
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   DamageAmount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMordhauDamageInfo               DamageInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AAdvancedCharacter::ModifyDamage(float DamageAmount, const struct FMordhauDamageInfo& DamageInfo, class AController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "ModifyDamage");

	Params::AdvancedCharacter_ModifyDamage Parms{};

	Parms.DamageAmount = DamageAmount;
	Parms.DamageInfo = std::move(DamageInfo);
	Parms.EventInstigator = EventInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.MordhauTakeDamage
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   DamageAmount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// EMordhauDamageType                      DamageType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   DamageSubType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Agent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AAdvancedCharacter::MordhauTakeDamage(float DamageAmount, const struct FHitResult& Hit, EMordhauDamageType DamageType, uint8 DamageSubType, class AActor* Source, class AActor* Agent, class AController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "MordhauTakeDamage");

	Params::AdvancedCharacter_MordhauTakeDamage Parms{};

	Parms.DamageAmount = DamageAmount;
	Parms.Hit = std::move(Hit);
	Parms.DamageType = DamageType;
	Parms.DamageSubType = DamageSubType;
	Parms.Source = Source;
	Parms.Agent = Agent;
	Parms.EventInstigator = EventInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.MoveForward
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::MoveForward(float Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "MoveForward");

	Params::AdvancedCharacter_MoveForward Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.MoveRight
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::MoveRight(float Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "MoveRight");

	Params::AdvancedCharacter_MoveRight Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.OffsetHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReplicate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::OffsetHealth(int32 Amount, bool bReplicate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "OffsetHealth");

	Params::AdvancedCharacter_OffsetHealth Parms{};

	Parms.Amount = Amount;
	Parms.bReplicate = bReplicate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.OnAfterDied
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMordhauDamageType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SubType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Point                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Agent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::OnAfterDied(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "OnAfterDied");

	Params::AdvancedCharacter_OnAfterDied Parms{};

	Parms.Angle = Angle;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Source = Source;
	Parms.Agent = Agent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.OnCosmeticHit
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMordhauDamageType                      DamageType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SubType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AActor*                           Agent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::OnCosmeticHit(EMordhauDamageType DamageType, uint8 SubType, const struct FHitResult& Hit, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "OnCosmeticHit");

	Params::AdvancedCharacter_OnCosmeticHit Parms{};

	Parms.DamageType = DamageType;
	Parms.SubType = SubType;
	Parms.Hit = std::move(Hit);
	Parms.Agent = Agent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.OnDied
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMordhauDamageType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SubType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Point                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Agent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::OnDied(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "OnDied");

	Params::AdvancedCharacter_OnDied Parms{};

	Parms.Angle = Angle;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Source = Source;
	Parms.Agent = Agent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.OnHealthChanged
// (Event, Public, BlueprintEvent)

void AAdvancedCharacter::OnHealthChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "OnHealthChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.AdvancedCharacter.OnHit
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Tier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SurfaceType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::OnHit(class AActor* Actor, class FName bone, const struct FVector& WorldLocation, uint8 Tier, uint8 SurfaceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "OnHit");

	Params::AdvancedCharacter_OnHit Parms{};

	Parms.Actor = Actor;
	Parms.bone = bone;
	Parms.WorldLocation = std::move(WorldLocation);
	Parms.Tier = Tier;
	Parms.SurfaceType = SurfaceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.OnKilled
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::OnKilled(class AController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "OnKilled");

	Params::AdvancedCharacter_OnKilled Parms{};

	Parms.EventInstigator = EventInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.OnRep_NetDamage
// (Native, Public)

void AAdvancedCharacter::OnRep_NetDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "OnRep_NetDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.OnRep_ReplicatedCharacterFlags
// (Native, Public)
// Parameters:
// uint8                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::OnRep_ReplicatedCharacterFlags(uint8 OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "OnRep_ReplicatedCharacterFlags");

	Params::AdvancedCharacter_OnRep_ReplicatedCharacterFlags Parms{};

	Parms.OldValue = OldValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.OnRep_ReplicatedHealth
// (Native, Public)

void AAdvancedCharacter::OnRep_ReplicatedHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "OnRep_ReplicatedHealth");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.OnRep_ReplicatedLookUpValue
// (Final, Native, Public)

void AAdvancedCharacter::OnRep_ReplicatedLookUpValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "OnRep_ReplicatedLookUpValue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.OnRep_SpawnTurnValue
// (Final, Native, Public)

void AAdvancedCharacter::OnRep_SpawnTurnValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "OnRep_SpawnTurnValue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.OnRep_Team
// (Native, Public)

void AAdvancedCharacter::OnRep_Team()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "OnRep_Team");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.OnTookDamage
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// bool                                    bWillKill                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMordhauDamageType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SubType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Point                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Agent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::OnTookDamage(bool bWillKill, EMordhauDamageType Type, uint8 SubType, const class FName& bone, const struct FVector& Point, class AActor* Source, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "OnTookDamage");

	Params::AdvancedCharacter_OnTookDamage Parms{};

	Parms.bWillKill = bWillKill;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Source = Source;
	Parms.Agent = Agent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.PlayAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopExistingMontages                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimMontage* AAdvancedCharacter::PlayAnim(class UAnimMontage* Montage, float PlayRate, bool bStopExistingMontages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "PlayAnim");

	Params::AdvancedCharacter_PlayAnim Parms{};

	Parms.Montage = Montage;
	Parms.PlayRate = PlayRate;
	Parms.bStopExistingMontages = bStopExistingMontages;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.PlayAnimSequenceBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimSequence*                    Seq                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendIn                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendOut                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAlphaBlendOption                       BlendInOption                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAlphaBlendOption                       BlendOutOption                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendOutTriggerTime                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      CustomIn                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      CustomOut                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopExistingMontages                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimMontage* AAdvancedCharacter::PlayAnimSequenceBP(class UAnimSequence* Seq, float PlayRate, float BlendIn, float BlendOut, EAlphaBlendOption BlendInOption, EAlphaBlendOption BlendOutOption, float BlendOutTriggerTime, class FName Slot, class UCurveFloat* CustomIn, class UCurveFloat* CustomOut, bool bStopExistingMontages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "PlayAnimSequenceBP");

	Params::AdvancedCharacter_PlayAnimSequenceBP Parms{};

	Parms.Seq = Seq;
	Parms.PlayRate = PlayRate;
	Parms.BlendIn = BlendIn;
	Parms.BlendOut = BlendOut;
	Parms.BlendInOption = BlendInOption;
	Parms.BlendOutOption = BlendOutOption;
	Parms.BlendOutTriggerTime = BlendOutTriggerTime;
	Parms.Slot = Slot;
	Parms.CustomIn = CustomIn;
	Parms.CustomOut = CustomOut;
	Parms.bStopExistingMontages = bStopExistingMontages;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.PlayCharacterForceFeeback
// (Native, Public, BlueprintCallable)
// Parameters:
// class UForceFeedbackEffect*             ForceFeedbackEffect                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::PlayCharacterForceFeeback(class UForceFeedbackEffect* ForceFeedbackEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "PlayCharacterForceFeeback");

	Params::AdvancedCharacter_PlayCharacterForceFeeback Parms{};

	Parms.ForceFeedbackEffect = ForceFeedbackEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.PlayCharacterForceFeebackParams
// (Native, Public, BlueprintCallable)
// Parameters:
// class UForceFeedbackEffect*             ForceFeedbackEffect                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLooping                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::PlayCharacterForceFeebackParams(class UForceFeedbackEffect* ForceFeedbackEffect, class FName Tag, bool bLooping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "PlayCharacterForceFeebackParams");

	Params::AdvancedCharacter_PlayCharacterForceFeebackParams Parms{};

	Parms.ForceFeedbackEffect = ForceFeedbackEffect;
	Parms.Tag = Tag;
	Parms.bLooping = bLooping;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.PlayCharacterSound
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USoundBase*                       Sound                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachLocation                         AttachLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAttach                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAttenuation*                Override                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumeMultiplier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PitchMultiplier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* AAdvancedCharacter::PlayCharacterSound(class USoundBase* Sound, class FName bone, const struct FVector& InLocation, EAttachLocation AttachLocation, bool bAttach, class USoundAttenuation* Override, float VolumeMultiplier, float PitchMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "PlayCharacterSound");

	Params::AdvancedCharacter_PlayCharacterSound Parms{};

	Parms.Sound = Sound;
	Parms.bone = bone;
	Parms.InLocation = std::move(InLocation);
	Parms.AttachLocation = AttachLocation;
	Parms.bAttach = bAttach;
	Parms.Override = Override;
	Parms.VolumeMultiplier = VolumeMultiplier;
	Parms.PitchMultiplier = PitchMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.PlayHitEffectParticle
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFindOptimalSpot                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAdvancedCharacter::PlayHitEffectParticle(const struct FVector& Location, const struct FRotator& Rotation, class FName bone, bool bFindOptimalSpot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "PlayHitEffectParticle");

	Params::AdvancedCharacter_PlayHitEffectParticle Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.bone = bone;
	Parms.bFindOptimalSpot = bFindOptimalSpot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.ReceiveMordhauDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitResult                                              (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// EMordhauDamageType                      DamageType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SubDamageType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Agent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::ReceiveMordhauDamage(float Damage, const struct FHitResult& HitResult, EMordhauDamageType DamageType, uint8 SubDamageType, class AActor* Source, class AActor* Agent, class AController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "ReceiveMordhauDamage");

	Params::AdvancedCharacter_ReceiveMordhauDamage Parms{};

	Parms.Damage = Damage;
	Parms.HitResult = std::move(HitResult);
	Parms.DamageType = DamageType;
	Parms.SubDamageType = SubDamageType;
	Parms.Source = Source;
	Parms.Agent = Agent;
	Parms.EventInstigator = EventInstigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.AdvancedCharacter.RegisterMaterialToDissolve
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         Mat                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::RegisterMaterialToDissolve(class UMaterialInstanceDynamic* Mat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "RegisterMaterialToDissolve");

	Params::AdvancedCharacter_RegisterMaterialToDissolve Parms{};

	Parms.Mat = Mat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.RequestMeshEnablePhysics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::RequestMeshEnablePhysics(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "RequestMeshEnablePhysics");

	Params::AdvancedCharacter_RequestMeshEnablePhysics Parms{};

	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.RequestSuicide
// (Native, Public, BlueprintCallable)

void AAdvancedCharacter::RequestSuicide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "RequestSuicide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.RequestTrip
// (Native, Public, BlueprintCallable)

void AAdvancedCharacter::RequestTrip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "RequestTrip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.ResetAdditiveOverrideType
// (Final, Native, Public, BlueprintCallable)

void AAdvancedCharacter::ResetAdditiveOverrideType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "ResetAdditiveOverrideType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.ResetLagInductionTargets
// (Final, Native, Public)

void AAdvancedCharacter::ResetLagInductionTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "ResetLagInductionTargets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.ResetLocationLagInductionTarget
// (Final, Native, Public)

void AAdvancedCharacter::ResetLocationLagInductionTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "ResetLocationLagInductionTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.ResetLookLagInductionTarget
// (Final, Native, Public)

void AAdvancedCharacter::ResetLookLagInductionTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "ResetLookLagInductionTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.ServerLookUp
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                                   NewLookUp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::ServerLookUp(float NewLookUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "ServerLookUp");

	Params::AdvancedCharacter_ServerLookUp Parms{};

	Parms.NewLookUp = NewLookUp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.ServerSuicide
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AAdvancedCharacter::ServerSuicide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "ServerSuicide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.ServerTrip
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AAdvancedCharacter::ServerTrip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "ServerTrip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.SetAdditiveOverrideType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             NewType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::SetAdditiveOverrideType(class FName NewType, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "SetAdditiveOverrideType");

	Params::AdvancedCharacter_SetAdditiveOverrideType Parms{};

	Parms.NewType = NewType;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.SetAnimPosition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewPosition                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::SetAnimPosition(class UAnimMontage* Montage, float NewPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "SetAnimPosition");

	Params::AdvancedCharacter_SetAnimPosition Parms{};

	Parms.Montage = Montage;
	Parms.NewPosition = NewPosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.SetAnimRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewRate                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::SetAnimRate(class UAnimMontage* Montage, float NewRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "SetAnimRate");

	Params::AdvancedCharacter_SetAnimRate Parms{};

	Parms.Montage = Montage;
	Parms.NewRate = NewRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.SetIsRagdollFalling
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsRagdollFalling                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::SetIsRagdollFalling(bool bInIsRagdollFalling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "SetIsRagdollFalling");

	Params::AdvancedCharacter_SetIsRagdollFalling Parms{};

	Parms.bInIsRagdollFalling = bInIsRagdollFalling;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.SetLocationLagInductionTarget
// (Final, Native, Public)
// Parameters:
// float                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ChangeSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::SetLocationLagInductionTarget(float Amount, float ChangeSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "SetLocationLagInductionTarget");

	Params::AdvancedCharacter_SetLocationLagInductionTarget Parms{};

	Parms.Amount = Amount;
	Parms.ChangeSpeed = ChangeSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.SetLookLagInductionTarget
// (Final, Native, Public)
// Parameters:
// float                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ChangeSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::SetLookLagInductionTarget(float Amount, float ChangeSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "SetLookLagInductionTarget");

	Params::AdvancedCharacter_SetLookLagInductionTarget Parms{};

	Parms.Amount = Amount;
	Parms.ChangeSpeed = ChangeSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.SetMaxAnimBlendWeight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxAmount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::SetMaxAnimBlendWeight(class UAnimMontage** Montage, float MaxAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "SetMaxAnimBlendWeight");

	Params::AdvancedCharacter_SetMaxAnimBlendWeight Parms{};

	Parms.MaxAmount = MaxAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Montage != nullptr)
		*Montage = Parms.Montage;
}


// Function Mordhau.AdvancedCharacter.SetOnSmoke
// (Native, Public, BlueprintCallable)
// Parameters:
// class AMasterField*                     SmokeField                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::SetOnSmoke(class AMasterField* SmokeField)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "SetOnSmoke");

	Params::AdvancedCharacter_SetOnSmoke Parms{};

	Parms.SmokeField = SmokeField;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.SetTurnCaps
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   Turn_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LookUp                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::SetTurnCaps(float Turn_0, float LookUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "SetTurnCaps");

	Params::AdvancedCharacter_SetTurnCaps Parms{};

	Parms.Turn_0 = Turn_0;
	Parms.LookUp = LookUp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.SpawnParticlesAttached
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UParticleSystem*                  Particle                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// EAttachLocation                         AttachType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Socket                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UParticleSystemComponent*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UParticleSystemComponent* AAdvancedCharacter::SpawnParticlesAttached(class UParticleSystem* Particle, const struct FVector& Location, const struct FRotator& Rotation, EAttachLocation AttachType, class FName Socket, bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "SpawnParticlesAttached");

	Params::AdvancedCharacter_SpawnParticlesAttached Parms{};

	Parms.Particle = Particle;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.AttachType = AttachType;
	Parms.Socket = Socket;
	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.StartRagdoll
// (Final, Native, Public, BlueprintCallable)

void AAdvancedCharacter::StartRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "StartRagdoll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.StartRagdollWithBlend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   BlendDuration                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::StartRagdollWithBlend(float BlendDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "StartRagdollWithBlend");

	Params::AdvancedCharacter_StartRagdollWithBlend Parms{};

	Parms.BlendDuration = BlendDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.StopAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   FadeOut                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::StopAnim(float FadeOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "StopAnim");

	Params::AdvancedCharacter_StopAnim Parms{};

	Parms.FadeOut = FadeOut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.StopCharacterForceFeeback
// (Native, Public, BlueprintCallable)
// Parameters:
// class UForceFeedbackEffect*             ForceFeedbackEffect                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::StopCharacterForceFeeback(class UForceFeedbackEffect* ForceFeedbackEffect, class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "StopCharacterForceFeeback");

	Params::AdvancedCharacter_StopCharacterForceFeeback Parms{};

	Parms.ForceFeedbackEffect = ForceFeedbackEffect;
	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.StopHealthRegen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ExtraTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::StopHealthRegen(float ExtraTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "StopHealthRegen");

	Params::AdvancedCharacter_StopHealthRegen Parms{};

	Parms.ExtraTime = ExtraTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.StopMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeOut                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::StopMontage(class UAnimMontage* Montage, float FadeOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "StopMontage");

	Params::AdvancedCharacter_StopMontage Parms{};

	Parms.Montage = Montage;
	Parms.FadeOut = FadeOut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.StopRegen
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   ExtraTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::StopRegen(float ExtraTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "StopRegen");

	Params::AdvancedCharacter_StopRegen Parms{};

	Parms.ExtraTime = ExtraTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.Suicide
// (Native, Public, BlueprintCallable)

void AAdvancedCharacter::Suicide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "Suicide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.TraceSphericalLimbs
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          TraceStart                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          TraceEnd                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       OutResult                                              (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAdvancedCharacter::TraceSphericalLimbs(const struct FVector& TraceStart, const struct FVector& TraceEnd, struct FHitResult* OutResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "TraceSphericalLimbs");

	Params::AdvancedCharacter_TraceSphericalLimbs Parms{};

	Parms.TraceStart = std::move(TraceStart);
	Parms.TraceEnd = std::move(TraceEnd);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.Trip
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAdvancedCharacter::Trip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "Trip");

	Params::AdvancedCharacter_Trip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.Turn
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAbsolute                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::Turn(float Val, bool bIsAbsolute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "Turn");

	Params::AdvancedCharacter_Turn Parms{};

	Parms.Val = Val;
	Parms.bIsAbsolute = bIsAbsolute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.TurnAtRate
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::TurnAtRate(float Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "TurnAtRate");

	Params::AdvancedCharacter_TurnAtRate Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.TurnNotAbsolute
// (Final, Native, Public)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedCharacter::TurnNotAbsolute(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "TurnNotAbsolute");

	Params::AdvancedCharacter_TurnNotAbsolute Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AdvancedCharacter.GetControllerIncludingVehicle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AController* AAdvancedCharacter::GetControllerIncludingVehicle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "GetControllerIncludingVehicle");

	Params::AdvancedCharacter_GetControllerIncludingVehicle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.GetDistanceIntoSmokeField
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AAdvancedCharacter::GetDistanceIntoSmokeField() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "GetDistanceIntoSmokeField");

	Params::AdvancedCharacter_GetDistanceIntoSmokeField Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.GetDistanceIntoSmokeFieldSmoothed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AAdvancedCharacter::GetDistanceIntoSmokeFieldSmoothed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "GetDistanceIntoSmokeFieldSmoothed");

	Params::AdvancedCharacter_GetDistanceIntoSmokeFieldSmoothed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.GetIsDead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAdvancedCharacter::GetIsDead() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "GetIsDead");

	Params::AdvancedCharacter_GetIsDead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.GetLookUpValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AAdvancedCharacter::GetLookUpValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "GetLookUpValue");

	Params::AdvancedCharacter_GetLookUpValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.GetMotion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMordhauMotion*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauMotion* AAdvancedCharacter::GetMotion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "GetMotion");

	Params::AdvancedCharacter_GetMotion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.GetRawLookUpValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AAdvancedCharacter::GetRawLookUpValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "GetRawLookUpValue");

	Params::AdvancedCharacter_GetRawLookUpValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.IsAirborne
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAdvancedCharacter::IsAirborne() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "IsAirborne");

	Params::AdvancedCharacter_IsAirborne Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.IsLocallyControlledIncludingVehicle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAdvancedCharacter::IsLocallyControlledIncludingVehicle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "IsLocallyControlledIncludingVehicle");

	Params::AdvancedCharacter_IsLocallyControlledIncludingVehicle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.IsLocallyControlledOrUncontrolled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAdvancedCharacter::IsLocallyControlledOrUncontrolled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "IsLocallyControlledOrUncontrolled");

	Params::AdvancedCharacter_IsLocallyControlledOrUncontrolled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.IsLocallyPlayerControlled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAdvancedCharacter::IsLocallyPlayerControlled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "IsLocallyPlayerControlled");

	Params::AdvancedCharacter_IsLocallyPlayerControlled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.IsLocallyPlayerControlledIncludingVehicle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAdvancedCharacter::IsLocallyPlayerControlledIncludingVehicle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "IsLocallyPlayerControlledIncludingVehicle");

	Params::AdvancedCharacter_IsLocallyPlayerControlledIncludingVehicle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.IsPlayerControlledIncludingVehicle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAdvancedCharacter::IsPlayerControlledIncludingVehicle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "IsPlayerControlledIncludingVehicle");

	Params::AdvancedCharacter_IsPlayerControlledIncludingVehicle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.AdvancedCharacter.IsViewTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAdvancedCharacter::IsViewTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedCharacter", "IsViewTarget");

	Params::AdvancedCharacter_IsViewTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.CustomizationReplicationActor.AssignDataFromProfile
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterProfile                Profile                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ACustomizationReplicationActor::AssignDataFromProfile(const struct FCharacterProfile& Profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomizationReplicationActor", "AssignDataFromProfile");

	Params::CustomizationReplicationActor_AssignDataFromProfile Parms{};

	Parms.Profile = std::move(Profile);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CustomizationReplicationActor.IsUpToDate
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACustomizationReplicationActor::IsUpToDate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomizationReplicationActor", "IsUpToDate");

	Params::CustomizationReplicationActor_IsUpToDate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.CustomizationReplicationActor.OnRep_ReplicatedAppearanceCustomization
// (Final, Native, Public)

void ACustomizationReplicationActor::OnRep_ReplicatedAppearanceCustomization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomizationReplicationActor", "OnRep_ReplicatedAppearanceCustomization");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CustomizationReplicationActor.OnRep_ReplicatedDefaultEquipmentId
// (Final, Native, Public)

void ACustomizationReplicationActor::OnRep_ReplicatedDefaultEquipmentId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomizationReplicationActor", "OnRep_ReplicatedDefaultEquipmentId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CustomizationReplicationActor.OnRep_ReplicatedFaceBonesRotate
// (Final, Native, Public)

void ACustomizationReplicationActor::OnRep_ReplicatedFaceBonesRotate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomizationReplicationActor", "OnRep_ReplicatedFaceBonesRotate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CustomizationReplicationActor.OnRep_ReplicatedFaceBonesScale
// (Final, Native, Public)

void ACustomizationReplicationActor::OnRep_ReplicatedFaceBonesScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomizationReplicationActor", "OnRep_ReplicatedFaceBonesScale");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CustomizationReplicationActor.OnRep_ReplicatedFaceBonesTranslate
// (Final, Native, Public)

void ACustomizationReplicationActor::OnRep_ReplicatedFaceBonesTranslate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomizationReplicationActor", "OnRep_ReplicatedFaceBonesTranslate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CustomizationReplicationActor.OnRep_ReplicatedSkillsCustomization
// (Final, Native, Public)

void ACustomizationReplicationActor::OnRep_ReplicatedSkillsCustomization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomizationReplicationActor", "OnRep_ReplicatedSkillsCustomization");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CustomizationReplicationActor.OnRep_ReplicatedWearableColor1
// (Final, Native, Public)

void ACustomizationReplicationActor::OnRep_ReplicatedWearableColor1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomizationReplicationActor", "OnRep_ReplicatedWearableColor1");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CustomizationReplicationActor.OnRep_ReplicatedWearableColor2
// (Final, Native, Public)

void ACustomizationReplicationActor::OnRep_ReplicatedWearableColor2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomizationReplicationActor", "OnRep_ReplicatedWearableColor2");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CustomizationReplicationActor.OnRep_ReplicatedWearableId
// (Final, Native, Public)

void ACustomizationReplicationActor::OnRep_ReplicatedWearableId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomizationReplicationActor", "OnRep_ReplicatedWearableId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CustomizationReplicationActor.OnRep_ReplicatedWearablePattern
// (Final, Native, Public)

void ACustomizationReplicationActor::OnRep_ReplicatedWearablePattern()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomizationReplicationActor", "OnRep_ReplicatedWearablePattern");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CustomizationReplicationActor.RegisterCharacter
// (Final, Native, Public)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACustomizationReplicationActor::RegisterCharacter(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomizationReplicationActor", "RegisterCharacter");

	Params::CustomizationReplicationActor_RegisterCharacter Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CustomizationReplicationActor.TriggerUpdateIfUpToDate
// (Final, Native, Protected)

void ACustomizationReplicationActor::TriggerUpdateIfUpToDate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomizationReplicationActor", "TriggerUpdateIfUpToDate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CustomizationReplicationActor.UnregisterCharacter
// (Final, Native, Public)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACustomizationReplicationActor::UnregisterCharacter(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomizationReplicationActor", "UnregisterCharacter");

	Params::CustomizationReplicationActor_UnregisterCharacter Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CustomizationReplicationActor.UpdateCharacterProfile
// (Final, Native, Public)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACustomizationReplicationActor::UpdateCharacterProfile(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomizationReplicationActor", "UpdateCharacterProfile");

	Params::CustomizationReplicationActor_UpdateCharacterProfile Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauNewsWidget.HandleAndBroadcastErrorMessage
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ResponseCode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ElapsedTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauNewsWidget::HandleAndBroadcastErrorMessage(const class FString& Message, int32 ResponseCode, int32 ElapsedTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauNewsWidget", "HandleAndBroadcastErrorMessage");

	Params::MordhauNewsWidget_HandleAndBroadcastErrorMessage Parms{};

	Parms.Message = std::move(Message);
	Parms.ResponseCode = ResponseCode;
	Parms.ElapsedTime = ElapsedTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauNewsWidget.SendHTTPRequest
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauNewsWidget::SendHTTPRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauNewsWidget", "SendHTTPRequest");

	Params::MordhauNewsWidget_SendHTTPRequest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.DamageableComponent.ModifyDamage
// (Final, Native, Public, HasOutParams)
// Parameters:
// float                                   DamageAmount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMordhauDamageInfo               DamageInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UDamageableComponent::ModifyDamage(float DamageAmount, const struct FMordhauDamageInfo& DamageInfo, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DamageableComponent", "ModifyDamage");

	Params::DamageableComponent_ModifyDamage Parms{};

	Parms.DamageAmount = DamageAmount;
	Parms.DamageInfo = std::move(DamageInfo);
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.DamageableComponent.OnKilled
// (Final, Native, Public)

void UDamageableComponent::OnKilled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DamageableComponent", "OnKilled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.DamageableComponent.OnPostTakeDamage
// (Final, Native, Public, HasOutParams)
// Parameters:
// float                                   DamageAmount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMordhauDamageInfo               DamageInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDamageableComponent::OnPostTakeDamage(float DamageAmount, const struct FMordhauDamageInfo& DamageInfo, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DamageableComponent", "OnPostTakeDamage");

	Params::DamageableComponent_OnPostTakeDamage Parms{};

	Parms.DamageAmount = DamageAmount;
	Parms.DamageInfo = std::move(DamageInfo);
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.DamageableComponent.OnRep_NetDamage
// (Native, Public)

void UDamageableComponent::OnRep_NetDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DamageableComponent", "OnRep_NetDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.DamageableComponent.OnTakeDamage
// (Final, Native, Public, HasOutParams)
// Parameters:
// float                                   DamageAmount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMordhauDamageInfo               DamageInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UDamageableComponent::OnTakeDamage(float DamageAmount, const struct FMordhauDamageInfo& DamageInfo, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DamageableComponent", "OnTakeDamage");

	Params::DamageableComponent_OnTakeDamage Parms{};

	Parms.DamageAmount = DamageAmount;
	Parms.DamageInfo = std::move(DamageInfo);
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.DamageableComponent.OnTookDamage
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// bool                                    bWillKill                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMordhauDamageType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SubType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Point                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Agent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDamageableComponent::OnTookDamage(bool bWillKill, EMordhauDamageType Type, uint8 SubType, const class FName& bone, const struct FVector& Point, class AActor* Source, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DamageableComponent", "OnTookDamage");

	Params::DamageableComponent_OnTookDamage Parms{};

	Parms.bWillKill = bWillKill;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Source = Source;
	Parms.Agent = Agent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCameraComponent.ComputeCameraPOV
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FPOV                             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPOV UMordhauCameraComponent::ComputeCameraPOV()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCameraComponent", "ComputeCameraPOV");

	Params::MordhauCameraComponent_ComputeCameraPOV Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCameraComponent.UpdateCamera
// (Native, Event, Public, BlueprintEvent)

void UMordhauCameraComponent::UpdateCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCameraComponent", "UpdateCamera");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCameraComponent.IsBlendingFromMapView
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauCameraComponent::IsBlendingFromMapView() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCameraComponent", "IsBlendingFromMapView");

	Params::MordhauCameraComponent_IsBlendingFromMapView Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauActor.OnCooperativeHoldProgressUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Progress                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauActor::OnCooperativeHoldProgressUpdated(float Progress, float OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauActor", "OnCooperativeHoldProgressUpdated");

	Params::MordhauActor_OnCooperativeHoldProgressUpdated Parms{};

	Parms.Progress = Progress;
	Parms.OldValue = OldValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauActor.OnHoldCountChanged
// (Event, Public, BlueprintEvent)

void AMordhauActor::OnHoldCountChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauActor", "OnHoldCountChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauActor.OnLocalPlayerUsedToKillOther
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMordhauDamageType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SubType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Point                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauActor::OnLocalPlayerUsedToKillOther(class AAdvancedCharacter* Character, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauActor", "OnLocalPlayerUsedToKillOther");

	Params::MordhauActor_OnLocalPlayerUsedToKillOther Parms{};

	Parms.Character = Character;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Source = Source;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauActor.OnPostDismemberedOther
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASeparatedBodyPart*               Part                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauActor::OnPostDismemberedOther(class FName bone, class ASeparatedBodyPart* Part)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauActor", "OnPostDismemberedOther");

	Params::MordhauActor_OnPostDismemberedOther Parms{};

	Parms.bone = bone;
	Parms.Part = Part;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauActor.OnReceiveCosmeticHit
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Agent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttackMove                             Move                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AMordhauActor::OnReceiveCosmeticHit(class AActor* Source, class AActor* Agent, EAttackMove Move, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauActor", "OnReceiveCosmeticHit");

	Params::MordhauActor_OnReceiveCosmeticHit Parms{};

	Parms.Source = Source;
	Parms.Agent = Agent;
	Parms.Move = Move;
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauActor.OnRep_CooperativeHoldCount
// (Final, Native, Public)

void AMordhauActor::OnRep_CooperativeHoldCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauActor", "OnRep_CooperativeHoldCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauActor.OnRep_CooperativeHoldProgress
// (Final, Native, Public)

void AMordhauActor::OnRep_CooperativeHoldProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauActor", "OnRep_CooperativeHoldProgress");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauActor.OnRep_ReplicatedThud
// (Native, Public)

void AMordhauActor::OnRep_ReplicatedThud()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauActor", "OnRep_ReplicatedThud");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauActor.OnThud
// (Native, Event, Public, BlueprintEvent)

void AMordhauActor::OnThud()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauActor", "OnThud");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauActor.OnUsedToKillOther
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMordhauDamageType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SubType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Point                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauActor::OnUsedToKillOther(class AAdvancedCharacter* Character, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauActor", "OnUsedToKillOther");

	Params::MordhauActor_OnUsedToKillOther Parms{};

	Parms.Character = Character;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Source = Source;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauActor.PostInteractionWidgetCreated
// (Event, Public, BlueprintEvent)

void AMordhauActor::PostInteractionWidgetCreated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauActor", "PostInteractionWidgetCreated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauActor.ResetCooperativeProgress
// (Final, Native, Public, BlueprintCallable)

void AMordhauActor::ResetCooperativeProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauActor", "ResetCooperativeProgress");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauActor.UpdateThudVelocity
// (Final, Native, Public)
// Parameters:
// float                                   NewThudVelocity                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauActor::UpdateThudVelocity(float NewThudVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauActor", "UpdateThudVelocity");

	Params::MordhauActor_UpdateThudVelocity Parms{};

	Parms.NewThudVelocity = NewThudVelocity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauActor.GetCooperativeHoldProgress
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AMordhauActor::GetCooperativeHoldProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauActor", "GetCooperativeHoldProgress");

	Params::MordhauActor_GetCooperativeHoldProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauActor.IsAnyInstanceOwner
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AMordhauPlayerController*> ControllerArray                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauActor::IsAnyInstanceOwner(const TArray<class AMordhauPlayerController*>& ControllerArray) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauActor", "IsAnyInstanceOwner");

	Params::MordhauActor_IsAnyInstanceOwner Parms{};

	Parms.ControllerArray = std::move(ControllerArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauEquipment.AssignCustomization
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FEquipmentCustomization          Customization                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// uint8                                   CustomizationEmblem                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   CustomizationEmblemColor1                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   CustomizationEmblemColor2                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::AssignCustomization(const struct FEquipmentCustomization& Customization, uint8 CustomizationEmblem, uint8 CustomizationEmblemColor1, uint8 CustomizationEmblemColor2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "AssignCustomization");

	Params::MordhauEquipment_AssignCustomization Parms{};

	Parms.Customization = std::move(Customization);
	Parms.CustomizationEmblem = CustomizationEmblem;
	Parms.CustomizationEmblemColor1 = CustomizationEmblemColor1;
	Parms.CustomizationEmblemColor2 = CustomizationEmblemColor2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.AssignCustomizationToProjectile
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauProjectile*               Projectile                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::AssignCustomizationToProjectile(class AMordhauProjectile* Projectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "AssignCustomizationToProjectile");

	Params::MordhauEquipment_AssignCustomizationToProjectile Parms{};

	Parms.Projectile = Projectile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.ComputeAccurateBounds
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FBoxSphereBounds                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FBoxSphereBounds AMordhauEquipment::ComputeAccurateBounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "ComputeAccurateBounds");

	Params::MordhauEquipment_ComputeAccurateBounds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauEquipment.DestroyPhysicsProxy
// (Final, Native, Public, BlueprintCallable)

void AMordhauEquipment::DestroyPhysicsProxy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "DestroyPhysicsProxy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.EquipmentCommand
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Command                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::EquipmentCommand(int32 Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "EquipmentCommand");

	Params::MordhauEquipment_EquipmentCommand Parms{};

	Parms.Command = Command;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauEquipment.FindCurrentHolsterInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FEquipmentHolsterInfo            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEquipmentHolsterInfo AMordhauEquipment::FindCurrentHolsterInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "FindCurrentHolsterInfo");

	Params::MordhauEquipment_FindCurrentHolsterInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauEquipment.FireProjectile
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Origin                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Orientation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AController*                      OwningController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ExpectedDelay                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::FireProjectile(const struct FVector& Origin, const struct FRotator& Orientation, class AController* OwningController, float ExpectedDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "FireProjectile");

	Params::MordhauEquipment_FireProjectile Parms{};

	Parms.Origin = std::move(Origin);
	Parms.Orientation = std::move(Orientation);
	Parms.OwningController = OwningController;
	Parms.ExpectedDelay = ExpectedDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.FireProjectile_Internal
// (Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// struct FVector                          InOrigin                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InOrientation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AController*                      Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ExpectedDelay                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauProjectile*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauProjectile* AMordhauEquipment::FireProjectile_Internal(const struct FVector& InOrigin, const struct FRotator& InOrientation, class AController* Controller, float ExpectedDelay, bool bIsLocal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "FireProjectile_Internal");

	Params::MordhauEquipment_FireProjectile_Internal Parms{};

	Parms.InOrigin = std::move(InOrigin);
	Parms.InOrientation = std::move(InOrientation);
	Parms.Controller = Controller;
	Parms.ExpectedDelay = ExpectedDelay;
	Parms.bIsLocal = bIsLocal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauEquipment.GetRandomCustomization
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bOnlyColors                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEquipmentCustomization          ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEquipmentCustomization AMordhauEquipment::GetRandomCustomization(bool bOnlyColors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "GetRandomCustomization");

	Params::MordhauEquipment_GetRandomCustomization Parms{};

	Parms.bOnlyColors = bOnlyColors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauEquipment.GetWasSeen
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauEquipment::GetWasSeen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "GetWasSeen");

	Params::MordhauEquipment_GetWasSeen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauEquipment.GetWasSkinSeen
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   SkinIdx                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauEquipment::GetWasSkinSeen(int32 SkinIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "GetWasSkinSeen");

	Params::MordhauEquipment_GetWasSkinSeen Parms{};

	Parms.SkinIdx = SkinIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauEquipment.LateTick
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::LateTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "LateTick");

	Params::MordhauEquipment_LateTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.LocalPlayerLateTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::LocalPlayerLateTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "LocalPlayerLateTick");

	Params::MordhauEquipment_LocalPlayerLateTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauEquipment.LocalPlayerTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::LocalPlayerTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "LocalPlayerTick");

	Params::MordhauEquipment_LocalPlayerTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauEquipment.MarkSeen
// (Final, Native, Public, BlueprintCallable)

void AMordhauEquipment::MarkSeen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "MarkSeen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.MarkSkinSeen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SkinIdx                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::MarkSkinSeen(int32 SkinIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "MarkSkinSeen");

	Params::MordhauEquipment_MarkSkinSeen Parms{};

	Parms.SkinIdx = SkinIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.OnAmmoChanged
// (Native, Event, Public, BlueprintEvent)

void AMordhauEquipment::OnAmmoChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnAmmoChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.OnDropped
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::OnDropped(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnDropped");

	Params::MordhauEquipment_OnDropped Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.OnEquipped
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::OnEquipped(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnEquipped");

	Params::MordhauEquipment_OnEquipped Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.OnHolstered
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::OnHolstered(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnHolstered");

	Params::MordhauEquipment_OnHolstered Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.OnHolsteredOrDropped
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::OnHolsteredOrDropped(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnHolsteredOrDropped");

	Params::MordhauEquipment_OnHolsteredOrDropped Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.OnLoadedChanged
// (Native, Event, Public, BlueprintEvent)

void AMordhauEquipment::OnLoadedChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnLoadedChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.OnPartsChanged
// (Native, Public, BlueprintCallable)

void AMordhauEquipment::OnPartsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnPartsChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.OnPickedUp
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::OnPickedUp(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnPickedUp");

	Params::MordhauEquipment_OnPickedUp Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.OnRep_Ammo
// (Final, Native, Public)

void AMordhauEquipment::OnRep_Ammo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnRep_Ammo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.OnRep_IsLoaded
// (Final, Native, Public)

void AMordhauEquipment::OnRep_IsLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnRep_IsLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.OnRep_IsUsingAlternateMode
// (Final, Native, Public)

void AMordhauEquipment::OnRep_IsUsingAlternateMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnRep_IsUsingAlternateMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.OnRep_ReplicatedColors
// (Final, Native, Public)

void AMordhauEquipment::OnRep_ReplicatedColors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnRep_ReplicatedColors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.OnRep_ReplicatedEmblem
// (Final, Native, Public)

void AMordhauEquipment::OnRep_ReplicatedEmblem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnRep_ReplicatedEmblem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.OnRep_ReplicatedEmblemColors
// (Final, Native, Public)

void AMordhauEquipment::OnRep_ReplicatedEmblemColors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnRep_ReplicatedEmblemColors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.OnRep_ReplicatedPartsId
// (Final, Native, Public)

void AMordhauEquipment::OnRep_ReplicatedPartsId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnRep_ReplicatedPartsId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.OnRep_ReplicatedPattern
// (Final, Native, Public)

void AMordhauEquipment::OnRep_ReplicatedPattern()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnRep_ReplicatedPattern");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.OnRep_ReplicatedSkin
// (Final, Native, Public)

void AMordhauEquipment::OnRep_ReplicatedSkin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnRep_ReplicatedSkin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.OnRequestFire
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauEquipment::OnRequestFire(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnRequestFire");

	Params::MordhauEquipment_OnRequestFire Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauEquipment.OnRequestModeSwitch
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauEquipment::OnRequestModeSwitch(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "OnRequestModeSwitch");

	Params::MordhauEquipment_OnRequestModeSwitch Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauEquipment.RebuildEquipment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDoOnlyQuickJob                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::RebuildEquipment(bool bDoOnlyQuickJob)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "RebuildEquipment");

	Params::MordhauEquipment_RebuildEquipment Parms{};

	Parms.bDoOnlyQuickJob = bDoOnlyQuickJob;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.RebuildIfAllReplicated
// (Final, Native, Public)

void AMordhauEquipment::RebuildIfAllReplicated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "RebuildIfAllReplicated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.RequestAttack
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EAttackMove                             Move                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::RequestAttack(EAttackMove Move, float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "RequestAttack");

	Params::MordhauEquipment_RequestAttack Parms{};

	Parms.Move = Move;
	Parms.Angle = Angle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.ResetMeshRelativeTransform
// (Final, Native, Public, BlueprintCallable)

void AMordhauEquipment::ResetMeshRelativeTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "ResetMeshRelativeTransform");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.RestockOtherEquipmentOnCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauEquipment::RestockOtherEquipmentOnCharacter(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "RestockOtherEquipmentOnCharacter");

	Params::MordhauEquipment_RestockOtherEquipmentOnCharacter Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauEquipment.SetAmmo
// (Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewAmmo                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::SetAmmo(uint8 NewAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "SetAmmo");

	Params::MordhauEquipment_SetAmmo Parms{};

	Parms.NewAmmo = NewAmmo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.SetColors
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<uint8>                           NewColors                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AMordhauEquipment::SetColors(const TArray<uint8>& NewColors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "SetColors");

	Params::MordhauEquipment_SetColors Parms{};

	Parms.NewColors = std::move(NewColors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.SetLoaded
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewLoaded                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::SetLoaded(bool bNewLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "SetLoaded");

	Params::MordhauEquipment_SetLoaded Parms{};

	Parms.bNewLoaded = bNewLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.SetParts
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<uint8>                           NewPartsId                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bRebuild                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::SetParts(const TArray<uint8>& NewPartsId, bool bRebuild)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "SetParts");

	Params::MordhauEquipment_SetParts Parms{};

	Parms.NewPartsId = std::move(NewPartsId);
	Parms.bRebuild = bRebuild;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.SetPartsUseAuxiliaryMesh
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::SetPartsUseAuxiliaryMesh(bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "SetPartsUseAuxiliaryMesh");

	Params::MordhauEquipment_SetPartsUseAuxiliaryMesh Parms{};

	Parms.bNewValue = bNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.ShouldShine
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauEquipment::ShouldShine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "ShouldShine");

	Params::MordhauEquipment_ShouldShine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauEquipment.SwitchMode
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AMordhauEquipment::SwitchMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "SwitchMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.UpdateCapsuleShadowStatus
// (Final, Native, Public, BlueprintCallable)

void AMordhauEquipment::UpdateCapsuleShadowStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "UpdateCapsuleShadowStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.UpdateEquipmentState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AMordhauEquipment::UpdateEquipmentState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "UpdateEquipmentState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.UpdateEquipmentVisualState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AMordhauEquipment::UpdateEquipmentVisualState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "UpdateEquipmentVisualState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.UpdateInteractionCollision
// (Final, Native, Public, BlueprintCallable)

void AMordhauEquipment::UpdateInteractionCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "UpdateInteractionCollision");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.UpdateMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           SkeletalMeshComp                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauEquipment::UpdateMaterial(class USkeletalMeshComponent* SkeletalMeshComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "UpdateMaterial");

	Params::MordhauEquipment_UpdateMaterial Parms{};

	Parms.SkeletalMeshComp = SkeletalMeshComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauEquipment.BelongsToCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauEquipment::BelongsToCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "BelongsToCharacter");

	Params::MordhauEquipment_BelongsToCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauEquipment.CanPerformAttack
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttackMove                             Move                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauEquipment::CanPerformAttack(class AMordhauCharacter* Character, EAttackMove Move) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "CanPerformAttack");

	Params::MordhauEquipment_CanPerformAttack Parms{};

	Parms.Character = Character;
	Parms.Move = Move;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauEquipment.GetAmmo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 AMordhauEquipment::GetAmmo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "GetAmmo");

	Params::MordhauEquipment_GetAmmo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauEquipment.GetCurrentMaxAmmo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 AMordhauEquipment::GetCurrentMaxAmmo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "GetCurrentMaxAmmo");

	Params::MordhauEquipment_GetCurrentMaxAmmo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauEquipment.GetParentCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMordhauCharacter*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauCharacter* AMordhauEquipment::GetParentCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipment", "GetParentCharacter");

	Params::MordhauEquipment_GetParentCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauWeapon.AddTraceEntryData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauWeapon::AddTraceEntryData(class AActor* Actor, class FName bone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauWeapon", "AddTraceEntryData");

	Params::MordhauWeapon_AddTraceEntryData Parms{};

	Parms.Actor = Actor;
	Parms.bone = bone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauWeapon.GetAdditionalTrace
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          TraceStart                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          TraceEnd                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauWeapon::GetAdditionalTrace(struct FVector* TraceStart, struct FVector* TraceEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauWeapon", "GetAdditionalTrace");

	Params::MordhauWeapon_GetAdditionalTrace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TraceStart != nullptr)
		*TraceStart = std::move(Parms.TraceStart);

	if (TraceEnd != nullptr)
		*TraceEnd = std::move(Parms.TraceEnd);
}


// Function Mordhau.MordhauWeapon.GetBaseAttackInfo
// (Native, Public, BlueprintCallable)
// Parameters:
// EAttackMove                             Move                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAttackInfo                ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FAttackInfo AMordhauWeapon::GetBaseAttackInfo(EAttackMove Move)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauWeapon", "GetBaseAttackInfo");

	Params::MordhauWeapon_GetBaseAttackInfo Parms{};

	Parms.Move = Move;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauWeapon.GetTrace
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          TraceStart                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          TraceEnd                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauWeapon::GetTrace(struct FVector* TraceStart, struct FVector* TraceEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauWeapon", "GetTrace");

	Params::MordhauWeapon_GetTrace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TraceStart != nullptr)
		*TraceStart = std::move(Parms.TraceStart);

	if (TraceEnd != nullptr)
		*TraceEnd = std::move(Parms.TraceEnd);
}


// Function Mordhau.MordhauWeapon.IncreaseBloodLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauWeapon::IncreaseBloodLevel(float Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauWeapon", "IncreaseBloodLevel");

	Params::MordhauWeapon_IncreaseBloodLevel Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauWeapon.IsAllowedToAddForce
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauWeapon::IsAllowedToAddForce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauWeapon", "IsAllowedToAddForce");

	Params::MordhauWeapon_IsAllowedToAddForce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauWeapon.OnAttackStarted
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EAttackMove                             Move                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauWeapon::OnAttackStarted(EAttackMove Move, float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauWeapon", "OnAttackStarted");

	Params::MordhauWeapon_OnAttackStarted Parms{};

	Parms.Move = Move;
	Parms.Angle = Angle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauWeapon.OnAttackStopped
// (Native, Event, Public, BlueprintEvent)

void AMordhauWeapon::OnAttackStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauWeapon", "OnAttackStopped");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauWeapon.OnBlocked
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FBlockResult                     Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EAttackMove                             Move                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauWeapon::OnBlocked(const struct FBlockResult& Result, EAttackMove Move)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauWeapon", "OnBlocked");

	Params::MordhauWeapon_OnBlocked Parms{};

	Parms.Result = std::move(Result);
	Parms.Move = Move;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauWeapon.OnBlockStarted
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EBlockType                              Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauWeapon::OnBlockStarted(EBlockType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauWeapon", "OnBlockStarted");

	Params::MordhauWeapon_OnBlockStarted Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauWeapon.OnCosmeticHit
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// EAttackMove                             Move                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AMordhauWeapon::OnCosmeticHit(EAttackMove Move, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauWeapon", "OnCosmeticHit");

	Params::MordhauWeapon_OnCosmeticHit Parms{};

	Parms.Move = Move;
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauWeapon.OnHit
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttackMove                             Move                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Tier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SurfaceType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauWeapon::OnHit(class AActor* Actor, EAttackMove Move, class FName bone, const struct FVector& WorldLocation, uint8 Tier, uint8 SurfaceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauWeapon", "OnHit");

	Params::MordhauWeapon_OnHit Parms{};

	Parms.Actor = Actor;
	Parms.Move = Move;
	Parms.bone = bone;
	Parms.WorldLocation = std::move(WorldLocation);
	Parms.Tier = Tier;
	Parms.SurfaceType = SurfaceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauWeapon.OnWasBlocked
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FBlockResult                     Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EAttackMove                             Move                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauWeapon::OnWasBlocked(const struct FBlockResult& Result, EAttackMove Move)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauWeapon", "OnWasBlocked");

	Params::MordhauWeapon_OnWasBlocked Parms{};

	Parms.Result = std::move(Result);
	Parms.Move = Move;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauWeapon.RequestBlock
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EBlockType                              BlockType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowFTP                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauWeapon::RequestBlock(EBlockType BlockType, bool bAllowFTP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauWeapon", "RequestBlock");

	Params::MordhauWeapon_RequestBlock Parms{};

	Parms.BlockType = BlockType;
	Parms.bAllowFTP = bAllowFTP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauWeapon.SetIsAllowedToAddForce
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsAllowed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauWeapon::SetIsAllowedToAddForce(bool bIsAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauWeapon", "SetIsAllowedToAddForce");

	Params::MordhauWeapon_SetIsAllowedToAddForce Parms{};

	Parms.bIsAllowed = bIsAllowed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauWeapon.UpdateTrail
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   Weight                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauWeapon::UpdateTrail(float Weight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauWeapon", "UpdateTrail");

	Params::MordhauWeapon_UpdateTrail Parms{};

	Parms.Weight = Weight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.VirtualWeapon.InitializeVirtualWeapon
// (Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVirtualWeapon::InitializeVirtualWeapon(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VirtualWeapon", "InitializeVirtualWeapon");

	Params::VirtualWeapon_InitializeVirtualWeapon Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ArmsWearable.AddHandsWearable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UClass>             Wearable                                               (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArmsWearable::AddHandsWearable(TSoftClassPtr<class UClass> Wearable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmsWearable", "AddHandsWearable");

	Params::ArmsWearable_AddHandsWearable Parms{};

	Parms.Wearable = Wearable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ArmsWearable.GetHandsWearable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UMordhauWearable>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UMordhauWearable> UArmsWearable::GetHandsWearable(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmsWearable", "GetHandsWearable");

	Params::ArmsWearable_GetHandsWearable Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.ArmsWearable.GetHandsWearablesNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UArmsWearable::GetHandsWearablesNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmsWearable", "GetHandsWearablesNum");

	Params::ArmsWearable_GetHandsWearablesNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.GetMod.GetMod
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ModId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGetMod*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGetMod* UGetMod::GetMod(int32 ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GetMod", "GetMod");

	Params::GetMod_GetMod Parms{};

	Parms.ModId = ModId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.SubField.BeginSubFieldDeactivation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ASubField::BeginSubFieldDeactivation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubField", "BeginSubFieldDeactivation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.SubField.DeactivateSubField
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ASubField::DeactivateSubField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubField", "DeactivateSubField");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.SubField.GetMaster
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMasterField*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMasterField* ASubField::GetMaster()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubField", "GetMaster");

	Params::SubField_GetMaster Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.SubField.SetSubFieldHidden
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASubField::SetSubFieldHidden(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubField", "SetSubFieldHidden");

	Params::SubField_SetSubFieldHidden Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.BotProfile.AssignToController
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauAIController*             Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBotProfile::AssignToController(class AMordhauAIController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BotProfile", "AssignToController");

	Params::BotProfile_AssignToController Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Bounds.EnteredOutOfBoundsArea
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          WCO                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBounds::EnteredOutOfBoundsArea(const class UObject* WCO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bounds", "EnteredOutOfBoundsArea");

	Params::Bounds_EnteredOutOfBoundsArea Parms{};

	Parms.WCO = WCO;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Bounds.LeftOutOfBoundsArea
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IBounds::LeftOutOfBoundsArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bounds", "LeftOutOfBoundsArea");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Bounds.OnExceededTimeOutOfBounds
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IBounds::OnExceededTimeOutOfBounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bounds", "OnExceededTimeOutOfBounds");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Bounds.GetOutOfBoundsTimeUntilDeath
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IBounds::GetOutOfBoundsTimeUntilDeath() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bounds", "GetOutOfBoundsTimeUntilDeath");

	Params::Bounds_GetOutOfBoundsTimeUntilDeath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Bounds.IsAllowedOutOfBounds
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IBounds::IsAllowedOutOfBounds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bounds", "IsAllowedOutOfBounds");

	Params::Bounds_IsAllowedOutOfBounds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Bounds.IsOutOfBounds
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IBounds::IsOutOfBounds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bounds", "IsOutOfBounds");

	Params::Bounds_IsOutOfBounds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.CharacterMeshComponent.OnCharacterDied
// (Native, Public)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterMeshComponent::OnCharacterDied(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterMeshComponent", "OnCharacterDied");

	Params::CharacterMeshComponent_OnCharacterDied Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterMeshComponent.OnCharacterLODTick
// (Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterMeshComponent::OnCharacterLODTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterMeshComponent", "OnCharacterLODTick");

	Params::CharacterMeshComponent_OnCharacterLODTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterMeshComponent.OnCharacterStartedRagdollFalling
// (Final, Native, Public)

void UCharacterMeshComponent::OnCharacterStartedRagdollFalling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterMeshComponent", "OnCharacterStartedRagdollFalling");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterMeshComponent.OnCharacterStoppedRagdollFalling
// (Final, Native, Public)

void UCharacterMeshComponent::OnCharacterStoppedRagdollFalling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterMeshComponent", "OnCharacterStoppedRagdollFalling");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.HumanMeshComponent.CreateFPDeadMeshIfNone
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHumanMeshComponent::CreateFPDeadMeshIfNone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanMeshComponent", "CreateFPDeadMeshIfNone");

	Params::HumanMeshComponent_CreateFPDeadMeshIfNone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.HumanMeshComponent.CreateFPMeshIfNone
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHumanMeshComponent::CreateFPMeshIfNone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanMeshComponent", "CreateFPMeshIfNone");

	Params::HumanMeshComponent_CreateFPMeshIfNone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.HumanMeshComponent.CreateUnifiedMeshIfNone
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHumanMeshComponent::CreateUnifiedMeshIfNone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanMeshComponent", "CreateUnifiedMeshIfNone");

	Params::HumanMeshComponent_CreateUnifiedMeshIfNone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.HumanMeshComponent.ModifyBodyColors
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InSkinColor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     InHairColor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     InEyeColor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     OutSkinColor                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     OutHairColor                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     OutEyeColor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHumanMeshComponent::ModifyBodyColors(const struct FLinearColor& InSkinColor, const struct FLinearColor& InHairColor, const struct FLinearColor& InEyeColor, struct FLinearColor* OutSkinColor, struct FLinearColor* OutHairColor, struct FLinearColor* OutEyeColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanMeshComponent", "ModifyBodyColors");

	Params::HumanMeshComponent_ModifyBodyColors Parms{};

	Parms.InSkinColor = std::move(InSkinColor);
	Parms.InHairColor = std::move(InHairColor);
	Parms.InEyeColor = std::move(InEyeColor);

	UObject::ProcessEvent(Func, &Parms);

	if (OutSkinColor != nullptr)
		*OutSkinColor = std::move(Parms.OutSkinColor);

	if (OutHairColor != nullptr)
		*OutHairColor = std::move(Parms.OutHairColor);

	if (OutEyeColor != nullptr)
		*OutEyeColor = std::move(Parms.OutEyeColor);
}


// Function Mordhau.HumanMeshComponent.OnCharacterBuilt
// (Final, Native, Public)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHumanMeshComponent::OnCharacterBuilt(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanMeshComponent", "OnCharacterBuilt");

	Params::HumanMeshComponent_OnCharacterBuilt Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.HumanMeshComponent.OnCharacterCameraStyleChanged
// (Final, Native, Public)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHumanMeshComponent::OnCharacterCameraStyleChanged(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanMeshComponent", "OnCharacterCameraStyleChanged");

	Params::HumanMeshComponent_OnCharacterCameraStyleChanged Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.HumanMeshComponent.OnCharacterChangedTeam
// (Final, Native, Public)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHumanMeshComponent::OnCharacterChangedTeam(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanMeshComponent", "OnCharacterChangedTeam");

	Params::HumanMeshComponent_OnCharacterChangedTeam Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.HumanMeshComponent.OnCharacterTornOff
// (Final, Native, Public)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHumanMeshComponent::OnCharacterTornOff(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanMeshComponent", "OnCharacterTornOff");

	Params::HumanMeshComponent_OnCharacterTornOff Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.HumanMeshComponent.OnMeshesAsyncLoaded
// (Final, Native, Public)

void UHumanMeshComponent::OnMeshesAsyncLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanMeshComponent", "OnMeshesAsyncLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.HumanMeshComponent.SetMaterialParamsForLODMasterSlot
// (Final, Native, Public)
// Parameters:
// class FString                           Slot                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMordhauWearable*                 Wearable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         Mid                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHumanMeshComponent::SetMaterialParamsForLODMasterSlot(const class FString& Slot, class UMordhauWearable* Wearable, class UMaterialInstanceDynamic* Mid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanMeshComponent", "SetMaterialParamsForLODMasterSlot");

	Params::HumanMeshComponent_SetMaterialParamsForLODMasterSlot Parms{};

	Parms.Slot = std::move(Slot);
	Parms.Wearable = Wearable;
	Parms.Mid = Mid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.HumanMeshComponent.SetMaterialParamsForMergedSlot
// (Final, Native, Public)
// Parameters:
// class FString                           Prefix                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMordhauWearable*                 Wearable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         Mid                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    LowQuality                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHumanMeshComponent::SetMaterialParamsForMergedSlot(const class FString& Prefix, class UMordhauWearable* Wearable, class UMaterialInstanceDynamic* Mid, bool LowQuality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanMeshComponent", "SetMaterialParamsForMergedSlot");

	Params::HumanMeshComponent_SetMaterialParamsForMergedSlot Parms{};

	Parms.Prefix = std::move(Prefix);
	Parms.Wearable = Wearable;
	Parms.Mid = Mid;
	Parms.LowQuality = LowQuality;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.HumanMeshComponent.UpdateAllSkeletalMeshComponentMaterials
// (Final, Native, Public)

void UHumanMeshComponent::UpdateAllSkeletalMeshComponentMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanMeshComponent", "UpdateAllSkeletalMeshComponentMaterials");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.HumanMeshComponent.UpdateSkeletalMeshComponentMaterials
// (Final, Native, Public)
// Parameters:
// class USkeletalMeshComponent*           USMC                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUpdateBlood                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUpdateIconGenerate                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHumanMeshComponent::UpdateSkeletalMeshComponentMaterials(class USkeletalMeshComponent* USMC, bool bUpdateBlood, bool bUpdateIconGenerate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanMeshComponent", "UpdateSkeletalMeshComponentMaterials");

	Params::HumanMeshComponent_UpdateSkeletalMeshComponentMaterials Parms{};

	Parms.USMC = USMC;
	Parms.bUpdateBlood = bUpdateBlood;
	Parms.bUpdateIconGenerate = bUpdateIconGenerate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.HumanMeshComponent.UpdateSkeletalMeshComponentMaterialsIconGeneration
// (Final, Native, Public, BlueprintCallable)

void UHumanMeshComponent::UpdateSkeletalMeshComponentMaterialsIconGeneration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanMeshComponent", "UpdateSkeletalMeshComponentMaterialsIconGeneration");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.UpdateMatchmakingMatch.UpdateMatchmakingMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabMatchmakingMatch         Match_0                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UUpdateMatchmakingMatch*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUpdateMatchmakingMatch* UUpdateMatchmakingMatch::UpdateMatchmakingMatch(class UObject* WorldContextObject, const struct FPlayFabMatchmakingMatch& Match_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UpdateMatchmakingMatch", "UpdateMatchmakingMatch");

	Params::UpdateMatchmakingMatch_UpdateMatchmakingMatch Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Match_0 = std::move(Match_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.AcceptPartyInvite
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabPlayer                   Sender                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::AcceptPartyInvite(const struct FPlayFabPlayer& Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "AcceptPartyInvite");

	Params::MordhauGameInstance_AcceptPartyInvite Parms{};

	Parms.Sender = std::move(Sender);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.ActivityStatusChange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EActivityType                           Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::ActivityStatusChange(bool Status, EActivityType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ActivityStatusChange");

	Params::MordhauGameInstance_ActivityStatusChange Parms{};

	Parms.Status = Status;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.AddPartyMatchmakingTicket
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           QueueName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TicketId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::AddPartyMatchmakingTicket(const class FString& QueueName, const class FString& TicketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "AddPartyMatchmakingTicket");

	Params::MordhauGameInstance_AddPartyMatchmakingTicket Parms{};

	Parms.QueueName = std::move(QueueName);
	Parms.TicketId = std::move(TicketId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.AreStatsAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::AreStatsAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "AreStatsAvailable");

	Params::MordhauGameInstance_AreStatsAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.AutoJoinPartyLeaderGameSessionOnPartyUpdate
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::AutoJoinPartyLeaderGameSessionOnPartyUpdate(const struct FPlayFabPlayer& Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "AutoJoinPartyLeaderGameSessionOnPartyUpdate");

	Params::MordhauGameInstance_AutoJoinPartyLeaderGameSessionOnPartyUpdate Parms{};

	Parms.Player = std::move(Player);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauGameInstance.BPPlayReplay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   AdditionalOptions                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UMordhauGameInstance::BPPlayReplay(const class FString& InName, const TArray<class FString>& AdditionalOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "BPPlayReplay");

	Params::MordhauGameInstance_BPPlayReplay Parms{};

	Parms.InName = std::move(InName);
	Parms.AdditionalOptions = std::move(AdditionalOptions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.BPStartRecordingReplay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FriendlyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   AdditionalOptions                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UMordhauGameInstance::BPStartRecordingReplay(const class FString& InName, const class FString& FriendlyName, const TArray<class FString>& AdditionalOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "BPStartRecordingReplay");

	Params::MordhauGameInstance_BPStartRecordingReplay Parms{};

	Parms.InName = std::move(InName);
	Parms.FriendlyName = std::move(FriendlyName);
	Parms.AdditionalOptions = std::move(AdditionalOptions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.BPStopPlayingReplay
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::BPStopPlayingReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "BPStopPlayingReplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.BPStopRecordingReplay
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::BPStopRecordingReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "BPStopRecordingReplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.CanInviteToParty
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::CanInviteToParty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "CanInviteToParty");

	Params::MordhauGameInstance_CanInviteToParty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.CanLeaveParty
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::CanLeaveParty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "CanLeaveParty");

	Params::MordhauGameInstance_CanLeaveParty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.CanOnlineCrossPlay
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::CanOnlineCrossPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "CanOnlineCrossPlay");

	Params::MordhauGameInstance_CanOnlineCrossPlay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.CanOnlineCrossPlayPlaystation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::CanOnlineCrossPlayPlaystation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "CanOnlineCrossPlayPlaystation");

	Params::MordhauGameInstance_CanOnlineCrossPlayPlaystation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.CanPlayOnline
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::CanPlayOnline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "CanPlayOnline");

	Params::MordhauGameInstance_CanPlayOnline Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.CanPlayOnlineOnly
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::CanPlayOnlineOnly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "CanPlayOnlineOnly");

	Params::MordhauGameInstance_CanPlayOnlineOnly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.CheckControllerPresence
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::CheckControllerPresence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "CheckControllerPresence");

	Params::MordhauGameInstance_CheckControllerPresence Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.CheckIfConsolePlayerIsOnOfficialServer
// (Final, Native, Public)

void UMordhauGameInstance::CheckIfConsolePlayerIsOnOfficialServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "CheckIfConsolePlayerIsOnOfficialServer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.ClearPartyGameServer
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::ClearPartyGameServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ClearPartyGameServer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.ClearPartyMatch
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::ClearPartyMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ClearPartyMatch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.ClearPartyMatchmakingMembers
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::ClearPartyMatchmakingMembers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ClearPartyMatchmakingMembers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.ClearPartyMatchmakingTickets
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::ClearPartyMatchmakingTickets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ClearPartyMatchmakingTickets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.ClearPartyMemberProfile
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::ClearPartyMemberProfile(const struct FPlayFabPlayer& Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ClearPartyMemberProfile");

	Params::MordhauGameInstance_ClearPartyMemberProfile Parms{};

	Parms.Player = std::move(Player);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.ClearPartyMemberServerDetails
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::ClearPartyMemberServerDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ClearPartyMemberServerDetails");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.ClearPartyServerDetails
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::ClearPartyServerDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ClearPartyServerDetails");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.ClientTravel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           MapName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerCount                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::ClientTravel(const class FString& MapName, const int32 PlayerCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ClientTravel");

	Params::MordhauGameInstance_ClientTravel Parms{};

	Parms.MapName = std::move(MapName);
	Parms.PlayerCount = PlayerCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.ClientTravelServerDetails
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabServerDetails            InServerDetails                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           Password                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::ClientTravelServerDetails(const struct FPlayFabServerDetails& InServerDetails, const class FString& Password)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ClientTravelServerDetails");

	Params::MordhauGameInstance_ClientTravelServerDetails Parms{};

	Parms.InServerDetails = std::move(InServerDetails);
	Parms.Password = std::move(Password);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.ClientTravelSession
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FServerSearchResult              SearchResult                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           Password                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::ClientTravelSession(const struct FServerSearchResult& SearchResult, const class FString& Password)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ClientTravelSession");

	Params::MordhauGameInstance_ClientTravelSession Parms{};

	Parms.SearchResult = std::move(SearchResult);
	Parms.Password = std::move(Password);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.DeclinePartyInvite
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabPlayer                   Sender                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::DeclinePartyInvite(const struct FPlayFabPlayer& Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "DeclinePartyInvite");

	Params::MordhauGameInstance_DeclinePartyInvite Parms{};

	Parms.Sender = std::move(Sender);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.DetermineServerLocationPings
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::DetermineServerLocationPings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "DetermineServerLocationPings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.FindBestServerLocation
// (Final, Native, Public)
// Parameters:
// EServerLocation                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EServerLocation UMordhauGameInstance::FindBestServerLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "FindBestServerLocation");

	Params::MordhauGameInstance_FindBestServerLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.FindBestServerRegion
// (Final, Native, Public)
// Parameters:
// EServerRegion                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EServerRegion UMordhauGameInstance::FindBestServerRegion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "FindBestServerRegion");

	Params::MordhauGameInstance_FindBestServerRegion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.FindGameModeMetadata
// (Final, Native, Public)
// Parameters:
// class FString                           GameModePrefix                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameModeMetadata*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameModeMetadata* UMordhauGameInstance::FindGameModeMetadata(const class FString& GameModePrefix)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "FindGameModeMetadata");

	Params::MordhauGameInstance_FindGameModeMetadata Parms{};

	Parms.GameModePrefix = std::move(GameModePrefix);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.FindMapMetadata
// (Final, Native, Public)
// Parameters:
// class FString                           GameModeMapName                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMapMetadata*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMapMetadata* UMordhauGameInstance::FindMapMetadata(const class FString& GameModeMapName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "FindMapMetadata");

	Params::MordhauGameInstance_FindMapMetadata Parms{};

	Parms.GameModeMapName = std::move(GameModeMapName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.ForceAllUserFocus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFocusCause                             FocusCause                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      UserWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::ForceAllUserFocus(EFocusCause FocusCause, class UUserWidget* UserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ForceAllUserFocus");

	Params::MordhauGameInstance_ForceAllUserFocus Parms{};

	Parms.FocusCause = FocusCause;
	Parms.UserWidget = UserWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.ForceCloseTitleScreen
// (Event, Public, BlueprintEvent)

void UMordhauGameInstance::ForceCloseTitleScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ForceCloseTitleScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauGameInstance.GetBlacklistedServers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UMordhauGameInstance::GetBlacklistedServers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetBlacklistedServers");

	Params::MordhauGameInstance_GetBlacklistedServers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetConnectionTimeoutTimestamp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameInstance::GetConnectionTimeoutTimestamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetConnectionTimeoutTimestamp");

	Params::MordhauGameInstance_GetConnectionTimeoutTimestamp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetFriendsGroupId
// (Final, Native, Public)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauGameInstance::GetFriendsGroupId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetFriendsGroupId");

	Params::MordhauGameInstance_GetFriendsGroupId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetGlobalServerBanDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameInstance::GetGlobalServerBanDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetGlobalServerBanDuration");

	Params::MordhauGameInstance_GetGlobalServerBanDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetGlobalServerMuteDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameInstance::GetGlobalServerMuteDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetGlobalServerMuteDuration");

	Params::MordhauGameInstance_GetGlobalServerMuteDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetIngameEvent
// (Final, Native, Public)
// Parameters:
// EIngameEvent                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EIngameEvent UMordhauGameInstance::GetIngameEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetIngameEvent");

	Params::MordhauGameInstance_GetIngameEvent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetLastPlayerLeaveTime
// (Final, Native, Public)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double UMordhauGameInstance::GetLastPlayerLeaveTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetLastPlayerLeaveTime");

	Params::MordhauGameInstance_GetLastPlayerLeaveTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetMapInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           MapName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMapInfo                         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMapInfo UMordhauGameInstance::GetMapInfo(const class FString& MapName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetMapInfo");

	Params::MordhauGameInstance_GetMapInfo Parms{};

	Parms.MapName = std::move(MapName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetMatchmakingGroupId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauGameInstance::GetMatchmakingGroupId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetMatchmakingGroupId");

	Params::MordhauGameInstance_GetMatchmakingGroupId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetMatchmakingMatchId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauGameInstance::GetMatchmakingMatchId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetMatchmakingMatchId");

	Params::MordhauGameInstance_GetMatchmakingMatchId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetNextMatchId
// (Final, Native, Public)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameInstance::GetNextMatchId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetNextMatchId");

	Params::MordhauGameInstance_GetNextMatchId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetNoviceServerRegions
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<EServerRegion>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EServerRegion> UMordhauGameInstance::GetNoviceServerRegions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetNoviceServerRegions");

	Params::MordhauGameInstance_GetNoviceServerRegions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetNoviceThreshold
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameInstance::GetNoviceThreshold()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetNoviceThreshold");

	Params::MordhauGameInstance_GetNoviceThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetNumReservedSlots
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameInstance::GetNumReservedSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetNumReservedSlots");

	Params::MordhauGameInstance_GetNumReservedSlots Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetOfficialServerBanDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameInstance::GetOfficialServerBanDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetOfficialServerBanDuration");

	Params::MordhauGameInstance_GetOfficialServerBanDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetOfficialServerMuteDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameInstance::GetOfficialServerMuteDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetOfficialServerMuteDuration");

	Params::MordhauGameInstance_GetOfficialServerMuteDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetOtherPartyMembersEntityIDs
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UMordhauGameInstance::GetOtherPartyMembersEntityIDs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetOtherPartyMembersEntityIDs");

	Params::MordhauGameInstance_GetOtherPartyMembersEntityIDs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetPartyId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauGameInstance::GetPartyId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetPartyId");

	Params::MordhauGameInstance_GetPartyId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetPartyInvites
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FPlayFabPlayer>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FPlayFabPlayer> UMordhauGameInstance::GetPartyInvites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetPartyInvites");

	Params::MordhauGameInstance_GetPartyInvites Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetPartyLeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPlayFabPlayer                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FPlayFabPlayer UMordhauGameInstance::GetPartyLeader()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetPartyLeader");

	Params::MordhauGameInstance_GetPartyLeader Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetPartyMatch
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           QueueName                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MatchId                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::GetPartyMatch(class FString* QueueName, class FString* MatchId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetPartyMatch");

	Params::MordhauGameInstance_GetPartyMatch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (QueueName != nullptr)
		*QueueName = std::move(Parms.QueueName);

	if (MatchId != nullptr)
		*MatchId = std::move(Parms.MatchId);
}


// Function Mordhau.MordhauGameInstance.GetPartyMatchmakingMembers
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UMordhauGameInstance::GetPartyMatchmakingMembers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetPartyMatchmakingMembers");

	Params::MordhauGameInstance_GetPartyMatchmakingMembers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetPartyMatchmakingState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMatchmakingState                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMatchmakingState UMordhauGameInstance::GetPartyMatchmakingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetPartyMatchmakingState");

	Params::MordhauGameInstance_GetPartyMatchmakingState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetPartyMatchmakingTickets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FMatchmakingTicket>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FMatchmakingTicket> UMordhauGameInstance::GetPartyMatchmakingTickets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetPartyMatchmakingTickets");

	Params::MordhauGameInstance_GetPartyMatchmakingTickets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetPartyMemberEntities
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FPlayFabPlayerEntity>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FPlayFabPlayerEntity> UMordhauGameInstance::GetPartyMemberEntities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetPartyMemberEntities");

	Params::MordhauGameInstance_GetPartyMemberEntities Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetPartyMemberProfile
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayerProfile                   Profile                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::GetPartyMemberProfile(const struct FPlayFabPlayer& Player, struct FPlayerProfile* Profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetPartyMemberProfile");

	Params::MordhauGameInstance_GetPartyMemberProfile Parms{};

	Parms.Player = std::move(Player);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Profile != nullptr)
		*Profile = std::move(Parms.Profile);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetPartyMembers
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FPlayFabPlayer>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FPlayFabPlayer> UMordhauGameInstance::GetPartyMembers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetPartyMembers");

	Params::MordhauGameInstance_GetPartyMembers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetPartyMemberServerAddress
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerAddress                   Address                                                (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bWasSuccessful                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::GetPartyMemberServerAddress(const struct FPlayFabPlayer& Player, struct FServerAddress* Address, bool* bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetPartyMemberServerAddress");

	Params::MordhauGameInstance_GetPartyMemberServerAddress Parms{};

	Parms.Player = std::move(Player);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Address != nullptr)
		*Address = std::move(Parms.Address);

	if (bWasSuccessful != nullptr)
		*bWasSuccessful = Parms.bWasSuccessful;
}


// Function Mordhau.MordhauGameInstance.GetPartyMemberServerDetails
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabServerDetails            OutServerDetails                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    bWasSuccessful                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::GetPartyMemberServerDetails(const struct FPlayFabPlayer& Player, struct FPlayFabServerDetails* OutServerDetails, bool* bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetPartyMemberServerDetails");

	Params::MordhauGameInstance_GetPartyMemberServerDetails Parms{};

	Parms.Player = std::move(Player);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutServerDetails != nullptr)
		*OutServerDetails = std::move(Parms.OutServerDetails);

	if (bWasSuccessful != nullptr)
		*bWasSuccessful = Parms.bWasSuccessful;
}


// Function Mordhau.MordhauGameInstance.GetPartyMemberStatus
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauGameInstance::GetPartyMemberStatus(const struct FPlayFabPlayer& Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetPartyMemberStatus");

	Params::MordhauGameInstance_GetPartyMemberStatus Parms{};

	Parms.Player = std::move(Player);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetPartyMMR
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           GameMode                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameInstance::GetPartyMMR(const class FString& GameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetPartyMMR");

	Params::MordhauGameInstance_GetPartyMMR Parms{};

	Parms.GameMode = std::move(GameMode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetPartyServerDetails
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabServerDetails            OutServerDetails                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    bWasSuccessful                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::GetPartyServerDetails(struct FPlayFabServerDetails* OutServerDetails, bool* bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetPartyServerDetails");

	Params::MordhauGameInstance_GetPartyServerDetails Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutServerDetails != nullptr)
		*OutServerDetails = std::move(Parms.OutServerDetails);

	if (bWasSuccessful != nullptr)
		*bWasSuccessful = Parms.bWasSuccessful;
}


// Function Mordhau.MordhauGameInstance.GetPartySize
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameInstance::GetPartySize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetPartySize");

	Params::MordhauGameInstance_GetPartySize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetPlatform
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPlatform                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlatform UMordhauGameInstance::GetPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetPlatform");

	Params::MordhauGameInstance_GetPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetProfaneWords
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UMordhauGameInstance::GetProfaneWords()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetProfaneWords");

	Params::MordhauGameInstance_GetProfaneWords Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetQueueKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InQueueName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauGameInstance::GetQueueKey(const class FString& InQueueName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetQueueKey");

	Params::MordhauGameInstance_GetQueueKey Parms{};

	Parms.InQueueName = std::move(InQueueName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetQueueName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InQueueKey                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauGameInstance::GetQueueName(const class FString& InQueueKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetQueueName");

	Params::MordhauGameInstance_GetQueueName Parms{};

	Parms.InQueueKey = std::move(InQueueKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetServerLocationPing
// (Final, Native, Public)
// Parameters:
// EServerLocation                         Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameInstance::GetServerLocationPing(EServerLocation Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetServerLocationPing");

	Params::MordhauGameInstance_GetServerLocationPing Parms{};

	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetServerLocationPings
// (Final, Native, Public)
// Parameters:
// TMap<EServerLocation, int32>            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<EServerLocation, int32> UMordhauGameInstance::GetServerLocationPings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetServerLocationPings");

	Params::MordhauGameInstance_GetServerLocationPings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetServerLocationPreference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EServerRegion                           Region                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EServerLocation>                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EServerLocation> UMordhauGameInstance::GetServerLocationPreference(EServerRegion Region)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetServerLocationPreference");

	Params::MordhauGameInstance_GetServerLocationPreference Parms{};

	Parms.Region = Region;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.GetServerRegionPings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EServerRegion                           Region                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<EServerLocation, int32>            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<EServerLocation, int32> UMordhauGameInstance::GetServerRegionPings(EServerRegion Region)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "GetServerRegionPings");

	Params::MordhauGameInstance_GetServerRegionPings Parms{};

	Parms.Region = Region;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.HasCompletedLogin
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::HasCompletedLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "HasCompletedLogin");

	Params::MordhauGameInstance_HasCompletedLogin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.HasPartyMemberConsolePlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::HasPartyMemberConsolePlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "HasPartyMemberConsolePlayer");

	Params::MordhauGameInstance_HasPartyMemberConsolePlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.HasPartyMemberPCPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::HasPartyMemberPCPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "HasPartyMemberPCPlayer");

	Params::MordhauGameInstance_HasPartyMemberPCPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.Init
// (Native, Public)

void UMordhauGameInstance::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "Init");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.InviteToParty
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabPlayer                   Recipient                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::InviteToParty(const struct FPlayFabPlayer& Recipient)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "InviteToParty");

	Params::MordhauGameInstance_InviteToParty Parms{};

	Parms.Recipient = std::move(Recipient);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.IsAdmin
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsAdmin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsAdmin");

	Params::MordhauGameInstance_IsAdmin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.IsFriendsListAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsFriendsListAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsFriendsListAvailable");

	Params::MordhauGameInstance_IsFriendsListAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.IsGlobalServerBanned
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsGlobalServerBanned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsGlobalServerBanned");

	Params::MordhauGameInstance_IsGlobalServerBanned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.IsGlobalServerMuted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsGlobalServerMuted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsGlobalServerMuted");

	Params::MordhauGameInstance_IsGlobalServerMuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.IsInventoryAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsInventoryAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsInventoryAvailable");

	Params::MordhauGameInstance_IsInventoryAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.IsLoadingScreenActive
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsLoadingScreenActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsLoadingScreenActive");

	Params::MordhauGameInstance_IsLoadingScreenActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.IsLoggedIn
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsLoggedIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsLoggedIn");

	Params::MordhauGameInstance_IsLoggedIn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.IsLoggingIn
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsLoggingIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsLoggingIn");

	Params::MordhauGameInstance_IsLoggingIn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.IsNovice
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsNovice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsNovice");

	Params::MordhauGameInstance_IsNovice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.IsOfficialServerBanned
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsOfficialServerBanned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsOfficialServerBanned");

	Params::MordhauGameInstance_IsOfficialServerBanned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.IsOfficialServerMuted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsOfficialServerMuted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsOfficialServerMuted");

	Params::MordhauGameInstance_IsOfficialServerMuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.IsPartyLeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsPartyLeader()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsPartyLeader");

	Params::MordhauGameInstance_IsPartyLeader Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.IsPartyMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsPartyMember(const struct FPlayFabPlayer& Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsPartyMember");

	Params::MordhauGameInstance_IsPartyMember Parms{};

	Parms.Player = std::move(Player);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.IsPartyReadyForMatchmaking
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsPartyReadyForMatchmaking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsPartyReadyForMatchmaking");

	Params::MordhauGameInstance_IsPartyReadyForMatchmaking Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.IsPSNLockEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsPSNLockEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsPSNLockEnabled");

	Params::MordhauGameInstance_IsPSNLockEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.IsTitleDatAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsTitleDatAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsTitleDatAvailable");

	Params::MordhauGameInstance_IsTitleDatAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.IsTitleScreenVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsTitleScreenVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsTitleScreenVisible");

	Params::MordhauGameInstance_IsTitleScreenVisible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.IsUserControllerPaired
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsUserControllerPaired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsUserControllerPaired");

	Params::MordhauGameInstance_IsUserControllerPaired Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.JoinPartyGameServer
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::JoinPartyGameServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "JoinPartyGameServer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.JoinSessionSearchResult
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FServerSearchResult              SearchResult                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMordhauGameInstance::JoinSessionSearchResult(const struct FServerSearchResult& SearchResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "JoinSessionSearchResult");

	Params::MordhauGameInstance_JoinSessionSearchResult Parms{};

	Parms.SearchResult = std::move(SearchResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauGameInstance.KickPartyMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::KickPartyMember(const struct FPlayFabPlayer& Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "KickPartyMember");

	Params::MordhauGameInstance_KickPartyMember Parms{};

	Parms.Player = std::move(Player);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.LeaveParty
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::LeaveParty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "LeaveParty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.LogAllUsersAndStates
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::LogAllUsersAndStates(int32 LocalUserNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "LogAllUsersAndStates");

	Params::MordhauGameInstance_LogAllUsersAndStates Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.LogMatchmakingState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::LogMatchmakingState(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "LogMatchmakingState");

	Params::MordhauGameInstance_LogMatchmakingState Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.MountModsInCustomPaksFolder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameInstance::MountModsInCustomPaksFolder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "MountModsInCustomPaksFolder");

	Params::MordhauGameInstance_MountModsInCustomPaksFolder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.OnAcceptedInvitePrivilegeCheckFailure
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UMordhauGameInstance::OnAcceptedInvitePrivilegeCheckFailure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "OnAcceptedInvitePrivilegeCheckFailure");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauGameInstance.OnAdvancedNetworkDialogConfirmed
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::OnAdvancedNetworkDialogConfirmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "OnAdvancedNetworkDialogConfirmed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.OnDelayKickUserFromParty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::OnDelayKickUserFromParty(const struct FPlayFabPlayer& Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "OnDelayKickUserFromParty");

	Params::MordhauGameInstance_OnDelayKickUserFromParty Parms{};

	Parms.Player = std::move(Player);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.OnDelayReturnToMainMenu
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::OnDelayReturnToMainMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "OnDelayReturnToMainMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.OnFindMordhauServerSessionByAddressSuccess
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FServerSearchResult              SearchResult                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMordhauGameInstance::OnFindMordhauServerSessionByAddressSuccess(const struct FServerSearchResult& SearchResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "OnFindMordhauServerSessionByAddressSuccess");

	Params::MordhauGameInstance_OnFindMordhauServerSessionByAddressSuccess Parms{};

	Parms.SearchResult = std::move(SearchResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.OnHideMainMenu
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::OnHideMainMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "OnHideMainMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.OnInventoryBecameAvailable
// (Final, Native, Public)

void UMordhauGameInstance::OnInventoryBecameAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "OnInventoryBecameAvailable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.OnNetworkRecoveryStarted
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UMordhauGameInstance::OnNetworkRecoveryStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "OnNetworkRecoveryStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauGameInstance.OnPrivilegeCheckConfirmed
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::OnPrivilegeCheckConfirmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "OnPrivilegeCheckConfirmed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.OnPrivilegeCheckDeclined
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::OnPrivilegeCheckDeclined()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "OnPrivilegeCheckDeclined");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.OnReportUser
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EPlayerReportType                       ReportType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabPlayer                   ReportedPlayer                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TimeUntillAllowed                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerReportResponse                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlayerReportResponse UMordhauGameInstance::OnReportUser(EPlayerReportType ReportType, const struct FPlayFabPlayer& ReportedPlayer, int32* TimeUntillAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "OnReportUser");

	Params::MordhauGameInstance_OnReportUser Parms{};

	Parms.ReportType = ReportType;
	Parms.ReportedPlayer = std::move(ReportedPlayer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TimeUntillAllowed != nullptr)
		*TimeUntillAllowed = Parms.TimeUntillAllowed;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.OnShowMainMenu
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::OnShowMainMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "OnShowMainMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.OnStartupComplete
// (Final, Native, Public)

void UMordhauGameInstance::OnStartupComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "OnStartupComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.OnStatsBecameAvailable
// (Final, Native, Public)

void UMordhauGameInstance::OnStatsBecameAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "OnStatsBecameAvailable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.OnUserControllerParingConfirmed
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::OnUserControllerParingConfirmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "OnUserControllerParingConfirmed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.OnUserControllerParingDeclined
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::OnUserControllerParingDeclined()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "OnUserControllerParingDeclined");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.OpenDLCStorePage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           DlcId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::OpenDLCStorePage(const class FString& DlcId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "OpenDLCStorePage");

	Params::MordhauGameInstance_OpenDLCStorePage Parms{};

	Parms.DlcId = std::move(DlcId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.PerformPlatformLogin
// (Final, Native, Public)

void UMordhauGameInstance::PerformPlatformLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "PerformPlatformLogin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.PerformPlayfabLogin
// (Final, Native, Public)

void UMordhauGameInstance::PerformPlayfabLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "PerformPlayfabLogin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.QuitGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                SpecificPlayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EQuitGamePreference                     QuitPreference                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnorePlatformRestrictions                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::QuitGame(const class UObject* WorldContextObject, class APlayerController* SpecificPlayer, EQuitGamePreference QuitPreference, bool bIgnorePlatformRestrictions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "QuitGame");

	Params::MordhauGameInstance_QuitGame Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SpecificPlayer = SpecificPlayer;
	Parms.QuitPreference = QuitPreference;
	Parms.bIgnorePlatformRestrictions = bIgnorePlatformRestrictions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.RegisterMetadata
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                                   ModId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   AssetPaths                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMordhauGameInstance::RegisterMetadata(int32 ModId, const TArray<class FString>& AssetPaths)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "RegisterMetadata");

	Params::MordhauGameInstance_RegisterMetadata Parms{};

	Parms.ModId = ModId;
	Parms.AssetPaths = std::move(AssetPaths);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.RemovePartyMatchmakingTicket
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           QueueName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::RemovePartyMatchmakingTicket(const class FString& QueueName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "RemovePartyMatchmakingTicket");

	Params::MordhauGameInstance_RemovePartyMatchmakingTicket Parms{};

	Parms.QueueName = std::move(QueueName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.RequestActivityStart
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EActivityType                           ActivityType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::RequestActivityStart(EActivityType ActivityType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "RequestActivityStart");

	Params::MordhauGameInstance_RequestActivityStart Parms{};

	Parms.ActivityType = ActivityType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauGameInstance.RequestPlayerInformation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::RequestPlayerInformation(const struct FPlayFabPlayer& Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "RequestPlayerInformation");

	Params::MordhauGameInstance_RequestPlayerInformation Parms{};

	Parms.Player = std::move(Player);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.ResetLoginProcessVars
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::ResetLoginProcessVars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ResetLoginProcessVars");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.RespondControllerConnectionChange
// (Final, Native, Public)
// Parameters:
// bool                                    Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ControllerId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::RespondControllerConnectionChange(bool Status, int32 UserId, int32 ControllerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "RespondControllerConnectionChange");

	Params::MordhauGameInstance_RespondControllerConnectionChange Parms{};

	Parms.Status = Status;
	Parms.UserId = UserId;
	Parms.ControllerId = ControllerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.RespondOnUserLoginChanged
// (Final, Native, Public)
// Parameters:
// bool                                    Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::RespondOnUserLoginChanged(bool Status, int32 UserId, int32 UserIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "RespondOnUserLoginChanged");

	Params::MordhauGameInstance_RespondOnUserLoginChanged Parms{};

	Parms.Status = Status;
	Parms.UserId = UserId;
	Parms.UserIndex = UserIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.SaveConfig
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::SaveConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "SaveConfig");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.ServerTravel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MapName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::ServerTravel(const class UObject* WorldContextObject, const class FString& MapName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ServerTravel");

	Params::MordhauGameInstance_ServerTravel Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MapName = std::move(MapName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameInstance.SetConnectionTimeoutTimestamp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewConnectionTimeoutTimestamp                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::SetConnectionTimeoutTimestamp(float NewConnectionTimeoutTimestamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "SetConnectionTimeoutTimestamp");

	Params::MordhauGameInstance_SetConnectionTimeoutTimestamp Parms{};

	Parms.NewConnectionTimeoutTimestamp = NewConnectionTimeoutTimestamp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.SetIngameEvent
// (Final, Native, Public)
// Parameters:
// EIngameEvent                            InIngameEvent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::SetIngameEvent(EIngameEvent InIngameEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "SetIngameEvent");

	Params::MordhauGameInstance_SetIngameEvent Parms{};

	Parms.InIngameEvent = InIngameEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.SetLastPlayerLeaveTime
// (Final, Native, Public)
// Parameters:
// double                                  InLastPlayerLeaveTime                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::SetLastPlayerLeaveTime(double InLastPlayerLeaveTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "SetLastPlayerLeaveTime");

	Params::MordhauGameInstance_SetLastPlayerLeaveTime Parms{};

	Parms.InLastPlayerLeaveTime = InLastPlayerLeaveTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.SetMatchmakingMatchId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           MatchId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::SetMatchmakingMatchId(const class FString& MatchId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "SetMatchmakingMatchId");

	Params::MordhauGameInstance_SetMatchmakingMatchId Parms{};

	Parms.MatchId = std::move(MatchId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.SetNetworkError
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             ErrorText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMordhauGameInstance::SetNetworkError(const class FText& ErrorText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "SetNetworkError");

	Params::MordhauGameInstance_SetNetworkError Parms{};

	Parms.ErrorText = std::move(ErrorText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.SetPartyGameServer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FServerSearchResult              SearchResult                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMordhauGameInstance::SetPartyGameServer(const struct FServerSearchResult& SearchResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "SetPartyGameServer");

	Params::MordhauGameInstance_SetPartyGameServer Parms{};

	Parms.SearchResult = std::move(SearchResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.SetPartyLeader
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::SetPartyLeader(const struct FPlayFabPlayer& Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "SetPartyLeader");

	Params::MordhauGameInstance_SetPartyLeader Parms{};

	Parms.Player = std::move(Player);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.SetPartyMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           QueueName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MatchId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::SetPartyMatch(const class FString& QueueName, const class FString& MatchId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "SetPartyMatch");

	Params::MordhauGameInstance_SetPartyMatch Parms{};

	Parms.QueueName = std::move(QueueName);
	Parms.MatchId = std::move(MatchId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.SetPartyMatchmakingMembers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   Members                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMordhauGameInstance::SetPartyMatchmakingMembers(const TArray<class FString>& Members)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "SetPartyMatchmakingMembers");

	Params::MordhauGameInstance_SetPartyMatchmakingMembers Parms{};

	Parms.Members = std::move(Members);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.SetPartyMatchmakingState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMatchmakingState                       MatchmakingState                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::SetPartyMatchmakingState(EMatchmakingState MatchmakingState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "SetPartyMatchmakingState");

	Params::MordhauGameInstance_SetPartyMatchmakingState Parms{};

	Parms.MatchmakingState = MatchmakingState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.SetPartyMemberProfile
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayerProfile                   Profile                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMordhauGameInstance::SetPartyMemberProfile(const struct FPlayFabPlayer& Player, const struct FPlayerProfile& Profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "SetPartyMemberProfile");

	Params::MordhauGameInstance_SetPartyMemberProfile Parms{};

	Parms.Player = std::move(Player);
	Parms.Profile = std::move(Profile);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.SetPartyMemberServerDetails
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabServerDetails            InServerDetails                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           InRichPresenceStr                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::SetPartyMemberServerDetails(const struct FPlayFabServerDetails& InServerDetails, const class FString& InRichPresenceStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "SetPartyMemberServerDetails");

	Params::MordhauGameInstance_SetPartyMemberServerDetails Parms{};

	Parms.InServerDetails = std::move(InServerDetails);
	Parms.InRichPresenceStr = std::move(InRichPresenceStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.SetPartyServerDetails
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabServerDetails            InServerDetails                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMordhauGameInstance::SetPartyServerDetails(const struct FPlayFabServerDetails& InServerDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "SetPartyServerDetails");

	Params::MordhauGameInstance_SetPartyServerDetails Parms{};

	Parms.InServerDetails = std::move(InServerDetails);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.SetUserControllerPairing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InIsUserControllerPaired                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::SetUserControllerPairing(bool InIsUserControllerPaired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "SetUserControllerPairing");

	Params::MordhauGameInstance_SetUserControllerPairing Parms{};

	Parms.InIsUserControllerPaired = InIsUserControllerPaired;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.ShowInviteDialog
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::ShowInviteDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ShowInviteDialog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.ShowJoiningDialog
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FServerSearchResult              SearchResult                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMordhauGameInstance::ShowJoiningDialog(const struct FServerSearchResult& SearchResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ShowJoiningDialog");

	Params::MordhauGameInstance_ShowJoiningDialog Parms{};

	Parms.SearchResult = std::move(SearchResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauGameInstance.ShowLoginErrorDialogWithDescription
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ELoginError                             FailureType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorString                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::ShowLoginErrorDialogWithDescription(ELoginError FailureType, const class FString& ErrorString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ShowLoginErrorDialogWithDescription");

	Params::MordhauGameInstance_ShowLoginErrorDialogWithDescription Parms{};

	Parms.FailureType = FailureType;
	Parms.ErrorString = std::move(ErrorString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauGameInstance.ShowNetworkErrorDialog
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UMordhauGameInstance::ShowNetworkErrorDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ShowNetworkErrorDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauGameInstance.ShowNetworkErrorDialogWithDescription
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENetworkFailure                         FailureType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorString                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::ShowNetworkErrorDialogWithDescription(ENetworkFailure FailureType, const class FString& ErrorString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ShowNetworkErrorDialogWithDescription");

	Params::MordhauGameInstance_ShowNetworkErrorDialogWithDescription Parms{};

	Parms.FailureType = FailureType;
	Parms.ErrorString = std::move(ErrorString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauGameInstance.ShowNoControllerDialog
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::ShowNoControllerDialog(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ShowNoControllerDialog");

	Params::MordhauGameInstance_ShowNoControllerDialog Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauGameInstance.ShowPasswordDialog
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FServerSearchResult              SearchResult                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMordhauGameInstance::ShowPasswordDialog(const struct FServerSearchResult& SearchResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ShowPasswordDialog");

	Params::MordhauGameInstance_ShowPasswordDialog Parms{};

	Parms.SearchResult = std::move(SearchResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauGameInstance.ShowTitleScreenDialog
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UMordhauGameInstance::ShowTitleScreenDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ShowTitleScreenDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauGameInstance.ShowUserControllerParingDialog
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UMordhauGameInstance::ShowUserControllerParingDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "ShowUserControllerParingDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauGameInstance.Shutdown
// (Native, Public)

void UMordhauGameInstance::Shutdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "Shutdown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.StartNetworkRecovery
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameInstance::StartNetworkRecovery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "StartNetworkRecovery");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.StopLoadingScreen
// (Final, Native, Public)

void UMordhauGameInstance::StopLoadingScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "StopLoadingScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.UnregisterMetadata
// (Final, Native, Public)
// Parameters:
// int32                                   ModId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::UnregisterMetadata(int32 ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "UnregisterMetadata");

	Params::MordhauGameInstance_UnregisterMetadata Parms{};

	Parms.ModId = ModId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.UpdateParty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bUpdateProfile                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNotifyPartyCreation                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameInstance::UpdateParty(bool bUpdateProfile, bool bNotifyPartyCreation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "UpdateParty");

	Params::MordhauGameInstance_UpdateParty Parms{};

	Parms.bUpdateProfile = bUpdateProfile;
	Parms.bNotifyPartyCreation = bNotifyPartyCreation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameInstance.IsStartUpComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameInstance::IsStartUpComplete() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameInstance", "IsStartUpComplete");

	Params::MordhauGameInstance_IsStartUpComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.BuildablePlaneTrace.GetPlacementAngleAndRotation
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// struct FSpawnablePlaneTraceResult       OutTraceResult                                         (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSpawnableObjectInfo             ObjectInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   OutAngle                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UBuildablePlaneTrace::GetPlacementAngleAndRotation(struct FSpawnablePlaneTraceResult* OutTraceResult, const struct FSpawnableObjectInfo& ObjectInfo, float* OutAngle, struct FRotator* OutRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildablePlaneTrace", "GetPlacementAngleAndRotation");

	Params::BuildablePlaneTrace_GetPlacementAngleAndRotation Parms{};

	Parms.ObjectInfo = std::move(ObjectInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTraceResult != nullptr)
		*OutTraceResult = std::move(Parms.OutTraceResult);

	if (OutAngle != nullptr)
		*OutAngle = Parms.OutAngle;

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);
}


// Function Mordhau.BuildablePlaneTrace.DrawDebugPlane
// (Final, Native, Private, HasDefaults, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Forward                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Back                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Right                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Left                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InTraceAmount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDrawDebugTrace                         DrawDebugType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBuildablePlaneTrace::DrawDebugPlane(class UObject* WorldContextObject, const struct FVector& Forward, const struct FVector& Back, const struct FVector& Right, const struct FVector& Left, const struct FVector& InTraceAmount, EDrawDebugTrace DrawDebugType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildablePlaneTrace", "DrawDebugPlane");

	Params::BuildablePlaneTrace_DrawDebugPlane Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Forward = std::move(Forward);
	Parms.Back = std::move(Back);
	Parms.Right = std::move(Right);
	Parms.Left = std::move(Left);
	Parms.InTraceAmount = std::move(InTraceAmount);
	Parms.DrawDebugType = DrawDebugType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.BuildingSystemComponent.AddSkeletalMeshPreviewIfNone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMesh*                    SkeletalMesh                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBuildingSystemComponent::AddSkeletalMeshPreviewIfNone(class USkeletalMesh* SkeletalMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSystemComponent", "AddSkeletalMeshPreviewIfNone");

	Params::BuildingSystemComponent_AddSkeletalMeshPreviewIfNone Parms{};

	Parms.SkeletalMesh = SkeletalMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.BuildingSystemComponent.AddStaticMeshPreviewIfNone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStaticMesh*                      StaticMesh                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBuildingSystemComponent::AddStaticMeshPreviewIfNone(class UStaticMesh* StaticMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSystemComponent", "AddStaticMeshPreviewIfNone");

	Params::BuildingSystemComponent_AddStaticMeshPreviewIfNone Parms{};

	Parms.StaticMesh = StaticMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.BuildingSystemComponent.DestroyMeshPreview
// (Final, Native, Public, BlueprintCallable)

void UBuildingSystemComponent::DestroyMeshPreview()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSystemComponent", "DestroyMeshPreview");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.BuildingSystemComponent.DisplayPreview
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// bool                                    bDrawObjectPreview                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsValid                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSpawnableObjectInfo             ObjectInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FTransform                       ObjectTransform                                        (ConstParm, Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   SpawnableObjectIndex                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBuildingSystemComponent::DisplayPreview(bool bDrawObjectPreview, bool bIsValid, const struct FSpawnableObjectInfo& ObjectInfo, const struct FTransform& ObjectTransform, int32 SpawnableObjectIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSystemComponent", "DisplayPreview");

	Params::BuildingSystemComponent_DisplayPreview Parms{};

	Parms.bDrawObjectPreview = bDrawObjectPreview;
	Parms.bIsValid = bIsValid;
	Parms.ObjectInfo = std::move(ObjectInfo);
	Parms.ObjectTransform = std::move(ObjectTransform);
	Parms.SpawnableObjectIndex = SpawnableObjectIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.BuildingSystemComponent.GetEquipmentAmmoCost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SpawnableObjectIndex                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBuildingSystemComponent::GetEquipmentAmmoCost(int32 SpawnableObjectIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSystemComponent", "GetEquipmentAmmoCost");

	Params::BuildingSystemComponent_GetEquipmentAmmoCost Parms{};

	Parms.SpawnableObjectIndex = SpawnableObjectIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.BuildingSystemComponent.GetEquipmentDisplayName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SpawnableObjectIndex                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UBuildingSystemComponent::GetEquipmentDisplayName(int32 SpawnableObjectIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSystemComponent", "GetEquipmentDisplayName");

	Params::BuildingSystemComponent_GetEquipmentDisplayName Parms{};

	Parms.SpawnableObjectIndex = SpawnableObjectIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.BuildingSystemComponent.GetEquipmentInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SpawnableObjectIndex                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSpawnableObjectInfo             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSpawnableObjectInfo UBuildingSystemComponent::GetEquipmentInfo(int32 SpawnableObjectIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSystemComponent", "GetEquipmentInfo");

	Params::BuildingSystemComponent_GetEquipmentInfo Parms{};

	Parms.SpawnableObjectIndex = SpawnableObjectIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.BuildingSystemComponent.GetEquipmentPlaceableLimitName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SpawnableObjectIndex                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UBuildingSystemComponent::GetEquipmentPlaceableLimitName(int32 SpawnableObjectIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSystemComponent", "GetEquipmentPlaceableLimitName");

	Params::BuildingSystemComponent_GetEquipmentPlaceableLimitName Parms{};

	Parms.SpawnableObjectIndex = SpawnableObjectIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.BuildingSystemComponent.GetEquipmentPlaceableMaxLimit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SpawnableObjectIndex                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBuildingSystemComponent::GetEquipmentPlaceableMaxLimit(int32 SpawnableObjectIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSystemComponent", "GetEquipmentPlaceableMaxLimit");

	Params::BuildingSystemComponent_GetEquipmentPlaceableMaxLimit Parms{};

	Parms.SpawnableObjectIndex = SpawnableObjectIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.BuildingSystemComponent.ValidateSpot
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Offset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class USceneComponent*                  AttachToComponent                                      (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBuildableTraceBase*              BuildableTraceHit                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SpawnableObjectIndex                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDrawObjectPreview                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceFail                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBuildingSystemComponent::ValidateSpot(const struct FVector& Offset, struct FVector* OutLocation, struct FRotator* OutRotation, class USceneComponent** AttachToComponent, class UBuildableTraceBase** BuildableTraceHit, int32 SpawnableObjectIndex, bool bDrawObjectPreview, bool bForceFail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSystemComponent", "ValidateSpot");

	Params::BuildingSystemComponent_ValidateSpot Parms{};

	Parms.Offset = std::move(Offset);
	Parms.SpawnableObjectIndex = SpawnableObjectIndex;
	Parms.bDrawObjectPreview = bDrawObjectPreview;
	Parms.bForceFail = bForceFail;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);

	if (AttachToComponent != nullptr)
		*AttachToComponent = Parms.AttachToComponent;

	if (BuildableTraceHit != nullptr)
		*BuildableTraceHit = Parms.BuildableTraceHit;

	return Parms.ReturnValue;
}


// Function Mordhau.BuildingSystemComponent.SetupMeshPreview
// (Final, Native, Public, BlueprintCallable, Const)

void UBuildingSystemComponent::SetupMeshPreview() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSystemComponent", "SetupMeshPreview");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.BurnableComponent.DouseFire
// (Native, Public, BlueprintCallable)

void UBurnableComponent::DouseFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BurnableComponent", "DouseFire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.BurnableComponent.OnLODTick
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBurnableComponent::OnLODTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BurnableComponent", "OnLODTick");

	Params::BurnableComponent_OnLODTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.BurnableComponent.SetOnFire
// (Native, Public, BlueprintCallable)
// Parameters:
// class AMasterField*                     FireField                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBurnableComponent::SetOnFire(class AMasterField* FireField)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BurnableComponent", "SetOnFire");

	Params::BurnableComponent_SetOnFire Parms{};

	Parms.FireField = FireField;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.BurnableComponent.StartBurning
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Tick                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageAgent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatorController                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBurnableComponent::StartBurning(float Duration, float Damage, float Tick, class AActor* DamageAgent, class AController* InstigatorController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BurnableComponent", "StartBurning");

	Params::BurnableComponent_StartBurning Parms{};

	Parms.Duration = Duration;
	Parms.Damage = Damage;
	Parms.Tick = Tick;
	Parms.DamageAgent = DamageAgent;
	Parms.InstigatorController = InstigatorController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.BurnableComponent.StartBurningCosmetic
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UBurnableComponent::StartBurningCosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BurnableComponent", "StartBurningCosmetic");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.BurnableComponent.StopBurningCosmetic
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UBurnableComponent::StopBurningCosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BurnableComponent", "StopBurningCosmetic");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.BurnableComponent.GetIsBurning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBurnableComponent::GetIsBurning() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BurnableComponent", "GetIsBurning");

	Params::BurnableComponent_GetIsBurning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.VehicleBase.LookUp
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAbsolute                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVehicleBase::LookUp(float Value, bool bIsAbsolute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "LookUp");

	Params::VehicleBase_LookUp Parms{};

	Parms.Value = Value;
	Parms.bIsAbsolute = bIsAbsolute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.VehicleBase.LookUpAtRate
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVehicleBase::LookUpAtRate(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "LookUpAtRate");

	Params::VehicleBase_LookUpAtRate Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.VehicleBase.LookUpNotAbsolute
// (Final, Native, Public)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVehicleBase::LookUpNotAbsolute(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "LookUpNotAbsolute");

	Params::VehicleBase_LookUpNotAbsolute Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.VehicleBase.NetStateSend
// (Final, Native, Protected)

void AVehicleBase::NetStateSend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "NetStateSend");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.VehicleBase.OnDeath
// (Native, Protected)

void AVehicleBase::OnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "OnDeath");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.VehicleBase.OnDied
// (Native, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMordhauDamageType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SubType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Point                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Agent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVehicleBase::OnDied(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "OnDied");

	Params::VehicleBase_OnDied Parms{};

	Parms.Angle = Angle;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Source = Source;
	Parms.Agent = Agent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.VehicleBase.OnRep_LatestState
// (Final, Native, Protected)

void AVehicleBase::OnRep_LatestState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "OnRep_LatestState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.VehicleBase.OnRep_ReplicatedLookUpValue
// (Final, Native, Protected)

void AVehicleBase::OnRep_ReplicatedLookUpValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "OnRep_ReplicatedLookUpValue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.VehicleBase.OnRep_ReplicatedVehicleFlags
// (Final, Native, Protected)

void AVehicleBase::OnRep_ReplicatedVehicleFlags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "OnRep_ReplicatedVehicleFlags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.VehicleBase.OnTookDamage
// (Native, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// bool                                    bWillKill                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMordhauDamageType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SubType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Point                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Agent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVehicleBase::OnTookDamage(bool bWillKill, EMordhauDamageType Type, uint8 SubType, const class FName& bone, const struct FVector& Point, class AActor* Source, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "OnTookDamage");

	Params::VehicleBase_OnTookDamage Parms{};

	Parms.bWillKill = bWillKill;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Source = Source;
	Parms.Agent = Agent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.VehicleBase.PlaySound
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USoundBase*                       Sound                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachLocation                         AttachLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAttach                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAttenuation*                Override                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumeMultiplier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PitchMultiplier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* AVehicleBase::PlaySound(class USoundBase* Sound, class FName bone, const struct FVector& InLocation, EAttachLocation AttachLocation, bool bAttach, class USoundAttenuation* Override, float VolumeMultiplier, float PitchMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "PlaySound");

	Params::VehicleBase_PlaySound Parms{};

	Parms.Sound = Sound;
	Parms.bone = bone;
	Parms.InLocation = std::move(InLocation);
	Parms.AttachLocation = AttachLocation;
	Parms.bAttach = bAttach;
	Parms.Override = Override;
	Parms.VolumeMultiplier = VolumeMultiplier;
	Parms.PitchMultiplier = PitchMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.VehicleBase.PostInteractionWidgetCreated
// (Event, Protected, BlueprintEvent)

void AVehicleBase::PostInteractionWidgetCreated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "PostInteractionWidgetCreated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.VehicleBase.Server_Reliable_RequestUse
// (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable, NetValidate)

void AVehicleBase::Server_Reliable_RequestUse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "Server_Reliable_RequestUse");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.VehicleBase.Server_SetForward
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                                   InForward                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVehicleBase::Server_SetForward(float InForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "Server_SetForward");

	Params::VehicleBase_Server_SetForward Parms{};

	Parms.InForward = InForward;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.VehicleBase.Server_SetRight
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                                   InRight                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVehicleBase::Server_SetRight(float InRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "Server_SetRight");

	Params::VehicleBase_Server_SetRight Parms{};

	Parms.InRight = InRight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.VehicleBase.Server_Unreliable_LookUp
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                                   NewLookUp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVehicleBase::Server_Unreliable_LookUp(float NewLookUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "Server_Unreliable_LookUp");

	Params::VehicleBase_Server_Unreliable_LookUp Parms{};

	Parms.NewLookUp = NewLookUp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.VehicleBase.SpawnParticlesAttached
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UParticleSystem*                  Particle                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// EAttachLocation                         AttachType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Socket                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UParticleSystemComponent*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UParticleSystemComponent* AVehicleBase::SpawnParticlesAttached(class UParticleSystem* Particle, const struct FVector& Location, const struct FRotator& Rotation, EAttachLocation AttachType, class FName Socket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "SpawnParticlesAttached");

	Params::VehicleBase_SpawnParticlesAttached Parms{};

	Parms.Particle = Particle;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.AttachType = AttachType;
	Parms.Socket = Socket;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.VehicleBase.GetDriver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMordhauCharacter*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauCharacter* AVehicleBase::GetDriver() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "GetDriver");

	Params::VehicleBase_GetDriver Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.VehicleBase.GetLookUpValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AVehicleBase::GetLookUpValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "GetLookUpValue");

	Params::VehicleBase_GetLookUpValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.VehicleBase.GetRawLookUpValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AVehicleBase::GetRawLookUpValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase", "GetRawLookUpValue");

	Params::VehicleBase_GetRawLookUpValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.JoinMatchmakingMatch.JoinMatchmakingMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabMatchmakingMatch         Match_0                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UJoinMatchmakingMatch*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UJoinMatchmakingMatch* UJoinMatchmakingMatch::JoinMatchmakingMatch(const struct FPlayFabMatchmakingMatch& Match_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("JoinMatchmakingMatch", "JoinMatchmakingMatch");

	Params::JoinMatchmakingMatch_JoinMatchmakingMatch Parms{};

	Parms.Match_0 = std::move(Match_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.CapturePointBanner.InitializeBanner
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AControlPoint*                    OwningPoint                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACapturePointBanner::InitializeBanner(class AControlPoint* OwningPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CapturePointBanner", "InitializeBanner");

	Params::CapturePointBanner_InitializeBanner Parms{};

	Parms.OwningPoint = OwningPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CapturePointBanner.UpdateVisuals
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ACapturePointBanner::UpdateVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CapturePointBanner", "UpdateVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.ApplyAudioVolumes
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameUserSettings::ApplyAudioVolumes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ApplyAudioVolumes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.CheckAndUpdateDeviceSpecificParameters
// (Final, Native, Public)

void UMordhauGameUserSettings::CheckAndUpdateDeviceSpecificParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "CheckAndUpdateDeviceSpecificParameters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.GetCrossplayEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::GetCrossplayEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetCrossplayEnabled");

	Params::MordhauGameUserSettings_GetCrossplayEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetPlatformSpecific
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlatformSpecific                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlatformSpecific UMordhauGameUserSettings::GetPlatformSpecific()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetPlatformSpecific");

	Params::MordhauGameUserSettings_GetPlatformSpecific Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetPSNLockEnabledValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::GetPSNLockEnabledValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetPSNLockEnabledValue");

	Params::MordhauGameUserSettings_GetPSNLockEnabledValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetSelectedGameModePlayerCounts
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           GameMode                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UMordhauGameUserSettings::GetSelectedGameModePlayerCounts(const class FString& GameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetSelectedGameModePlayerCounts");

	Params::MordhauGameUserSettings_GetSelectedGameModePlayerCounts Parms{};

	Parms.GameMode = std::move(GameMode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetServerFilterValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EServerFilterCategories                 FilterCategory                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UMordhauGameUserSettings::GetServerFilterValue(EServerFilterCategories FilterCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetServerFilterValue");

	Params::MordhauGameUserSettings_GetServerFilterValue Parms{};

	Parms.FilterCategory = FilterCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.SetAmbientOcclusion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewAmbientOcclusion                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetAmbientOcclusion(int32 NewAmbientOcclusion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetAmbientOcclusion");

	Params::MordhauGameUserSettings_SetAmbientOcclusion Parms{};

	Parms.NewAmbientOcclusion = NewAmbientOcclusion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetAntiAliasing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewAntiAliasing                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetAntiAliasing(int32 NewAntiAliasing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetAntiAliasing");

	Params::MordhauGameUserSettings_SetAntiAliasing Parms{};

	Parms.NewAntiAliasing = NewAntiAliasing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetBloom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewBloom                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetBloom(float NewBloom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetBloom");

	Params::MordhauGameUserSettings_SetBloom Parms{};

	Parms.NewBloom = NewBloom;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetCameraDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewCameraDistance                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetCameraDistance(float NewCameraDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetCameraDistance");

	Params::MordhauGameUserSettings_SetCameraDistance Parms{};

	Parms.NewCameraDistance = NewCameraDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetCasualMatchmakingGameModes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   NewGameModes                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetCasualMatchmakingGameModes(const TArray<class FString>& NewGameModes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetCasualMatchmakingGameModes");

	Params::MordhauGameUserSettings_SetCasualMatchmakingGameModes Parms{};

	Parms.NewGameModes = std::move(NewGameModes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetCasualMatchmakingRegion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EServerRegion                           NewRegion                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetCasualMatchmakingRegion(EServerRegion NewRegion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetCasualMatchmakingRegion");

	Params::MordhauGameUserSettings_SetCasualMatchmakingRegion Parms{};

	Parms.NewRegion = NewRegion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetCharacterCloth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewCharacterCloth                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetCharacterCloth(int32 NewCharacterCloth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetCharacterCloth");

	Params::MordhauGameUserSettings_SetCharacterCloth Parms{};

	Parms.NewCharacterCloth = NewCharacterCloth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetCharacterFidelity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewFidelity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetCharacterFidelity(int32 NewFidelity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetCharacterFidelity");

	Params::MordhauGameUserSettings_SetCharacterFidelity Parms{};

	Parms.NewFidelity = NewFidelity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetCombatHeadbob
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewCombatHeadbob                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetCombatHeadbob(float NewCombatHeadbob)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetCombatHeadbob");

	Params::MordhauGameUserSettings_SetCombatHeadbob Parms{};

	Parms.NewCombatHeadbob = NewCombatHeadbob;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetCrosshairType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewCrosshairType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetCrosshairType(int32 NewCrosshairType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetCrosshairType");

	Params::MordhauGameUserSettings_SetCrosshairType Parms{};

	Parms.NewCrosshairType = NewCrosshairType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetCrossplayEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetCrossplayEnabled(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetCrossplayEnabled");

	Params::MordhauGameUserSettings_SetCrossplayEnabled Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetDefaultRangedSensitivity
// (Final, Native, Public, BlueprintCallable)

void UMordhauGameUserSettings::SetDefaultRangedSensitivity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetDefaultRangedSensitivity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetDrawTracers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewDrawTracers                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetDrawTracers(int32 NewDrawTracers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetDrawTracers");

	Params::MordhauGameUserSettings_SetDrawTracers Parms{};

	Parms.NewDrawTracers = NewDrawTracers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetEffectsVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewVolume                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetEffectsVolume(float NewVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetEffectsVolume");

	Params::MordhauGameUserSettings_SetEffectsVolume Parms{};

	Parms.NewVolume = NewVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetFavoriteServers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   NewFavoriteServers                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetFavoriteServers(const TArray<class FString>& NewFavoriteServers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetFavoriteServers");

	Params::MordhauGameUserSettings_SetFavoriteServers Parms{};

	Parms.NewFavoriteServers = std::move(NewFavoriteServers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetFieldOfView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewFOV                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetFieldOfView(float NewFOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetFieldOfView");

	Params::MordhauGameUserSettings_SetFieldOfView Parms{};

	Parms.NewFOV = NewFOV;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetForceFeedbackEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enabled                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetForceFeedbackEnabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetForceFeedbackEnabled");

	Params::MordhauGameUserSettings_SetForceFeedbackEnabled Parms{};

	Parms.Enabled = Enabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetFriendlyMarkers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewFriendlyMarkers                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetFriendlyMarkers(int32 NewFriendlyMarkers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetFriendlyMarkers");

	Params::MordhauGameUserSettings_SetFriendlyMarkers Parms{};

	Parms.NewFriendlyMarkers = NewFriendlyMarkers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetGamma
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewGamma                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetGamma(float NewGamma)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetGamma");

	Params::MordhauGameUserSettings_SetGamma Parms{};

	Parms.NewGamma = NewGamma;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetGore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewGore                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetGore(int32 NewGore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetGore");

	Params::MordhauGameUserSettings_SetGore Parms{};

	Parms.NewGore = NewGore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetHeadbob
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewHeadbob                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetHeadbob(float NewHeadbob)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetHeadbob");

	Params::MordhauGameUserSettings_SetHeadbob Parms{};

	Parms.NewHeadbob = NewHeadbob;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetHideDefaultLoadouts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewHideDefaultLoadouts                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetHideDefaultLoadouts(int32 NewHideDefaultLoadouts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetHideDefaultLoadouts");

	Params::MordhauGameUserSettings_SetHideDefaultLoadouts Parms{};

	Parms.NewHideDefaultLoadouts = NewHideDefaultLoadouts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetHideHUD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewHideHUD                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetHideHUD(int32 NewHideHUD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetHideHUD");

	Params::MordhauGameUserSettings_SetHideHUD Parms{};

	Parms.NewHideHUD = NewHideHUD;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetHideWatermark
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewHideWatermark                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetHideWatermark(int32 NewHideWatermark)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetHideWatermark");

	Params::MordhauGameUserSettings_SetHideWatermark Parms{};

	Parms.NewHideWatermark = NewHideWatermark;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetIndirectCapsuleShadows
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewShadows                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetIndirectCapsuleShadows(int32 NewShadows)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetIndirectCapsuleShadows");

	Params::MordhauGameUserSettings_SetIndirectCapsuleShadows Parms{};

	Parms.NewShadows = NewShadows;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetInstrumentsVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewVolume                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetInstrumentsVolume(float NewVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetInstrumentsVolume");

	Params::MordhauGameUserSettings_SetInstrumentsVolume Parms{};

	Parms.NewVolume = NewVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetLanguage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NewLanguage                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetLanguage(const class FString& NewLanguage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetLanguage");

	Params::MordhauGameUserSettings_SetLanguage Parms{};

	Parms.NewLanguage = std::move(NewLanguage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetLensFlares
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewLensFlares                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetLensFlares(int32 NewLensFlares)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetLensFlares");

	Params::MordhauGameUserSettings_SetLensFlares Parms{};

	Parms.NewLensFlares = NewLensFlares;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetMasterVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewVolume                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetMasterVolume(float NewVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetMasterVolume");

	Params::MordhauGameUserSettings_SetMasterVolume Parms{};

	Parms.NewVolume = NewVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetMaxRagdolls
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewMax                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetMaxRagdolls(int32 NewMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetMaxRagdolls");

	Params::MordhauGameUserSettings_SetMaxRagdolls Parms{};

	Parms.NewMax = NewMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetMotionBlur
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewMotionBlur                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetMotionBlur(float NewMotionBlur)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetMotionBlur");

	Params::MordhauGameUserSettings_SetMotionBlur Parms{};

	Parms.NewMotionBlur = NewMotionBlur;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetMouseSmoothing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewSmoothing                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetMouseSmoothing(float NewSmoothing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetMouseSmoothing");

	Params::MordhauGameUserSettings_SetMouseSmoothing Parms{};

	Parms.NewSmoothing = NewSmoothing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetMovementHeadbob
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewMovementHeadbob                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetMovementHeadbob(float NewMovementHeadbob)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetMovementHeadbob");

	Params::MordhauGameUserSettings_SetMovementHeadbob Parms{};

	Parms.NewMovementHeadbob = NewMovementHeadbob;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetMusicVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewVolume                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetMusicVolume(float NewVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetMusicVolume");

	Params::MordhauGameUserSettings_SetMusicVolume Parms{};

	Parms.NewVolume = NewVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetNoTeamColorsOnGear
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewNoTeamColorsOnGear                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetNoTeamColorsOnGear(int32 NewNoTeamColorsOnGear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetNoTeamColorsOnGear");

	Params::MordhauGameUserSettings_SetNoTeamColorsOnGear Parms{};

	Parms.NewNoTeamColorsOnGear = NewNoTeamColorsOnGear;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetNvidiaReflex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewNvidiaReflex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetNvidiaReflex(int32 NewNvidiaReflex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetNvidiaReflex");

	Params::MordhauGameUserSettings_SetNvidiaReflex Parms{};

	Parms.NewNvidiaReflex = NewNvidiaReflex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetPlatformSpecific
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlatformSpecific                       NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetPlatformSpecific(EPlatformSpecific NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetPlatformSpecific");

	Params::MordhauGameUserSettings_SetPlatformSpecific Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetProfanityFilter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewProfanityFilter                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetProfanityFilter(int32 NewProfanityFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetProfanityFilter");

	Params::MordhauGameUserSettings_SetProfanityFilter Parms{};

	Parms.NewProfanityFilter = NewProfanityFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetQuickSpawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewQuickSpawn                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetQuickSpawn(int32 NewQuickSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetQuickSpawn");

	Params::MordhauGameUserSettings_SetQuickSpawn Parms{};

	Parms.NewQuickSpawn = NewQuickSpawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetRagdollFidelity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewFidelity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetRagdollFidelity(int32 NewFidelity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetRagdollFidelity");

	Params::MordhauGameUserSettings_SetRagdollFidelity Parms{};

	Parms.NewFidelity = NewFidelity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetRagdollStayTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetRagdollStayTime(float NewTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetRagdollStayTime");

	Params::MordhauGameUserSettings_SetRagdollStayTime Parms{};

	Parms.NewTime = NewTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetRangedSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewRangedSensitivity                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetRangedSensitivity(float NewRangedSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetRangedSensitivity");

	Params::MordhauGameUserSettings_SetRangedSensitivity Parms{};

	Parms.NewRangedSensitivity = NewRangedSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetRankedMatchmakingGameModes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   NewGameModes                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetRankedMatchmakingGameModes(const TArray<class FString>& NewGameModes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetRankedMatchmakingGameModes");

	Params::MordhauGameUserSettings_SetRankedMatchmakingGameModes Parms{};

	Parms.NewGameModes = std::move(NewGameModes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetRankedMatchmakingRegion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EServerRegion                           NewRegion                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetRankedMatchmakingRegion(EServerRegion NewRegion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetRankedMatchmakingRegion");

	Params::MordhauGameUserSettings_SetRankedMatchmakingRegion Parms{};

	Parms.NewRegion = NewRegion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetRecentServers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   NewRecentServers                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetRecentServers(const TArray<class FString>& NewRecentServers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetRecentServers");

	Params::MordhauGameUserSettings_SetRecentServers Parms{};

	Parms.NewRecentServers = std::move(NewRecentServers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetScreenPercentage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewScreenPercentage                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetScreenPercentage(float NewScreenPercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetScreenPercentage");

	Params::MordhauGameUserSettings_SetScreenPercentage Parms{};

	Parms.NewScreenPercentage = NewScreenPercentage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetScreenSpaceReflections
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewScreenSpaceReflections                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetScreenSpaceReflections(int32 NewScreenSpaceReflections)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetScreenSpaceReflections");

	Params::MordhauGameUserSettings_SetScreenSpaceReflections Parms{};

	Parms.NewScreenSpaceReflections = NewScreenSpaceReflections;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetSelectedGameModePlayerCounts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           GameMode                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           SelectedPlayerCounts                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetSelectedGameModePlayerCounts(const class FString& GameMode, const TArray<int32>& SelectedPlayerCounts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetSelectedGameModePlayerCounts");

	Params::MordhauGameUserSettings_SetSelectedGameModePlayerCounts Parms{};

	Parms.GameMode = std::move(GameMode);
	Parms.SelectedPlayerCounts = std::move(SelectedPlayerCounts);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetServerBrowserGameMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NewGameMode                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetServerBrowserGameMode(const class FString& NewGameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetServerBrowserGameMode");

	Params::MordhauGameUserSettings_SetServerBrowserGameMode Parms{};

	Parms.NewGameMode = std::move(NewGameMode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetServerBrowserHasPlayers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewHasPlayers                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetServerBrowserHasPlayers(bool bNewHasPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetServerBrowserHasPlayers");

	Params::MordhauGameUserSettings_SetServerBrowserHasPlayers Parms{};

	Parms.bNewHasPlayers = bNewHasPlayers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetServerBrowserIsConsoleServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewIsOfficial                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetServerBrowserIsConsoleServer(bool bNewIsOfficial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetServerBrowserIsConsoleServer");

	Params::MordhauGameUserSettings_SetServerBrowserIsConsoleServer Parms{};

	Parms.bNewIsOfficial = bNewIsOfficial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetServerBrowserIsOfficial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewIsOfficial                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetServerBrowserIsOfficial(bool bNewIsOfficial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetServerBrowserIsOfficial");

	Params::MordhauGameUserSettings_SetServerBrowserIsOfficial Parms{};

	Parms.bNewIsOfficial = bNewIsOfficial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetServerBrowserMaxPing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewMaxPing                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetServerBrowserMaxPing(int32 NewMaxPing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetServerBrowserMaxPing");

	Params::MordhauGameUserSettings_SetServerBrowserMaxPing Parms{};

	Parms.NewMaxPing = NewMaxPing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetServerBrowserNoPassword
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewNoPassword                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetServerBrowserNoPassword(bool bNewNoPassword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetServerBrowserNoPassword");

	Params::MordhauGameUserSettings_SetServerBrowserNoPassword Parms{};

	Parms.bNewNoPassword = bNewNoPassword;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetServerBrowserNotFull
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewNotFull                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetServerBrowserNotFull(bool bNewNotFull)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetServerBrowserNotFull");

	Params::MordhauGameUserSettings_SetServerBrowserNotFull Parms{};

	Parms.bNewNotFull = bNewNotFull;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetServerBrowserServerName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NewServerName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetServerBrowserServerName(const class FString& NewServerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetServerBrowserServerName");

	Params::MordhauGameUserSettings_SetServerBrowserServerName Parms{};

	Parms.NewServerName = std::move(NewServerName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetServerBrowserSortType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NewSortType                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetServerBrowserSortType(const class FString& NewSortType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetServerBrowserSortType");

	Params::MordhauGameUserSettings_SetServerBrowserSortType Parms{};

	Parms.NewSortType = std::move(NewSortType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetServerFilter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EServerFilterCategories                 FilterCategory                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetServerFilter(EServerFilterCategories FilterCategory, uint8 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetServerFilter");

	Params::MordhauGameUserSettings_SetServerFilter Parms{};

	Parms.FilterCategory = FilterCategory;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetShowAmmo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewShowAmmo                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetShowAmmo(int32 NewShowAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetShowAmmo");

	Params::MordhauGameUserSettings_SetShowAmmo Parms{};

	Parms.NewShowAmmo = NewShowAmmo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetShowAnnouncements
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewShowAnnouncements                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetShowAnnouncements(int32 NewShowAnnouncements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetShowAnnouncements");

	Params::MordhauGameUserSettings_SetShowAnnouncements Parms{};

	Parms.NewShowAnnouncements = NewShowAnnouncements;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetShowChatBox
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewShowChatBox                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetShowChatBox(int32 NewShowChatBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetShowChatBox");

	Params::MordhauGameUserSettings_SetShowChatBox Parms{};

	Parms.NewShowChatBox = NewShowChatBox;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetShowCombatHints
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewShowCombatHints                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetShowCombatHints(int32 NewShowCombatHints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetShowCombatHints");

	Params::MordhauGameUserSettings_SetShowCombatHints Parms{};

	Parms.NewShowCombatHints = NewShowCombatHints;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetShowEmotesMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewEmotesMenu                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetShowEmotesMenu(int32 NewEmotesMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetShowEmotesMenu");

	Params::MordhauGameUserSettings_SetShowEmotesMenu Parms{};

	Parms.NewEmotesMenu = NewEmotesMenu;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetShowEquipment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewShowEquipment                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetShowEquipment(int32 NewShowEquipment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetShowEquipment");

	Params::MordhauGameUserSettings_SetShowEquipment Parms{};

	Parms.NewShowEquipment = NewShowEquipment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetShowHitMarker
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewShowHitMarker                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetShowHitMarker(int32 NewShowHitMarker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetShowHitMarker");

	Params::MordhauGameUserSettings_SetShowHitMarker Parms{};

	Parms.NewShowHitMarker = NewShowHitMarker;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetShowKilledBy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewShowKilledBy                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetShowKilledBy(int32 NewShowKilledBy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetShowKilledBy");

	Params::MordhauGameUserSettings_SetShowKilledBy Parms{};

	Parms.NewShowKilledBy = NewShowKilledBy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetShowKillFeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewShowKillFeed                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetShowKillFeed(int32 NewShowKillFeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetShowKillFeed");

	Params::MordhauGameUserSettings_SetShowKillFeed Parms{};

	Parms.NewShowKillFeed = NewShowKillFeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetShowMatchmakingDebug
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewShowMatchmakingDebug                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetShowMatchmakingDebug(int32 NewShowMatchmakingDebug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetShowMatchmakingDebug");

	Params::MordhauGameUserSettings_SetShowMatchmakingDebug Parms{};

	Parms.NewShowMatchmakingDebug = NewShowMatchmakingDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetShowObjectives
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewShowObjectives                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetShowObjectives(int32 NewShowObjectives)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetShowObjectives");

	Params::MordhauGameUserSettings_SetShowObjectives Parms{};

	Parms.NewShowObjectives = NewShowObjectives;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetShowObservedDelay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewShowObservedDelay                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetShowObservedDelay(int32 NewShowObservedDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetShowObservedDelay");

	Params::MordhauGameUserSettings_SetShowObservedDelay Parms{};

	Parms.NewShowObservedDelay = NewShowObservedDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetShowScoreFeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewShowScoreFeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetShowScoreFeed(int32 NewShowScoreFeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetShowScoreFeed");

	Params::MordhauGameUserSettings_SetShowScoreFeed Parms{};

	Parms.NewShowScoreFeed = NewShowScoreFeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetShowServerInScoreboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewShowServerInScoreboard                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetShowServerInScoreboard(int32 NewShowServerInScoreboard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetShowServerInScoreboard");

	Params::MordhauGameUserSettings_SetShowServerInScoreboard Parms{};

	Parms.NewShowServerInScoreboard = NewShowServerInScoreboard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetShowSpawnInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewShowSpawnInfo                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetShowSpawnInfo(int32 NewShowSpawnInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetShowSpawnInfo");

	Params::MordhauGameUserSettings_SetShowSpawnInfo Parms{};

	Parms.NewShowSpawnInfo = NewShowSpawnInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetShowStatusBar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewShowStatusBar                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetShowStatusBar(int32 NewShowStatusBar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetShowStatusBar");

	Params::MordhauGameUserSettings_SetShowStatusBar Parms{};

	Parms.NewShowStatusBar = NewShowStatusBar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetShowTargetInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewShowTargetInfo                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetShowTargetInfo(int32 NewShowTargetInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetShowTargetInfo");

	Params::MordhauGameUserSettings_SetShowTargetInfo Parms{};

	Parms.NewShowTargetInfo = NewShowTargetInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetShowTips
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewShowTips                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetShowTips(int32 NewShowTips)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetShowTips");

	Params::MordhauGameUserSettings_SetShowTips Parms{};

	Parms.NewShowTips = NewShowTips;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetThirdPersonDeathcamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewThirdPersonDeathCamera                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetThirdPersonDeathcamera(int32 NewThirdPersonDeathCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetThirdPersonDeathcamera");

	Params::MordhauGameUserSettings_SetThirdPersonDeathcamera Parms{};

	Parms.NewThirdPersonDeathCamera = NewThirdPersonDeathCamera;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetTracersStayTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewStayTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetTracersStayTime(float NewStayTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetTracersStayTime");

	Params::MordhauGameUserSettings_SetTracersStayTime Parms{};

	Parms.NewStayTime = NewStayTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetVideoVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewVolume                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetVideoVolume(float NewVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetVideoVolume");

	Params::MordhauGameUserSettings_SetVideoVolume Parms{};

	Parms.NewVolume = NewVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.SetVoiceVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewVolume                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::SetVoiceVolume(float NewVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "SetVoiceVolume");

	Params::MordhauGameUserSettings_SetVoiceVolume Parms{};

	Parms.NewVolume = NewVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.ApplyTextureQualityUsingTextureGroups
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// int32                                   Quality                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::ApplyTextureQualityUsingTextureGroups(int32 Quality) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ApplyTextureQualityUsingTextureGroups");

	Params::MordhauGameUserSettings_ApplyTextureQualityUsingTextureGroups Parms{};

	Parms.Quality = Quality;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameUserSettings.GetActualCrosshairType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetActualCrosshairType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetActualCrosshairType");

	Params::MordhauGameUserSettings_GetActualCrosshairType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetAmbientOcclusion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetAmbientOcclusion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetAmbientOcclusion");

	Params::MordhauGameUserSettings_GetAmbientOcclusion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetAntiAliasing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetAntiAliasing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetAntiAliasing");

	Params::MordhauGameUserSettings_GetAntiAliasing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetAvailableLanguages
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   AvailableLanguages_0                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UMordhauGameUserSettings::GetAvailableLanguages(TArray<class FString>* AvailableLanguages_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetAvailableLanguages");

	Params::MordhauGameUserSettings_GetAvailableLanguages Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AvailableLanguages_0 != nullptr)
		*AvailableLanguages_0 = std::move(Parms.AvailableLanguages_0);
}


// Function Mordhau.MordhauGameUserSettings.GetBloom
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetBloom() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetBloom");

	Params::MordhauGameUserSettings_GetBloom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetBloomLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMordhauGameUserSettings::GetBloomLimits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetBloomLimits");

	Params::MordhauGameUserSettings_GetBloomLimits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetCameraDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetCameraDistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetCameraDistance");

	Params::MordhauGameUserSettings_GetCameraDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetCameraDistanceLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMordhauGameUserSettings::GetCameraDistanceLimits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetCameraDistanceLimits");

	Params::MordhauGameUserSettings_GetCameraDistanceLimits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetCasualMatchmakingGameModes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UMordhauGameUserSettings::GetCasualMatchmakingGameModes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetCasualMatchmakingGameModes");

	Params::MordhauGameUserSettings_GetCasualMatchmakingGameModes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetCasualMatchmakingRegion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EServerRegion                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EServerRegion UMordhauGameUserSettings::GetCasualMatchmakingRegion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetCasualMatchmakingRegion");

	Params::MordhauGameUserSettings_GetCasualMatchmakingRegion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetCharacterCloth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetCharacterCloth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetCharacterCloth");

	Params::MordhauGameUserSettings_GetCharacterCloth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetCharacterFidelity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetCharacterFidelity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetCharacterFidelity");

	Params::MordhauGameUserSettings_GetCharacterFidelity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetCombatHeadbob
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetCombatHeadbob() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetCombatHeadbob");

	Params::MordhauGameUserSettings_GetCombatHeadbob Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetCombatHeadbobLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMordhauGameUserSettings::GetCombatHeadbobLimits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetCombatHeadbobLimits");

	Params::MordhauGameUserSettings_GetCombatHeadbobLimits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetCrosshairType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetCrosshairType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetCrosshairType");

	Params::MordhauGameUserSettings_GetCrosshairType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetCurrentBloom
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetCurrentBloom() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetCurrentBloom");

	Params::MordhauGameUserSettings_GetCurrentBloom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetCurrentGamma
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetCurrentGamma() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetCurrentGamma");

	Params::MordhauGameUserSettings_GetCurrentGamma Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetCurrentMotionBlur
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetCurrentMotionBlur() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetCurrentMotionBlur");

	Params::MordhauGameUserSettings_GetCurrentMotionBlur Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetDrawTracers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetDrawTracers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetDrawTracers");

	Params::MordhauGameUserSettings_GetDrawTracers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetEffectsVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetEffectsVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetEffectsVolume");

	Params::MordhauGameUserSettings_GetEffectsVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetFavoriteServers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UMordhauGameUserSettings::GetFavoriteServers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetFavoriteServers");

	Params::MordhauGameUserSettings_GetFavoriteServers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetFieldOfView
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetFieldOfView() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetFieldOfView");

	Params::MordhauGameUserSettings_GetFieldOfView Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetFieldOfViewLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMordhauGameUserSettings::GetFieldOfViewLimits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetFieldOfViewLimits");

	Params::MordhauGameUserSettings_GetFieldOfViewLimits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetForceFeedbackEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::GetForceFeedbackEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetForceFeedbackEnabled");

	Params::MordhauGameUserSettings_GetForceFeedbackEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetFrameRateLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMordhauGameUserSettings::GetFrameRateLimits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetFrameRateLimits");

	Params::MordhauGameUserSettings_GetFrameRateLimits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetFriendlyMarkers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetFriendlyMarkers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetFriendlyMarkers");

	Params::MordhauGameUserSettings_GetFriendlyMarkers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetGamma
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetGamma() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetGamma");

	Params::MordhauGameUserSettings_GetGamma Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetGammaLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMordhauGameUserSettings::GetGammaLimits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetGammaLimits");

	Params::MordhauGameUserSettings_GetGammaLimits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetGore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetGore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetGore");

	Params::MordhauGameUserSettings_GetGore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetHeadbob
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetHeadbob() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetHeadbob");

	Params::MordhauGameUserSettings_GetHeadbob Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetHeadbobLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMordhauGameUserSettings::GetHeadbobLimits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetHeadbobLimits");

	Params::MordhauGameUserSettings_GetHeadbobLimits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetHideDefaultLoadouts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetHideDefaultLoadouts() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetHideDefaultLoadouts");

	Params::MordhauGameUserSettings_GetHideDefaultLoadouts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetHideHUD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetHideHUD() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetHideHUD");

	Params::MordhauGameUserSettings_GetHideHUD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetHideWatermark
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetHideWatermark() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetHideWatermark");

	Params::MordhauGameUserSettings_GetHideWatermark Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetIndirectCapsuleShadows
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetIndirectCapsuleShadows() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetIndirectCapsuleShadows");

	Params::MordhauGameUserSettings_GetIndirectCapsuleShadows Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetInstrumentsVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetInstrumentsVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetInstrumentsVolume");

	Params::MordhauGameUserSettings_GetInstrumentsVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetLanguage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauGameUserSettings::GetLanguage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetLanguage");

	Params::MordhauGameUserSettings_GetLanguage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetLensFlares
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetLensFlares() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetLensFlares");

	Params::MordhauGameUserSettings_GetLensFlares Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetMasterVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetMasterVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetMasterVolume");

	Params::MordhauGameUserSettings_GetMasterVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetMaxRagdolls
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetMaxRagdolls() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetMaxRagdolls");

	Params::MordhauGameUserSettings_GetMaxRagdolls Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetMaxRagdollsLimit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetMaxRagdollsLimit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetMaxRagdollsLimit");

	Params::MordhauGameUserSettings_GetMaxRagdollsLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetMotionBlur
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetMotionBlur() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetMotionBlur");

	Params::MordhauGameUserSettings_GetMotionBlur Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetMotionBlurLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMordhauGameUserSettings::GetMotionBlurLimits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetMotionBlurLimits");

	Params::MordhauGameUserSettings_GetMotionBlurLimits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetMouseSmoothing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetMouseSmoothing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetMouseSmoothing");

	Params::MordhauGameUserSettings_GetMouseSmoothing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetMouseSmoothingLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMordhauGameUserSettings::GetMouseSmoothingLimits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetMouseSmoothingLimits");

	Params::MordhauGameUserSettings_GetMouseSmoothingLimits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetMovementHeadbob
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetMovementHeadbob() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetMovementHeadbob");

	Params::MordhauGameUserSettings_GetMovementHeadbob Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetMovementHeadbobLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMordhauGameUserSettings::GetMovementHeadbobLimits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetMovementHeadbobLimits");

	Params::MordhauGameUserSettings_GetMovementHeadbobLimits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetMusicVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetMusicVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetMusicVolume");

	Params::MordhauGameUserSettings_GetMusicVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetNoTeamColorsOnGear
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetNoTeamColorsOnGear() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetNoTeamColorsOnGear");

	Params::MordhauGameUserSettings_GetNoTeamColorsOnGear Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetNvidiaReflex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetNvidiaReflex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetNvidiaReflex");

	Params::MordhauGameUserSettings_GetNvidiaReflex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetProfanityFilter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetProfanityFilter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetProfanityFilter");

	Params::MordhauGameUserSettings_GetProfanityFilter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetQuickSpawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetQuickSpawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetQuickSpawn");

	Params::MordhauGameUserSettings_GetQuickSpawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetRagdollFidelity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetRagdollFidelity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetRagdollFidelity");

	Params::MordhauGameUserSettings_GetRagdollFidelity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetRagdollStayTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetRagdollStayTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetRagdollStayTime");

	Params::MordhauGameUserSettings_GetRagdollStayTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetRagdollStayTimeLimit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetRagdollStayTimeLimit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetRagdollStayTimeLimit");

	Params::MordhauGameUserSettings_GetRagdollStayTimeLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetRangedSensitivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetRangedSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetRangedSensitivity");

	Params::MordhauGameUserSettings_GetRangedSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetRangedSensitivityLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMordhauGameUserSettings::GetRangedSensitivityLimits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetRangedSensitivityLimits");

	Params::MordhauGameUserSettings_GetRangedSensitivityLimits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetRankedMatchmakingGameModes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UMordhauGameUserSettings::GetRankedMatchmakingGameModes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetRankedMatchmakingGameModes");

	Params::MordhauGameUserSettings_GetRankedMatchmakingGameModes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetRankedMatchmakingRegion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EServerRegion                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EServerRegion UMordhauGameUserSettings::GetRankedMatchmakingRegion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetRankedMatchmakingRegion");

	Params::MordhauGameUserSettings_GetRankedMatchmakingRegion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetRecentServers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UMordhauGameUserSettings::GetRecentServers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetRecentServers");

	Params::MordhauGameUserSettings_GetRecentServers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetScreenPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetScreenPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetScreenPercentage");

	Params::MordhauGameUserSettings_GetScreenPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetScreenPercentageLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMordhauGameUserSettings::GetScreenPercentageLimits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetScreenPercentageLimits");

	Params::MordhauGameUserSettings_GetScreenPercentageLimits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetScreenSpaceReflections
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetScreenSpaceReflections() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetScreenSpaceReflections");

	Params::MordhauGameUserSettings_GetScreenSpaceReflections Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetServerBrowserGameMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauGameUserSettings::GetServerBrowserGameMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetServerBrowserGameMode");

	Params::MordhauGameUserSettings_GetServerBrowserGameMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetServerBrowserHasPlayers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::GetServerBrowserHasPlayers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetServerBrowserHasPlayers");

	Params::MordhauGameUserSettings_GetServerBrowserHasPlayers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetServerBrowserIsConsoleServer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::GetServerBrowserIsConsoleServer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetServerBrowserIsConsoleServer");

	Params::MordhauGameUserSettings_GetServerBrowserIsConsoleServer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetServerBrowserIsOfficial
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::GetServerBrowserIsOfficial() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetServerBrowserIsOfficial");

	Params::MordhauGameUserSettings_GetServerBrowserIsOfficial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetServerBrowserMaxPing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetServerBrowserMaxPing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetServerBrowserMaxPing");

	Params::MordhauGameUserSettings_GetServerBrowserMaxPing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetServerBrowserNoPassword
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::GetServerBrowserNoPassword() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetServerBrowserNoPassword");

	Params::MordhauGameUserSettings_GetServerBrowserNoPassword Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetServerBrowserNotFull
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::GetServerBrowserNotFull() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetServerBrowserNotFull");

	Params::MordhauGameUserSettings_GetServerBrowserNotFull Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetServerBrowserServerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauGameUserSettings::GetServerBrowserServerName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetServerBrowserServerName");

	Params::MordhauGameUserSettings_GetServerBrowserServerName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetServerBrowserSortType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauGameUserSettings::GetServerBrowserSortType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetServerBrowserSortType");

	Params::MordhauGameUserSettings_GetServerBrowserSortType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetShowAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetShowAmmo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetShowAmmo");

	Params::MordhauGameUserSettings_GetShowAmmo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetShowAnnouncements
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetShowAnnouncements() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetShowAnnouncements");

	Params::MordhauGameUserSettings_GetShowAnnouncements Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetShowChatBox
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetShowChatBox() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetShowChatBox");

	Params::MordhauGameUserSettings_GetShowChatBox Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetShowCombatHints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetShowCombatHints() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetShowCombatHints");

	Params::MordhauGameUserSettings_GetShowCombatHints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetShowEmotesMenu
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetShowEmotesMenu() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetShowEmotesMenu");

	Params::MordhauGameUserSettings_GetShowEmotesMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetShowEquipment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetShowEquipment() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetShowEquipment");

	Params::MordhauGameUserSettings_GetShowEquipment Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetShowHitMarker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetShowHitMarker() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetShowHitMarker");

	Params::MordhauGameUserSettings_GetShowHitMarker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetShowKilledBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetShowKilledBy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetShowKilledBy");

	Params::MordhauGameUserSettings_GetShowKilledBy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetShowKillFeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetShowKillFeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetShowKillFeed");

	Params::MordhauGameUserSettings_GetShowKillFeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetShowObjectives
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetShowObjectives() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetShowObjectives");

	Params::MordhauGameUserSettings_GetShowObjectives Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetShowObservedDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetShowObservedDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetShowObservedDelay");

	Params::MordhauGameUserSettings_GetShowObservedDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetShowScoreFeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetShowScoreFeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetShowScoreFeed");

	Params::MordhauGameUserSettings_GetShowScoreFeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetShowServerInScoreboard
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetShowServerInScoreboard() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetShowServerInScoreboard");

	Params::MordhauGameUserSettings_GetShowServerInScoreboard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetShowSpawnInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetShowSpawnInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetShowSpawnInfo");

	Params::MordhauGameUserSettings_GetShowSpawnInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetShowStatusBar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetShowStatusBar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetShowStatusBar");

	Params::MordhauGameUserSettings_GetShowStatusBar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetShowTargetInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetShowTargetInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetShowTargetInfo");

	Params::MordhauGameUserSettings_GetShowTargetInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetShowTips
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetShowTips() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetShowTips");

	Params::MordhauGameUserSettings_GetShowTips Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetThirdPersonDeathCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauGameUserSettings::GetThirdPersonDeathCamera() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetThirdPersonDeathCamera");

	Params::MordhauGameUserSettings_GetThirdPersonDeathCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetTracersStayTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetTracersStayTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetTracersStayTime");

	Params::MordhauGameUserSettings_GetTracersStayTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetTracersStayTimeLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMordhauGameUserSettings::GetTracersStayTimeLimits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetTracersStayTimeLimits");

	Params::MordhauGameUserSettings_GetTracersStayTimeLimits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetVideoVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetVideoVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetVideoVolume");

	Params::MordhauGameUserSettings_GetVideoVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetVoiceVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauGameUserSettings::GetVoiceVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetVoiceVolume");

	Params::MordhauGameUserSettings_GetVoiceVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.GetXboxSandboxID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauGameUserSettings::GetXboxSandboxID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "GetXboxSandboxID");

	Params::MordhauGameUserSettings_GetXboxSandboxID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldDrawTracers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldDrawTracers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldDrawTracers");

	Params::MordhauGameUserSettings_ShouldDrawTracers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldQuickSpawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldQuickSpawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldQuickSpawn");

	Params::MordhauGameUserSettings_ShouldQuickSpawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowAmmo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowAmmo");

	Params::MordhauGameUserSettings_ShouldShowAmmo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowAnnouncements
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowAnnouncements() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowAnnouncements");

	Params::MordhauGameUserSettings_ShouldShowAnnouncements Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowBlood
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowBlood() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowBlood");

	Params::MordhauGameUserSettings_ShouldShowBlood Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowChatBox
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowChatBox() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowChatBox");

	Params::MordhauGameUserSettings_ShouldShowChatBox Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowEmotesMenu
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowEmotesMenu() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowEmotesMenu");

	Params::MordhauGameUserSettings_ShouldShowEmotesMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowEquipment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowEquipment() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowEquipment");

	Params::MordhauGameUserSettings_ShouldShowEquipment Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowHitMarker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowHitMarker() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowHitMarker");

	Params::MordhauGameUserSettings_ShouldShowHitMarker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowHUD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowHUD() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowHUD");

	Params::MordhauGameUserSettings_ShouldShowHUD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowKilledBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowKilledBy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowKilledBy");

	Params::MordhauGameUserSettings_ShouldShowKilledBy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowKillFeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowKillFeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowKillFeed");

	Params::MordhauGameUserSettings_ShouldShowKillFeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowMatchmakingDebug
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowMatchmakingDebug() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowMatchmakingDebug");

	Params::MordhauGameUserSettings_ShouldShowMatchmakingDebug Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowObjectives
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowObjectives() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowObjectives");

	Params::MordhauGameUserSettings_ShouldShowObjectives Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowObservedDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowObservedDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowObservedDelay");

	Params::MordhauGameUserSettings_ShouldShowObservedDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowScoreFeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowScoreFeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowScoreFeed");

	Params::MordhauGameUserSettings_ShouldShowScoreFeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowServerInScoreboard
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowServerInScoreboard() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowServerInScoreboard");

	Params::MordhauGameUserSettings_ShouldShowServerInScoreboard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowSpawnInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowSpawnInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowSpawnInfo");

	Params::MordhauGameUserSettings_ShouldShowSpawnInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowStatusBar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowStatusBar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowStatusBar");

	Params::MordhauGameUserSettings_ShouldShowStatusBar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowTargetInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowTargetInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowTargetInfo");

	Params::MordhauGameUserSettings_ShouldShowTargetInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowTips
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowTips() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowTips");

	Params::MordhauGameUserSettings_ShouldShowTips Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameUserSettings.ShouldShowWatermark
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauGameUserSettings::ShouldShowWatermark() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameUserSettings", "ShouldShowWatermark");

	Params::MordhauGameUserSettings_ShouldShowWatermark Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.ProjectileShooterComponent.CheckProjectileMeshComponentReference
// (Final, Native, Private)

void UProjectileShooterComponent::CheckProjectileMeshComponentReference()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "CheckProjectileMeshComponentReference");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.ClearProjectileTrajectoryAddedInstances
// (Final, Native, Private)

void UProjectileShooterComponent::ClearProjectileTrajectoryAddedInstances()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "ClearProjectileTrajectoryAddedInstances");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.FireProjectile
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UProjectileShooterComponent::FireProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "FireProjectile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.InitializeProjectileTrajectory
// (Final, Native, Private)

void UProjectileShooterComponent::InitializeProjectileTrajectory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "InitializeProjectileTrajectory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.OnBuildingStageCompleted
// (Native, Event, Protected, BlueprintEvent)

void UProjectileShooterComponent::OnBuildingStageCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "OnBuildingStageCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.OnCharacterDestroyed
// (Native, Protected)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProjectileShooterComponent::OnCharacterDestroyed(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "OnCharacterDestroyed");

	Params::ProjectileShooterComponent_OnCharacterDestroyed Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.OnCharacterDied
// (Native, Protected)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProjectileShooterComponent::OnCharacterDied(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "OnCharacterDied");

	Params::ProjectileShooterComponent_OnCharacterDied Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.OnFirePressed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UProjectileShooterComponent::OnFirePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "OnFirePressed");

	Params::ProjectileShooterComponent_OnFirePressed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.ProjectileShooterComponent.OnLoadingStageCompleted
// (Native, Event, Protected, BlueprintEvent)

void UProjectileShooterComponent::OnLoadingStageCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "OnLoadingStageCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.OnRecoveryStageCompleted
// (Native, Event, Protected, BlueprintEvent)

void UProjectileShooterComponent::OnRecoveryStageCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "OnRecoveryStageCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.OnReleasingStageCompleted
// (Native, Event, Protected, BlueprintEvent)

void UProjectileShooterComponent::OnReleasingStageCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "OnReleasingStageCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.OnRep_AmmoChanged
// (Native, Public)

void UProjectileShooterComponent::OnRep_AmmoChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "OnRep_AmmoChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.OnRep_ProjectileIsOnFireChanged
// (Native, Public)

void UProjectileShooterComponent::OnRep_ProjectileIsOnFireChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "OnRep_ProjectileIsOnFireChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.OnRep_WeaponStateChanged
// (Native, Public)

void UProjectileShooterComponent::OnRep_WeaponStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "OnRep_WeaponStateChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.OnStopDriving
// (Native, Public, BlueprintCallable)

void UProjectileShooterComponent::OnStopDriving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "OnStopDriving");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.OnVehicleDestroyed
// (Native, Protected)
// Parameters:
// class AVehicleBase*                     Vehicle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProjectileShooterComponent::OnVehicleDestroyed(class AVehicleBase* Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "OnVehicleDestroyed");

	Params::ProjectileShooterComponent_OnVehicleDestroyed Parms{};

	Parms.Vehicle = Vehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.OnVehicleDied
// (Native, Protected)
// Parameters:
// class AVehicleBase*                     Vehicle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProjectileShooterComponent::OnVehicleDied(class AVehicleBase* Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "OnVehicleDied");

	Params::ProjectileShooterComponent_OnVehicleDied Parms{};

	Parms.Vehicle = Vehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.OnWeaponStateBuilding
// (Native, Event, Protected, BlueprintEvent)

void UProjectileShooterComponent::OnWeaponStateBuilding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "OnWeaponStateBuilding");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.OnWeaponStateLoaded
// (Native, Event, Protected, BlueprintEvent)

void UProjectileShooterComponent::OnWeaponStateLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "OnWeaponStateLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.OnWeaponStateLoading
// (Native, Event, Protected, BlueprintEvent)

void UProjectileShooterComponent::OnWeaponStateLoading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "OnWeaponStateLoading");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.OnWeaponStateRecovery
// (Native, Event, Protected, BlueprintEvent)

void UProjectileShooterComponent::OnWeaponStateRecovery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "OnWeaponStateRecovery");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.OnWeaponStateReleasing
// (Native, Event, Protected, BlueprintEvent)

void UProjectileShooterComponent::OnWeaponStateReleasing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "OnWeaponStateReleasing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.ReplenishAmmo
// (Final, Native, Private)

void UProjectileShooterComponent::ReplenishAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "ReplenishAmmo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.SetOnFire
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bOnFire                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProjectileShooterComponent::SetOnFire(bool bOnFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "SetOnFire");

	Params::ProjectileShooterComponent_SetOnFire Parms{};

	Parms.bOnFire = bOnFire;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileShooterComponent.UpdateProjectileTrajectory
// (Final, Native, Private)

void UProjectileShooterComponent::UpdateProjectileTrajectory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileShooterComponent", "UpdateProjectileTrajectory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.SendFriendRequest.SendFriendRequest
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabPlayer                   Player_0                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USendFriendRequest*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USendFriendRequest* USendFriendRequest::SendFriendRequest(class UObject* WorldContextObject, const struct FPlayFabPlayer& Player_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SendFriendRequest", "SendFriendRequest");

	Params::SendFriendRequest_SendFriendRequest Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Player_0 = std::move(Player_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.CharacterProfileBPWrapper.ForceValidate
// (Final, Native, Public, BlueprintCallable)

void UCharacterProfileBPWrapper::ForceValidate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "ForceValidate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.HasPerk
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Perk                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCharacterProfileBPWrapper::HasPerk(uint8 Perk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "HasPerk");

	Params::CharacterProfileBPWrapper_HasPerk Parms{};

	Parms.Perk = Perk;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.CharacterProfileBPWrapper.RemoveAllEquipment
// (Final, Native, Public, BlueprintCallable)

void UCharacterProfileBPWrapper::RemoveAllEquipment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "RemoveAllEquipment");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetAge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetAge(uint8 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetAge");

	Params::CharacterProfileBPWrapper_SetAge Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetEmblem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetEmblem(uint8 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetEmblem");

	Params::CharacterProfileBPWrapper_SetEmblem Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetEmblemColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   ColorIdx                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetEmblemColor(uint8 ColorIdx, uint8 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetEmblemColor");

	Params::CharacterProfileBPWrapper_SetEmblemColor Parms{};

	Parms.ColorIdx = ColorIdx;
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetEquipmentColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ColorIdx                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   NewColor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetEquipmentColor(uint8 Slot, uint8 ColorIdx, uint8 NewColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetEquipmentColor");

	Params::CharacterProfileBPWrapper_SetEquipmentColor Parms{};

	Parms.Slot = Slot;
	Parms.ColorIdx = ColorIdx;
	Parms.NewColor = NewColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetEquipmentCustomizationDirect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEquipmentCustomization          NewCustomization                                       (Parm, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetEquipmentCustomizationDirect(uint8 Slot, const struct FEquipmentCustomization& NewCustomization)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetEquipmentCustomizationDirect");

	Params::CharacterProfileBPWrapper_SetEquipmentCustomizationDirect Parms{};

	Parms.Slot = Slot;
	Parms.NewCustomization = std::move(NewCustomization);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetEquipmentId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   NewId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetEquipmentId(uint8 Slot, uint8 NewId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetEquipmentId");

	Params::CharacterProfileBPWrapper_SetEquipmentId Parms{};

	Parms.Slot = Slot;
	Parms.NewId = NewId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetEquipmentPartId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   PartIdx                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   NewPartId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetEquipmentPartId(uint8 Slot, uint8 PartIdx, uint8 NewPartId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetEquipmentPartId");

	Params::CharacterProfileBPWrapper_SetEquipmentPartId Parms{};

	Parms.Slot = Slot;
	Parms.PartIdx = PartIdx;
	Parms.NewPartId = NewPartId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetEquipmentPattern
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   NewPattern                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetEquipmentPattern(uint8 Slot, uint8 NewPattern)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetEquipmentPattern");

	Params::CharacterProfileBPWrapper_SetEquipmentPattern Parms{};

	Parms.Slot = Slot;
	Parms.NewPattern = NewPattern;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetEquipmentSkin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   NewSkin                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetEquipmentSkin(uint8 Slot, uint8 NewSkin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetEquipmentSkin");

	Params::CharacterProfileBPWrapper_SetEquipmentSkin Parms{};

	Parms.Slot = Slot;
	Parms.NewSkin = NewSkin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetEyebrows
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetEyebrows(uint8 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetEyebrows");

	Params::CharacterProfileBPWrapper_SetEyebrows Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetEyeColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetEyeColor(uint8 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetEyeColor");

	Params::CharacterProfileBPWrapper_SetEyeColor Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetFace
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetFace(uint8 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetFace");

	Params::CharacterProfileBPWrapper_SetFace Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetFacialHair
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetFacialHair(uint8 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetFacialHair");

	Params::CharacterProfileBPWrapper_SetFacialHair Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetFat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetFat(uint8 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetFat");

	Params::CharacterProfileBPWrapper_SetFat Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetHair
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetHair(uint8 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetHair");

	Params::CharacterProfileBPWrapper_SetHair Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetHairColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetHairColor(uint8 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetHairColor");

	Params::CharacterProfileBPWrapper_SetHairColor Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetIsFemale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetIsFemale(bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetIsFemale");

	Params::CharacterProfileBPWrapper_SetIsFemale Parms{};

	Parms.bNewValue = bNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetMetalRoughnessScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetMetalRoughnessScale(uint8 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetMetalRoughnessScale");

	Params::CharacterProfileBPWrapper_SetMetalRoughnessScale Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetMetalTint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetMetalTint(uint8 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetMetalTint");

	Params::CharacterProfileBPWrapper_SetMetalTint Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetProfileCategory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NewCategory                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetProfileCategory(const class FString& NewCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetProfileCategory");

	Params::CharacterProfileBPWrapper_SetProfileCategory Parms{};

	Parms.NewCategory = std::move(NewCategory);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetProfileName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             NewName                                                (Parm, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetProfileName(const class FText& NewName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetProfileName");

	Params::CharacterProfileBPWrapper_SetProfileName Parms{};

	Parms.NewName = std::move(NewName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetSkinColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetSkinColor(uint8 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetSkinColor");

	Params::CharacterProfileBPWrapper_SetSkinColor Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetSkinny
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetSkinny(uint8 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetSkinny");

	Params::CharacterProfileBPWrapper_SetSkinny Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetStrong
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetStrong(uint8 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetStrong");

	Params::CharacterProfileBPWrapper_SetStrong Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetVoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetVoice(uint8 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetVoice");

	Params::CharacterProfileBPWrapper_SetVoice Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetVoicePitch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetVoicePitch(uint8 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetVoicePitch");

	Params::CharacterProfileBPWrapper_SetVoicePitch Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetWearableColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ColorIdx                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   NewColor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetWearableColor(uint8 Slot, uint8 ColorIdx, uint8 NewColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetWearableColor");

	Params::CharacterProfileBPWrapper_SetWearableColor Parms{};

	Parms.Slot = Slot;
	Parms.ColorIdx = ColorIdx;
	Parms.NewColor = NewColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetWearableId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   NewId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetWearableId(uint8 Slot, uint8 NewId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetWearableId");

	Params::CharacterProfileBPWrapper_SetWearableId Parms{};

	Parms.Slot = Slot;
	Parms.NewId = NewId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.SetWearablePattern
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   NewPattern                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::SetWearablePattern(uint8 Slot, uint8 NewPattern)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "SetWearablePattern");

	Params::CharacterProfileBPWrapper_SetWearablePattern Parms{};

	Parms.Slot = Slot;
	Parms.NewPattern = NewPattern;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterProfileBPWrapper.TogglePerk
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Perk                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterProfileBPWrapper::TogglePerk(uint8 Perk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterProfileBPWrapper", "TogglePerk");

	Params::CharacterProfileBPWrapper_TogglePerk Parms{};

	Parms.Perk = Perk;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCameraManager.EnterCustomization
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           CustomizationTarget                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCameraManager::EnterCustomization(class AActor* CustomizationTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCameraManager", "EnterCustomization");

	Params::MordhauCameraManager_EnterCustomization Parms{};

	Parms.CustomizationTarget = CustomizationTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCameraManager.EnterMapView
// (Final, Native, Public, BlueprintCallable)

void AMordhauCameraManager::EnterMapView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCameraManager", "EnterMapView");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCameraManager.GetCameraCache
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMinimalViewInfo                 ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMinimalViewInfo AMordhauCameraManager::GetCameraCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCameraManager", "GetCameraCache");

	Params::MordhauCameraManager_GetCameraCache Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCameraManager.GetCameraStyleBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AMordhauCameraManager::GetCameraStyleBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCameraManager", "GetCameraStyleBP");

	Params::MordhauCameraManager_GetCameraStyleBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCameraManager.GetViewTargetBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AMordhauCameraManager::GetViewTargetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCameraManager", "GetViewTargetBP");

	Params::MordhauCameraManager_GetViewTargetBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCameraManager.LeaveCustomization
// (Final, Native, Public, BlueprintCallable)

void AMordhauCameraManager::LeaveCustomization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCameraManager", "LeaveCustomization");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCameraManager.LeaveMapView
// (Final, Native, Public, BlueprintCallable)

void AMordhauCameraManager::LeaveMapView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCameraManager", "LeaveMapView");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCameraManager.OnHitFlash
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsDirectional                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCameraManager::OnHitFlash(bool bIsDirectional, class AActor* Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCameraManager", "OnHitFlash");

	Params::MordhauCameraManager_OnHitFlash Parms{};

	Parms.bIsDirectional = bIsDirectional;
	Parms.Source = Source;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauCameraManager.SetCameraStyleBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             NewCameraStyle                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCameraManager::SetCameraStyleBP(class FName NewCameraStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCameraManager", "SetCameraStyleBP");

	Params::MordhauCameraManager_SetCameraStyleBP Parms{};

	Parms.NewCameraStyle = NewCameraStyle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCameraManager.SetViewTargetBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           NewTarget                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCameraManager::SetViewTargetBP(class AActor* NewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCameraManager", "SetViewTargetBP");

	Params::MordhauCameraManager_SetViewTargetBP Parms{};

	Parms.NewTarget = NewTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCameraManager.GetIsInCustomization
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCameraManager::GetIsInCustomization() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCameraManager", "GetIsInCustomization");

	Params::MordhauCameraManager_GetIsInCustomization Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCameraManager.GetIsInMapView
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCameraManager::GetIsInMapView() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCameraManager", "GetIsInMapView");

	Params::MordhauCameraManager_GetIsInMapView Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.CharacterVoiceComponent.OnCharacterBuilt
// (Final, Native, Public)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterVoiceComponent::OnCharacterBuilt(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterVoiceComponent", "OnCharacterBuilt");

	Params::CharacterVoiceComponent_OnCharacterBuilt Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterVoiceComponent.OnCharacterDied
// (Final, Native, Public)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterVoiceComponent::OnCharacterDied(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterVoiceComponent", "OnCharacterDied");

	Params::CharacterVoiceComponent_OnCharacterDied Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterVoiceComponent.OnLODTick
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterVoiceComponent::OnLODTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterVoiceComponent", "OnLODTick");

	Params::CharacterVoiceComponent_OnLODTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterVoiceComponent.OnTakeDamage
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMordhauDamageInfo               DamageInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterVoiceComponent::OnTakeDamage(class AAdvancedCharacter* Character, const struct FMordhauDamageInfo& DamageInfo, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterVoiceComponent", "OnTakeDamage");

	Params::CharacterVoiceComponent_OnTakeDamage Parms{};

	Parms.Character = Character;
	Parms.DamageInfo = std::move(DamageInfo);
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterVoiceComponent.OnVoiceCommandReplicated
// (Final, Native, Public)

void UCharacterVoiceComponent::OnVoiceCommandReplicated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterVoiceComponent", "OnVoiceCommandReplicated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.CharacterVoiceComponent.UpdateVoiceDataFromCharacter
// (Final, Native, Public, BlueprintCallable)

void UCharacterVoiceComponent::UpdateVoiceDataFromCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterVoiceComponent", "UpdateVoiceDataFromCharacter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInventory.GetGoldItemDefID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauInventory::GetGoldItemDefID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauInventory", "GetGoldItemDefID");

	Params::MordhauInventory_GetGoldItemDefID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.GetItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ItemDefID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMordhauInventoryItem*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauInventoryItem* UMordhauInventory::GetItem(const int32 ItemDefID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauInventory", "GetItem");

	Params::MordhauInventory_GetItem Parms{};

	Parms.ItemDefID = ItemDefID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.GetStackItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemStack                       ItemStack                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UMordhauInventoryItem*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauInventoryItem* UMordhauInventory::GetStackItem(const struct FItemStack& ItemStack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauInventory", "GetStackItem");

	Params::MordhauInventory_GetStackItem Parms{};

	Parms.ItemStack = std::move(ItemStack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.GetStackItemDefID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemStack                       ItemStack                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauInventory::GetStackItemDefID(const struct FItemStack& ItemStack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauInventory", "GetStackItemDefID");

	Params::MordhauInventory_GetStackItemDefID Parms{};

	Parms.ItemStack = std::move(ItemStack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.GetStackQuantity
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemStack                       ItemStack                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauInventory::GetStackQuantity(const struct FItemStack& ItemStack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauInventory", "GetStackQuantity");

	Params::MordhauInventory_GetStackQuantity Parms{};

	Parms.ItemStack = std::move(ItemStack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.GetSupporterPackageItemDefID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauInventory::GetSupporterPackageItemDefID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauInventory", "GetSupporterPackageItemDefID");

	Params::MordhauInventory_GetSupporterPackageItemDefID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.GetTutorialPackageItemDefID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauInventory::GetTutorialPackageItemDefID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauInventory", "GetTutorialPackageItemDefID");

	Params::MordhauInventory_GetTutorialPackageItemDefID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.GetXPItemDefID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauInventory::GetXPItemDefID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauInventory", "GetXPItemDefID");

	Params::MordhauInventory_GetXPItemDefID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.AddItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemDefID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInventory::AddItem(ECallResult* CallResult, const int32 ItemDefID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "AddItem");

	Params::MordhauInventory_AddItem Parms{};

	Parms.ItemDefID = ItemDefID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauInventory.AddItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ItemDefIDs                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMordhauInventory::AddItems(ECallResult* CallResult, const TArray<int32>& ItemDefIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "AddItems");

	Params::MordhauInventory_AddItems Parms{};

	Parms.ItemDefIDs = std::move(ItemDefIDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauInventory.AreUnlockRecipesAvailable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauInventory::AreUnlockRecipesAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "AreUnlockRecipesAvailable");

	Params::MordhauInventory_AreUnlockRecipesAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.CanUnlockItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemDefID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauInventory::CanUnlockItem(const class FString& PlayFabId, const int32 ItemDefID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "CanUnlockItem");

	Params::MordhauInventory_CanUnlockItem Parms{};

	Parms.PlayFabId = std::move(PlayFabId);
	Parms.ItemDefID = ItemDefID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.CanUnlockItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ItemDefIDs                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauInventory::CanUnlockItems(const class FString& PlayFabId, const TArray<int32>& ItemDefIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "CanUnlockItems");

	Params::MordhauInventory_CanUnlockItems Parms{};

	Parms.PlayFabId = std::move(PlayFabId);
	Parms.ItemDefIDs = std::move(ItemDefIDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.ClearPlayerItems
// (Final, Native, Public)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauInventory::ClearPlayerItems(const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "ClearPlayerItems");

	Params::MordhauInventory_ClearPlayerItems Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.FakeItemDrop
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemDefID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInventory::FakeItemDrop(ECallResult* CallResult, const int32 ItemDefID, const int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "FakeItemDrop");

	Params::MordhauInventory_FakeItemDrop Parms{};

	Parms.ItemDefID = ItemDefID;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauInventory.FakeRewardDrop
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Gold                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   XP                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInventory::FakeRewardDrop(ECallResult* CallResult, const int32 Gold, const int32 XP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "FakeRewardDrop");

	Params::MordhauInventory_FakeRewardDrop Parms{};

	Parms.Gold = Gold;
	Parms.XP = XP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauInventory.GetGold
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauInventory::GetGold()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "GetGold");

	Params::MordhauInventory_GetGold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.GetItemQuantity
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemDefID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInventory::GetItemQuantity(ECallResult* CallResult, const class FString& PlayFabId, const int32 ItemDefID, int32* Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "GetItemQuantity");

	Params::MordhauInventory_GetItemQuantity Parms{};

	Parms.PlayFabId = std::move(PlayFabId);
	Parms.ItemDefID = ItemDefID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;

	if (Quantity != nullptr)
		*Quantity = Parms.Quantity;
}


// Function Mordhau.MordhauInventory.GetItemStacks
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FItemStack>               ItemStacks                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UMordhauInventory::GetItemStacks(ECallResult* CallResult, const class FString& PlayFabId, TArray<struct FItemStack>* ItemStacks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "GetItemStacks");

	Params::MordhauInventory_GetItemStacks Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;

	if (ItemStacks != nullptr)
		*ItemStacks = std::move(Parms.ItemStacks);
}


// Function Mordhau.MordhauInventory.GetPlayerGold
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauInventory::GetPlayerGold(const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "GetPlayerGold");

	Params::MordhauInventory_GetPlayerGold Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.GetPlayerXP
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauInventory::GetPlayerXP(const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "GetPlayerXP");

	Params::MordhauInventory_GetPlayerXP Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.GetSkinRarity
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FEquipmentSkinEntry              Skin                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EItemRarity                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EItemRarity UMordhauInventory::GetSkinRarity(const struct FEquipmentSkinEntry& Skin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "GetSkinRarity");

	Params::MordhauInventory_GetSkinRarity Parms{};

	Parms.Skin = std::move(Skin);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.GetUnlockRecipe
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemDefID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUnlockRecipe                    Recipe                                                 (Parm, OutParm, NativeAccessSpecifierPublic)

void UMordhauInventory::GetUnlockRecipe(ECallResult* CallResult, const int32 ItemDefID, struct FUnlockRecipe* Recipe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "GetUnlockRecipe");

	Params::MordhauInventory_GetUnlockRecipe Parms{};

	Parms.ItemDefID = ItemDefID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;

	if (Recipe != nullptr)
		*Recipe = std::move(Parms.Recipe);
}


// Function Mordhau.MordhauInventory.GetXP
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauInventory::GetXP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "GetXP");

	Params::MordhauInventory_GetXP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.HasItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemDefID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauInventory::HasItem(const class FString& PlayFabId, const int32 ItemDefID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "HasItem");

	Params::MordhauInventory_HasItem Parms{};

	Parms.PlayFabId = std::move(PlayFabId);
	Parms.ItemDefID = ItemDefID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.HasSkin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEquipmentSkinEntry              Skin                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauInventory::HasSkin(const class FString& PlayFabId, const struct FEquipmentSkinEntry& Skin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "HasSkin");

	Params::MordhauInventory_HasSkin Parms{};

	Parms.PlayFabId = std::move(PlayFabId);
	Parms.Skin = std::move(Skin);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.IsInventoryAvailable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauInventory::IsInventoryAvailable(const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "IsInventoryAvailable");

	Params::MordhauInventory_IsInventoryAvailable Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.IsItemPlatformAvailable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ItemDefID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauInventory::IsItemPlatformAvailable(const int32 ItemDefID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "IsItemPlatformAvailable");

	Params::MordhauInventory_IsItemPlatformAvailable Parms{};

	Parms.ItemDefID = ItemDefID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.IsSkinAvailable
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEquipmentSkinEntry              Skin                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauInventory::IsSkinAvailable(const class FString& PlayFabId, const struct FEquipmentSkinEntry& Skin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "IsSkinAvailable");

	Params::MordhauInventory_IsSkinAvailable Parms{};

	Parms.PlayFabId = std::move(PlayFabId);
	Parms.Skin = std::move(Skin);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.RefreshItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInventory::RefreshItems(ECallResult* CallResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "RefreshItems");

	Params::MordhauInventory_RefreshItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauInventory.RefreshPlayerItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInventory::RefreshPlayerItems(ECallResult* CallResult, const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "RefreshPlayerItems");

	Params::MordhauInventory_RefreshPlayerItems Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauInventory.RequestUnlockRecipes
// (Final, Native, Public)

void UMordhauInventory::RequestUnlockRecipes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "RequestUnlockRecipes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInventory.ResetInventory
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInventory::ResetInventory(ECallResult* CallResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "ResetInventory");

	Params::MordhauInventory_ResetInventory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauInventory.SetItemQuantity
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemDefID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInventory::SetItemQuantity(ECallResult* CallResult, const class FString& PlayFabId, const int32 ItemDefID, const int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "SetItemQuantity");

	Params::MordhauInventory_SetItemQuantity Parms{};

	Parms.PlayFabId = std::move(PlayFabId);
	Parms.ItemDefID = ItemDefID;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauInventory.SetPlayerGold
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Gold                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauInventory::SetPlayerGold(const class FString& PlayFabId, int32 Gold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "SetPlayerGold");

	Params::MordhauInventory_SetPlayerGold Parms{};

	Parms.PlayFabId = std::move(PlayFabId);
	Parms.Gold = Gold;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.SetPlayerXP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   XP                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauInventory::SetPlayerXP(const class FString& PlayFabId, int32 XP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "SetPlayerXP");

	Params::MordhauInventory_SetPlayerXP Parms{};

	Parms.PlayFabId = std::move(PlayFabId);
	Parms.XP = XP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInventory.TriggerItemDrop
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemDefID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInventory::TriggerItemDrop(ECallResult* CallResult, const int32 ItemDefID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "TriggerItemDrop");

	Params::MordhauInventory_TriggerItemDrop Parms{};

	Parms.ItemDefID = ItemDefID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauInventory.UnlockItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemDefID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInventory::UnlockItem(ECallResult* CallResult, const class FString& PlayFabId, const int32 ItemDefID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "UnlockItem");

	Params::MordhauInventory_UnlockItem Parms{};

	Parms.PlayFabId = std::move(PlayFabId);
	Parms.ItemDefID = ItemDefID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauInventory.UnlockItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ItemDefIDs                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMordhauInventory::UnlockItems(ECallResult* CallResult, const class FString& PlayFabId, const TArray<int32>& ItemDefIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "UnlockItems");

	Params::MordhauInventory_UnlockItems Parms{};

	Parms.PlayFabId = std::move(PlayFabId);
	Parms.ItemDefIDs = std::move(ItemDefIDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauInventory.UnlockLevelUnlocks
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInventory::UnlockLevelUnlocks(ECallResult* CallResult, const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "UnlockLevelUnlocks");

	Params::MordhauInventory_UnlockLevelUnlocks Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauInventory.UpdateEntitlementsAndRefreshInventory
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInventory::UpdateEntitlementsAndRefreshInventory(ECallResult* CallResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInventory", "UpdateEntitlementsAndRefreshInventory");

	Params::MordhauInventory_UpdateEntitlementsAndRefreshInventory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.ComboBoxText.AddOption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             Option                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UComboBoxText::AddOption(const class FText& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ComboBoxText", "AddOption");

	Params::ComboBoxText_AddOption Parms{};

	Parms.Option = std::move(Option);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ComboBoxText.ClearOptions
// (Final, Native, Public, BlueprintCallable)

void UComboBoxText::ClearOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ComboBoxText", "ClearOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ComboBoxText.ClearSelection
// (Final, Native, Public, BlueprintCallable)

void UComboBoxText::ClearSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ComboBoxText", "ClearSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ComboBoxText.RefreshOptions
// (Final, Native, Public, BlueprintCallable)

void UComboBoxText::RefreshOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ComboBoxText", "RefreshOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ComboBoxText.RemoveOption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             Option                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UComboBoxText::RemoveOption(const class FText& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ComboBoxText", "RemoveOption");

	Params::ComboBoxText_RemoveOption Parms{};

	Parms.Option = std::move(Option);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.ComboBoxText.SetSelectedOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Option                                                 (Parm, NativeAccessSpecifierPublic)

void UComboBoxText::SetSelectedOption(const class FText& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ComboBoxText", "SetSelectedOption");

	Params::ComboBoxText_SetSelectedOption Parms{};

	Parms.Option = std::move(Option);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ComboBoxText.FindOptionIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             Option                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UComboBoxText::FindOptionIndex(const class FText& Option) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ComboBoxText", "FindOptionIndex");

	Params::ComboBoxText_FindOptionIndex Parms{};

	Parms.Option = std::move(Option);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.ComboBoxText.GetIsOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UComboBoxText::GetIsOpen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ComboBoxText", "GetIsOpen");

	Params::ComboBoxText_GetIsOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.ComboBoxText.GetOptionAtIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UComboBoxText::GetOptionAtIndex(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ComboBoxText", "GetOptionAtIndex");

	Params::ComboBoxText_GetOptionAtIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.ComboBoxText.GetOptionCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UComboBoxText::GetOptionCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ComboBoxText", "GetOptionCount");

	Params::ComboBoxText_GetOptionCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.ComboBoxText.GetSelectedOption
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UComboBoxText::GetSelectedOption() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ComboBoxText", "GetSelectedOption");

	Params::ComboBoxText_GetSelectedOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.ControlPoint.CanCapture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AControlPoint::CanCapture(uint8 Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "CanCapture");

	Params::ControlPoint_CanCapture Parms{};

	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.ControlPoint.EnemyGainedPrerequisites
// (Event, Public, BlueprintEvent)

void AControlPoint::EnemyGainedPrerequisites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "EnemyGainedPrerequisites");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.ControlPoint.EnemyLostPrerequisites
// (Event, Public, BlueprintEvent)

void AControlPoint::EnemyLostPrerequisites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "EnemyLostPrerequisites");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.ControlPoint.OnCaptureAreaBeginOverlap
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AControlPoint::OnCaptureAreaBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "OnCaptureAreaBeginOverlap");

	Params::ControlPoint_OnCaptureAreaBeginOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ControlPoint.OnCaptureAreaEndOverlap
// (Final, Native, Public)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AControlPoint::OnCaptureAreaEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "OnCaptureAreaEndOverlap");

	Params::ControlPoint_OnCaptureAreaEndOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ControlPoint.OnCapturingTeamChanged
// (Native, Event, Public, BlueprintEvent)

void AControlPoint::OnCapturingTeamChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "OnCapturingTeamChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ControlPoint.OnOwningTeamChanged
// (Native, Event, Public, BlueprintEvent)

void AControlPoint::OnOwningTeamChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "OnOwningTeamChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ControlPoint.OnRep_CapturingTeam
// (Final, Native, Public)

void AControlPoint::OnRep_CapturingTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "OnRep_CapturingTeam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ControlPoint.OnRep_OwningTeam
// (Final, Native, Public)

void AControlPoint::OnRep_OwningTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "OnRep_OwningTeam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ControlPoint.OnRep_ReplicatedCaptureProgress
// (Final, Native, Public)

void AControlPoint::OnRep_ReplicatedCaptureProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "OnRep_ReplicatedCaptureProgress");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ControlPoint.OnStartedFlashing
// (Event, Public, BlueprintEvent)

void AControlPoint::OnStartedFlashing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "OnStartedFlashing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.ControlPoint.OnStoppedFlashing
// (Event, Public, BlueprintEvent)

void AControlPoint::OnStoppedFlashing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "OnStoppedFlashing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.ControlPoint.SetCaptureProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewProgress                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   NewCaptor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAwardScore                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AControlPoint::SetCaptureProgress(float NewProgress, uint8 NewCaptor, bool bAwardScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "SetCaptureProgress");

	Params::ControlPoint_SetCaptureProgress Parms{};

	Parms.NewProgress = NewProgress;
	Parms.NewCaptor = NewCaptor;
	Parms.bAwardScore = bAwardScore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ControlPoint.SetCapturingTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewTeam                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AControlPoint::SetCapturingTeam(uint8 NewTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "SetCapturingTeam");

	Params::ControlPoint_SetCapturingTeam Parms{};

	Parms.NewTeam = NewTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ControlPoint.SetOwningTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewTeam                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AControlPoint::SetOwningTeam(uint8 NewTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "SetOwningTeam");

	Params::ControlPoint_SetOwningTeam Parms{};

	Parms.NewTeam = NewTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ControlPoint.UpdateCaptureProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AControlPoint::UpdateCaptureProgress(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "UpdateCaptureProgress");

	Params::ControlPoint_UpdateCaptureProgress Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ControlPoint.UpdatePresenceNumbers
// (Final, Native, Public, BlueprintCallable)

void AControlPoint::UpdatePresenceNumbers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "UpdatePresenceNumbers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ControlPoint.UpdateUIMaterialInstance
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AControlPoint::UpdateUIMaterialInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "UpdateUIMaterialInstance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ControlPoint.UpdateUIWidgets
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AControlPoint::UpdateUIWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "UpdateUIWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.ControlPoint.UpdateVisuals
// (Final, Native, Public, BlueprintCallable)

void AControlPoint::UpdateVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlPoint", "UpdateVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.DismemberableComponent.Dismember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDismemberedBoneData             InDismemberedBoneData                                  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// class ASeparatedBodyPart*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASeparatedBodyPart* UDismemberableComponent::Dismember(struct FDismemberedBoneData* InDismemberedBoneData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismemberableComponent", "Dismember");

	Params::DismemberableComponent_Dismember Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InDismemberedBoneData != nullptr)
		*InDismemberedBoneData = std::move(Parms.InDismemberedBoneData);

	return Parms.ReturnValue;
}


// Function Mordhau.DismemberableComponent.OnCharacterCameraStyleChanged
// (Final, Native, Public)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDismemberableComponent::OnCharacterCameraStyleChanged(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismemberableComponent", "OnCharacterCameraStyleChanged");

	Params::DismemberableComponent_OnCharacterCameraStyleChanged Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.DismemberableComponent.ProcessQueuedDismemberment
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDismemberableComponent::ProcessQueuedDismemberment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismemberableComponent", "ProcessQueuedDismemberment");

	Params::DismemberableComponent_ProcessQueuedDismemberment Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.DismemberableComponent.QueueDismember
// (Final, Native, Public, HasDefaults)
// Parameters:
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsDismemberPartial                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsBluntForce                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Force                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Agent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDismemberableComponent::QueueDismember(class FName bone, bool bIsDismemberPartial, bool bIsBluntForce, const struct FVector& Force, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismemberableComponent", "QueueDismember");

	Params::DismemberableComponent_QueueDismember Parms{};

	Parms.bone = bone;
	Parms.bIsDismemberPartial = bIsDismemberPartial;
	Parms.bIsBluntForce = bIsBluntForce;
	Parms.Force = std::move(Force);
	Parms.Agent = Agent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.DismemberableComponent.TryDismember
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Point                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauWeapon*                   Weapon                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttackMove                             Move                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsRagdollDismember                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDismemberableComponent::TryDismember(class FName bone, const struct FVector& Point, class AMordhauWeapon* Weapon, EAttackMove Move, bool bIsRagdollDismember)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismemberableComponent", "TryDismember");

	Params::DismemberableComponent_TryDismember Parms{};

	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Weapon = Weapon;
	Parms.Move = Move;
	Parms.bIsRagdollDismember = bIsRagdollDismember;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.DismemberableComponent.CanDismember
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDismemberableComponent::CanDismember(class FName bone) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismemberableComponent", "CanDismember");

	Params::DismemberableComponent_CanDismember Parms{};

	Parms.bone = bone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.DismemberableComponent.IsBoneDismembered
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDismemberableComponent::IsBoneDismembered(class FName bone) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismemberableComponent", "IsBoneDismembered");

	Params::DismemberableComponent_IsBoneDismembered Parms{};

	Parms.bone = bone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.DriverComponent.OnLateTick
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDriverComponent::OnLateTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DriverComponent", "OnLateTick");

	Params::DriverComponent_OnLateTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ECSActor.AddManagedCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharacter*                       Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AECSActor::AddManagedCharacter(class ACharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ECSActor", "AddManagedCharacter");

	Params::ECSActor_AddManagedCharacter Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.EmoteMotion.DoDrop
// (Final, Native, Public, HasDefaults)
// Parameters:
// class AMordhauEquipment*                Equipment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Force                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEmoteMotion::DoDrop(class AMordhauEquipment* Equipment, const struct FVector& Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmoteMotion", "DoDrop");

	Params::EmoteMotion_DoDrop Parms{};

	Parms.Equipment = Equipment;
	Parms.Force = std::move(Force);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauDialog.ForceAllUserFocus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFocusCause                             FocusCause                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauDialog::ForceAllUserFocus(EFocusCause FocusCause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauDialog", "ForceAllUserFocus");

	Params::MordhauDialog_ForceAllUserFocus Parms{};

	Parms.FocusCause = FocusCause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauDialog.Hide
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UMordhauDialog::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauDialog", "Hide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauDialog.OnHidden
// (Final, Native, Public, BlueprintCallable)

void UMordhauDialog::OnHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauDialog", "OnHidden");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauDialog.OnShown
// (Native, Public, BlueprintCallable)

void UMordhauDialog::OnShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauDialog", "OnShown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauDialog.RequestFocus
// (Final, Native, Public, BlueprintCallable)

void UMordhauDialog::RequestFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauDialog", "RequestFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauDialog.Show
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UMordhauDialog::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauDialog", "Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauHUDWidgetComponent.GetHUDWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UMordhauHUDWidgetComponent::GetHUDWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauHUDWidgetComponent", "GetHUDWidget");

	Params::MordhauHUDWidgetComponent_GetHUDWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauHUDWidgetComponent.HideWidget
// (Final, Native, Public, BlueprintCallable)

void UMordhauHUDWidgetComponent::HideWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauHUDWidgetComponent", "HideWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauHUDWidgetComponent.InstantiateWidget
// (Final, Native, Public, BlueprintCallable)

void UMordhauHUDWidgetComponent::InstantiateWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauHUDWidgetComponent", "InstantiateWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauHUDWidgetComponent.OnCharacterOwnerBecomeViewTarget
// (Final, Native, Private)
// Parameters:
// class AAdvancedCharacter*               CharacterOwner                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauHUDWidgetComponent::OnCharacterOwnerBecomeViewTarget(class AAdvancedCharacter* CharacterOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauHUDWidgetComponent", "OnCharacterOwnerBecomeViewTarget");

	Params::MordhauHUDWidgetComponent_OnCharacterOwnerBecomeViewTarget Parms{};

	Parms.CharacterOwner = CharacterOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauHUDWidgetComponent.OnCharacterOwnerEndViewTarget
// (Final, Native, Private)
// Parameters:
// class AAdvancedCharacter*               CharacterOwner                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauHUDWidgetComponent::OnCharacterOwnerEndViewTarget(class AAdvancedCharacter* CharacterOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauHUDWidgetComponent", "OnCharacterOwnerEndViewTarget");

	Params::MordhauHUDWidgetComponent_OnCharacterOwnerEndViewTarget Parms{};

	Parms.CharacterOwner = CharacterOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauHUDWidgetComponent.RemoveWidget
// (Final, Native, Public, BlueprintCallable)

void UMordhauHUDWidgetComponent::RemoveWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauHUDWidgetComponent", "RemoveWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauHUDWidgetComponent.ShowWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauHUDWidgetComponent::ShowWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauHUDWidgetComponent", "ShowWidget");

	Params::MordhauHUDWidgetComponent_ShowWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.EnvironmentMovable.InitializeMovable
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneComponent*                  InSwayingComponent                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InRollPitchYawFrequency                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InRollPitchYawMagnitude                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InRollPitchYawSpeed                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEnvironmentMovable::InitializeMovable(class USceneComponent* InSwayingComponent, const struct FVector& InRollPitchYawFrequency, const struct FVector& InRollPitchYawMagnitude, const struct FVector& InRollPitchYawSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnvironmentMovable", "InitializeMovable");

	Params::EnvironmentMovable_InitializeMovable Parms{};

	Parms.InSwayingComponent = InSwayingComponent;
	Parms.InRollPitchYawFrequency = std::move(InRollPitchYawFrequency);
	Parms.InRollPitchYawMagnitude = std::move(InRollPitchYawMagnitude);
	Parms.InRollPitchYawSpeed = std::move(InRollPitchYawSpeed);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.EquipmentSwitchMotion.GetSwitchingTo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMordhauEquipment*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauEquipment* UEquipmentSwitchMotion::GetSwitchingTo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipmentSwitchMotion", "GetSwitchingTo");

	Params::EquipmentSwitchMotion_GetSwitchingTo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.EquipmentSystemComponent.OnAnyEquipmentStateChanged
// (Final, Native, Public)

void UEquipmentSystemComponent::OnAnyEquipmentStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipmentSystemComponent", "OnAnyEquipmentStateChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.EquipmentSystemComponent.OnCharacterCameraStyleChanged
// (Final, Native, Public)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEquipmentSystemComponent::OnCharacterCameraStyleChanged(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipmentSystemComponent", "OnCharacterCameraStyleChanged");

	Params::EquipmentSystemComponent_OnCharacterCameraStyleChanged Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.EquipmentSystemComponent.OnCharacterVehicleChanged
// (Final, Native, Public)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEquipmentSystemComponent::OnCharacterVehicleChanged(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipmentSystemComponent", "OnCharacterVehicleChanged");

	Params::EquipmentSystemComponent_OnCharacterVehicleChanged Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.EquipmentSystemComponent.OnLateTick
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEquipmentSystemComponent::OnLateTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipmentSystemComponent", "OnLateTick");

	Params::EquipmentSystemComponent_OnLateTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.EquipmentSystemComponent.OnLODTick
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEquipmentSystemComponent::OnLODTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipmentSystemComponent", "OnLODTick");

	Params::EquipmentSystemComponent_OnLODTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.EquipmentSystemComponent.OnPreBeginPlay
// (Final, Native, Public)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEquipmentSystemComponent::OnPreBeginPlay(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipmentSystemComponent", "OnPreBeginPlay");

	Params::EquipmentSystemComponent_OnPreBeginPlay Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.EquipmentSystemComponent.OnUnPossessed
// (Final, Native, Public)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEquipmentSystemComponent::OnUnPossessed(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipmentSystemComponent", "OnUnPossessed");

	Params::EquipmentSystemComponent_OnUnPossessed Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.BlockPlayer.BlockPlayer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabPlayer                   Player_0                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlockPlayer*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBlockPlayer* UBlockPlayer::BlockPlayer(class UObject* WorldContextObject, const struct FPlayFabPlayer& Player_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlockPlayer", "BlockPlayer");

	Params::BlockPlayer_BlockPlayer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Player_0 = std::move(Player_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FaceCustomizationComponent.OnCharacterBuilt
// (Final, Native, Public)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFaceCustomizationComponent::OnCharacterBuilt(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FaceCustomizationComponent", "OnCharacterBuilt");

	Params::FaceCustomizationComponent_OnCharacterBuilt Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.AcceptFriendRequest.AcceptFriendRequest
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabPlayer                   Player_0                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAcceptFriendRequest*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAcceptFriendRequest* UAcceptFriendRequest::AcceptFriendRequest(class UObject* WorldContextObject, const struct FPlayFabPlayer& Player_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AcceptFriendRequest", "AcceptFriendRequest");

	Params::AcceptFriendRequest_AcceptFriendRequest Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Player_0 = std::move(Player_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.GameModeMetadata.GetDefaultObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class UGameModeMetadata>    MetadataClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameModeMetadata*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameModeMetadata* UGameModeMetadata::GetDefaultObject(TSubclassOf<class UGameModeMetadata> MetadataClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GameModeMetadata", "GetDefaultObject");

	Params::GameModeMetadata_GetDefaultObject Parms{};

	Parms.MetadataClass = MetadataClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.GameModeMetadata.GetPlayerCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EServerRegion                           ServerRegion                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UGameModeMetadata::GetPlayerCount(EServerRegion ServerRegion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameModeMetadata", "GetPlayerCount");

	Params::GameModeMetadata_GetPlayerCount Parms{};

	Parms.ServerRegion = ServerRegion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.CreateMatchmakingTicket.CreateMatchmakingTicket
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           QueueName_0                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabMatchmakingAttributes    Attributes_0                                           (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   Members_0                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Timeout_0                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCreateMatchmakingTicket*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCreateMatchmakingTicket* UCreateMatchmakingTicket::CreateMatchmakingTicket(const class FString& QueueName_0, const struct FPlayFabMatchmakingAttributes& Attributes_0, const TArray<class FString>& Members_0, int32 Timeout_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CreateMatchmakingTicket", "CreateMatchmakingTicket");

	Params::CreateMatchmakingTicket_CreateMatchmakingTicket Parms{};

	Parms.QueueName_0 = std::move(QueueName_0);
	Parms.Attributes_0 = std::move(Attributes_0);
	Parms.Members_0 = std::move(Members_0);
	Parms.Timeout_0 = Timeout_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.HeadWearable.AddCoifWearable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UClass>             Wearable                                               (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeadWearable::AddCoifWearable(TSoftClassPtr<class UClass> Wearable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeadWearable", "AddCoifWearable");

	Params::HeadWearable_AddCoifWearable Parms{};

	Parms.Wearable = Wearable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.HeadWearable.GetCoifWearable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UMordhauWearable>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UMordhauWearable> UHeadWearable::GetCoifWearable(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeadWearable", "GetCoifWearable");

	Params::HeadWearable_GetCoifWearable Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.HeadWearable.GetCoifWearablesNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHeadWearable::GetCoifWearablesNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeadWearable", "GetCoifWearablesNum");

	Params::HeadWearable_GetCoifWearablesNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.StatComponent.OnRep_StatValue
// (Native, Public)
// Parameters:
// int32                                   OldStatValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStatComponent::OnRep_StatValue(int32 OldStatValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StatComponent", "OnRep_StatValue");

	Params::StatComponent_OnRep_StatValue Parms{};

	Parms.OldStatValue = OldStatValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.StatComponent.TickStat
// (Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStatComponent::TickStat(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StatComponent", "TickStat");

	Params::StatComponent_TickStat Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.StatComponent.GetStatValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UStatComponent::GetStatValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StatComponent", "GetStatValue");

	Params::StatComponent_GetStatValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.HealthStatComponent.OnCharacterDied
// (Final, Native, Public)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHealthStatComponent::OnCharacterDied(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HealthStatComponent", "OnCharacterDied");

	Params::HealthStatComponent_OnCharacterDied Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauVehicle.KnockOffDriver
// (Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauVehicle::KnockOffDriver(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicle", "KnockOffDriver");

	Params::MordhauVehicle_KnockOffDriver Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauVehicle.RequestUse
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void AMordhauVehicle::RequestUse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicle", "RequestUse");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauVehicle.GetDriver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMordhauCharacter*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauCharacter* AMordhauVehicle::GetDriver() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicle", "GetDriver");

	Params::MordhauVehicle_GetDriver Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Horse.OnBumpCapsuleOverlapped
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHorse::OnBumpCapsuleOverlapped(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Horse", "OnBumpCapsuleOverlapped");

	Params::Horse_OnBumpCapsuleOverlapped Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Horse.OnRep_ReplicatedRearing
// (Final, Native, Public)

void AHorse::OnRep_ReplicatedRearing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Horse", "OnRep_ReplicatedRearing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Horse.RequestRearing
// (Final, Native, Public, BlueprintCallable)

void AHorse::RequestRearing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Horse", "RequestRearing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Horse.SecondaryTurnNotAbsolute
// (Final, Native, Public)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHorse::SecondaryTurnNotAbsolute(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Horse", "SecondaryTurnNotAbsolute");

	Params::Horse_SecondaryTurnNotAbsolute Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Horse.ServerRequestRearing
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AHorse::ServerRequestRearing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Horse", "ServerRequestRearing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Horse.SpawnTurd
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AHorse::SpawnTurd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Horse", "SpawnTurd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.Horse.CalculateBumpDamage
// (Final, Native, Public, HasOutParams, HasDefaults, Const)
// Parameters:
// struct FVector                          OurWorldVelocity                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHorse::CalculateBumpDamage(const struct FVector& OurWorldVelocity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Horse", "CalculateBumpDamage");

	Params::Horse_CalculateBumpDamage Parms{};

	Parms.OurWorldVelocity = std::move(OurWorldVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Horse.GetIsInRearingMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHorse::GetIsInRearingMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Horse", "GetIsInRearingMode");

	Params::Horse_GetIsInRearingMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauVehicleComponent.DriverLateTick
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                FromDriver                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauVehicleComponent::DriverLateTick(class AMordhauCharacter* FromDriver, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "DriverLateTick");

	Params::MordhauVehicleComponent_DriverLateTick Parms{};

	Parms.FromDriver = FromDriver;
	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauVehicleComponent.GetExitTransform
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform UMordhauVehicleComponent::GetExitTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "GetExitTransform");

	Params::MordhauVehicleComponent_GetExitTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauVehicleComponent.GetVehicleEnterInfo
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       FromTransform                                          (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVehicleTransitionInfo           ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FVehicleTransitionInfo UMordhauVehicleComponent::GetVehicleEnterInfo(class AMordhauCharacter* Character, const struct FTransform& FromTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "GetVehicleEnterInfo");

	Params::MordhauVehicleComponent_GetVehicleEnterInfo Parms{};

	Parms.Character = Character;
	Parms.FromTransform = std::move(FromTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauVehicleComponent.GetVehicleLeaveInfo
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       FromTransform                                          (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVehicleTransitionInfo           ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FVehicleTransitionInfo UMordhauVehicleComponent::GetVehicleLeaveInfo(class AMordhauCharacter* Character, const struct FTransform& FromTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "GetVehicleLeaveInfo");

	Params::MordhauVehicleComponent_GetVehicleLeaveInfo Parms{};

	Parms.Character = Character;
	Parms.FromTransform = std::move(FromTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauVehicleComponent.OnDriverChanged
// (Event, Protected, BlueprintEvent)

void UMordhauVehicleComponent::OnDriverChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "OnDriverChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauVehicleComponent.OnRep_ReplicatedSecondaryTurnValue
// (Final, Native, Public)

void UMordhauVehicleComponent::OnRep_ReplicatedSecondaryTurnValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "OnRep_ReplicatedSecondaryTurnValue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauVehicleComponent.OnStartedDriving
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauVehicleComponent::OnStartedDriving(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "OnStartedDriving");

	Params::MordhauVehicleComponent_OnStartedDriving Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauVehicleComponent.OnStoppedDriving
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauVehicleComponent::OnStoppedDriving(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "OnStoppedDriving");

	Params::MordhauVehicleComponent_OnStoppedDriving Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauVehicleComponent.OverrideAttackAngle
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UAttackMotion*                    Motion                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauVehicleComponent::OverrideAttackAngle(class UAttackMotion* Motion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "OverrideAttackAngle");

	Params::MordhauVehicleComponent_OverrideAttackAngle Parms{};

	Parms.Motion = Motion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauVehicleComponent.PostProcessCameraPOV
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPOV                             InPOV                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPOV                             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPOV UMordhauVehicleComponent::PostProcessCameraPOV(const struct FPOV& InPOV, class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "PostProcessCameraPOV");

	Params::MordhauVehicleComponent_PostProcessCameraPOV Parms{};

	Parms.InPOV = std::move(InPOV);
	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauVehicleComponent.RequestMeshEnablePhysics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauVehicleComponent::RequestMeshEnablePhysics(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "RequestMeshEnablePhysics");

	Params::MordhauVehicleComponent_RequestMeshEnablePhysics Parms{};

	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauVehicleComponent.SecondaryTurn
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAbsolute                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauVehicleComponent::SecondaryTurn(float Value, bool bIsAbsolute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "SecondaryTurn");

	Params::MordhauVehicleComponent_SecondaryTurn Parms{};

	Parms.Value = Value;
	Parms.bIsAbsolute = bIsAbsolute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauVehicleComponent.SecondaryTurnAtRate
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauVehicleComponent::SecondaryTurnAtRate(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "SecondaryTurnAtRate");

	Params::MordhauVehicleComponent_SecondaryTurnAtRate Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauVehicleComponent.ServerSecondaryTurn
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                                   NewTurn                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauVehicleComponent::ServerSecondaryTurn(float NewTurn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "ServerSecondaryTurn");

	Params::MordhauVehicleComponent_ServerSecondaryTurn Parms{};

	Parms.NewTurn = NewTurn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauVehicleComponent.SetDriver
// (Final, Native, Public)
// Parameters:
// class AMordhauCharacter*                NewDriver                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauVehicleComponent::SetDriver(class AMordhauCharacter* NewDriver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "SetDriver");

	Params::MordhauVehicleComponent_SetDriver Parms{};

	Parms.NewDriver = NewDriver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauVehicleComponent.StartDriving
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauVehicleComponent::StartDriving(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "StartDriving");

	Params::MordhauVehicleComponent_StartDriving Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauVehicleComponent.StopDriving
// (Final, Native, Public, BlueprintCallable)

void UMordhauVehicleComponent::StopDriving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "StopDriving");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauVehicleComponent.Suicide
// (Final, Native, Public, BlueprintCallable)

void UMordhauVehicleComponent::Suicide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "Suicide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauVehicleComponent.UpdateAnimationFor
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMordhauAnimInstance*             AnimInst                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauVehicleComponent::UpdateAnimationFor(class AMordhauCharacter* Character, class UMordhauAnimInstance* AnimInst, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "UpdateAnimationFor");

	Params::MordhauVehicleComponent_UpdateAnimationFor Parms{};

	Parms.Character = Character;
	Parms.AnimInst = AnimInst;
	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauVehicleComponent.UpdateFPCameraFor
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRotationOnly                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauVehicleComponent::UpdateFPCameraFor(class AMordhauCharacter* Character, float DeltaSeconds, bool bRotationOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "UpdateFPCameraFor");

	Params::MordhauVehicleComponent_UpdateFPCameraFor Parms{};

	Parms.Character = Character;
	Parms.DeltaSeconds = DeltaSeconds;
	Parms.bRotationOnly = bRotationOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauVehicleComponent.CanDrive
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauVehicleComponent::CanDrive(class AMordhauCharacter* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "CanDrive");

	Params::MordhauVehicleComponent_CanDrive Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauVehicleComponent.GetDriver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMordhauCharacter*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauCharacter* UMordhauVehicleComponent::GetDriver() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "GetDriver");

	Params::MordhauVehicleComponent_GetDriver Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauVehicleComponent.GetLookUpValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauVehicleComponent::GetLookUpValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "GetLookUpValue");

	Params::MordhauVehicleComponent_GetLookUpValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauVehicleComponent.GetMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UMordhauVehicleComponent::GetMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "GetMesh");

	Params::MordhauVehicleComponent_GetMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauVehicleComponent.GetPawnOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APawn* UMordhauVehicleComponent::GetPawnOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauVehicleComponent", "GetPawnOwner");

	Params::MordhauVehicleComponent_GetPawnOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Interactable.HeldInteractionStart
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IInteractable::HeldInteractionStart(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "HeldInteractionStart");

	Params::Interactable_HeldInteractionStart Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Interactable.Highlight
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IInteractable::Highlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "Highlight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Interactable.InteractionEnd
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IInteractable::InteractionEnd(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "InteractionEnd");

	Params::Interactable_InteractionEnd Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Interactable.InteractionMaintained
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IInteractable::InteractionMaintained(class AMordhauCharacter* Character, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "InteractionMaintained");

	Params::Interactable_InteractionMaintained Parms{};

	Parms.Character = Character;
	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Interactable.InteractionStart
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IInteractable::InteractionStart(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "InteractionStart");

	Params::Interactable_InteractionStart Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Interactable.InteractPassively
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IInteractable::InteractPassively(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "InteractPassively");

	Params::Interactable_InteractPassively Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Interactable.OnHeldInteractionStart
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IInteractable::OnHeldInteractionStart(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "OnHeldInteractionStart");

	Params::Interactable_OnHeldInteractionStart Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Interactable.OnHighlightEnd
// (Native, Event, Public, BlueprintEvent)

void IInteractable::OnHighlightEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "OnHighlightEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Interactable.OnHighlightMaintained
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IInteractable::OnHighlightMaintained(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "OnHighlightMaintained");

	Params::Interactable_OnHighlightMaintained Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Interactable.OnHighlightStart
// (Native, Event, Public, BlueprintEvent)

void IInteractable::OnHighlightStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "OnHighlightStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Interactable.OnInteractionEnd
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IInteractable::OnInteractionEnd(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "OnInteractionEnd");

	Params::Interactable_OnInteractionEnd Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Interactable.OnInteractionMaintained
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IInteractable::OnInteractionMaintained(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "OnInteractionMaintained");

	Params::Interactable_OnInteractionMaintained Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Interactable.OnInteractionStart
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IInteractable::OnInteractionStart(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "OnInteractionStart");

	Params::Interactable_OnInteractionStart Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Interactable.OnInteractPassively
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IInteractable::OnInteractPassively(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "OnInteractPassively");

	Params::Interactable_OnInteractPassively Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Interactable.UnHighlight
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IInteractable::UnHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "UnHighlight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Interactable.CanHeldInteract
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IInteractable::CanHeldInteract(class AMordhauCharacter* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "CanHeldInteract");

	Params::Interactable_CanHeldInteract Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Interactable.CanInteract
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IInteractable::CanInteract(class AMordhauCharacter* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "CanInteract");

	Params::Interactable_CanInteract Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Interactable.CanInteractPassively
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IInteractable::CanInteractPassively(class AMordhauCharacter* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "CanInteractPassively");

	Params::Interactable_CanInteractPassively Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Interactable.GetMaxInteractionHoldTime
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IInteractable::GetMaxInteractionHoldTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "GetMaxInteractionHoldTime");

	Params::Interactable_GetMaxInteractionHoldTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Interactable.IsCooperativeInteractionAllowed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IInteractable::IsCooperativeInteractionAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "IsCooperativeInteractionAllowed");

	Params::Interactable_IsCooperativeInteractionAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.InteractionComponent.Highlight
// (Native, Public, BlueprintCallable)

void UInteractionComponent::Highlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionComponent", "Highlight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.InteractionComponent.InteractionEnd
// (Native, Public, BlueprintCallable)

void UInteractionComponent::InteractionEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionComponent", "InteractionEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.InteractionComponent.InteractionStart
// (Native, Public, BlueprintCallable)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInteractionComponent::InteractionStart(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionComponent", "InteractionStart");

	Params::InteractionComponent_InteractionStart Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.InteractionComponent.OnHighlightEnd
// (Native, Event, Public, BlueprintEvent)

void UInteractionComponent::OnHighlightEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionComponent", "OnHighlightEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.InteractionComponent.OnHighlightStart
// (Native, Event, Public, BlueprintEvent)

void UInteractionComponent::OnHighlightStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionComponent", "OnHighlightStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.InteractionComponent.OnInteractionEnd
// (Native, Event, Public, BlueprintEvent)

void UInteractionComponent::OnInteractionEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionComponent", "OnInteractionEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.InteractionComponent.OnInteractionStart
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInteractionComponent::OnInteractionStart(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionComponent", "OnInteractionStart");

	Params::InteractionComponent_OnInteractionStart Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.InteractionComponent.UnHighlight
// (Native, Public, BlueprintCallable)

void UInteractionComponent::UnHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionComponent", "UnHighlight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.InteractionComponent.CanInteract
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInteractionComponent::CanInteract(class AAdvancedCharacter* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionComponent", "CanInteract");

	Params::InteractionComponent_CanInteract Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MasterField.BeginFieldDeactivation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AMasterField::BeginFieldDeactivation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterField", "BeginFieldDeactivation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MasterField.ComputeDistanceIntoField
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AMasterField::ComputeDistanceIntoField(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterField", "ComputeDistanceIntoField");

	Params::MasterField_ComputeDistanceIntoField Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MasterField.CreateField
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AMasterField::CreateField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterField", "CreateField");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MasterField.DeactivateAndDestroyField
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AMasterField::DeactivateAndDestroyField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterField", "DeactivateAndDestroyField");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MasterField.GetSubFields
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class ASubField*>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ASubField*> AMasterField::GetSubFields()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterField", "GetSubFields");

	Params::MasterField_GetSubFields Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MasterField.RecomputeCombinedBoundingBox
// (Final, Native, Public, BlueprintCallable)

void AMasterField::RecomputeCombinedBoundingBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterField", "RecomputeCombinedBoundingBox");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MasterField.SetSubFieldsHidden
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAreHidden                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMasterField::SetSubFieldsHidden(bool bAreHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterField", "SetSubFieldsHidden");

	Params::MasterField_SetSubFieldsHidden Parms{};

	Parms.bAreHidden = bAreHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MasterField.UpdateField
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AMasterField::UpdateField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterField", "UpdateField");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MasterField.GetFieldBoundsCenter
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AMasterField::GetFieldBoundsCenter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterField", "GetFieldBoundsCenter");

	Params::MasterField_GetFieldBoundsCenter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.JoinMatchmakingTicket.JoinMatchmakingTicket
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           QueueName_0                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TicketId_0                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabMatchmakingAttributes    Attributes_0                                           (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UJoinMatchmakingTicket*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UJoinMatchmakingTicket* UJoinMatchmakingTicket::JoinMatchmakingTicket(const class FString& QueueName_0, const class FString& TicketId_0, const struct FPlayFabMatchmakingAttributes& Attributes_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("JoinMatchmakingTicket", "JoinMatchmakingTicket");

	Params::JoinMatchmakingTicket_JoinMatchmakingTicket Parms{};

	Parms.QueueName_0 = std::move(QueueName_0);
	Parms.TicketId_0 = std::move(TicketId_0);
	Parms.Attributes_0 = std::move(Attributes_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.CancelMatchmakingTicket.CancelMatchmakingTicket
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           QueueName_0                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCancelMatchmakingTicket*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCancelMatchmakingTicket* UCancelMatchmakingTicket::CancelMatchmakingTicket(const class FString& QueueName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CancelMatchmakingTicket", "CancelMatchmakingTicket");

	Params::CancelMatchmakingTicket_CancelMatchmakingTicket Parms{};

	Parms.QueueName_0 = std::move(QueueName_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.GetMatchmakingTicket.GetMatchmakingTicket
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           QueueName_0                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TicketId_0                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGetMatchmakingTicket*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGetMatchmakingTicket* UGetMatchmakingTicket::GetMatchmakingTicket(const class FString& QueueName_0, const class FString& TicketId_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GetMatchmakingTicket", "GetMatchmakingTicket");

	Params::GetMatchmakingTicket_GetMatchmakingTicket Parms{};

	Parms.QueueName_0 = std::move(QueueName_0);
	Parms.TicketId_0 = std::move(TicketId_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.GetMatchmakingMatch.GetMatchmakingMatch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           QueueName_0                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MatchId_0                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGetMatchmakingMatch*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGetMatchmakingMatch* UGetMatchmakingMatch::GetMatchmakingMatch(const class FString& QueueName_0, const class FString& MatchId_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GetMatchmakingMatch", "GetMatchmakingMatch");

	Params::GetMatchmakingMatch_GetMatchmakingMatch Parms{};

	Parms.QueueName_0 = std::move(QueueName_0);
	Parms.MatchId_0 = std::move(MatchId_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.GetGameServers.GetGameServers
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameServerFilter                Filter_0                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UGetGameServers*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGetGameServers* UGetGameServers::GetGameServers(const struct FGameServerFilter& Filter_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GetGameServers", "GetGameServers");

	Params::GetGameServers_GetGameServers Parms{};

	Parms.Filter_0 = std::move(Filter_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.GetGameServer.GetGameServer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ServerId_0                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           IPV4Address_0                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Port_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGetGameServer*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGetGameServer* UGetGameServer::GetGameServer(const class FString& ServerId_0, const class FString& IPV4Address_0, int32 Port_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GetGameServer", "GetGameServer");

	Params::GetGameServer_GetGameServer Parms{};

	Parms.ServerId_0 = std::move(ServerId_0);
	Parms.IPV4Address_0 = std::move(IPV4Address_0);
	Parms.Port_0 = Port_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.ReserveServerSlots.ReserveServerSlots
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabServerDetails            ServerDetails_0                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FPlayFabMatchmakingPlayer>Players_0                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UReserveServerSlots*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UReserveServerSlots* UReserveServerSlots::ReserveServerSlots(class UObject* WorldContextObject, const struct FPlayFabServerDetails& ServerDetails_0, const TArray<struct FPlayFabMatchmakingPlayer>& Players_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ReserveServerSlots", "ReserveServerSlots");

	Params::ReserveServerSlots_ReserveServerSlots Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ServerDetails_0 = std::move(ServerDetails_0);
	Parms.Players_0 = std::move(Players_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.LeaveMatchmakingMatch.LeaveMatchmakingMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabMatchmakingMatch         Match_0                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class ULeaveMatchmakingMatch*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULeaveMatchmakingMatch* ULeaveMatchmakingMatch::LeaveMatchmakingMatch(const struct FPlayFabMatchmakingMatch& Match_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LeaveMatchmakingMatch", "LeaveMatchmakingMatch");

	Params::LeaveMatchmakingMatch_LeaveMatchmakingMatch Parms{};

	Parms.Match_0 = std::move(Match_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.StartMatchmakingMatch.StartMatchmakingMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabMatchmakingMatch         Match_0                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UStartMatchmakingMatch*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStartMatchmakingMatch* UStartMatchmakingMatch::StartMatchmakingMatch(class UObject* WorldContextObject, const struct FPlayFabMatchmakingMatch& Match_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StartMatchmakingMatch", "StartMatchmakingMatch");

	Params::StartMatchmakingMatch_StartMatchmakingMatch Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Match_0 = std::move(Match_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.SetMatchmakingMatchServerDetails.SetMatchmakingMatchServerDetails
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabMatchmakingMatch         Match_0                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FPlayFabServerDetails            ServerDetails_0                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class USetMatchmakingMatchServerDetails*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USetMatchmakingMatchServerDetails* USetMatchmakingMatchServerDetails::SetMatchmakingMatchServerDetails(const struct FPlayFabMatchmakingMatch& Match_0, const struct FPlayFabServerDetails& ServerDetails_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SetMatchmakingMatchServerDetails", "SetMatchmakingMatchServerDetails");

	Params::SetMatchmakingMatchServerDetails_SetMatchmakingMatchServerDetails Parms{};

	Parms.Match_0 = std::move(Match_0);
	Parms.ServerDetails_0 = std::move(ServerDetails_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.GetMatchmakingPenalty.GetMatchmakingPenalty
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabPlayerEntity             PlayerEntity_0                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGetMatchmakingPenalty*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGetMatchmakingPenalty* UGetMatchmakingPenalty::GetMatchmakingPenalty(const struct FPlayFabPlayerEntity& PlayerEntity_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GetMatchmakingPenalty", "GetMatchmakingPenalty");

	Params::GetMatchmakingPenalty_GetMatchmakingPenalty Parms{};

	Parms.PlayerEntity_0 = std::move(PlayerEntity_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.PenalizeForLeavingActiveMatch.PenalizeForLeavingActiveMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabPlayerEntity             PlayerEntity_0                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPenalizeForLeavingActiveMatch*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPenalizeForLeavingActiveMatch* UPenalizeForLeavingActiveMatch::PenalizeForLeavingActiveMatch(const struct FPlayFabPlayerEntity& PlayerEntity_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PenalizeForLeavingActiveMatch", "PenalizeForLeavingActiveMatch");

	Params::PenalizeForLeavingActiveMatch_PenalizeForLeavingActiveMatch Parms{};

	Parms.PlayerEntity_0 = std::move(PlayerEntity_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.PenalizeForLeavingActiveMatch.OnGetMatchmakingPenaltyFailure
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// struct FPlayFabPlayerEntity             InPlayerEntity                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InLeaveCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        InLeaveTime                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        InBanEndTime                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPenalizeForLeavingActiveMatch::OnGetMatchmakingPenaltyFailure(const struct FPlayFabPlayerEntity& InPlayerEntity, int32 InLeaveCount, const struct FDateTime& InLeaveTime, const struct FDateTime& InBanEndTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PenalizeForLeavingActiveMatch", "OnGetMatchmakingPenaltyFailure");

	Params::PenalizeForLeavingActiveMatch_OnGetMatchmakingPenaltyFailure Parms{};

	Parms.InPlayerEntity = std::move(InPlayerEntity);
	Parms.InLeaveCount = InLeaveCount;
	Parms.InLeaveTime = std::move(InLeaveTime);
	Parms.InBanEndTime = std::move(InBanEndTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.PenalizeForLeavingActiveMatch.OnGetMatchmakingPenaltySuccess
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// struct FPlayFabPlayerEntity             InPlayerEntity                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InLeaveCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        InLeaveTime                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        InBanEndTime                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPenalizeForLeavingActiveMatch::OnGetMatchmakingPenaltySuccess(const struct FPlayFabPlayerEntity& InPlayerEntity, int32 InLeaveCount, const struct FDateTime& InLeaveTime, const struct FDateTime& InBanEndTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PenalizeForLeavingActiveMatch", "OnGetMatchmakingPenaltySuccess");

	Params::PenalizeForLeavingActiveMatch_OnGetMatchmakingPenaltySuccess Parms{};

	Parms.InPlayerEntity = std::move(InPlayerEntity);
	Parms.InLeaveCount = InLeaveCount;
	Parms.InLeaveTime = std::move(InLeaveTime);
	Parms.InBanEndTime = std::move(InBanEndTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.RequestPartyStats.RequestPartyStats
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URequestPartyStats*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URequestPartyStats* URequestPartyStats::RequestPartyStats(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RequestPartyStats", "RequestPartyStats");

	Params::RequestPartyStats_RequestPartyStats Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Mods.CancelModDownload
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ModId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMods::CancelModDownload(int32 ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Mods", "CancelModDownload");

	Params::Mods_CancelModDownload Parms{};

	Parms.ModId = ModId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Mods.GetAllInstalledMods
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FInstalledMod>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FInstalledMod> UMods::GetAllInstalledMods()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Mods", "GetAllInstalledMods");

	Params::Mods_GetAllInstalledMods Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Mods.GetInstalledMod
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ModId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInstalledMod                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FInstalledMod UMods::GetInstalledMod(int32 ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Mods", "GetInstalledMod");

	Params::Mods_GetInstalledMod Parms{};

	Parms.ModId = ModId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Mods.GetModDownloadQueue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FQueuedModDownload>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FQueuedModDownload> UMods::GetModDownloadQueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Mods", "GetModDownloadQueue");

	Params::Mods_GetModDownloadQueue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Mods.IsModMounted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ModId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMods::IsModMounted(int32 ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Mods", "IsModMounted");

	Params::Mods_IsModMounted Parms{};

	Parms.ModId = ModId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Mods.MountAllInstalledMods
// (Final, Native, Static, Public, BlueprintCallable)

void UMods::MountAllInstalledMods()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Mods", "MountAllInstalledMods");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Mods.MountAllPaksInCustomPakFolder
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMods::MountAllPaksInCustomPakFolder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Mods", "MountAllPaksInCustomPakFolder");

	Params::Mods_MountAllPaksInCustomPakFolder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Mods.MountMod
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ModId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMods::MountMod(int32 ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Mods", "MountMod");

	Params::Mods_MountMod Parms{};

	Parms.ModId = ModId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Mods.MountMods
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           ModIds                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMods::MountMods(const TArray<int32>& ModIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Mods", "MountMods");

	Params::Mods_MountMods Parms{};

	Parms.ModIds = std::move(ModIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Mods.Process
// (Final, Native, Static, Public, BlueprintCallable)

void UMods::Process()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Mods", "Process");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Mods.UninstallMod
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ModId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMods::UninstallMod(int32 ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Mods", "UninstallMod");

	Params::Mods_UninstallMod Parms{};

	Parms.ModId = ModId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Mods.UnmountMod
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ModId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMods::UnmountMod(int32 ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Mods", "UnmountMod");

	Params::Mods_UnmountMod Parms{};

	Parms.ModId = ModId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.DownloadModfilesById.DownloadModfilesById
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           ModIds                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UDownloadModfilesById*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDownloadModfilesById* UDownloadModfilesById::DownloadModfilesById(const TArray<int32>& ModIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloadModfilesById", "DownloadModfilesById");

	Params::DownloadModfilesById_DownloadModfilesById Parms{};

	Parms.ModIds = std::move(ModIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Mordhau1DVehicle.OnStepChanged
// (Native, Event, Public, BlueprintEvent)

void AMordhau1DVehicle::OnStepChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mordhau1DVehicle", "OnStepChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.DestroyController
// (Final, Native, Public, BlueprintCallable)

void AMordhauAIController::DestroyController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "DestroyController");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.GetAllyClearanceSides
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMordhauAIController::GetAllyClearanceSides()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "GetAllyClearanceSides");

	Params::MordhauAIController_GetAllyClearanceSides Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauAIController.GetClosestAlly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauCharacter*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauCharacter* AMordhauAIController::GetClosestAlly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "GetClosestAlly");

	Params::MordhauAIController_GetClosestAlly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauAIController.GetClosestEnemy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauCharacter*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauCharacter* AMordhauAIController::GetClosestEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "GetClosestEnemy");

	Params::MordhauAIController_GetClosestEnemy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauAIController.GetClosestEnemyOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauCharacter*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauCharacter* AMordhauAIController::GetClosestEnemyOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "GetClosestEnemyOverride");

	Params::MordhauAIController_GetClosestEnemyOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauAIController.GetCurrentlyFacingActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AMordhauAIController::GetCurrentlyFacingActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "GetCurrentlyFacingActor");

	Params::MordhauAIController_GetCurrentlyFacingActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauAIController.GetKthClosestOfThree
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauCharacter*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauCharacter* AMordhauAIController::GetKthClosestOfThree(int32 Idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "GetKthClosestOfThree");

	Params::MordhauAIController_GetKthClosestOfThree Parms{};

	Parms.Idx = Idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauAIController.GetMotionBasedRandom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AMordhauAIController::GetMotionBasedRandom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "GetMotionBasedRandom");

	Params::MordhauAIController_GetMotionBasedRandom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauAIController.GetPerceivedAllies
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<class AMordhauCharacter*>  ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

const TArray<class AMordhauCharacter*> AMordhauAIController::GetPerceivedAllies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "GetPerceivedAllies");

	Params::MordhauAIController_GetPerceivedAllies Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauAIController.GetPerceivedEnemies
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<class AMordhauCharacter*>  ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

const TArray<class AMordhauCharacter*> AMordhauAIController::GetPerceivedEnemies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "GetPerceivedEnemies");

	Params::MordhauAIController_GetPerceivedEnemies Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauAIController.GetTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMordhauAIController::GetTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "GetTeam");

	Params::MordhauAIController_GetTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauAIController.MoveToLocationWithRandomMidpoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Dest                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AcceptanceRadius                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopOnOverlap                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUsePathfinding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bProjectDestinationToNavigation                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCanStrafe                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UNavigationQueryFilter>FilterClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowPartialPath                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPathFollowingRequestResult             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPathFollowingRequestResult AMordhauAIController::MoveToLocationWithRandomMidpoint(const struct FVector& Dest, float AcceptanceRadius, bool bStopOnOverlap, bool bUsePathfinding, bool bProjectDestinationToNavigation, bool bCanStrafe, TSubclassOf<class UNavigationQueryFilter> FilterClass, bool bAllowPartialPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "MoveToLocationWithRandomMidpoint");

	Params::MordhauAIController_MoveToLocationWithRandomMidpoint Parms{};

	Parms.Dest = std::move(Dest);
	Parms.AcceptanceRadius = AcceptanceRadius;
	Parms.bStopOnOverlap = bStopOnOverlap;
	Parms.bUsePathfinding = bUsePathfinding;
	Parms.bProjectDestinationToNavigation = bProjectDestinationToNavigation;
	Parms.bCanStrafe = bCanStrafe;
	Parms.FilterClass = FilterClass;
	Parms.bAllowPartialPath = bAllowPartialPath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauAIController.OnAfterUnPossess
// (Native, Event, Public, BlueprintEvent)

void AMordhauAIController::OnAfterUnPossess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "OnAfterUnPossess");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.OnCharacterDiedOrDestroyed
// (Final, Native, Public)
// Parameters:
// class AAdvancedCharacter*               AdvancedCharacter                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauAIController::OnCharacterDiedOrDestroyed(class AAdvancedCharacter* AdvancedCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "OnCharacterDiedOrDestroyed");

	Params::MordhauAIController_OnCharacterDiedOrDestroyed Parms{};

	Parms.AdvancedCharacter = AdvancedCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.OnPerceptionUpdated
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<class AActor*>                   InUpdatedActors                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AMordhauAIController::OnPerceptionUpdated(const TArray<class AActor*>& InUpdatedActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "OnPerceptionUpdated");

	Params::MordhauAIController_OnPerceptionUpdated Parms{};

	Parms.InUpdatedActors = std::move(InUpdatedActors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.OnStartedPerceivingCharacter
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AAdvancedCharacter*               PerceivedCharacter                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPerceptionInfo                  PerceptionInfo                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AMordhauAIController::OnStartedPerceivingCharacter(class AAdvancedCharacter* PerceivedCharacter, const struct FPerceptionInfo& PerceptionInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "OnStartedPerceivingCharacter");

	Params::MordhauAIController_OnStartedPerceivingCharacter Parms{};

	Parms.PerceivedCharacter = PerceivedCharacter;
	Parms.PerceptionInfo = std::move(PerceptionInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.OnStoppedPerceivingCharacter
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AAdvancedCharacter*               PerceivedCharacter                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPerceptionInfo                  PerceptionInfo                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AMordhauAIController::OnStoppedPerceivingCharacter(class AAdvancedCharacter* PerceivedCharacter, const struct FPerceptionInfo& PerceptionInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "OnStoppedPerceivingCharacter");

	Params::MordhauAIController_OnStoppedPerceivingCharacter Parms{};

	Parms.PerceivedCharacter = PerceivedCharacter;
	Parms.PerceptionInfo = std::move(PerceptionInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.PauseLogic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Reason                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauAIController::PauseLogic(const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "PauseLogic");

	Params::MordhauAIController_PauseLogic Parms{};

	Parms.Reason = std::move(Reason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.PerceivesAlly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauAIController::PerceivesAlly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "PerceivesAlly");

	Params::MordhauAIController_PerceivesAlly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauAIController.PerceivesEnemy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauAIController::PerceivesEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "PerceivesEnemy");

	Params::MordhauAIController_PerceivesEnemy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauAIController.RefreshCharacterProfile
// (Final, Native, Public)

void AMordhauAIController::RefreshCharacterProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "RefreshCharacterProfile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.RequestVoiceCommand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Command                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauAIController::RequestVoiceCommand(uint8 Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "RequestVoiceCommand");

	Params::MordhauAIController_RequestVoiceCommand Parms{};

	Parms.Command = Command;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.ResumeLogic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Reason                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauAIController::ResumeLogic(const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "ResumeLogic");

	Params::MordhauAIController_ResumeLogic Parms{};

	Parms.Reason = std::move(Reason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.SetClosestEnemyOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauCharacter*                Override                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauAIController::SetClosestEnemyOverride(class AMordhauCharacter* Override)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "SetClosestEnemyOverride");

	Params::MordhauAIController_SetClosestEnemyOverride Parms{};

	Parms.Override = Override;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.StartFacingActor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LocationUpOffset                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        DegreeOffset                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauAIController::StartFacingActor(class AActor* Actor, float LocationUpOffset, const struct FVector2D& DegreeOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "StartFacingActor");

	Params::MordhauAIController_StartFacingActor Parms{};

	Parms.Actor = Actor;
	Parms.LocationUpOffset = LocationUpOffset;
	Parms.DegreeOffset = std::move(DegreeOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.StartFacingActor2D
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LocationUpOffset                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauAIController::StartFacingActor2D(class AActor* Actor, float LocationUpOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "StartFacingActor2D");

	Params::MordhauAIController_StartFacingActor2D Parms{};

	Parms.Actor = Actor;
	Parms.LocationUpOffset = LocationUpOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.StartFacingBone
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           SkelMesh                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneToFace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LocationUpOffset                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        DegreeOffset                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauAIController::StartFacingBone(class USkeletalMeshComponent* SkelMesh, class FName BoneToFace, float LocationUpOffset, const struct FVector2D& DegreeOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "StartFacingBone");

	Params::MordhauAIController_StartFacingBone Parms{};

	Parms.SkelMesh = SkelMesh;
	Parms.BoneToFace = BoneToFace;
	Parms.LocationUpOffset = LocationUpOffset;
	Parms.DegreeOffset = std::move(DegreeOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.StartFacingLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          WorldLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauAIController::StartFacingLocation(const struct FVector& WorldLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "StartFacingLocation");

	Params::MordhauAIController_StartFacingLocation Parms{};

	Parms.WorldLocation = std::move(WorldLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.StartFacingMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   LocationUpOffset                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauAIController::StartFacingMovement(float LocationUpOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "StartFacingMovement");

	Params::MordhauAIController_StartFacingMovement Parms{};

	Parms.LocationUpOffset = LocationUpOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.StartInteract
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauAIController::StartInteract(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "StartInteract");

	Params::MordhauAIController_StartInteract Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.StopInteract
// (Final, Native, Public, BlueprintCallable)

void AMordhauAIController::StopInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "StopInteract");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauAIController.UpdatePerceptionInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AAdvancedCharacter*               InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPerceptionInfo                  PerceptionInfo                                         (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void AMordhauAIController::UpdatePerceptionInfo(class AAdvancedCharacter* InCharacter, struct FPerceptionInfo* PerceptionInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "UpdatePerceptionInfo");

	Params::MordhauAIController_UpdatePerceptionInfo Parms{};

	Parms.InCharacter = InCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PerceptionInfo != nullptr)
		*PerceptionInfo = std::move(Parms.PerceptionInfo);
}


// Function Mordhau.MordhauAIController.CanInteract
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauAIController::CanInteract(class AActor* Target) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "CanInteract");

	Params::MordhauAIController_CanInteract Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauAIController.CanSee
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauAIController::CanSee(class AActor* Target, float Distance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "CanSee");

	Params::MordhauAIController_CanSee Parms{};

	Parms.Target = Target;
	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauAIController.GetCurrentFacingMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAIFacingMode                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAIFacingMode AMordhauAIController::GetCurrentFacingMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "GetCurrentFacingMode");

	Params::MordhauAIController_GetCurrentFacingMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauAIController.GetMoveMidpoint
// (Native, Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          Goal                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ANavigationData*                  NavData                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UNavigationQueryFilter>FilterClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AMordhauAIController::GetMoveMidpoint(const struct FVector& Goal, class ANavigationData* NavData, TSubclassOf<class UNavigationQueryFilter> FilterClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "GetMoveMidpoint");

	Params::MordhauAIController_GetMoveMidpoint Parms{};

	Parms.Goal = std::move(Goal);
	Parms.NavData = NavData;
	Parms.FilterClass = FilterClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauAIController.IsMovePending
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauAIController::IsMovePending() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauAIController", "IsMovePending");

	Params::MordhauAIController_IsMovePending Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauBeaconClient.ClientNotifyReservationStatus
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int32                                   OpenSlots                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EReservationStatus                      ReservationStatus                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauBeaconClient::ClientNotifyReservationStatus(int32 OpenSlots, EReservationStatus ReservationStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauBeaconClient", "ClientNotifyReservationStatus");

	Params::MordhauBeaconClient_ClientNotifyReservationStatus Parms{};

	Parms.OpenSlots = OpenSlots;
	Parms.ReservationStatus = ReservationStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauBeaconClient.ClientPong
// (Net, NetReliable, Native, Event, Public, NetClient)

void AMordhauBeaconClient::ClientPong()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauBeaconClient", "ClientPong");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauBeaconClient.Ping
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FURL                             ConnectURL                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauBeaconClient::Ping(struct FURL* ConnectURL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauBeaconClient", "Ping");

	Params::MordhauBeaconClient_Ping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ConnectURL != nullptr)
		*ConnectURL = std::move(Parms.ConnectURL);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauBeaconClient.ReserveSlots
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FURL                             ConnectURL                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// TArray<struct FPlayFabPlayerEntity>     InPlayerEntites                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauBeaconClient::ReserveSlots(struct FURL* ConnectURL, const TArray<struct FPlayFabPlayerEntity>& InPlayerEntites)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauBeaconClient", "ReserveSlots");

	Params::MordhauBeaconClient_ReserveSlots Parms{};

	Parms.InPlayerEntites = std::move(InPlayerEntites);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ConnectURL != nullptr)
		*ConnectURL = std::move(Parms.ConnectURL);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauBeaconClient.ServerPing
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AMordhauBeaconClient::ServerPing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauBeaconClient", "ServerPing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauBeaconClient.ServerReserveSlots
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<struct FPlayFabPlayerEntity>     InPlayerEntities                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AMordhauBeaconClient::ServerReserveSlots(const TArray<struct FPlayFabPlayerEntity>& InPlayerEntities)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauBeaconClient", "ServerReserveSlots");

	Params::MordhauBeaconClient_ServerReserveSlots Parms{};

	Parms.InPlayerEntities = std::move(InPlayerEntities);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.AppendBodySet
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TSet<class FName>                       Outset                                                 (Parm, OutParm, NativeAccessSpecifierPublic)

void AMordhauCharacter::AppendBodySet(TSet<class FName>* Outset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauCharacter", "AppendBodySet");

	Params::MordhauCharacter_AppendBodySet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Outset != nullptr)
		*Outset = std::move(Parms.Outset);
}


// Function Mordhau.MordhauCharacter.AppendHeadSet
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TSet<class FName>                       Outset                                                 (Parm, OutParm, NativeAccessSpecifierPublic)

void AMordhauCharacter::AppendHeadSet(TSet<class FName>* Outset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauCharacter", "AppendHeadSet");

	Params::MordhauCharacter_AppendHeadSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Outset != nullptr)
		*Outset = std::move(Parms.Outset);
}


// Function Mordhau.MordhauCharacter.AppendLeftArmSet
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TSet<class FName>                       Outset                                                 (Parm, OutParm, NativeAccessSpecifierPublic)

void AMordhauCharacter::AppendLeftArmSet(TSet<class FName>* Outset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauCharacter", "AppendLeftArmSet");

	Params::MordhauCharacter_AppendLeftArmSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Outset != nullptr)
		*Outset = std::move(Parms.Outset);
}


// Function Mordhau.MordhauCharacter.AppendLeftLegSet
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TSet<class FName>                       Outset                                                 (Parm, OutParm, NativeAccessSpecifierPublic)

void AMordhauCharacter::AppendLeftLegSet(TSet<class FName>* Outset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauCharacter", "AppendLeftLegSet");

	Params::MordhauCharacter_AppendLeftLegSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Outset != nullptr)
		*Outset = std::move(Parms.Outset);
}


// Function Mordhau.MordhauCharacter.AppendRightArmSet
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TSet<class FName>                       Outset                                                 (Parm, OutParm, NativeAccessSpecifierPublic)

void AMordhauCharacter::AppendRightArmSet(TSet<class FName>* Outset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauCharacter", "AppendRightArmSet");

	Params::MordhauCharacter_AppendRightArmSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Outset != nullptr)
		*Outset = std::move(Parms.Outset);
}


// Function Mordhau.MordhauCharacter.AppendRightLegSet
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TSet<class FName>                       Outset                                                 (Parm, OutParm, NativeAccessSpecifierPublic)

void AMordhauCharacter::AppendRightLegSet(TSet<class FName>* Outset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauCharacter", "AppendRightLegSet");

	Params::MordhauCharacter_AppendRightLegSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Outset != nullptr)
		*Outset = std::move(Parms.Outset);
}


// Function Mordhau.MordhauCharacter.IsArm
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             bone                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::IsArm(const class FName& bone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauCharacter", "IsArm");

	Params::MordhauCharacter_IsArm Parms{};

	Parms.bone = bone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.IsBody
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             bone                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::IsBody(const class FName& bone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauCharacter", "IsBody");

	Params::MordhauCharacter_IsBody Parms{};

	Parms.bone = bone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.IsHead
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             bone                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::IsHead(const class FName& bone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauCharacter", "IsHead");

	Params::MordhauCharacter_IsHead Parms{};

	Parms.bone = bone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.IsLeftArm
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             bone                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::IsLeftArm(const class FName& bone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauCharacter", "IsLeftArm");

	Params::MordhauCharacter_IsLeftArm Parms{};

	Parms.bone = bone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.IsLeftLeg
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             bone                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::IsLeftLeg(const class FName& bone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauCharacter", "IsLeftLeg");

	Params::MordhauCharacter_IsLeftLeg Parms{};

	Parms.bone = bone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.IsLeg
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             bone                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::IsLeg(const class FName& bone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauCharacter", "IsLeg");

	Params::MordhauCharacter_IsLeg Parms{};

	Parms.bone = bone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.IsRightArm
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             bone                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::IsRightArm(const class FName& bone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauCharacter", "IsRightArm");

	Params::MordhauCharacter_IsRightArm Parms{};

	Parms.bone = bone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.IsRightLeg
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             bone                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::IsRightLeg(const class FName& bone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauCharacter", "IsRightLeg");

	Params::MordhauCharacter_IsRightLeg Parms{};

	Parms.bone = bone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.AssignNetBlock
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FBlockResult                     BlockResult                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EAttackMove                             BlockedMove                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Weapon                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::AssignNetBlock(const struct FBlockResult& BlockResult, EAttackMove BlockedMove, class AActor* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "AssignNetBlock");

	Params::MordhauCharacter_AssignNetBlock Parms{};

	Parms.BlockResult = std::move(BlockResult);
	Parms.BlockedMove = BlockedMove;
	Parms.Weapon = Weapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.AssignNetMotionSimple
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   MotionType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Param0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Param1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Param2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::AssignNetMotionSimple(uint8 MotionType, uint8 Param0, uint8 Param1, uint8 Param2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "AssignNetMotionSimple");

	Params::MordhauCharacter_AssignNetMotionSimple Parms{};

	Parms.MotionType = MotionType;
	Parms.Param0 = Param0;
	Parms.Param1 = Param1;
	Parms.Param2 = Param2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.AssignProfile
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterProfile                NewProfile                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AMordhauCharacter::AssignProfile(const struct FCharacterProfile& NewProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "AssignProfile");

	Params::MordhauCharacter_AssignProfile Parms{};

	Parms.NewProfile = std::move(NewProfile);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.BakeFaceCustomizationTransforms
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDeferBake                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::BakeFaceCustomizationTransforms(bool bDeferBake)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "BakeFaceCustomizationTransforms");

	Params::MordhauCharacter_BakeFaceCustomizationTransforms Parms{};

	Parms.bDeferBake = bDeferBake;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.BlockPressed
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::BlockPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "BlockPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.BlockReleased
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::BlockReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "BlockReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.BuildCharacter
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::BuildCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "BuildCharacter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.CalculateLedgeOffsetAndNormal
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class UClimbingMotion*                  ClimbingMotion                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutOffset                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutNormal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::CalculateLedgeOffsetAndNormal(class UClimbingMotion* ClimbingMotion, struct FVector* OutOffset, struct FVector* OutNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "CalculateLedgeOffsetAndNormal");

	Params::MordhauCharacter_CalculateLedgeOffsetAndNormal Parms{};

	Parms.ClimbingMotion = ClimbingMotion;

	UObject::ProcessEvent(Func, &Parms);

	if (OutOffset != nullptr)
		*OutOffset = std::move(Parms.OutOffset);

	if (OutNormal != nullptr)
		*OutNormal = std::move(Parms.OutNormal);
}


// Function Mordhau.MordhauCharacter.CanAccomodate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AMordhauEquipment>    EquipmentToTest                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::CanAccomodate(TSubclassOf<class AMordhauEquipment> EquipmentToTest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "CanAccomodate");

	Params::MordhauCharacter_CanAccomodate Parms{};

	Parms.EquipmentToTest = EquipmentToTest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.CanDismember
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             bone                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::CanDismember(const class FName& bone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "CanDismember");

	Params::MordhauCharacter_CanDismember Parms{};

	Parms.bone = bone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.CanInitiateMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UMordhauMotion>       NewMotion                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAttemptCancel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::CanInitiateMotion(TSubclassOf<class UMordhauMotion> NewMotion, bool bAttemptCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "CanInitiateMotion");

	Params::MordhauCharacter_CanInitiateMotion Parms{};

	Parms.NewMotion = NewMotion;
	Parms.bAttemptCancel = bAttemptCancel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.CanPerformAttack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAttackMove                             Move                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::CanPerformAttack(EAttackMove Move)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "CanPerformAttack");

	Params::MordhauCharacter_CanPerformAttack Parms{};

	Parms.Move = Move;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.ClientSetNetMotion
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FNetMotion                       NewMotion                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ServerStartTime                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::ClientSetNetMotion(const struct FNetMotion& NewMotion, float ServerStartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ClientSetNetMotion");

	Params::MordhauCharacter_ClientSetNetMotion Parms{};

	Parms.NewMotion = std::move(NewMotion);
	Parms.ServerStartTime = ServerStartTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.CrouchPressed
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::CrouchPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "CrouchPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.CrouchReleased
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::CrouchReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "CrouchReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.CycleCamera
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::CycleCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "CycleCamera");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.DisableBlockCollider
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::DisableBlockCollider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "DisableBlockCollider");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.DisableLimb
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::DisableLimb(class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "DisableLimb");

	Params::MordhauCharacter_DisableLimb Parms{};

	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.Dismember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDismemberedBoneData             InDismemberedBoneData                                  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// class ASeparatedBodyPart*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASeparatedBodyPart* AMordhauCharacter::Dismember(struct FDismemberedBoneData* InDismemberedBoneData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "Dismember");

	Params::MordhauCharacter_Dismember Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InDismemberedBoneData != nullptr)
		*InDismemberedBoneData = std::move(Parms.InDismemberedBoneData);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.DoCameraShakeIfViewTarget
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class UMatineeCameraShake>  Shake                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECameraShakePlaySpace                   PlaySpace                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         UserPlaySpaceRot                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// ECameraShakeType                        ShakeType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::DoCameraShakeIfViewTarget(TSubclassOf<class UMatineeCameraShake> Shake, float Scale, ECameraShakePlaySpace PlaySpace, const struct FRotator& UserPlaySpaceRot, ECameraShakeType ShakeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "DoCameraShakeIfViewTarget");

	Params::MordhauCharacter_DoCameraShakeIfViewTarget Parms{};

	Parms.Shake = Shake;
	Parms.Scale = Scale;
	Parms.PlaySpace = PlaySpace;
	Parms.UserPlaySpaceRot = std::move(UserPlaySpaceRot);
	Parms.ShakeType = ShakeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.DropEquipment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauEquipment*                ToDrop                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauEquipment*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauEquipment* AMordhauCharacter::DropEquipment(class AMordhauEquipment* ToDrop, bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "DropEquipment");

	Params::MordhauCharacter_DropEquipment Parms{};

	Parms.ToDrop = ToDrop;
	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.DropSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauEquipment*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauEquipment* AMordhauCharacter::DropSlot(uint8 Index_0, bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "DropSlot");

	Params::MordhauCharacter_DropSlot Parms{};

	Parms.Index_0 = Index_0;
	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.EmptyHands
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::EmptyHands()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "EmptyHands");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.EnableBlockCollider
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::EnableBlockCollider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "EnableBlockCollider");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.EnteredTeamArea
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   OwningTeam                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::EnteredTeamArea(int32 OwningTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "EnteredTeamArea");

	Params::MordhauCharacter_EnteredTeamArea Parms{};

	Parms.OwningTeam = OwningTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.EquipSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDisplayEquipmentList                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::EquipSlot(uint8 Index_0, bool bDisplayEquipmentList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "EquipSlot");

	Params::MordhauCharacter_EquipSlot Parms{};

	Parms.Index_0 = Index_0;
	Parms.bDisplayEquipmentList = bDisplayEquipmentList;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.EquipSlot1
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::EquipSlot1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "EquipSlot1");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.EquipSlot2
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::EquipSlot2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "EquipSlot2");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.EquipSlot3
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::EquipSlot3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "EquipSlot3");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.EquipSlot4
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::EquipSlot4()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "EquipSlot4");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.EquipSlot5
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::EquipSlot5()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "EquipSlot5");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.EquipSlot6
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::EquipSlot6()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "EquipSlot6");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.EquipSlot7
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::EquipSlot7()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "EquipSlot7");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.EquipSlot8
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::EquipSlot8()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "EquipSlot8");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.EquipSlot9
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::EquipSlot9()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "EquipSlot9");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.ExplodeLimbs
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Force                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedByController                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::ExplodeLimbs(const struct FVector& Force, class AActor* DamageCauser, class AController* InstigatedByController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ExplodeLimbs");

	Params::MordhauCharacter_ExplodeLimbs Parms{};

	Parms.Force = std::move(Force);
	Parms.DamageCauser = DamageCauser;
	Parms.InstigatedByController = InstigatedByController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.FeintOrBlockPressed
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::FeintOrBlockPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "FeintOrBlockPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.FeintOrBlockReleased
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::FeintOrBlockReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "FeintOrBlockReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.FindBestKiller
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   CutOffTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AController* AMordhauCharacter::FindBestKiller(float CutOffTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "FindBestKiller");

	Params::MordhauCharacter_FindBestKiller Parms{};

	Parms.CutOffTime = CutOffTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.FindEquipmentToRestock
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<TSubclassOf<class AMordhauEquipment>>ValidEquipment                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
// class AMordhauEquipment*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauEquipment* AMordhauCharacter::FindEquipmentToRestock(const TArray<TSubclassOf<class AMordhauEquipment>>& ValidEquipment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "FindEquipmentToRestock");

	Params::MordhauCharacter_FindEquipmentToRestock Parms{};

	Parms.ValidEquipment = std::move(ValidEquipment);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.FirePressed
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::FirePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "FirePressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.FireReleased
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::FireReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "FireReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.FlipAttackSidePressed
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::FlipAttackSidePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "FlipAttackSidePressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.FlipAttackSideReleased
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::FlipAttackSideReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "FlipAttackSideReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.ForceUpdateMeshVisibility
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::ForceUpdateMeshVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ForceUpdateMeshVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.FreeHandsForEquipment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauEquipment*                EquipmentInstigator                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::FreeHandsForEquipment(class AMordhauEquipment* EquipmentInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "FreeHandsForEquipment");

	Params::MordhauCharacter_FreeHandsForEquipment Parms{};

	Parms.EquipmentInstigator = EquipmentInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.GetAllFaceSelectionChildBonesRecursive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParentBone                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> AMordhauCharacter::GetAllFaceSelectionChildBonesRecursive(class FName ParentBone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "GetAllFaceSelectionChildBonesRecursive");

	Params::MordhauCharacter_GetAllFaceSelectionChildBonesRecursive Parms{};

	Parms.ParentBone = ParentBone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.GetCustomizationReplicationActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACustomizationReplicationActor*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACustomizationReplicationActor* AMordhauCharacter::GetCustomizationReplicationActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "GetCustomizationReplicationActor");

	Params::MordhauCharacter_GetCustomizationReplicationActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.GetFaceCustomizationBoneIdx
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMordhauCharacter::GetFaceCustomizationBoneIdx(class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "GetFaceCustomizationBoneIdx");

	Params::MordhauCharacter_GetFaceCustomizationBoneIdx Parms{};

	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.GetFaceCustomizationRotate
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AMordhauCharacter::GetFaceCustomizationRotate(class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "GetFaceCustomizationRotate");

	Params::MordhauCharacter_GetFaceCustomizationRotate Parms{};

	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.GetFaceCustomizationScale
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AMordhauCharacter::GetFaceCustomizationScale(class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "GetFaceCustomizationScale");

	Params::MordhauCharacter_GetFaceCustomizationScale Parms{};

	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.GetFaceCustomizationTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform AMordhauCharacter::GetFaceCustomizationTransform(class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "GetFaceCustomizationTransform");

	Params::MordhauCharacter_GetFaceCustomizationTransform Parms{};

	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.GetFaceCustomizationTranslate
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AMordhauCharacter::GetFaceCustomizationTranslate(class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "GetFaceCustomizationTranslate");

	Params::MordhauCharacter_GetFaceCustomizationTranslate Parms{};

	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.GetLastMovementFrontalHitActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   MaxAgeSeconds                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AMordhauCharacter::GetLastMovementFrontalHitActor(float MaxAgeSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "GetLastMovementFrontalHitActor");

	Params::MordhauCharacter_GetLastMovementFrontalHitActor Parms{};

	Parms.MaxAgeSeconds = MaxAgeSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.GetLastVehicleTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AMordhauCharacter::GetLastVehicleTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "GetLastVehicleTime");

	Params::MordhauCharacter_GetLastVehicleTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.GetLastVoiceCommand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* AMordhauCharacter::GetLastVoiceCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "GetLastVoiceCommand");

	Params::MordhauCharacter_GetLastVoiceCommand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.HasEquipmentHeSpawnedWith
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::HasEquipmentHeSpawnedWith()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "HasEquipmentHeSpawnedWith");

	Params::MordhauCharacter_HasEquipmentHeSpawnedWith Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.Holster
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauEquipment*                ToHolster                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::Holster(class AMordhauEquipment* ToHolster)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "Holster");

	Params::MordhauCharacter_Holster Parms{};

	Parms.ToHolster = ToHolster;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.IsBoneDismembered
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::IsBoneDismembered(class FName bone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "IsBoneDismembered");

	Params::MordhauCharacter_IsBoneDismembered Parms{};

	Parms.bone = bone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.IsHoldingBlock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::IsHoldingBlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "IsHoldingBlock");

	Params::MordhauCharacter_IsHoldingBlock Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.IsInKnockback
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::IsInKnockback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "IsInKnockback");

	Params::MordhauCharacter_IsInKnockback Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.JumpPressed
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::JumpPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "JumpPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.JumpReleased
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::JumpReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "JumpReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.LeftTeamArea
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   OwningTeam                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::LeftTeamArea(int32 OwningTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "LeftTeamArea");

	Params::MordhauCharacter_LeftTeamArea Parms{};

	Parms.OwningTeam = OwningTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.ListenForStab360
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::ListenForStab360()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ListenForStab360");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.ListenForStrike360
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::ListenForStrike360()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ListenForStrike360");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.ModifyParryResult
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    InResult                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AMordhauCharacter*                Attacker                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::ModifyParryResult(bool InResult, const struct FHitResult& HitResult, class AMordhauCharacter* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ModifyParryResult");

	Params::MordhauCharacter_ModifyParryResult Parms{};

	Parms.InResult = InResult;
	Parms.HitResult = std::move(HitResult);
	Parms.Attacker = Attacker;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.MoveBlockedBySlow
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Impact                                                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AMordhauCharacter::MoveBlockedBySlow(const struct FHitResult& Impact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "MoveBlockedBySlow");

	Params::MordhauCharacter_MoveBlockedBySlow Parms{};

	Parms.Impact = std::move(Impact);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauCharacter.NextEquipment
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::NextEquipment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "NextEquipment");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.NextEquipmentPressed
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::NextEquipmentPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "NextEquipmentPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.NextEquipmentReleased
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::NextEquipmentReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "NextEquipmentReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.NextShieldEquipment
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::NextShieldEquipment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "NextShieldEquipment");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.OffsetStamina
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReplicate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::OffsetStamina(int32 Amount, bool bReplicate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OffsetStamina");

	Params::MordhauCharacter_OffsetStamina Parms{};

	Parms.Amount = Amount;
	Parms.bReplicate = bReplicate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.OnActionFailed
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::OnActionFailed(class FName Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnActionFailed");

	Params::MordhauCharacter_OnActionFailed Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.OnAttackStarted
// (Event, Public, BlueprintEvent)

void AMordhauCharacter::OnAttackStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnAttackStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauCharacter.OnBlockedMelee
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AMordhauCharacter*                Attacker                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::OnBlockedMelee(const struct FHitResult& HitResult, class AMordhauCharacter* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnBlockedMelee");

	Params::MordhauCharacter_OnBlockedMelee Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauCharacter.OnDropped
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauEquipment*                Eq                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::OnDropped(class AMordhauEquipment* Eq)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnDropped");

	Params::MordhauCharacter_OnDropped Parms{};

	Parms.Eq = Eq;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.OnModifyAttackInfo
// (Event, Public, BlueprintEvent)

void AMordhauCharacter::OnModifyAttackInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnModifyAttackInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauCharacter.OnPickedUp
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauEquipment*                Eq                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::OnPickedUp(class AMordhauEquipment* Eq)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnPickedUp");

	Params::MordhauCharacter_OnPickedUp Parms{};

	Parms.Eq = Eq;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.OnPostDismember
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASeparatedBodyPart*               SeparatedPart                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Agent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::OnPostDismember(class FName bone, class ASeparatedBodyPart* SeparatedPart, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnPostDismember");

	Params::MordhauCharacter_OnPostDismember Parms{};

	Parms.bone = bone;
	Parms.SeparatedPart = SeparatedPart;
	Parms.Agent = Agent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.OnPostProfileAssigned
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AMordhauCharacter::OnPostProfileAssigned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnPostProfileAssigned");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.OnRep_Equipment
// (Final, Native, Public)

void AMordhauCharacter::OnRep_Equipment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnRep_Equipment");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.OnRep_LeftHandEquipment
// (Final, Native, Public)

void AMordhauCharacter::OnRep_LeftHandEquipment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnRep_LeftHandEquipment");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.OnRep_NetBlock
// (Final, Native, Public)

void AMordhauCharacter::OnRep_NetBlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnRep_NetBlock");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.OnRep_Quiver
// (Final, Native, Public)

void AMordhauCharacter::OnRep_Quiver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnRep_Quiver");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.OnRep_ReplicatedCustomizationReplicationActor
// (Final, Native, Public)

void AMordhauCharacter::OnRep_ReplicatedCustomizationReplicationActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnRep_ReplicatedCustomizationReplicationActor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.OnRep_ReplicatedDodge
// (Final, Native, Public)

void AMordhauCharacter::OnRep_ReplicatedDodge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnRep_ReplicatedDodge");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.OnRep_ReplicatedKnockback
// (Final, Native, Public)

void AMordhauCharacter::OnRep_ReplicatedKnockback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnRep_ReplicatedKnockback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.OnRep_ReplicatedNetMotion
// (Final, Native, Public)

void AMordhauCharacter::OnRep_ReplicatedNetMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnRep_ReplicatedNetMotion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.OnRep_ReplicatedStamina
// (Final, Native, Public)

void AMordhauCharacter::OnRep_ReplicatedStamina()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnRep_ReplicatedStamina");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.OnRep_ReplicatedVoiceCommand
// (Final, Native, Public)

void AMordhauCharacter::OnRep_ReplicatedVoiceCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnRep_ReplicatedVoiceCommand");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.OnRep_RightHandEquipment
// (Final, Native, Public)

void AMordhauCharacter::OnRep_RightHandEquipment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "OnRep_RightHandEquipment");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.PerformVoiceCommand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   PackedVoiceCommand                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::PerformVoiceCommand(uint8 PackedVoiceCommand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "PerformVoiceCommand");

	Params::MordhauCharacter_PerformVoiceCommand Parms{};

	Parms.PackedVoiceCommand = PackedVoiceCommand;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.PickUp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauEquipment*                ToEquip                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PreferredSlot                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::PickUp(class AMordhauEquipment* ToEquip, int32 PreferredSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "PickUp");

	Params::MordhauCharacter_PickUp Parms{};

	Parms.ToEquip = ToEquip;
	Parms.PreferredSlot = PreferredSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.PickUpToSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauEquipment*                ToEquip                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::PickUpToSlot(class AMordhauEquipment* ToEquip, uint8 Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "PickUpToSlot");

	Params::MordhauCharacter_PickUpToSlot Parms{};

	Parms.ToEquip = ToEquip;
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.PlayAttackYell
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::PlayAttackYell()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "PlayAttackYell");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.PlayDeathYell
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsLongYell                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::PlayDeathYell(bool bIsLongYell)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "PlayDeathYell");

	Params::MordhauCharacter_PlayDeathYell Parms{};

	Parms.bIsLongYell = bIsLongYell;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.PlayHurtYell
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::PlayHurtYell()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "PlayHurtYell");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.PlayMouthSound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase*                       Sound                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumeMultiplier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* AMordhauCharacter::PlayMouthSound(class USoundBase* Sound, float VolumeMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "PlayMouthSound");

	Params::MordhauCharacter_PlayMouthSound Parms{};

	Parms.Sound = Sound;
	Parms.VolumeMultiplier = VolumeMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.PlayNonSnappyArmorFoley
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* AMordhauCharacter::PlayNonSnappyArmorFoley()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "PlayNonSnappyArmorFoley");

	Params::MordhauCharacter_PlayNonSnappyArmorFoley Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.PlaySnappyArmorFoley
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* AMordhauCharacter::PlaySnappyArmorFoley()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "PlaySnappyArmorFoley");

	Params::MordhauCharacter_PlaySnappyArmorFoley Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.PreviousEquipment
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::PreviousEquipment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "PreviousEquipment");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.PreviousEquipmentPressed
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::PreviousEquipmentPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "PreviousEquipmentPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.PreviousEquipmentReleased
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::PreviousEquipmentReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "PreviousEquipmentReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.PreviousShieldEquipment
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::PreviousShieldEquipment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "PreviousShieldEquipment");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.QueueDismember
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsDismemberPartial                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsBluntForce                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Force                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Agent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::QueueDismember(class FName bone, bool bIsDismemberPartial, bool bIsBluntForce, const struct FVector& Force, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "QueueDismember");

	Params::MordhauCharacter_QueueDismember Parms{};

	Parms.bone = bone;
	Parms.bIsDismemberPartial = bIsDismemberPartial;
	Parms.bIsBluntForce = bIsBluntForce;
	Parms.Force = std::move(Force);
	Parms.Agent = Agent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.RequestAttack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAttackMove                             Move                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::RequestAttack(EAttackMove Move, float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestAttack");

	Params::MordhauCharacter_RequestAttack Parms{};

	Parms.Move = Move;
	Parms.Angle = Angle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestBash
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestBash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestBash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestClimb
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          TargetLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSlowClimb                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::RequestClimb(const struct FVector& TargetLocation, bool bIsSlowClimb)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestClimb");

	Params::MordhauCharacter_RequestClimb Parms{};

	Parms.TargetLocation = std::move(TargetLocation);
	Parms.bIsSlowClimb = bIsSlowClimb;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestCouchedAttack
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestCouchedAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestCouchedAttack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestDrop
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestDrop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestDrop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestEmote
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   EmoteId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::RequestEmote(uint8 EmoteId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestEmote");

	Params::MordhauCharacter_RequestEmote Parms{};

	Parms.EmoteId = EmoteId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestFeint
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestFeint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestFeint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestFire
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestFire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestHolster
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::RequestHolster(uint8 Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestHolster");

	Params::MordhauCharacter_RequestHolster Parms{};

	Parms.Mode = Mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestJump
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestJump");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestKick
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestKick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestKick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestLeftLowerStrike
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestLeftLowerStrike()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestLeftLowerStrike");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestLeftStab
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestLeftStab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestLeftStab");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestLeftStrike
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestLeftStrike()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestLeftStrike");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestLeftUpperStrike
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestLeftUpperStrike()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestLeftUpperStrike");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestParry
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBlockType                              BlockType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowFTP                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::RequestParry(EBlockType BlockType, bool bAllowFTP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestParry");

	Params::MordhauCharacter_RequestParry Parms{};

	Parms.BlockType = BlockType;
	Parms.bAllowFTP = bAllowFTP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.RequestRangedCancel
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestRangedCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestRangedCancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestRightLowerStrike
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestRightLowerStrike()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestRightLowerStrike");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestRightStab
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestRightStab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestRightStab");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestRightStrike
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestRightStrike()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestRightStrike");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestRightUpperStrike
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestRightUpperStrike()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestRightUpperStrike");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestStab360
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestStab360()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestStab360");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestStrike360
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestStrike360()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestStrike360");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestToggleWeaponMode
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestToggleWeaponMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestToggleWeaponMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestUse
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::RequestUse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestUse");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RequestVoiceCommand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   CommandType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowQueue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::RequestVoiceCommand(uint8 CommandType, bool bAllowQueue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RequestVoiceCommand");

	Params::MordhauCharacter_RequestVoiceCommand Parms{};

	Parms.CommandType = CommandType;
	Parms.bAllowQueue = bAllowQueue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.RestockDefaultEquipment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MaxSlotsToRestock                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AMordhauEquipment*>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AMordhauEquipment*> AMordhauCharacter::RestockDefaultEquipment(int32 MaxSlotsToRestock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RestockDefaultEquipment");

	Params::MordhauCharacter_RestockDefaultEquipment Parms{};

	Parms.MaxSlotsToRestock = MaxSlotsToRestock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.RestockEquipmentFromAmmoBox
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::RestockEquipmentFromAmmoBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "RestockEquipmentFromAmmoBox");

	Params::MordhauCharacter_RestockEquipmentFromAmmoBox Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.ServerAssignFireAim
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                          Orig                                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rot                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AMordhauCharacter::ServerAssignFireAim(const struct FVector& Orig, const struct FRotator& Rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ServerAssignFireAim");

	Params::MordhauCharacter_ServerAssignFireAim Parms{};

	Parms.Orig = std::move(Orig);
	Parms.Rot = std::move(Rot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.ServerAssignNetMotion
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FNetMotion                       NewNetMotion                                           (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// uint8                                   LastAuthObserved                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::ServerAssignNetMotion(const struct FNetMotion& NewNetMotion, uint8 LastAuthObserved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ServerAssignNetMotion");

	Params::MordhauCharacter_ServerAssignNetMotion Parms{};

	Parms.NewNetMotion = std::move(NewNetMotion);
	Parms.LastAuthObserved = LastAuthObserved;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.ServerDropParry
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                                   MotionID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::ServerDropParry(uint8 MotionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ServerDropParry");

	Params::MordhauCharacter_ServerDropParry Parms{};

	Parms.MotionID = MotionID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.ServerFinishInteraction
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// uint8                                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::ServerFinishInteraction(uint8 Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ServerFinishInteraction");

	Params::MordhauCharacter_ServerFinishInteraction Parms{};

	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.ServerQueueAttack
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EAttackMove                             Move                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   MotionID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::ServerQueueAttack(EAttackMove Move, uint8 Angle, uint8 MotionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ServerQueueAttack");

	Params::MordhauCharacter_ServerQueueAttack Parms{};

	Parms.Move = Move;
	Parms.Angle = Angle;
	Parms.MotionID = MotionID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.ServerRequestDodge
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// uint8                                   PackedWorldYaw                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::ServerRequestDodge(uint8 PackedWorldYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ServerRequestDodge");

	Params::MordhauCharacter_ServerRequestDodge Parms{};

	Parms.PackedWorldYaw = PackedWorldYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.ServerRequestPassiveInteraction
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::ServerRequestPassiveInteraction(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ServerRequestPassiveInteraction");

	Params::MordhauCharacter_ServerRequestPassiveInteraction Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.ServerRequestVoiceCommand
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                                   VoiceRequest                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::ServerRequestVoiceCommand(uint8 VoiceRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ServerRequestVoiceCommand");

	Params::MordhauCharacter_ServerRequestVoiceCommand Parms{};

	Parms.VoiceRequest = VoiceRequest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.ServerSetInteractionTarget
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::ServerSetInteractionTarget(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ServerSetInteractionTarget");

	Params::MordhauCharacter_ServerSetInteractionTarget Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.ServerSuggestHitDetection
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AAdvancedCharacter*               OtherCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize              HitLocation                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   BoneId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::ServerSuggestHitDetection(class AAdvancedCharacter* OtherCharacter, const struct FVector_NetQuantize& HitLocation, uint8 BoneId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ServerSuggestHitDetection");

	Params::MordhauCharacter_ServerSuggestHitDetection Parms{};

	Parms.OtherCharacter = OtherCharacter;
	Parms.HitLocation = std::move(HitLocation);
	Parms.BoneId = BoneId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.SetCameraStyle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   NewStyle                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBlendCamera                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::SetCameraStyle(uint8 NewStyle, bool bBlendCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "SetCameraStyle");

	Params::MordhauCharacter_SetCameraStyle Parms{};

	Parms.NewStyle = NewStyle;
	Parms.bBlendCamera = bBlendCamera;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.SetCurrentlyTracking
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           NewTrackingTarget                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::SetCurrentlyTracking(class AActor* NewTrackingTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "SetCurrentlyTracking");

	Params::MordhauCharacter_SetCurrentlyTracking Parms{};

	Parms.NewTrackingTarget = NewTrackingTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.SetCustomizationReplicationActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACustomizationReplicationActor*   CRA                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::SetCustomizationReplicationActor(class ACustomizationReplicationActor* CRA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "SetCustomizationReplicationActor");

	Params::MordhauCharacter_SetCustomizationReplicationActor Parms{};

	Parms.CRA = CRA;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.SetFaceCustomizationRotate
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Vector                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::SetFaceCustomizationRotate(class FName BoneName, const struct FVector& Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "SetFaceCustomizationRotate");

	Params::MordhauCharacter_SetFaceCustomizationRotate Parms{};

	Parms.BoneName = BoneName;
	Parms.Vector = std::move(Vector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.SetFaceCustomizationScale
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Vector                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::SetFaceCustomizationScale(class FName BoneName, const struct FVector& Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "SetFaceCustomizationScale");

	Params::MordhauCharacter_SetFaceCustomizationScale Parms{};

	Parms.BoneName = BoneName;
	Parms.Vector = std::move(Vector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.SetFaceCustomizationTranslate
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Vector                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::SetFaceCustomizationTranslate(class FName BoneName, const struct FVector& Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "SetFaceCustomizationTranslate");

	Params::MordhauCharacter_SetFaceCustomizationTranslate Parms{};

	Parms.BoneName = BoneName;
	Parms.Vector = std::move(Vector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.SetQuiver
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQuiver>              NewQuiver                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::SetQuiver(TSubclassOf<class UQuiver> NewQuiver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "SetQuiver");

	Params::MordhauCharacter_SetQuiver Parms{};

	Parms.NewQuiver = NewQuiver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.ShowEquipmentIfViewTarget
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::ShowEquipmentIfViewTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ShowEquipmentIfViewTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.SprintingMoveBlockedBy
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           BlockedBy                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::SprintingMoveBlockedBy(class AActor* BlockedBy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "SprintingMoveBlockedBy");

	Params::MordhauCharacter_SprintingMoveBlockedBy Parms{};

	Parms.BlockedBy = BlockedBy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauCharacter.SprintPressed
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::SprintPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "SprintPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.SprintReleased
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::SprintReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "SprintReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.StartCrouching
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::StartCrouching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "StartCrouching");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.StartScreaming
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::StartScreaming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "StartScreaming");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.StartSprinting
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::StartSprinting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "StartSprinting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.StartSupersprint
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::StartSupersprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "StartSupersprint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.StopAttackYell
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::StopAttackYell()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "StopAttackYell");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.StopCrouching
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::StopCrouching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "StopCrouching");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.StopCurrentVoiceCommand
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::StopCurrentVoiceCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "StopCurrentVoiceCommand");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.StopListenForStab360
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::StopListenForStab360()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "StopListenForStab360");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.StopListenForStrike360
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::StopListenForStrike360()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "StopListenForStrike360");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.StopScreaming
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::StopScreaming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "StopScreaming");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.StopSprinting
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::StopSprinting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "StopSprinting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.StopStaminaRegen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ExtraTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::StopStaminaRegen(float ExtraTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "StopStaminaRegen");

	Params::MordhauCharacter_StopStaminaRegen Parms{};

	Parms.ExtraTime = ExtraTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.StopSupersprint
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::StopSupersprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "StopSupersprint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.SwitchEquipment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauEquipment*                ToSwitch                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::SwitchEquipment(class AMordhauEquipment* ToSwitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "SwitchEquipment");

	Params::MordhauCharacter_SwitchEquipment Parms{};

	Parms.ToSwitch = ToSwitch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.SwitchEquipmentByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::SwitchEquipmentByIndex(uint8 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "SwitchEquipmentByIndex");

	Params::MordhauCharacter_SwitchEquipmentByIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.SwitchModeAndReAttach
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauEquipment*                ToSwitch                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::SwitchModeAndReAttach(class AMordhauEquipment* ToSwitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "SwitchModeAndReAttach");

	Params::MordhauCharacter_SwitchModeAndReAttach Parms{};

	Parms.ToSwitch = ToSwitch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.SwitchToFists
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::SwitchToFists()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "SwitchToFists");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.SwitchToNextAvailableEquipment
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::SwitchToNextAvailableEquipment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "SwitchToNextAvailableEquipment");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.ToggleWeaponModePressed
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::ToggleWeaponModePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ToggleWeaponModePressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.ToggleWeaponModeReleased
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::ToggleWeaponModeReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ToggleWeaponModeReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.TryClimbing
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::TryClimbing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "TryClimbing");

	Params::MordhauCharacter_TryClimbing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.TryDismember
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Point                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauWeapon*                   Weapon                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttackMove                             Move                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsRagdollDismember                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::TryDismember(class FName bone, const struct FVector& Point, class AMordhauWeapon* Weapon, EAttackMove Move, bool bIsRagdollDismember)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "TryDismember");

	Params::MordhauCharacter_TryDismember Parms{};

	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Weapon = Weapon;
	Parms.Move = Move;
	Parms.bIsRagdollDismember = bIsRagdollDismember;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.UpdateAllSkeletalMeshComponentMaterials
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::UpdateAllSkeletalMeshComponentMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "UpdateAllSkeletalMeshComponentMaterials");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.UpdateFPCamera
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InLookUpValue                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOnlyUpdateRotation                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Offset                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AMordhauCharacter::UpdateFPCamera(float DeltaSeconds, float InLookUpValue, bool bOnlyUpdateRotation, const struct FRotator& Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "UpdateFPCamera");

	Params::MordhauCharacter_UpdateFPCamera Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.InLookUpValue = InLookUpValue;
	Parms.bOnlyUpdateRotation = bOnlyUpdateRotation;
	Parms.Offset = std::move(Offset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.UpdateLOD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauCharacter::UpdateLOD(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "UpdateLOD");

	Params::MordhauCharacter_UpdateLOD Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.UpdateWearableInstanceColorsAndPatterns
// (Final, Native, Public, BlueprintCallable)

void AMordhauCharacter::UpdateWearableInstanceColorsAndPatterns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "UpdateWearableInstanceColorsAndPatterns");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.UsePressed
// (Final, Native, Public)

void AMordhauCharacter::UsePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "UsePressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.UseReleased
// (Final, Native, Public)

void AMordhauCharacter::UseReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "UseReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauCharacter.ValidateInteractionTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::ValidateInteractionTarget(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "ValidateInteractionTarget");

	Params::MordhauCharacter_ValidateInteractionTarget Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.CanEasyParry
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::CanEasyParry() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "CanEasyParry");

	Params::MordhauCharacter_CanEasyParry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.CanEmote
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::CanEmote() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "CanEmote");

	Params::MordhauCharacter_CanEmote Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.CheckCanEquip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMordhauEquipment*                Equip                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::CheckCanEquip(class AMordhauEquipment* Equip) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "CheckCanEquip");

	Params::MordhauCharacter_CheckCanEquip Parms{};

	Parms.Equip = Equip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.CheckCanEquipAlt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMordhauEquipment*                Equip                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::CheckCanEquipAlt(class AMordhauEquipment* Equip) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "CheckCanEquipAlt");

	Params::MordhauCharacter_CheckCanEquipAlt Parms{};

	Parms.Equip = Equip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.GetClothMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULODSkeletalMeshComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULODSkeletalMeshComponent* AMordhauCharacter::GetClothMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "GetClothMesh");

	Params::MordhauCharacter_GetClothMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.GetCurrentNetMotion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FNetMotion                       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FNetMotion AMordhauCharacter::GetCurrentNetMotion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "GetCurrentNetMotion");

	Params::MordhauCharacter_GetCurrentNetMotion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.GetEquipmentIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMordhauEquipment*                Equip                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   OutIndex                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::GetEquipmentIndex(const class AMordhauEquipment* Equip, uint8* OutIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "GetEquipmentIndex");

	Params::MordhauCharacter_GetEquipmentIndex Parms{};

	Parms.Equip = Equip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutIndex != nullptr)
		*OutIndex = Parms.OutIndex;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.GetLastUsedVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   MaximumTimeDiscrepancy                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMordhauVehicleComponent*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauVehicleComponent* AMordhauCharacter::GetLastUsedVehicle(float MaximumTimeDiscrepancy) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "GetLastUsedVehicle");

	Params::MordhauCharacter_GetLastUsedVehicle Parms{};

	Parms.MaximumTimeDiscrepancy = MaximumTimeDiscrepancy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.GetMovementRestriction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EMovementRestriction                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMovementRestriction AMordhauCharacter::GetMovementRestriction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "GetMovementRestriction");

	Params::MordhauCharacter_GetMovementRestriction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.HasPerk
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   PerkId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::HasPerk(uint8 PerkId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "HasPerk");

	Params::MordhauCharacter_HasPerk Parms{};

	Parms.PerkId = PerkId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.IsInAnyTeamArea
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::IsInAnyTeamArea() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "IsInAnyTeamArea");

	Params::MordhauCharacter_IsInAnyTeamArea Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauCharacter.IsInEnemyTeamArea
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauCharacter::IsInEnemyTeamArea() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauCharacter", "IsInEnemyTeamArea");

	Params::MordhauCharacter_IsInEnemyTeamArea Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauEquipmentRemapper.RemapPawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class APawn>                InCharacterClass                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class APawn>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class APawn> AMordhauEquipmentRemapper::RemapPawn(TSubclassOf<class APawn> InCharacterClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipmentRemapper", "RemapPawn");

	Params::MordhauEquipmentRemapper_RemapPawn Parms{};

	Parms.InCharacterClass = InCharacterClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauEquipmentRemapper.RemapEquipment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftClassPtr<class UClass>             InEquipmentClass                                       (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UClass>             ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftClassPtr<class UClass> AMordhauEquipmentRemapper::RemapEquipment(TSoftClassPtr<class UClass> InEquipmentClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipmentRemapper", "RemapEquipment");

	Params::MordhauEquipmentRemapper_RemapEquipment Parms{};

	Parms.InEquipmentClass = InEquipmentClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauEquipmentRemapper.RemapMotion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UMordhauMotion>       InMotionClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UMordhauMotion>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UMordhauMotion> AMordhauEquipmentRemapper::RemapMotion(TSubclassOf<class UMordhauMotion> InMotionClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauEquipmentRemapper", "RemapMotion");

	Params::MordhauEquipmentRemapper_RemapMotion Parms{};

	Parms.InMotionClass = InMotionClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.GetFriendsList.GetFriendsList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGetFriendsList*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGetFriendsList* UGetFriendsList::GetFriendsList(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GetFriendsList", "GetFriendsList");

	Params::GetFriendsList_GetFriendsList Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindPlayerByEntityId.FindPlayerByEntityId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           EntityId_0                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFindPlayerByEntityId*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFindPlayerByEntityId* UFindPlayerByEntityId::FindPlayerByEntityId(const class FString& EntityId_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindPlayerByEntityId", "FindPlayerByEntityId");

	Params::FindPlayerByEntityId_FindPlayerByEntityId Parms{};

	Parms.EntityId_0 = std::move(EntityId_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.GetFriendRequests.GetFriendRequests
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGetFriendRequests*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGetFriendRequests* UGetFriendRequests::GetFriendRequests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GetFriendRequests", "GetFriendRequests");

	Params::GetFriendRequests_GetFriendRequests Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.DeclineFriendRequest.DeclineFriendRequest
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabPlayer                   Player_0                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDeclineFriendRequest*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDeclineFriendRequest* UDeclineFriendRequest::DeclineFriendRequest(const struct FPlayFabPlayer& Player_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DeclineFriendRequest", "DeclineFriendRequest");

	Params::DeclineFriendRequest_DeclineFriendRequest Parms{};

	Parms.Player_0 = std::move(Player_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.RemoveFriend.RemoveFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabPlayer                   Player_0                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URemoveFriend*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URemoveFriend* URemoveFriend::RemoveFriend(class UObject* WorldContextObject, const struct FPlayFabPlayer& Player_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RemoveFriend", "RemoveFriend");

	Params::RemoveFriend_RemoveFriend Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Player_0 = std::move(Player_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.GetBlockedPlayers.GetBlockedPlayers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGetBlockedPlayers*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGetBlockedPlayers* UGetBlockedPlayers::GetBlockedPlayers(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GetBlockedPlayers", "GetBlockedPlayers");

	Params::GetBlockedPlayers_GetBlockedPlayers Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.UnblockPlayer.UnblockPlayer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabPlayer                   Player_0                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnblockPlayer*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnblockPlayer* UUnblockPlayer::UnblockPlayer(class UObject* WorldContextObject, const struct FPlayFabPlayer& Player_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnblockPlayer", "UnblockPlayer");

	Params::UnblockPlayer_UnblockPlayer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Player_0 = std::move(Player_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameMode.AddBots
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameMode::AddBots(int32 Amount, int32 Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "AddBots");

	Params::MordhauGameMode_AddBots Parms{};

	Parms.Amount = Amount;
	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauGameMode.AddTeamScore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameMode::AddTeamScore(int32 Team, float Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "AddTeamScore");

	Params::MordhauGameMode_AddTeamScore Parms{};

	Parms.Team = Team;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameMode.Broadcast
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Sender                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Msg                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameMode::Broadcast(class AActor* Sender, const class FString& Msg, class FName Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "Broadcast");

	Params::MordhauGameMode_Broadcast Parms{};

	Parms.Sender = Sender;
	Parms.Msg = std::move(Msg);
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameMode.CanChamber
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameMode::CanChamber(class APawn* Source, class APawn* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "CanChamber");

	Params::MordhauGameMode_CanChamber Parms{};

	Parms.Source = Source;
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameMode.CanClash
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameMode::CanClash(class APawn* Source, class APawn* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "CanClash");

	Params::MordhauGameMode_CanClash Parms{};

	Parms.Source = Source;
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameMode.CanDealDamage
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           DamageSource                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageTarget                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameMode::CanDealDamage(class AActor* DamageSource, class AActor* DamageTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "CanDealDamage");

	Params::MordhauGameMode_CanDealDamage Parms{};

	Parms.DamageSource = DamageSource;
	Parms.DamageTarget = DamageTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameMode.ChangeLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           LevelName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameMode::ChangeLevel(const class FString& LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "ChangeLevel");

	Params::MordhauGameMode_ChangeLevel Parms{};

	Parms.LevelName = std::move(LevelName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameMode.ControllerCanRestart
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameMode::ControllerCanRestart(class AController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "ControllerCanRestart");

	Params::MordhauGameMode_ControllerCanRestart Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameMode.GetDamageFactor
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           DamageSource                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageTarget                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AMordhauGameMode::GetDamageFactor(class AActor* DamageSource, class AActor* DamageTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "GetDamageFactor");

	Params::MordhauGameMode_GetDamageFactor Parms{};

	Parms.DamageSource = DamageSource;
	Parms.DamageTarget = DamageTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameMode.GetMapVoteCounts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> AMordhauGameMode::GetMapVoteCounts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "GetMapVoteCounts");

	Params::MordhauGameMode_GetMapVoteCounts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameMode.GetMapVoteMaps
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> AMordhauGameMode::GetMapVoteMaps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "GetMapVoteMaps");

	Params::MordhauGameMode_GetMapVoteMaps Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameMode.GetNextMap
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AMordhauGameMode::GetNextMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "GetNextMap");

	Params::MordhauGameMode_GetNextMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameMode.GetNextMaps
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowCurrentMap                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> AMordhauGameMode::GetNextMaps(int32 Count, bool bAllowCurrentMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "GetNextMaps");

	Params::MordhauGameMode_GetNextMaps Parms{};

	Parms.Count = Count;
	Parms.bAllowCurrentMap = bAllowCurrentMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameMode.GetSpawnpointPreference
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APlayerStart*                     PlayerStart                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AMordhauGameMode::GetSpawnpointPreference(class APlayerStart* PlayerStart, class AController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "GetSpawnpointPreference");

	Params::MordhauGameMode_GetSpawnpointPreference Parms{};

	Parms.PlayerStart = PlayerStart;
	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameMode.IsSpawnpointAllowed
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APlayerStart*                     PlayerStart                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameMode::IsSpawnpointAllowed(class APlayerStart* PlayerStart, class AController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "IsSpawnpointAllowed");

	Params::MordhauGameMode_IsSpawnpointAllowed Parms{};

	Parms.PlayerStart = PlayerStart;
	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameMode.IsSpawnQueueEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameMode::IsSpawnQueueEmpty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "IsSpawnQueueEmpty");

	Params::MordhauGameMode_IsSpawnQueueEmpty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameMode.MatchTimeRanOut
// (Native, Event, Public, BlueprintEvent)

void AMordhauGameMode::MatchTimeRanOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "MatchTimeRanOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameMode.OnAssistsChanged
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameMode::OnAssistsChanged(class APlayerState* State, int32 OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "OnAssistsChanged");

	Params::MordhauGameMode_OnAssistsChanged Parms{};

	Parms.State = State;
	Parms.OldValue = OldValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauGameMode.OnDeathsChanged
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameMode::OnDeathsChanged(class APlayerState* State, int32 OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "OnDeathsChanged");

	Params::MordhauGameMode_OnDeathsChanged Parms{};

	Parms.State = State;
	Parms.OldValue = OldValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauGameMode.OnKilled
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      Killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      KilledPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            KilledPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMordhauDamageType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SubType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageSource                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageAgent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameMode::OnKilled(class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, EMordhauDamageType Type, uint8 SubType, class AActor* DamageSource, class AActor* DamageAgent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "OnKilled");

	Params::MordhauGameMode_OnKilled Parms{};

	Parms.Killer = Killer;
	Parms.KilledPlayer = KilledPlayer;
	Parms.KilledPawn = KilledPawn;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.DamageSource = DamageSource;
	Parms.DamageAgent = DamageAgent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameMode.OnKillsChanged
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameMode::OnKillsChanged(class APlayerState* State, int32 OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "OnKillsChanged");

	Params::MordhauGameMode_OnKillsChanged Parms{};

	Parms.State = State;
	Parms.OldValue = OldValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauGameMode.OnMatchStateChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             OldState                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NewState                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameMode::OnMatchStateChanged(const class FName& OldState, const class FName& NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "OnMatchStateChanged");

	Params::MordhauGameMode_OnMatchStateChanged Parms{};

	Parms.OldState = OldState;
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauGameMode.OnScoreChanged
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameMode::OnScoreChanged(class APlayerState* State, float OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "OnScoreChanged");

	Params::MordhauGameMode_OnScoreChanged Parms{};

	Parms.State = State;
	Parms.OldValue = OldValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauGameMode.OnTeamScoreChanged
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameMode::OnTeamScoreChanged(int32 Team, float OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "OnTeamScoreChanged");

	Params::MordhauGameMode_OnTeamScoreChanged Parms{};

	Parms.Team = Team;
	Parms.OldValue = OldValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauGameMode.OverrideEquipment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UClass>             EquipmentClass                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameMode::OverrideEquipment(class AMordhauCharacter* Character, TSoftClassPtr<class UClass> EquipmentClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "OverrideEquipment");

	Params::MordhauGameMode_OverrideEquipment Parms{};

	Parms.Character = Character;
	Parms.EquipmentClass = EquipmentClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameMode.RemoveBots
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameMode::RemoveBots(int32 Amount, int32 Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "RemoveBots");

	Params::MordhauGameMode_RemoveBots Parms{};

	Parms.Amount = Amount;
	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauGameMode.RequestedAssignTeam
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameMode::RequestedAssignTeam(class AController* Controller, int32 Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "RequestedAssignTeam");

	Params::MordhauGameMode_RequestedAssignTeam Parms{};

	Parms.Controller = Controller;
	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameMode.SetRconEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRconEventStruct                 InStruct                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// TDelegate<void()>                       InEvent                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bOverrideExisting                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameMode::SetRconEvent(struct FRconEventStruct* InStruct, const TDelegate<void()>& InEvent, bool bOverrideExisting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "SetRconEvent");

	Params::MordhauGameMode_SetRconEvent Parms{};

	Parms.InEvent = InEvent;
	Parms.bOverrideExisting = bOverrideExisting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InStruct != nullptr)
		*InStruct = std::move(Parms.InStruct);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameMode.SetTeamScore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameMode::SetTeamScore(int32 Team, float Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "SetTeamScore");

	Params::MordhauGameMode_SetTeamScore Parms{};

	Parms.Team = Team;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameMode.VoteLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           LevelName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameMode::VoteLevel(class APlayerController* Player, const class FString& LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "VoteLevel");

	Params::MordhauGameMode_VoteLevel Parms{};

	Parms.Player = Player;
	Parms.LevelName = std::move(LevelName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameMode.GetSuicideAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameMode::GetSuicideAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "GetSuicideAllowed");

	Params::MordhauGameMode_GetSuicideAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameMode.IsConsoleServer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameMode::IsConsoleServer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameMode", "IsConsoleServer");

	Params::MordhauGameMode_IsConsoleServer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameSession.AddAdmin
// (Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                AdminPlayer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameSession::AddAdmin(class APlayerController* AdminPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "AddAdmin");

	Params::MordhauGameSession_AddAdmin Parms{};

	Parms.AdminPlayer = AdminPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameSession.AddTieredAdmin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                AdminPlayer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Tier                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameSession::AddTieredAdmin(class APlayerController* AdminPlayer, const class FString& Tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "AddTieredAdmin");

	Params::MordhauGameSession_AddTieredAdmin Parms{};

	Parms.AdminPlayer = AdminPlayer;
	Parms.Tier = std::move(Tier);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameSession.AllowJoin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInAllowJoin                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameSession::AllowJoin(bool bInAllowJoin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "AllowJoin");

	Params::MordhauGameSession_AllowJoin Parms{};

	Parms.bInAllowJoin = bInAllowJoin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameSession.AllowsJoin
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameSession::AllowsJoin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "AllowsJoin");

	Params::MordhauGameSession_AllowsJoin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameSession.BanPlayer
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class APlayerController*                BannedPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             BanReason                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameSession::BanPlayer(class APlayerController* BannedPlayer, const class FText& BanReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "BanPlayer");

	Params::MordhauGameSession_BanPlayer Parms{};

	Parms.BannedPlayer = BannedPlayer;
	Parms.BanReason = std::move(BanReason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameSession.BanPlayerWithDuration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class APlayerController*                BannedPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BanDuration                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             BanReason                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameSession::BanPlayerWithDuration(class APlayerController* BannedPlayer, const int32 BanDuration, const class FText& BanReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "BanPlayerWithDuration");

	Params::MordhauGameSession_BanPlayerWithDuration Parms{};

	Parms.BannedPlayer = BannedPlayer;
	Parms.BanDuration = BanDuration;
	Parms.BanReason = std::move(BanReason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameSession.GetPlayerBanDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMordhauGameSession::GetPlayerBanDuration(const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "GetPlayerBanDuration");

	Params::MordhauGameSession_GetPlayerBanDuration Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameSession.GetPlayerMuteDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMordhauGameSession::GetPlayerMuteDuration(const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "GetPlayerMuteDuration");

	Params::MordhauGameSession_GetPlayerMuteDuration Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameSession.IsPlayerBanned
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameSession::IsPlayerBanned(const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "IsPlayerBanned");

	Params::MordhauGameSession_IsPlayerBanned Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameSession.IsPlayerMuted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameSession::IsPlayerMuted(const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "IsPlayerMuted");

	Params::MordhauGameSession_IsPlayerMuted Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameSession.KickPlayer
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class APlayerController*                KickedPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             KickReason                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameSession::KickPlayer(class APlayerController* KickedPlayer, const class FText& KickReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "KickPlayer");

	Params::MordhauGameSession_KickPlayer Parms{};

	Parms.KickedPlayer = KickedPlayer;
	Parms.KickReason = std::move(KickReason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameSession.MutePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                MutedPlayer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameSession::MutePlayer(class APlayerController* MutedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "MutePlayer");

	Params::MordhauGameSession_MutePlayer Parms{};

	Parms.MutedPlayer = MutedPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameSession.MutePlayerWithDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                MutedPlayer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MuteDuration                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameSession::MutePlayerWithDuration(class APlayerController* MutedPlayer, const int32 MuteDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "MutePlayerWithDuration");

	Params::MordhauGameSession_MutePlayerWithDuration Parms{};

	Parms.MutedPlayer = MutedPlayer;
	Parms.MuteDuration = MuteDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameSession.RemoveAdmin
// (Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                AdminPlayer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameSession::RemoveAdmin(class APlayerController* AdminPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "RemoveAdmin");

	Params::MordhauGameSession_RemoveAdmin Parms{};

	Parms.AdminPlayer = AdminPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameSession.ReportPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReporteePlayFabID                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReporterPlayFabID                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReportType                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ScreenshotFilename                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameSession::ReportPlayer(const class FString& ReporteePlayFabID, const class FString& ReporterPlayFabID, const class FString& ReportType, const class FString& ScreenshotFilename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "ReportPlayer");

	Params::MordhauGameSession_ReportPlayer Parms{};

	Parms.ReporteePlayFabID = std::move(ReporteePlayFabID);
	Parms.ReporterPlayFabID = std::move(ReporterPlayFabID);
	Parms.ReportType = std::move(ReportType);
	Parms.ScreenshotFilename = std::move(ScreenshotFilename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameSession.ReportTimeLeft
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<float>                           TimeLeft                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AMordhauGameSession::ReportTimeLeft(const TArray<float>& TimeLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "ReportTimeLeft");

	Params::MordhauGameSession_ReportTimeLeft Parms{};

	Parms.TimeLeft = std::move(TimeLeft);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameSession.TriggerRewardDrop
// (Final, Native, Public, BlueprintCallable)

void AMordhauGameSession::TriggerRewardDrop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "TriggerRewardDrop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameSession.TriggerRewardDropForPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameSession::TriggerRewardDropForPlayer(class APlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "TriggerRewardDropForPlayer");

	Params::MordhauGameSession_TriggerRewardDropForPlayer Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameSession.UnbanPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExpired                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameSession::UnbanPlayer(const class FString& PlayFabId, const bool bExpired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "UnbanPlayer");

	Params::MordhauGameSession_UnbanPlayer Parms{};

	Parms.PlayFabId = std::move(PlayFabId);
	Parms.bExpired = bExpired;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameSession.UnmutePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExpired                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameSession::UnmutePlayer(const class FString& PlayFabId, const bool bExpired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "UnmutePlayer");

	Params::MordhauGameSession_UnmutePlayer Parms{};

	Parms.PlayFabId = std::move(PlayFabId);
	Parms.bExpired = bExpired;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameSession.UploadAdminActionDataToWebhook
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Command                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabPlayer                   Sender                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Details                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameSession::UploadAdminActionDataToWebhook(const class FString& Command, const struct FPlayFabPlayer& Sender, const class FString& Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameSession", "UploadAdminActionDataToWebhook");

	Params::MordhauGameSession_UploadAdminActionDataToWebhook Parms{};

	Parms.Command = std::move(Command);
	Parms.Sender = std::move(Sender);
	Parms.Details = std::move(Details);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameState.CanImmediatelyChangeProfile
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameState::CanImmediatelyChangeProfile(class AController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "CanImmediatelyChangeProfile");

	Params::MordhauGameState_CanImmediatelyChangeProfile Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameState.CanPlayerJoinTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauPlayerState*              Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameState::CanPlayerJoinTeam(class AMordhauPlayerState* Player, int32 Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "CanPlayerJoinTeam");

	Params::MordhauGameState_CanPlayerJoinTeam Parms{};

	Parms.Player = Player;
	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameState.GetAppropriateMapCameraActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMapCameraActor*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMapCameraActor* AMordhauGameState::GetAppropriateMapCameraActor(class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "GetAppropriateMapCameraActor");

	Params::MordhauGameState_GetAppropriateMapCameraActor Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameState.GetBindPoseTransform
// (Final, Native, Public, HasDefaults)
// Parameters:
// class USkeletalMesh*                    Mesh                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform AMordhauGameState::GetBindPoseTransform(class USkeletalMesh* Mesh, class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "GetBindPoseTransform");

	Params::MordhauGameState_GetBindPoseTransform Parms{};

	Parms.Mesh = Mesh;
	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameState.GetCharacterByDistanceRank
// (Final, Native, Public)
// Parameters:
// int32                                   DistanceRank                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AAdvancedCharacter*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAdvancedCharacter* AMordhauGameState::GetCharacterByDistanceRank(int32 DistanceRank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "GetCharacterByDistanceRank");

	Params::MordhauGameState_GetCharacterByDistanceRank Parms{};

	Parms.DistanceRank = DistanceRank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameState.GetCurrentFrame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMordhauGameState::GetCurrentFrame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "GetCurrentFrame");

	Params::MordhauGameState_GetCurrentFrame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameState.GetEquipmentCacheHash
// (Final, Native, Private)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Skin                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Part1                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Part2                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Part3                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseAuxiliaryMesh                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 AMordhauGameState::GetEquipmentCacheHash(int32 ID, uint8 Skin, uint8 Part1, uint8 Part2, uint8 Part3, bool bUseAuxiliaryMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "GetEquipmentCacheHash");

	Params::MordhauGameState_GetEquipmentCacheHash Parms{};

	Parms.ID = ID;
	Parms.Skin = Skin;
	Parms.Part1 = Part1;
	Parms.Part2 = Part2;
	Parms.Part3 = Part3;
	Parms.bUseAuxiliaryMesh = bUseAuxiliaryMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameState.GetEquipmentMeshFromCache
// (Final, Native, Public)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Skin                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Part1                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Part2                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Part3                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseAuxiliaryMesh                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMesh* AMordhauGameState::GetEquipmentMeshFromCache(int32 ID, uint8 Skin, uint8 Part1, uint8 Part2, uint8 Part3, bool bUseAuxiliaryMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "GetEquipmentMeshFromCache");

	Params::MordhauGameState_GetEquipmentMeshFromCache Parms{};

	Parms.ID = ID;
	Parms.Skin = Skin;
	Parms.Part1 = Part1;
	Parms.Part2 = Part2;
	Parms.Part3 = Part3;
	Parms.bUseAuxiliaryMesh = bUseAuxiliaryMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameState.GetPlayerCountsPerTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bOnlyLiving                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOnlyWithValidProfiles                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> AMordhauGameState::GetPlayerCountsPerTeam(bool bOnlyLiving, bool bOnlyWithValidProfiles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "GetPlayerCountsPerTeam");

	Params::MordhauGameState_GetPlayerCountsPerTeam Parms{};

	Parms.bOnlyLiving = bOnlyLiving;
	Parms.bOnlyWithValidProfiles = bOnlyWithValidProfiles;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameState.GetSecondaryTeamColor
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor AMordhauGameState::GetSecondaryTeamColor(int32 Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "GetSecondaryTeamColor");

	Params::MordhauGameState_GetSecondaryTeamColor Parms{};

	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameState.GetTeamColor
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor AMordhauGameState::GetTeamColor(int32 Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "GetTeamColor");

	Params::MordhauGameState_GetTeamColor Parms{};

	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameState.GetTeamName
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AMordhauGameState::GetTeamName(int32 Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "GetTeamName");

	Params::MordhauGameState_GetTeamName Parms{};

	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameState.IsFriendly
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorA                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ActorB                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFriendlyIfSelf                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameState::IsFriendly(class AActor* ActorA, class AActor* ActorB, bool bIsFriendlyIfSelf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "IsFriendly");

	Params::MordhauGameState_IsFriendly Parms{};

	Parms.ActorA = ActorA;
	Parms.ActorB = ActorB;
	Parms.bIsFriendlyIfSelf = bIsFriendlyIfSelf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameState.LastDemotableTick
// (Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameState::LastDemotableTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "LastDemotableTick");

	Params::MordhauGameState_LastDemotableTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameState.LineTraceCharacters
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct FVector                          LineStart                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          LineEnd                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSet<class AAdvancedCharacter*>         IgnoreCharacters                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>               Results                                                (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameState::LineTraceCharacters(const struct FVector& LineStart, const struct FVector& LineEnd, const TSet<class AAdvancedCharacter*>& IgnoreCharacters, TArray<struct FHitResult>* Results)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "LineTraceCharacters");

	Params::MordhauGameState_LineTraceCharacters Parms{};

	Parms.LineStart = std::move(LineStart);
	Parms.LineEnd = std::move(LineEnd);
	Parms.IgnoreCharacters = std::move(IgnoreCharacters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Results != nullptr)
		*Results = std::move(Parms.Results);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameState.LocalPlayerChangedTeam
// (Event, Public, BlueprintEvent)

void AMordhauGameState::LocalPlayerChangedTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "LocalPlayerChangedTeam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauGameState.OnRep_AllowVoteKick
// (Final, Native, Public)

void AMordhauGameState::OnRep_AllowVoteKick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "OnRep_AllowVoteKick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameState.OnRep_EquipmentRemapper
// (Final, Native, Public)

void AMordhauGameState::OnRep_EquipmentRemapper()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "OnRep_EquipmentRemapper");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameState.OnRep_MOTDURL
// (Final, Native, Public)

void AMordhauGameState::OnRep_MOTDURL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "OnRep_MOTDURL");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameState.OnRep_ReplicatedMatchDurationMax
// (Final, Native, Public)

void AMordhauGameState::OnRep_ReplicatedMatchDurationMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "OnRep_ReplicatedMatchDurationMax");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameState.OnReplicatedMOTD
// (Event, Public, BlueprintEvent)

void AMordhauGameState::OnReplicatedMOTD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "OnReplicatedMOTD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauGameState.PostPhysicsTick
// (Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameState::PostPhysicsTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "PostPhysicsTick");

	Params::MordhauGameState_PostPhysicsTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameState.RegisterParticleSystemActor
// (Final, Native, Public)
// Parameters:
// class AParticleSystemActor*             ParticleActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameState::RegisterParticleSystemActor(class AParticleSystemActor* ParticleActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "RegisterParticleSystemActor");

	Params::MordhauGameState_RegisterParticleSystemActor Parms{};

	Parms.ParticleActor = ParticleActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameState.RemoveCharacterFromDistanceArray
// (Final, Native, Public)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameState::RemoveCharacterFromDistanceArray(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "RemoveCharacterFromDistanceArray");

	Params::MordhauGameState_RemoveCharacterFromDistanceArray Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameState.ReserveCharacterRagdoll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameState::ReserveCharacterRagdoll(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "ReserveCharacterRagdoll");

	Params::MordhauGameState_ReserveCharacterRagdoll Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameState.ResetLoginProcessVars
// (Final, Native, Public)

void AMordhauGameState::ResetLoginProcessVars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "ResetLoginProcessVars");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameState.ResetOnNetworkRecovery
// (Final, Native, Public)

void AMordhauGameState::ResetOnNetworkRecovery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "ResetOnNetworkRecovery");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameState.ShouldBlockPawnInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameState::ShouldBlockPawnInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "ShouldBlockPawnInput");

	Params::MordhauGameState_ShouldBlockPawnInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameState.ShouldTickAnimationThisFrame
// (Final, Native, Public)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameState::ShouldTickAnimationThisFrame(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "ShouldTickAnimationThisFrame");

	Params::MordhauGameState_ShouldTickAnimationThisFrame Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameState.ShouldTickThisFrame
// (Final, Native, Public)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameState::ShouldTickThisFrame(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "ShouldTickThisFrame");

	Params::MordhauGameState_ShouldTickThisFrame Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauGameState.StoreEquipmentMeshInCache
// (Final, Native, Public)
// Parameters:
// class USkeletalMesh*                    Mesh                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Skin                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Part1                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Part2                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Part3                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseAuxiliaryMesh                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameState::StoreEquipmentMeshInCache(class USkeletalMesh* Mesh, int32 ID, uint8 Skin, uint8 Part1, uint8 Part2, uint8 Part3, bool bUseAuxiliaryMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "StoreEquipmentMeshInCache");

	Params::MordhauGameState_StoreEquipmentMeshInCache Parms{};

	Parms.Mesh = Mesh;
	Parms.ID = ID;
	Parms.Skin = Skin;
	Parms.Part1 = Part1;
	Parms.Part2 = Part2;
	Parms.Part3 = Part3;
	Parms.bUseAuxiliaryMesh = bUseAuxiliaryMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameState.UnregisterParticleSystemActor
// (Final, Native, Public)
// Parameters:
// class AParticleSystemActor*             ParticleActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauGameState::UnregisterParticleSystemActor(class AParticleSystemActor* ParticleActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "UnregisterParticleSystemActor");

	Params::MordhauGameState_UnregisterParticleSystemActor Parms{};

	Parms.ParticleActor = ParticleActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameState.UpdateCapturePointData
// (Final, Native, Public, BlueprintCallable)

void AMordhauGameState::UpdateCapturePointData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "UpdateCapturePointData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameState.UpdateSoundGroups
// (Final, Native, Public)

void AMordhauGameState::UpdateSoundGroups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "UpdateSoundGroups");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauGameState.ShouldPaintGearWithTeamColors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauGameState::ShouldPaintGearWithTeamColors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauGameState", "ShouldPaintGearWithTeamColors");

	Params::MordhauGameState_ShouldPaintGearWithTeamColors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauHttpRequest.MordhauHttpRequest
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InUrl                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InVerb                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FString, class FString>      InHeaderMap                                            (Parm, NativeAccessSpecifierPublic)
// class UPlayFabJsonObject*               InPlayFabJsonObject                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMordhauHttpRequest*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauHttpRequest* UMordhauHttpRequest::MordhauHttpRequest(class UObject* WorldContext, const class FString& InUrl, const class FString& InVerb, const TMap<class FString, class FString>& InHeaderMap, class UPlayFabJsonObject* InPlayFabJsonObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauHttpRequest", "MordhauHttpRequest");

	Params::MordhauHttpRequest_MordhauHttpRequest Parms{};

	Parms.WorldContext = WorldContext;
	Parms.InUrl = std::move(InUrl);
	Parms.InVerb = std::move(InVerb);
	Parms.InHeaderMap = std::move(InHeaderMap);
	Parms.InPlayFabJsonObject = InPlayFabJsonObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauHUD.EnqueueMordhauDialog
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMordhauDialog*                   Dialog                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauHUD::EnqueueMordhauDialog(class UMordhauDialog* Dialog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauHUD", "EnqueueMordhauDialog");

	Params::MordhauHUD_EnqueueMordhauDialog Parms{};

	Parms.Dialog = Dialog;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauHUD.OnGameStateReplicated
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AMordhauHUD::OnGameStateReplicated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauHUD", "OnGameStateReplicated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauHyperlinkTextDecorator.OnHyperTextClick
// (Native, Event, Public, BlueprintEvent)

void UMordhauHyperlinkTextDecorator::OnHyperTextClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauHyperlinkTextDecorator", "OnHyperTextClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.CustomSetInputModeGameAndUI
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          InWidgetToFocus                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMouseLockMode                          InMouseLockMode                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideCursorDuringCapture                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::CustomSetInputModeGameAndUI(class APlayerController* PlayerController, class UWidget* InWidgetToFocus, EMouseLockMode InMouseLockMode, bool bHideCursorDuringCapture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauInput", "CustomSetInputModeGameAndUI");

	Params::MordhauInput_CustomSetInputModeGameAndUI Parms{};

	Parms.PlayerController = PlayerController;
	Parms.InWidgetToFocus = InWidgetToFocus;
	Parms.InMouseLockMode = InMouseLockMode;
	Parms.bHideCursorDuringCapture = bHideCursorDuringCapture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.CustomSetInputModeGameOnly
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::CustomSetInputModeGameOnly(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauInput", "CustomSetInputModeGameOnly");

	Params::MordhauInput_CustomSetInputModeGameOnly Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.CustomSetInputModeUIOnly
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          InWidgetToFocus                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMouseLockMode                          InMouseLockMode                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::CustomSetInputModeUIOnly(class APlayerController* PlayerController, class UWidget* InWidgetToFocus, EMouseLockMode InMouseLockMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauInput", "CustomSetInputModeUIOnly");

	Params::MordhauInput_CustomSetInputModeUIOnly Parms{};

	Parms.PlayerController = PlayerController;
	Parms.InWidgetToFocus = InWidgetToFocus;
	Parms.InMouseLockMode = InMouseLockMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.GetActionKey
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInputActionKeyMapping           ActionKeyBinding                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UMordhauInput::GetActionKey(const struct FInputActionKeyMapping& ActionKeyBinding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauInput", "GetActionKey");

	Params::MordhauInput_GetActionKey Parms{};

	Parms.ActionKeyBinding = std::move(ActionKeyBinding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetActionName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInputActionKeyMapping           ActionKeyBinding                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UMordhauInput::GetActionName(const struct FInputActionKeyMapping& ActionKeyBinding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauInput", "GetActionName");

	Params::MordhauInput_GetActionName Parms{};

	Parms.ActionKeyBinding = std::move(ActionKeyBinding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetAxisKey
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInputAxisKeyMapping             AxisKeyBinding                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UMordhauInput::GetAxisKey(const struct FInputAxisKeyMapping& AxisKeyBinding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauInput", "GetAxisKey");

	Params::MordhauInput_GetAxisKey Parms{};

	Parms.AxisKeyBinding = std::move(AxisKeyBinding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetAxisName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInputAxisKeyMapping             AxisKeyBinding                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UMordhauInput::GetAxisName(const struct FInputAxisKeyMapping& AxisKeyBinding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauInput", "GetAxisName");

	Params::MordhauInput_GetAxisName Parms{};

	Parms.AxisKeyBinding = std::move(AxisKeyBinding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetAxisOppositeDirectionName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             AxisName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UMordhauInput::GetAxisOppositeDirectionName(const class FName& AxisName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauInput", "GetAxisOppositeDirectionName");

	Params::MordhauInput_GetAxisOppositeDirectionName Parms{};

	Parms.AxisName = AxisName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetAxisScale
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInputAxisKeyMapping             AxisKeyBinding                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauInput::GetAxisScale(const struct FInputAxisKeyMapping& AxisKeyBinding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauInput", "GetAxisScale");

	Params::MordhauInput_GetAxisScale Parms{};

	Parms.AxisKeyBinding = std::move(AxisKeyBinding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.AddActionKeyBinding
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             ActionName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::AddActionKeyBinding(const class FName& ActionName, const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "AddActionKeyBinding");

	Params::MordhauInput_AddActionKeyBinding Parms{};

	Parms.ActionName = ActionName;
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.AddAxisKeyBinding
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             AxisName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::AddAxisKeyBinding(const class FName& AxisName, const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "AddAxisKeyBinding");

	Params::MordhauInput_AddAxisKeyBinding Parms{};

	Parms.AxisName = AxisName;
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.AddConsoleKeyBinding
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FKey                             Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::AddConsoleKeyBinding(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "AddConsoleKeyBinding");

	Params::MordhauInput_AddConsoleKeyBinding Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.ApplySettings
// (Final, Native, Public, BlueprintCallable)

void UMordhauInput::ApplySettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "ApplySettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.ClearKeyBindings
// (Final, Native, Public, BlueprintCallable)

void UMordhauInput::ClearKeyBindings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "ClearKeyBindings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.GetActionKeyBindings
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FInputActionKeyMapping>   ActionKeyBindings                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UMordhauInput::GetActionKeyBindings(TArray<struct FInputActionKeyMapping>* ActionKeyBindings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetActionKeyBindings");

	Params::MordhauInput_GetActionKeyBindings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ActionKeyBindings != nullptr)
		*ActionKeyBindings = std::move(Parms.ActionKeyBindings);
}


// Function Mordhau.MordhauInput.GetAllKeyBindingsForAction
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             ActionName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FInputActionKeyMapping>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FInputActionKeyMapping> UMordhauInput::GetAllKeyBindingsForAction(const class FName& ActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetAllKeyBindingsForAction");

	Params::MordhauInput_GetAllKeyBindingsForAction Parms{};

	Parms.ActionName = ActionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetAxisKeyBindings
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FInputAxisKeyMapping>     AxisKeyBindings                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UMordhauInput::GetAxisKeyBindings(TArray<struct FInputAxisKeyMapping>* AxisKeyBindings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetAxisKeyBindings");

	Params::MordhauInput_GetAxisKeyBindings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AxisKeyBindings != nullptr)
		*AxisKeyBindings = std::move(Parms.AxisKeyBindings);
}


// Function Mordhau.MordhauInput.GetConsoleKeyBindings
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FKey>                     ConsoleKeyBindings                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UMordhauInput::GetConsoleKeyBindings(TArray<struct FKey>* ConsoleKeyBindings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetConsoleKeyBindings");

	Params::MordhauInput_GetConsoleKeyBindings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ConsoleKeyBindings != nullptr)
		*ConsoleKeyBindings = std::move(Parms.ConsoleKeyBindings);
}


// Function Mordhau.MordhauInput.GetPrimaryActionKeyBinding
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ActionName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputActionKeyMapping           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FInputActionKeyMapping UMordhauInput::GetPrimaryActionKeyBinding(const class FName& ActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetPrimaryActionKeyBinding");

	Params::MordhauInput_GetPrimaryActionKeyBinding Parms{};

	Parms.ActionName = ActionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetPrimaryAxisKeyBinding
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             AxisName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputAxisKeyMapping             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FInputAxisKeyMapping UMordhauInput::GetPrimaryAxisKeyBinding(const class FName& AxisName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetPrimaryAxisKeyBinding");

	Params::MordhauInput_GetPrimaryAxisKeyBinding Parms{};

	Parms.AxisName = AxisName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetSecondaryActionKeyBinding
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ActionName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputActionKeyMapping           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FInputActionKeyMapping UMordhauInput::GetSecondaryActionKeyBinding(const class FName& ActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetSecondaryActionKeyBinding");

	Params::MordhauInput_GetSecondaryActionKeyBinding Parms{};

	Parms.ActionName = ActionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetSecondaryAxisKeyBinding
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             AxisName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputAxisKeyMapping             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FInputAxisKeyMapping UMordhauInput::GetSecondaryAxisKeyBinding(const class FName& AxisName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetSecondaryAxisKeyBinding");

	Params::MordhauInput_GetSecondaryAxisKeyBinding Parms{};

	Parms.AxisName = AxisName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.RestoreDefaultSettings
// (Final, Native, Public, BlueprintCallable)

void UMordhauInput::RestoreDefaultSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "RestoreDefaultSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SaveSettings
// (Final, Native, Public, BlueprintCallable)

void UMordhauInput::SaveSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SaveSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetAngleAttackAfterPress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewAngleAttackAfterPress                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetAngleAttackAfterPress(int32 NewAngleAttackAfterPress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetAngleAttackAfterPress");

	Params::MordhauInput_SetAngleAttackAfterPress Parms{};

	Parms.NewAngleAttackAfterPress = NewAngleAttackAfterPress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetAngleAttacksWithMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewAngleAttacksWithMovement                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetAngleAttacksWithMovement(int32 NewAngleAttacksWithMovement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetAngleAttacksWithMovement");

	Params::MordhauInput_SetAngleAttacksWithMovement Parms{};

	Parms.NewAngleAttacksWithMovement = NewAngleAttacksWithMovement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetControlScheme
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewControlScheme                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetControlScheme(int32 NewControlScheme)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetControlScheme");

	Params::MordhauInput_SetControlScheme Parms{};

	Parms.NewControlScheme = NewControlScheme;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetGamepadLeftXDeadzone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewDeadzone                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetGamepadLeftXDeadzone(float NewDeadzone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetGamepadLeftXDeadzone");

	Params::MordhauInput_SetGamepadLeftXDeadzone Parms{};

	Parms.NewDeadzone = NewDeadzone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetGamepadLeftXInverted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewInverted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetGamepadLeftXInverted(bool bNewInverted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetGamepadLeftXInverted");

	Params::MordhauInput_SetGamepadLeftXInverted Parms{};

	Parms.bNewInverted = bNewInverted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetGamepadLeftXSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewSensitivity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetGamepadLeftXSensitivity(float NewSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetGamepadLeftXSensitivity");

	Params::MordhauInput_SetGamepadLeftXSensitivity Parms{};

	Parms.NewSensitivity = NewSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetGamepadLeftYDeadzone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewDeadzone                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetGamepadLeftYDeadzone(float NewDeadzone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetGamepadLeftYDeadzone");

	Params::MordhauInput_SetGamepadLeftYDeadzone Parms{};

	Parms.NewDeadzone = NewDeadzone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetGamepadLeftYInverted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewInverted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetGamepadLeftYInverted(bool bNewInverted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetGamepadLeftYInverted");

	Params::MordhauInput_SetGamepadLeftYInverted Parms{};

	Parms.bNewInverted = bNewInverted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetGamepadLeftYSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewSensitivity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetGamepadLeftYSensitivity(float NewSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetGamepadLeftYSensitivity");

	Params::MordhauInput_SetGamepadLeftYSensitivity Parms{};

	Parms.NewSensitivity = NewSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetGamepadRightXDeadzone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewDeadzone                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetGamepadRightXDeadzone(float NewDeadzone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetGamepadRightXDeadzone");

	Params::MordhauInput_SetGamepadRightXDeadzone Parms{};

	Parms.NewDeadzone = NewDeadzone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetGamepadRightXInverted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewInverted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetGamepadRightXInverted(bool bNewInverted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetGamepadRightXInverted");

	Params::MordhauInput_SetGamepadRightXInverted Parms{};

	Parms.bNewInverted = bNewInverted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetGamepadRightXSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewSensitivity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetGamepadRightXSensitivity(float NewSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetGamepadRightXSensitivity");

	Params::MordhauInput_SetGamepadRightXSensitivity Parms{};

	Parms.NewSensitivity = NewSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetGamepadRightYDeadzone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewDeadzone                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetGamepadRightYDeadzone(float NewDeadzone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetGamepadRightYDeadzone");

	Params::MordhauInput_SetGamepadRightYDeadzone Parms{};

	Parms.NewDeadzone = NewDeadzone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetGamepadRightYInverted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewInverted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetGamepadRightYInverted(bool bNewInverted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetGamepadRightYInverted");

	Params::MordhauInput_SetGamepadRightYInverted Parms{};

	Parms.bNewInverted = bNewInverted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetGamepadRightYSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewSensitivity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetGamepadRightYSensitivity(float NewSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetGamepadRightYSensitivity");

	Params::MordhauInput_SetGamepadRightYSensitivity Parms{};

	Parms.NewSensitivity = NewSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetInverseAttackDirectionX
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewInverseAttackDirectionX                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetInverseAttackDirectionX(int32 NewInverseAttackDirectionX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetInverseAttackDirectionX");

	Params::MordhauInput_SetInverseAttackDirectionX Parms{};

	Parms.NewInverseAttackDirectionX = NewInverseAttackDirectionX;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetInverseAttackDirectionY
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewInverseAttackDirectionX                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetInverseAttackDirectionY(int32 NewInverseAttackDirectionX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetInverseAttackDirectionY");

	Params::MordhauInput_SetInverseAttackDirectionY Parms{};

	Parms.NewInverseAttackDirectionX = NewInverseAttackDirectionX;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetMouseXInverted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewInverted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetMouseXInverted(bool bNewInverted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetMouseXInverted");

	Params::MordhauInput_SetMouseXInverted Parms{};

	Parms.bNewInverted = bNewInverted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetMouseXIsFlipAttackSide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewIsFlipAttackSide                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetMouseXIsFlipAttackSide(int32 NewIsFlipAttackSide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetMouseXIsFlipAttackSide");

	Params::MordhauInput_SetMouseXIsFlipAttackSide Parms{};

	Parms.NewIsFlipAttackSide = NewIsFlipAttackSide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetMouseXSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewSensitivity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetMouseXSensitivity(float NewSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetMouseXSensitivity");

	Params::MordhauInput_SetMouseXSensitivity Parms{};

	Parms.NewSensitivity = NewSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetMouseYInverted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewInverted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetMouseYInverted(bool bNewInverted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetMouseYInverted");

	Params::MordhauInput_SetMouseYInverted Parms{};

	Parms.bNewInverted = bNewInverted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetMouseYSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewSensitivity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetMouseYSensitivity(float NewSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetMouseYSensitivity");

	Params::MordhauInput_SetMouseYSensitivity Parms{};

	Parms.NewSensitivity = NewSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetToggleCrouch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewToggleCrouch                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetToggleCrouch(int32 NewToggleCrouch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetToggleCrouch");

	Params::MordhauInput_SetToggleCrouch Parms{};

	Parms.NewToggleCrouch = NewToggleCrouch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.SetToggleSprint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewToggleSprint                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauInput::SetToggleSprint(int32 NewToggleSprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "SetToggleSprint");

	Params::MordhauInput_SetToggleSprint Parms{};

	Parms.NewToggleSprint = NewToggleSprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauInput.GetAngleAttackAfterPress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauInput::GetAngleAttackAfterPress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetAngleAttackAfterPress");

	Params::MordhauInput_GetAngleAttackAfterPress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetAngleAttacksWithMovement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauInput::GetAngleAttacksWithMovement() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetAngleAttacksWithMovement");

	Params::MordhauInput_GetAngleAttacksWithMovement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetControlScheme
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauInput::GetControlScheme() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetControlScheme");

	Params::MordhauInput_GetControlScheme Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetGamepadDeadzoneLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMordhauInput::GetGamepadDeadzoneLimits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetGamepadDeadzoneLimits");

	Params::MordhauInput_GetGamepadDeadzoneLimits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetGamepadLeftXDeadzone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauInput::GetGamepadLeftXDeadzone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetGamepadLeftXDeadzone");

	Params::MordhauInput_GetGamepadLeftXDeadzone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetGamepadLeftXInverted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauInput::GetGamepadLeftXInverted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetGamepadLeftXInverted");

	Params::MordhauInput_GetGamepadLeftXInverted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetGamepadLeftXSensitivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauInput::GetGamepadLeftXSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetGamepadLeftXSensitivity");

	Params::MordhauInput_GetGamepadLeftXSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetGamepadLeftYDeadzone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauInput::GetGamepadLeftYDeadzone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetGamepadLeftYDeadzone");

	Params::MordhauInput_GetGamepadLeftYDeadzone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetGamepadLeftYInverted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauInput::GetGamepadLeftYInverted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetGamepadLeftYInverted");

	Params::MordhauInput_GetGamepadLeftYInverted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetGamepadLeftYSensitivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauInput::GetGamepadLeftYSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetGamepadLeftYSensitivity");

	Params::MordhauInput_GetGamepadLeftYSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetGamepadRightXDeadzone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauInput::GetGamepadRightXDeadzone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetGamepadRightXDeadzone");

	Params::MordhauInput_GetGamepadRightXDeadzone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetGamepadRightXInverted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauInput::GetGamepadRightXInverted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetGamepadRightXInverted");

	Params::MordhauInput_GetGamepadRightXInverted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetGamepadRightXSensitivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauInput::GetGamepadRightXSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetGamepadRightXSensitivity");

	Params::MordhauInput_GetGamepadRightXSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetGamepadRightYDeadzone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauInput::GetGamepadRightYDeadzone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetGamepadRightYDeadzone");

	Params::MordhauInput_GetGamepadRightYDeadzone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetGamepadRightYInverted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauInput::GetGamepadRightYInverted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetGamepadRightYInverted");

	Params::MordhauInput_GetGamepadRightYInverted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetGamepadRightYSensitivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauInput::GetGamepadRightYSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetGamepadRightYSensitivity");

	Params::MordhauInput_GetGamepadRightYSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetGamepadSensitivityLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMordhauInput::GetGamepadSensitivityLimits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetGamepadSensitivityLimits");

	Params::MordhauInput_GetGamepadSensitivityLimits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetInverseAttackDirectionX
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauInput::GetInverseAttackDirectionX() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetInverseAttackDirectionX");

	Params::MordhauInput_GetInverseAttackDirectionX Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetInverseAttackDirectionY
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauInput::GetInverseAttackDirectionY() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetInverseAttackDirectionY");

	Params::MordhauInput_GetInverseAttackDirectionY Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetMouseSensitivityLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMordhauInput::GetMouseSensitivityLimits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetMouseSensitivityLimits");

	Params::MordhauInput_GetMouseSensitivityLimits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetMouseXInverted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauInput::GetMouseXInverted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetMouseXInverted");

	Params::MordhauInput_GetMouseXInverted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetMouseXIsFlipAttackSide
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauInput::GetMouseXIsFlipAttackSide() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetMouseXIsFlipAttackSide");

	Params::MordhauInput_GetMouseXIsFlipAttackSide Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetMouseXSensitivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauInput::GetMouseXSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetMouseXSensitivity");

	Params::MordhauInput_GetMouseXSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetMouseYInverted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauInput::GetMouseYInverted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetMouseYInverted");

	Params::MordhauInput_GetMouseYInverted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetMouseYSensitivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauInput::GetMouseYSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetMouseYSensitivity");

	Params::MordhauInput_GetMouseYSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetToggleCrouch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauInput::GetToggleCrouch() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetToggleCrouch");

	Params::MordhauInput_GetToggleCrouch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInput.GetToggleSprint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauInput::GetToggleSprint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInput", "GetToggleSprint");

	Params::MordhauInput_GetToggleSprint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauInteractable.OnInteractionsChanged
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauInteractable::OnInteractionsChanged(uint8 OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInteractable", "OnInteractionsChanged");

	Params::MordhauInteractable_OnInteractionsChanged Parms{};

	Parms.OldValue = OldValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauInteractable.OnRep_Interactions
// (Final, Native, Public)
// Parameters:
// uint8                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauInteractable::OnRep_Interactions(uint8 OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauInteractable", "OnRep_Interactions");

	Params::MordhauInteractable_OnRep_Interactions Parms{};

	Parms.OldValue = OldValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauMovementComponent.Knockback
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Amount                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauMovementComponent::Knockback(const struct FVector& Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMovementComponent", "Knockback");

	Params::MordhauMovementComponent_Knockback Parms{};

	Parms.Amount = std::move(Amount);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauMovementComponent.OnCharacterLODTick
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauMovementComponent::OnCharacterLODTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMovementComponent", "OnCharacterLODTick");

	Params::MordhauMovementComponent_OnCharacterLODTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauMovementComponent.OnInputTypeChange
// (Final, Native, Public)
// Parameters:
// bool                                    bIsUsingGamepad                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauMovementComponent::OnInputTypeChange(bool bIsUsingGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMovementComponent", "OnInputTypeChange");

	Params::MordhauMovementComponent_OnInputTypeChange Parms{};

	Parms.bIsUsingGamepad = bIsUsingGamepad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauMovementComponent.GetAccelerationFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauMovementComponent::GetAccelerationFactor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMovementComponent", "GetAccelerationFactor");

	Params::MordhauMovementComponent_GetAccelerationFactor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauMovementComponent.GetSpeedFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   PartialSprintToSprintWeight                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauMovementComponent::GetSpeedFactor(float PartialSprintToSprintWeight) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMovementComponent", "GetSpeedFactor");

	Params::MordhauMovementComponent_GetSpeedFactor Parms{};

	Parms.PartialSprintToSprintWeight = PartialSprintToSprintWeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauMovementComponent.IsInKnockback
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauMovementComponent::IsInKnockback() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauMovementComponent", "IsInKnockback");

	Params::MordhauMovementComponent_IsInKnockback Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauObjectiveTracker.GetObjectiveInfo
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FObjective                       Objective                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           Progress                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>                           Goal                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> AMordhauObjectiveTracker::GetObjectiveInfo(const struct FObjective& Objective, const TArray<int32>& Progress, const TArray<int32>& Goal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauObjectiveTracker", "GetObjectiveInfo");

	Params::MordhauObjectiveTracker_GetObjectiveInfo Parms{};

	Parms.Objective = std::move(Objective);
	Parms.Progress = std::move(Progress);
	Parms.Goal = std::move(Goal);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauObjectiveTracker.OnObjectivesUpdated
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     List                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<bool>                            Completed                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AMordhauObjectiveTracker::OnObjectivesUpdated(const TArray<class FText>& List, const TArray<bool>& Completed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauObjectiveTracker", "OnObjectivesUpdated");

	Params::MordhauObjectiveTracker_OnObjectivesUpdated Parms{};

	Parms.List = std::move(List);
	Parms.Completed = std::move(Completed);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauObjectiveTracker.RefreshObjectives
// (Native, Public, BlueprintCallable)

void AMordhauObjectiveTracker::RefreshObjectives()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauObjectiveTracker", "RefreshObjectives");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauObjectiveTracker.UpdateCapturePoints
// (Final, Native, Public, BlueprintCallable)

void AMordhauObjectiveTracker::UpdateCapturePoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauObjectiveTracker", "UpdateCapturePoints");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauObjectiveTracker.GetObjectiveGoal
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class AControlPoint*                    ControlPoint                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FObjective                       Objective                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> AMordhauObjectiveTracker::GetObjectiveGoal(class AControlPoint* ControlPoint, const struct FObjective& Objective) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauObjectiveTracker", "GetObjectiveGoal");

	Params::MordhauObjectiveTracker_GetObjectiveGoal Parms{};

	Parms.ControlPoint = ControlPoint;
	Parms.Objective = std::move(Objective);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauObjectiveTracker.GetObjectiveProgress
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class AControlPoint*                    ControlPoint                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FObjective                       Objective                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> AMordhauObjectiveTracker::GetObjectiveProgress(class AControlPoint* ControlPoint, const struct FObjective& Objective) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauObjectiveTracker", "GetObjectiveProgress");

	Params::MordhauObjectiveTracker_GetObjectiveProgress Parms{};

	Parms.ControlPoint = ControlPoint;
	Parms.Objective = std::move(Objective);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauObjectiveTracker.GetTeam
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// int32                                   ViewingTeam                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMordhauObjectiveTracker::GetTeam(int32 ViewingTeam) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauObjectiveTracker", "GetTeam");

	Params::MordhauObjectiveTracker_GetTeam Parms{};

	Parms.ViewingTeam = ViewingTeam;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.AddAdmin
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           PlayerNameOrPlayFabID                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::AddAdmin(const class FString& PlayerNameOrPlayFabID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "AddAdmin");

	Params::MordhauPlayerController_AddAdmin Parms{};

	Parms.PlayerNameOrPlayFabID = std::move(PlayerNameOrPlayFabID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.AddBots
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::AddBots(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "AddBots");

	Params::MordhauPlayerController_AddBots Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.AddBotsTeam
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::AddBotsTeam(int32 Amount, int32 Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "AddBotsTeam");

	Params::MordhauPlayerController_AddBotsTeam Parms{};

	Parms.Amount = Amount;
	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.AddRandomBots
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::AddRandomBots(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "AddRandomBots");

	Params::MordhauPlayerController_AddRandomBots Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.AddRandomCharacters
// (Exec, Native, Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::AddRandomCharacters(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "AddRandomCharacters");

	Params::MordhauPlayerController_AddRandomCharacters Parms{};

	Parms.Num = Num;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.AdminList
// (Final, Exec, Native, Public)

void AMordhauPlayerController::AdminList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "AdminList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.AdminLogin
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           Password                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::AdminLogin(const class FString& Password)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "AdminLogin");

	Params::MordhauPlayerController_AdminLogin Parms{};

	Parms.Password = std::move(Password);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.AreStatsAvailable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauPlayerController::AreStatsAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "AreStatsAvailable");

	Params::MordhauPlayerController_AreStatsAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.AskForSpawn
// (Final, Native, Public, BlueprintCallable)

void AMordhauPlayerController::AskForSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "AskForSpawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Ban
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           PlayerNameOrPlayFabID                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BanDuration                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           BanReason                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::Ban(const class FString& PlayerNameOrPlayFabID, const int32 BanDuration, const class FString& BanReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Ban");

	Params::MordhauPlayerController_Ban Parms{};

	Parms.PlayerNameOrPlayFabID = std::move(PlayerNameOrPlayFabID);
	Parms.BanDuration = BanDuration;
	Parms.BanReason = std::move(BanReason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.BanList
// (Final, Exec, Native, Public)

void AMordhauPlayerController::BanList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "BanList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.CanAskForSpawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauPlayerController::CanAskForSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "CanAskForSpawn");

	Params::MordhauPlayerController_CanAskForSpawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.CancelVoteKick
// (Final, Exec, Native, Public)

void AMordhauPlayerController::CancelVoteKick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "CancelVoteKick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ChangeLevel
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           LevelName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ChangeLevel(const class FString& LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ChangeLevel");

	Params::MordhauPlayerController_ChangeLevel Parms{};

	Parms.LevelName = std::move(LevelName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ChangeMap
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           MapName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ChangeMap(const class FString& MapName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ChangeMap");

	Params::MordhauPlayerController_ChangeMap Parms{};

	Parms.MapName = std::move(MapName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ChoiceMenu
// (Final, Native, Public)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ChoiceMenu(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ChoiceMenu");

	Params::MordhauPlayerController_ChoiceMenu Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ChoiceMenuOptionSelected
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Choice                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ChoiceMenuOptionSelected(int32 Choice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ChoiceMenuOptionSelected");

	Params::MordhauPlayerController_ChoiceMenuOptionSelected Parms{};

	Parms.Choice = Choice;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauPlayerController.Choose1
// (Final, Native, Public)

void AMordhauPlayerController::Choose1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Choose1");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Choose2
// (Final, Native, Public)

void AMordhauPlayerController::Choose2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Choose2");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Choose3
// (Final, Native, Public)

void AMordhauPlayerController::Choose3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Choose3");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Choose4
// (Final, Native, Public)

void AMordhauPlayerController::Choose4()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Choose4");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Choose5
// (Final, Native, Public)

void AMordhauPlayerController::Choose5()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Choose5");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Choose6
// (Final, Native, Public)

void AMordhauPlayerController::Choose6()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Choose6");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Choose7
// (Final, Native, Public)

void AMordhauPlayerController::Choose7()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Choose7");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Choose8
// (Final, Native, Public)

void AMordhauPlayerController::Choose8()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Choose8");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Choose9
// (Final, Native, Public)

void AMordhauPlayerController::Choose9()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Choose9");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ChooseExit
// (Final, Native, Public)

void AMordhauPlayerController::ChooseExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ChooseExit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ClientDrawTracer
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// struct FVector                          Start                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          End                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ClientDrawTracer(const struct FVector& Start, const struct FVector& End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientDrawTracer");

	Params::MordhauPlayerController_ClientDrawTracer Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ClientMessageBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ClientMessageBP(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientMessageBP");

	Params::MordhauPlayerController_ClientMessageBP Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ClientReceiveMessage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ClientReceiveMessage(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientReceiveMessage");

	Params::MordhauPlayerController_ClientReceiveMessage Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ClientReceiveScore
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint8                                   ReasonAndParam                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int16                                   ScoreAmount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauPlayerState*              AssociatedPlayer                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ClientReceiveScore(uint8 ReasonAndParam, int16 ScoreAmount, class AMordhauPlayerState* AssociatedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientReceiveScore");

	Params::MordhauPlayerController_ClientReceiveScore Parms{};

	Parms.ReasonAndParam = ReasonAndParam;
	Parms.ScoreAmount = ScoreAmount;
	Parms.AssociatedPlayer = AssociatedPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ClientReceiveScoreBP
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EScoreFeedReason                        Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ReasonParam                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ScoreAmount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauPlayerState*              AssociatedPlayer                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ClientReceiveScoreBP(EScoreFeedReason Reason, uint8 ReasonParam, float ScoreAmount, class AMordhauPlayerState* AssociatedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientReceiveScoreBP");

	Params::MordhauPlayerController_ClientReceiveScoreBP Parms{};

	Parms.Reason = Reason;
	Parms.ReasonParam = ReasonParam;
	Parms.ScoreAmount = ScoreAmount;
	Parms.AssociatedPlayer = AssociatedPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauPlayerController.ClientReceiveScoreNoState
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint8                                   ReasonAndParam                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int16                                   ScoreAmount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ClientReceiveScoreNoState(uint8 ReasonAndParam, int16 ScoreAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientReceiveScoreNoState");

	Params::MordhauPlayerController_ClientReceiveScoreNoState Parms{};

	Parms.ReasonAndParam = ReasonAndParam;
	Parms.ScoreAmount = ScoreAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ClientReceiveSphericalHitboxes
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// TArray<struct FVector>                  Locations                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          WeaponTraceStart                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WeaponTraceEnd                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ClientReceiveSphericalHitboxes(const TArray<struct FVector>& Locations, const struct FVector& WeaponTraceStart, const struct FVector& WeaponTraceEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientReceiveSphericalHitboxes");

	Params::MordhauPlayerController_ClientReceiveSphericalHitboxes Parms{};

	Parms.Locations = std::move(Locations);
	Parms.WeaponTraceStart = std::move(WeaponTraceStart);
	Parms.WeaponTraceEnd = std::move(WeaponTraceEnd);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ClientRequestMatchmakingMatchID
// (Net, NetReliable, Native, Event, Public, NetClient)

void AMordhauPlayerController::ClientRequestMatchmakingMatchID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientRequestMatchmakingMatchID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ClientRequestPartyInfo
// (Net, NetReliable, Native, Event, Public, NetClient)

void AMordhauPlayerController::ClientRequestPartyInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientRequestPartyInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ClientRequestSessionTicket
// (Net, NetReliable, Native, Event, Public, NetClient)

void AMordhauPlayerController::ClientRequestSessionTicket()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientRequestSessionTicket");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ClientRequestXPAndMMR
// (Net, NetReliable, Native, Event, Public, NetClient)

void AMordhauPlayerController::ClientRequestXPAndMMR()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientRequestXPAndMMR");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ClientSetControlAndPawnRotation
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// class APawn*                            APawn                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         NewRotation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ClientSetControlAndPawnRotation(class APawn* APawn, const struct FRotator& NewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientSetControlAndPawnRotation");

	Params::MordhauPlayerController_ClientSetControlAndPawnRotation Parms{};

	Parms.APawn = APawn;
	Parms.NewRotation = std::move(NewRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ClientSetFlags
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                           InMyFlags                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FAdminFlag>               InAdminFlags                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ClientSetFlags(const class FString& InMyFlags, const TArray<struct FAdminFlag>& InAdminFlags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientSetFlags");

	Params::MordhauPlayerController_ClientSetFlags Parms{};

	Parms.InMyFlags = std::move(InMyFlags);
	Parms.InAdminFlags = std::move(InAdminFlags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ClientSetMapVoteCounts
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<uint8>                           InMapVoteCounts                                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ClientSetMapVoteCounts(const TArray<uint8>& InMapVoteCounts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientSetMapVoteCounts");

	Params::MordhauPlayerController_ClientSetMapVoteCounts Parms{};

	Parms.InMapVoteCounts = std::move(InMapVoteCounts);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ClientSetMapVoteMaps
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<class FString>                   InMapVoteMaps                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ClientSetMapVoteMaps(const TArray<class FString>& InMapVoteMaps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientSetMapVoteMaps");

	Params::MordhauPlayerController_ClientSetMapVoteMaps Parms{};

	Parms.InMapVoteMaps = std::move(InMapVoteMaps);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ClientSetPlayFabMatch
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FPlayFabMatch                    InMatch                                                (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ClientSetPlayFabMatch(const struct FPlayFabMatch& InMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientSetPlayFabMatch");

	Params::MordhauPlayerController_ClientSetPlayFabMatch Parms{};

	Parms.InMatch = std::move(InMatch);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ClientSetServerInfo
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FBasicServerInfo                 ServerInfo                                             (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ClientSetServerInfo(const struct FBasicServerInfo& ServerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientSetServerInfo");

	Params::MordhauPlayerController_ClientSetServerInfo Parms{};

	Parms.ServerInfo = std::move(ServerInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ClientSetServerStats
// (Net, Native, Event, Public, NetClient)
// Parameters:
// struct FServerStats                     InServerStats                                          (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ClientSetServerStats(const struct FServerStats& InServerStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientSetServerStats");

	Params::MordhauPlayerController_ClientSetServerStats Parms{};

	Parms.InServerStats = std::move(InServerStats);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ClientWasKicked_Implementation
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             KickReason                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ClientWasKicked_Implementation(const class FText& KickReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ClientWasKicked_Implementation");

	Params::MordhauPlayerController_ClientWasKicked_Implementation Parms{};

	Parms.KickReason = std::move(KickReason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ComputePlayerRank
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMordhauPlayerController::ComputePlayerRank()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ComputePlayerRank");

	Params::MordhauPlayerController_ComputePlayerRank Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.CopyID
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           UniqueId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::CopyID(const class FString& UniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "CopyID");

	Params::MordhauPlayerController_CopyID Parms{};

	Parms.UniqueId = std::move(UniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.CopyName
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           UniqueId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::CopyName(const class FString& UniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "CopyName");

	Params::MordhauPlayerController_CopyName Parms{};

	Parms.UniqueId = std::move(UniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.DebugMultithreadUpdate
// (Final, Exec, Native, Public)

void AMordhauPlayerController::DebugMultithreadUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "DebugMultithreadUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.DisplayAnnouncement
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Text                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Subtext                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::DisplayAnnouncement(const class FString& Text, const class FString& Subtext, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "DisplayAnnouncement");

	Params::MordhauPlayerController_DisplayAnnouncement Parms{};

	Parms.Text = std::move(Text);
	Parms.Subtext = std::move(Subtext);
	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauPlayerController.DisplayMessage
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     SenderPlayerState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           S                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MsgLifeTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::DisplayMessage(class APlayerState* SenderPlayerState, const class FString& S, class FName Type, float MsgLifeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "DisplayMessage");

	Params::MordhauPlayerController_DisplayMessage Parms{};

	Parms.SenderPlayerState = SenderPlayerState;
	Parms.S = std::move(S);
	Parms.Type = Type;
	Parms.MsgLifeTime = MsgLifeTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauPlayerController.EquipmentCommand
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Command                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::EquipmentCommand(int32 Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "EquipmentCommand");

	Params::MordhauPlayerController_EquipmentCommand Parms{};

	Parms.Command = Command;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.FlushPendingAnglingInputs
// (Final, Native, Public, BlueprintCallable)

void AMordhauPlayerController::FlushPendingAnglingInputs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "FlushPendingAnglingInputs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.GetAnglingAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AMordhauPlayerController::GetAnglingAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "GetAnglingAngle");

	Params::MordhauPlayerController_GetAnglingAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.GetAnglingVector
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D AMordhauPlayerController::GetAnglingVector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "GetAnglingVector");

	Params::MordhauPlayerController_GetAnglingVector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.GetDefaultEquipmentCustomizationFor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class AMordhauEquipment>    ForEquipmentClass                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEquipmentCustomization          OutCustomization                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauPlayerController::GetDefaultEquipmentCustomizationFor(TSubclassOf<class AMordhauEquipment> ForEquipmentClass, struct FEquipmentCustomization* OutCustomization)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "GetDefaultEquipmentCustomizationFor");

	Params::MordhauPlayerController_GetDefaultEquipmentCustomizationFor Parms{};

	Parms.ForEquipmentClass = ForEquipmentClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCustomization != nullptr)
		*OutCustomization = std::move(Parms.OutCustomization);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.GetDefaultTierCustomizationForSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EMainWearableSlot                       MainSlot                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ArmorTier                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<EWearableSlot, struct FWearableCustomization>OutMap                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauPlayerController::GetDefaultTierCustomizationForSlot(EMainWearableSlot MainSlot, uint8 ArmorTier, TMap<EWearableSlot, struct FWearableCustomization>* OutMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "GetDefaultTierCustomizationForSlot");

	Params::MordhauPlayerController_GetDefaultTierCustomizationForSlot Parms{};

	Parms.MainSlot = MainSlot;
	Parms.ArmorTier = ArmorTier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMap != nullptr)
		*OutMap = std::move(Parms.OutMap);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.GetLastControlledCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauCharacter*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauCharacter* AMordhauPlayerController::GetLastControlledCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "GetLastControlledCharacter");

	Params::MordhauPlayerController_GetLastControlledCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.GetNextViewablePlayerNonAuth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bReverse                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOnlyOwnTeam                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AAdvancedCharacter*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAdvancedCharacter* AMordhauPlayerController::GetNextViewablePlayerNonAuth(bool bReverse, bool bOnlyOwnTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "GetNextViewablePlayerNonAuth");

	Params::MordhauPlayerController_GetNextViewablePlayerNonAuth Parms{};

	Parms.bReverse = bReverse;
	Parms.bOnlyOwnTeam = bOnlyOwnTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.GetPlayFabId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AMordhauPlayerController::GetPlayFabId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "GetPlayFabId");

	Params::MordhauPlayerController_GetPlayFabId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.GiveCata
// (Final, Exec, Native, Public)

void AMordhauPlayerController::GiveCata()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "GiveCata");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.GiveClientScoreBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EScoreFeedReason                        Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ScoreAmount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::GiveClientScoreBP(EScoreFeedReason Reason, int32 ScoreAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "GiveClientScoreBP");

	Params::MordhauPlayerController_GiveClientScoreBP Parms{};

	Parms.Reason = Reason;
	Parms.ScoreAmount = ScoreAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.GiveHog
// (Final, Exec, Native, Public)

void AMordhauPlayerController::GiveHog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "GiveHog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.GiveHorse
// (Final, Exec, Native, Public)

void AMordhauPlayerController::GiveHorse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "GiveHorse");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Horsgor
// (Final, Exec, Native, Public)

void AMordhauPlayerController::Horsgor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Horsgor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.IsAllowedClient
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Command                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauPlayerController::IsAllowedClient(const class FString& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "IsAllowedClient");

	Params::MordhauPlayerController_IsAllowedClient Parms{};

	Parms.Command = std::move(Command);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.IsAllowedServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Command                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauPlayerController::IsAllowedServer(const class FString& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "IsAllowedServer");

	Params::MordhauPlayerController_IsAllowedServer Parms{};

	Parms.Command = std::move(Command);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.IsAuthenticated
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauPlayerController::IsAuthenticated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "IsAuthenticated");

	Params::MordhauPlayerController_IsAuthenticated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.IsAuthenticating
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauPlayerController::IsAuthenticating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "IsAuthenticating");

	Params::MordhauPlayerController_IsAuthenticating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.IsConsoleCommandRegistered
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           CommandName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauPlayerController::IsConsoleCommandRegistered(const class FString& CommandName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "IsConsoleCommandRegistered");

	Params::MordhauPlayerController_IsConsoleCommandRegistered Parms{};

	Parms.CommandName = std::move(CommandName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.IsConsoleOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauPlayerController::IsConsoleOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "IsConsoleOpen");

	Params::MordhauPlayerController_IsConsoleOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.IsInventoryAvailable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauPlayerController::IsInventoryAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "IsInventoryAvailable");

	Params::MordhauPlayerController_IsInventoryAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.IsSessionTicketAvailable
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauPlayerController::IsSessionTicketAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "IsSessionTicketAvailable");

	Params::MordhauPlayerController_IsSessionTicketAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.Kick
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           PlayerNameOrPlayFabID                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           KickReason                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::Kick(const class FString& PlayerNameOrPlayFabID, const class FString& KickReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Kick");

	Params::MordhauPlayerController_Kick Parms{};

	Parms.PlayerNameOrPlayFabID = std::move(PlayerNameOrPlayFabID);
	Parms.KickReason = std::move(KickReason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.LookUp
// (Final, Native, Public)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::LookUp(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "LookUp");

	Params::MordhauPlayerController_LookUp Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.LookupPlayer
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           UniqueId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::LookupPlayer(const class FString& UniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "LookupPlayer");

	Params::MordhauPlayerController_LookupPlayer Parms{};

	Parms.UniqueId = std::move(UniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.MountPak
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           PakPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::MountPak(const class FString& PakPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "MountPak");

	Params::MordhauPlayerController_MountPak Parms{};

	Parms.PakPath = std::move(PakPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Mute
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           PlayerNameOrPlayFabID                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MuteDuration                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::Mute(const class FString& PlayerNameOrPlayFabID, const int32 MuteDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Mute");

	Params::MordhauPlayerController_Mute Parms{};

	Parms.PlayerNameOrPlayFabID = std::move(PlayerNameOrPlayFabID);
	Parms.MuteDuration = MuteDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.MuteList
// (Final, Exec, Native, Public)

void AMordhauPlayerController::MuteList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "MuteList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.OnActionFailed
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Reason                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::OnActionFailed(const class FName& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnActionFailed");

	Params::MordhauPlayerController_OnActionFailed Parms{};

	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauPlayerController.OnAddRandomBots
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::OnAddRandomBots(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnAddRandomBots");

	Params::MordhauPlayerController_OnAddRandomBots Parms{};

	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauPlayerController.OnAFKTimeExceededMaximum
// (Event, Public, BlueprintEvent)

void AMordhauPlayerController::OnAFKTimeExceededMaximum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnAFKTimeExceededMaximum");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauPlayerController.OnAfterPossess
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            APawn                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::OnAfterPossess(class APawn* APawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnAfterPossess");

	Params::MordhauPlayerController_OnAfterPossess Parms{};

	Parms.APawn = APawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.OnAfterUnPossess
// (Native, Event, Public, BlueprintEvent)

void AMordhauPlayerController::OnAfterUnPossess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnAfterUnPossess");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.OnAmmoChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauEquipment*                Equipment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AmmoDifference                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::OnAmmoChanged(class AMordhauEquipment* Equipment, int32 AmmoDifference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnAmmoChanged");

	Params::MordhauPlayerController_OnAmmoChanged Parms{};

	Parms.Equipment = Equipment;
	Parms.AmmoDifference = AmmoDifference;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauPlayerController.OnGetPlayFabIDsFromPlatformIDsComplete
// (Final, Native, Public, HasOutParams)
// Parameters:
// bool                                    bWasSuccessful                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabApiError                 Error                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TMap<class FString, class FString>      PlayFabIds                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AMordhauPlayerController::OnGetPlayFabIDsFromPlatformIDsComplete(bool bWasSuccessful, const struct FPlayFabApiError& Error, const TMap<class FString, class FString>& PlayFabIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnGetPlayFabIDsFromPlatformIDsComplete");

	Params::MordhauPlayerController_OnGetPlayFabIDsFromPlatformIDsComplete Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.Error = std::move(Error);
	Parms.PlayFabIds = std::move(PlayFabIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.OnGetPlayFabPlayerComplete
// (Final, Native, Public, HasOutParams)
// Parameters:
// bool                                    bWasSuccessful                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabApiError                 Error                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabPlayer                   PlayFabPlayer                                          (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::OnGetPlayFabPlayerComplete(bool bWasSuccessful, const struct FPlayFabApiError& Error, const class FString& PlayFabId, const struct FPlayFabPlayer& PlayFabPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnGetPlayFabPlayerComplete");

	Params::MordhauPlayerController_OnGetPlayFabPlayerComplete Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.Error = std::move(Error);
	Parms.PlayFabId = std::move(PlayFabId);
	Parms.PlayFabPlayer = std::move(PlayFabPlayer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.OnHighlightEnd
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::OnHighlightEnd(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnHighlightEnd");

	Params::MordhauPlayerController_OnHighlightEnd Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.OnHighlightStart
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::OnHighlightStart(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnHighlightStart");

	Params::MordhauPlayerController_OnHighlightStart Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.OnInventoryItemsUnlocked
// (Final, Native, Public, HasOutParams)
// Parameters:
// bool                                    bWasSuccessful                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FItemStack>               ItemStacks                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AMordhauPlayerController::OnInventoryItemsUnlocked(bool bWasSuccessful, const TArray<struct FItemStack>& ItemStacks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnInventoryItemsUnlocked");

	Params::MordhauPlayerController_OnInventoryItemsUnlocked Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.ItemStacks = std::move(ItemStacks);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.OnIsAnythingRestockableChanged
// (Event, Public, BlueprintEvent)

void AMordhauPlayerController::OnIsAnythingRestockableChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnIsAnythingRestockableChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauPlayerController.OnMordhauCharacterSpawned
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                SpawnedCharacter                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::OnMordhauCharacterSpawned(class AMordhauCharacter* SpawnedCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnMordhauCharacterSpawned");

	Params::MordhauPlayerController_OnMordhauCharacterSpawned Parms{};

	Parms.SpawnedCharacter = SpawnedCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.OnNewProfileFromClientPostValidation
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AMordhauPlayerController::OnNewProfileFromClientPostValidation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnNewProfileFromClientPostValidation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauPlayerController.OnNewProfileFromClientPreValidation
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AMordhauPlayerController::OnNewProfileFromClientPreValidation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnNewProfileFromClientPreValidation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauPlayerController.OnPlayFabLoginComplete
// (Final, Native, Public, HasOutParams)
// Parameters:
// bool                                    bWasSuccessful                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabApiError                 Error                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::OnPlayFabLoginComplete(bool bWasSuccessful, const struct FPlayFabApiError& Error, const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnPlayFabLoginComplete");

	Params::MordhauPlayerController_OnPlayFabLoginComplete Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.Error = std::move(Error);
	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.OnReceivedAssistScore
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Percentage                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauCharacter*                Killed                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::OnReceivedAssistScore(float Percentage, class AMordhauCharacter* Killed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnReceivedAssistScore");

	Params::MordhauPlayerController_OnReceivedAssistScore Parms{};

	Parms.Percentage = Percentage;
	Parms.Killed = Killed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauPlayerController.OnReceivedKillScore
// (Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Killed                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::OnReceivedKillScore(class AMordhauCharacter* Killed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnReceivedKillScore");

	Params::MordhauPlayerController_OnReceivedKillScore Parms{};

	Parms.Killed = Killed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauPlayerController.OnRequestCancelVoteKick
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AMordhauPlayerController::OnRequestCancelVoteKick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnRequestCancelVoteKick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauPlayerController.OnRequestVoteKick
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauPlayerState*              TargetPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::OnRequestVoteKick(class AMordhauPlayerState* TargetPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnRequestVoteKick");

	Params::MordhauPlayerController_OnRequestVoteKick Parms{};

	Parms.TargetPlayer = TargetPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauPlayerController.OnSettingsChanged
// (Final, Native, Public)

void AMordhauPlayerController::OnSettingsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnSettingsChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.OnSkipTutorial
// (Event, Public, BlueprintEvent)

void AMordhauPlayerController::OnSkipTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnSkipTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauPlayerController.OnSpectatorAction
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// uint8                                   Action                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::OnSpectatorAction(uint8 Action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnSpectatorAction");

	Params::MordhauPlayerController_OnSpectatorAction Parms{};

	Parms.Action = Action;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.OnSpectatorCmd
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           Cmd                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Param                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::OnSpectatorCmd(const class FString& Cmd, const class FString& Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "OnSpectatorCmd");

	Params::MordhauPlayerController_OnSpectatorCmd Parms{};

	Parms.Cmd = std::move(Cmd);
	Parms.Param = std::move(Param);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.MordhauPlayerController.ParryThis
// (Exec, Event, Public, BlueprintEvent)

void AMordhauPlayerController::ParryThis()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ParryThis");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauPlayerController.PlayerList
// (Final, Exec, Native, Public)

void AMordhauPlayerController::PlayerList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "PlayerList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.PlayerStats
// (Final, Exec, Native, Public)

void AMordhauPlayerController::PlayerStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "PlayerStats");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.PlayerStatus
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::PlayerStatus(const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "PlayerStatus");

	Params::MordhauPlayerController_PlayerStatus Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.PrepareAndSendCustomizationIfChanged
// (Final, Native, Public, BlueprintCallable)

void AMordhauPlayerController::PrepareAndSendCustomizationIfChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "PrepareAndSendCustomizationIfChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ProcessChatCommand
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Prefix                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Command                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ProcessChatCommand(const class FString& Prefix, const class FString& Command, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ProcessChatCommand");

	Params::MordhauPlayerController_ProcessChatCommand Parms{};

	Parms.Prefix = std::move(Prefix);
	Parms.Command = std::move(Command);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.QuickReportPlayer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EPlayerReportType                       PlayerReportType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Platform                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReporterId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OffenderId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ServerId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::QuickReportPlayer(EPlayerReportType PlayerReportType, const class FString& Platform, const class FString& ReporterId, const class FString& OffenderId, const class FString& ErrorMessage, const class FString& ServerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "QuickReportPlayer");

	Params::MordhauPlayerController_QuickReportPlayer Parms{};

	Parms.PlayerReportType = PlayerReportType;
	Parms.Platform = std::move(Platform);
	Parms.ReporterId = std::move(ReporterId);
	Parms.OffenderId = std::move(OffenderId);
	Parms.ErrorMessage = std::move(ErrorMessage);
	Parms.ServerId = std::move(ServerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ReceiveServerRestrictionInfo
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FServerRestrictionInfo           Info                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ReceiveServerRestrictionInfo(const struct FServerRestrictionInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ReceiveServerRestrictionInfo");

	Params::MordhauPlayerController_ReceiveServerRestrictionInfo Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.RegisterAnglingXInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::RegisterAnglingXInput(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "RegisterAnglingXInput");

	Params::MordhauPlayerController_RegisterAnglingXInput Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.RegisterAnglingYInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::RegisterAnglingYInput(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "RegisterAnglingYInput");

	Params::MordhauPlayerController_RegisterAnglingYInput Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.RegisterConsoleCommand
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMordhauConsoleCommand           ConsoleCommand                                         (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AMordhauPlayerController::RegisterConsoleCommand(const struct FMordhauConsoleCommand& ConsoleCommand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "RegisterConsoleCommand");

	Params::MordhauPlayerController_RegisterConsoleCommand Parms{};

	Parms.ConsoleCommand = std::move(ConsoleCommand);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.RemoveAdmin
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           PlayerNameOrPlayFabID                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::RemoveAdmin(const class FString& PlayerNameOrPlayFabID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "RemoveAdmin");

	Params::MordhauPlayerController_RemoveAdmin Parms{};

	Parms.PlayerNameOrPlayFabID = std::move(PlayerNameOrPlayFabID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.RemoveBots
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::RemoveBots(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "RemoveBots");

	Params::MordhauPlayerController_RemoveBots Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.RemoveBotsTeam
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::RemoveBotsTeam(int32 Amount, int32 Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "RemoveBotsTeam");

	Params::MordhauPlayerController_RemoveBotsTeam Parms{};

	Parms.Amount = Amount;
	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ReportPlayer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           ReporteePlayFabID                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReportType                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ScreenshotFilename                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ReportPlayer(const class FString& ReporteePlayFabID, const class FString& ReportType, const class FString& ScreenshotFilename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ReportPlayer");

	Params::MordhauPlayerController_ReportPlayer Parms{};

	Parms.ReporteePlayFabID = std::move(ReporteePlayFabID);
	Parms.ReportType = std::move(ReportType);
	Parms.ScreenshotFilename = std::move(ScreenshotFilename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ReportServerLag
// (Final, Exec, Native, Public, BlueprintCallable)

void AMordhauPlayerController::ReportServerLag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ReportServerLag");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.RequestQuickReportPlayer
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// EPlayerReportType                       PlayerReportType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Platform                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReporterId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OffenderId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ServerId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::RequestQuickReportPlayer(EPlayerReportType PlayerReportType, const class FString& Platform, const class FString& ReporterId, const class FString& OffenderId, const class FString& ErrorMessage, const class FString& ServerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "RequestQuickReportPlayer");

	Params::MordhauPlayerController_RequestQuickReportPlayer Parms{};

	Parms.PlayerReportType = PlayerReportType;
	Parms.Platform = std::move(Platform);
	Parms.ReporterId = std::move(ReporterId);
	Parms.OffenderId = std::move(OffenderId);
	Parms.ErrorMessage = std::move(ErrorMessage);
	Parms.ServerId = std::move(ServerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.RequestReportPlayer
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class FString                           ReporteePlayFabID                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReportType                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Screenshot                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::RequestReportPlayer(const class FString& ReporteePlayFabID, const class FString& ReportType, const class FString& Screenshot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "RequestReportPlayer");

	Params::MordhauPlayerController_RequestReportPlayer Parms{};

	Parms.ReporteePlayFabID = std::move(ReporteePlayFabID);
	Parms.ReportType = std::move(ReportType);
	Parms.Screenshot = std::move(Screenshot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.RequestRewards
// (Final, Native, Public, BlueprintCallable)

void AMordhauPlayerController::RequestRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "RequestRewards");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.RequestServerRestrictionInfo
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void AMordhauPlayerController::RequestServerRestrictionInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "RequestServerRestrictionInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.RequestSphericalHitboxes
// (Final, Exec, Native, Public)

void AMordhauPlayerController::RequestSphericalHitboxes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "RequestSphericalHitboxes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.SaveCurrentProfilesAsBotProfiles
// (Final, Exec, Native, Public)

void AMordhauPlayerController::SaveCurrentProfilesAsBotProfiles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "SaveCurrentProfilesAsBotProfiles");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Server_Reliable_GiveCata
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AMordhauPlayerController::Server_Reliable_GiveCata()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Server_Reliable_GiveCata");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Server_Reliable_GiveHog
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AMordhauPlayerController::Server_Reliable_GiveHog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Server_Reliable_GiveHog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Server_Reliable_GiveHorse
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AMordhauPlayerController::Server_Reliable_GiveHorse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Server_Reliable_GiveHorse");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Server_Reliable_Horsgor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AMordhauPlayerController::Server_Reliable_Horsgor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Server_Reliable_Horsgor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerAddAdmin
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerAddAdmin(const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerAddAdmin");

	Params::MordhauPlayerController_ServerAddAdmin Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerAddBots
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerAddBots(int32 Amount, int32 Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerAddBots");

	Params::MordhauPlayerController_ServerAddBots Parms{};

	Parms.Amount = Amount;
	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerAdminList
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AMordhauPlayerController::ServerAdminList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerAdminList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerAdminLogin
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           Password                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerAdminLogin(const class FString& Password)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerAdminLogin");

	Params::MordhauPlayerController_ServerAdminLogin Parms{};

	Parms.Password = std::move(Password);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerBanList
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AMordhauPlayerController::ServerBanList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerBanList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerBanPlayer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BanDuration                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           BanReason                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerBanPlayer(const class FString& PlayFabId, const int32 BanDuration, const class FString& BanReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerBanPlayer");

	Params::MordhauPlayerController_ServerBanPlayer Parms{};

	Parms.PlayFabId = std::move(PlayFabId);
	Parms.BanDuration = BanDuration;
	Parms.BanReason = std::move(BanReason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerChangeLevel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           LevelName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerChangeLevel(const class FString& LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerChangeLevel");

	Params::MordhauPlayerController_ServerChangeLevel Parms{};

	Parms.LevelName = std::move(LevelName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerChatMutePlayer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MuteDuration                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerChatMutePlayer(const class FString& PlayFabId, const int32 MuteDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerChatMutePlayer");

	Params::MordhauPlayerController_ServerChatMutePlayer Parms{};

	Parms.PlayFabId = std::move(PlayFabId);
	Parms.MuteDuration = MuteDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerChatUnmutePlayer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerChatUnmutePlayer(const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerChatUnmutePlayer");

	Params::MordhauPlayerController_ServerChatUnmutePlayer Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerGetMapVoteCounts
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void AMordhauPlayerController::ServerGetMapVoteCounts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerGetMapVoteCounts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerGetMapVoteMaps
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void AMordhauPlayerController::ServerGetMapVoteMaps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerGetMapVoteMaps");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerGetServerStats
// (Net, Native, Event, Public, NetServer, NetValidate)

void AMordhauPlayerController::ServerGetServerStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerGetServerStats");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerHasPassedCheck
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                                   Param                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerHasPassedCheck(uint8 Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerHasPassedCheck");

	Params::MordhauPlayerController_ServerHasPassedCheck Parms{};

	Parms.Param = Param;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerKickPlayer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           KickReason                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerKickPlayer(const class FString& PlayFabId, const class FString& KickReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerKickPlayer");

	Params::MordhauPlayerController_ServerKickPlayer Parms{};

	Parms.PlayFabId = std::move(PlayFabId);
	Parms.KickReason = std::move(KickReason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerMuteList
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AMordhauPlayerController::ServerMuteList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerMuteList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerNotifyItemsUnlocked
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AMordhauPlayerController::ServerNotifyItemsUnlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerNotifyItemsUnlocked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerNotifyPlayerDisconnecting
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void AMordhauPlayerController::ServerNotifyPlayerDisconnecting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerNotifyPlayerDisconnecting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerPlayerStats
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AMordhauPlayerController::ServerPlayerStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerPlayerStats");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerPlayerStatus
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerPlayerStatus(const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerPlayerStatus");

	Params::MordhauPlayerController_ServerPlayerStatus Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerRemoveAdmin
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerRemoveAdmin(const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerRemoveAdmin");

	Params::MordhauPlayerController_ServerRemoveAdmin Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerRemoveBots
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerRemoveBots(int32 Amount, int32 Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerRemoveBots");

	Params::MordhauPlayerController_ServerRemoveBots Parms{};

	Parms.Amount = Amount;
	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerReportServerLag
// (Net, NetReliable, Native, Event, Public, NetServer)

void AMordhauPlayerController::ServerReportServerLag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerReportServerLag");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerRequestAuthTraces
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerRequestAuthTraces(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerRequestAuthTraces");

	Params::MordhauPlayerController_ServerRequestAuthTraces Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerRequestSetAppearanceCustomization
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FAppearanceCustomization         NewCharacterAppearance                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerRequestSetAppearanceCustomization(const struct FAppearanceCustomization& NewCharacterAppearance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerRequestSetAppearanceCustomization");

	Params::MordhauPlayerController_ServerRequestSetAppearanceCustomization Parms{};

	Parms.NewCharacterAppearance = std::move(NewCharacterAppearance);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerRequestSetDefaultCharacterEquipment
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<struct FEquipmentCustomization>  Equip                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerRequestSetDefaultCharacterEquipment(const TArray<struct FEquipmentCustomization>& Equip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerRequestSetDefaultCharacterEquipment");

	Params::MordhauPlayerController_ServerRequestSetDefaultCharacterEquipment Parms{};

	Parms.Equip = std::move(Equip);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerRequestSetDefaultCharacterTiers
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<struct FCharacterGearCustomization>Tiers                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerRequestSetDefaultCharacterTiers(const TArray<struct FCharacterGearCustomization>& Tiers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerRequestSetDefaultCharacterTiers");

	Params::MordhauPlayerController_ServerRequestSetDefaultCharacterTiers Parms{};

	Parms.Tiers = std::move(Tiers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerRequestSetDefaultProfile
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                                   NewDefaultProfile                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerRequestSetDefaultProfile(int32 NewDefaultProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerRequestSetDefaultProfile");

	Params::MordhauPlayerController_ServerRequestSetDefaultProfile Parms{};

	Parms.NewDefaultProfile = NewDefaultProfile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerRequestSetFaceCustomization
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FFaceCustomization               NewCharacterFace                                       (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerRequestSetFaceCustomization(const struct FFaceCustomization& NewCharacterFace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerRequestSetFaceCustomization");

	Params::MordhauPlayerController_ServerRequestSetFaceCustomization Parms{};

	Parms.NewCharacterFace = std::move(NewCharacterFace);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerRequestSetGearCustomization
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FCharacterGearCustomization      NewCharacterGear                                       (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerRequestSetGearCustomization(const struct FCharacterGearCustomization& NewCharacterGear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerRequestSetGearCustomization");

	Params::MordhauPlayerController_ServerRequestSetGearCustomization Parms{};

	Parms.NewCharacterGear = std::move(NewCharacterGear);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerRequestSetSkillsCustomization
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FSkillsCustomization             NewCharacterSkills                                     (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerRequestSetSkillsCustomization(const struct FSkillsCustomization& NewCharacterSkills)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerRequestSetSkillsCustomization");

	Params::MordhauPlayerController_ServerRequestSetSkillsCustomization Parms{};

	Parms.NewCharacterSkills = std::move(NewCharacterSkills);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerRequestSetTeam
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int32                                   NewTeam                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerRequestSetTeam(int32 NewTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerRequestSetTeam");

	Params::MordhauPlayerController_ServerRequestSetTeam Parms{};

	Parms.NewTeam = NewTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerRequestSphericalHitboxes
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AMordhauPlayerController::ServerRequestSphericalHitboxes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerRequestSphericalHitboxes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerSetBadge
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                                   NewBadge                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerSetBadge(uint8 NewBadge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerSetBadge");

	Params::MordhauPlayerController_ServerSetBadge Parms{};

	Parms.NewBadge = NewBadge;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerSetFriendlyNetSkipOffset
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                                   NewFriendlyNetSkipOffset                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerSetFriendlyNetSkipOffset(int32 NewFriendlyNetSkipOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerSetFriendlyNetSkipOffset");

	Params::MordhauPlayerController_ServerSetFriendlyNetSkipOffset Parms{};

	Parms.NewFriendlyNetSkipOffset = NewFriendlyNetSkipOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerSetLevelDisplayType
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                                   NewLevelDisplayType                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerSetLevelDisplayType(uint8 NewLevelDisplayType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerSetLevelDisplayType");

	Params::MordhauPlayerController_ServerSetLevelDisplayType Parms{};

	Parms.NewLevelDisplayType = NewLevelDisplayType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerSetMatchmakingMatchID
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           InMatchmakingMatchID                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerSetMatchmakingMatchID(const class FString& InMatchmakingMatchID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerSetMatchmakingMatchID");

	Params::MordhauPlayerController_ServerSetMatchmakingMatchID Parms{};

	Parms.InMatchmakingMatchID = std::move(InMatchmakingMatchID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerSetMaxNetSkip
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                                   NewMaxNetSkip                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerSetMaxNetSkip(int32 NewMaxNetSkip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerSetMaxNetSkip");

	Params::MordhauPlayerController_ServerSetMaxNetSkip Parms{};

	Parms.NewMaxNetSkip = NewMaxNetSkip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerSetPartyInfo
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           InPartyID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPartySize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerSetPartyInfo(const class FString& InPartyID, int32 InPartySize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerSetPartyInfo");

	Params::MordhauPlayerController_ServerSetPartyInfo Parms{};

	Parms.InPartyID = std::move(InPartyID);
	Parms.InPartySize = InPartySize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerSetSessionTicket
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           InSessionTicket                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerSetSessionTicket(const class FString& InSessionTicket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerSetSessionTicket");

	Params::MordhauPlayerController_ServerSetSessionTicket Parms{};

	Parms.InSessionTicket = std::move(InSessionTicket);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerSetSpawnToken
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                                   NewToken                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerSetSpawnToken(int32 NewToken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerSetSpawnToken");

	Params::MordhauPlayerController_ServerSetSpawnToken Parms{};

	Parms.NewToken = NewToken;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerSetXPAndMMR
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                                   XP                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DuelMMR                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TeamfightMMR                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CasualMMR                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerSetXPAndMMR(int32 XP, int32 DuelMMR, int32 TeamfightMMR, int32 CasualMMR)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerSetXPAndMMR");

	Params::MordhauPlayerController_ServerSetXPAndMMR Parms{};

	Parms.XP = XP;
	Parms.DuelMMR = DuelMMR;
	Parms.TeamfightMMR = TeamfightMMR;
	Parms.CasualMMR = CasualMMR;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerSlomo
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerSlomo(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerSlomo");

	Params::MordhauPlayerController_ServerSlomo Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerStartServerStatsFile
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AMordhauPlayerController::ServerStartServerStatsFile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerStartServerStatsFile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerStopServerStatsFile
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AMordhauPlayerController::ServerStopServerStatsFile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerStopServerStatsFile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerToggleDamage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AMordhauPlayerController::ServerToggleDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerToggleDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerToggleNetProfile
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AMordhauPlayerController::ServerToggleNetProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerToggleNetProfile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerToggleStamina
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AMordhauPlayerController::ServerToggleStamina()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerToggleStamina");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerUnbanPlayer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerUnbanPlayer(const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerUnbanPlayer");

	Params::MordhauPlayerController_ServerUnbanPlayer Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ServerVoteLevel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           LevelName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ServerVoteLevel(const class FString& LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ServerVoteLevel");

	Params::MordhauPlayerController_ServerVoteLevel Parms{};

	Parms.LevelName = std::move(LevelName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.SetChoiceMenuConsumesInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::SetChoiceMenuConsumesInput(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "SetChoiceMenuConsumesInput");

	Params::MordhauPlayerController_SetChoiceMenuConsumesInput Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.SetFriendlyNetSkipOffset
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NewFriendlyNetSkipOffset                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::SetFriendlyNetSkipOffset(int32 NewFriendlyNetSkipOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "SetFriendlyNetSkipOffset");

	Params::MordhauPlayerController_SetFriendlyNetSkipOffset Parms{};

	Parms.NewFriendlyNetSkipOffset = NewFriendlyNetSkipOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.SetMaxNetSkip
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NewMaxNetSkip                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::SetMaxNetSkip(int32 NewMaxNetSkip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "SetMaxNetSkip");

	Params::MordhauPlayerController_SetMaxNetSkip Parms{};

	Parms.NewMaxNetSkip = NewMaxNetSkip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.SetServerSupportsLagReports
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                                    bSupported                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::SetServerSupportsLagReports(bool bSupported)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "SetServerSupportsLagReports");

	Params::MordhauPlayerController_SetServerSupportsLagReports Parms{};

	Parms.bSupported = bSupported;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.SetWeaponModesArray
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<TSubclassOf<class AMordhauEquipment>>InWeapons                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

void AMordhauPlayerController::SetWeaponModesArray(const TArray<TSubclassOf<class AMordhauEquipment>>& InWeapons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "SetWeaponModesArray");

	Params::MordhauPlayerController_SetWeaponModesArray Parms{};

	Parms.InWeapons = std::move(InWeapons);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ShowAuthTraces
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::ShowAuthTraces(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ShowAuthTraces");

	Params::MordhauPlayerController_ShowAuthTraces Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ShowEquipment
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AMordhauPlayerController::ShowEquipment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ShowEquipment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauPlayerController.ShowTips
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AMordhauPlayerController::ShowTips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ShowTips");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauPlayerController.SkipTutorial
// (Final, Exec, Native, Public)

void AMordhauPlayerController::SkipTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "SkipTutorial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Slomo
// (Final, Exec, Native, Public)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::Slomo(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Slomo");

	Params::MordhauPlayerController_Slomo Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.SpectatorCmd
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           SpecCmd                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::SpectatorCmd(const class FString& SpecCmd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "SpectatorCmd");

	Params::MordhauPlayerController_SpectatorCmd Parms{};

	Parms.SpecCmd = std::move(SpecCmd);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.StartServerStatsFile
// (Final, Exec, Native, Public)

void AMordhauPlayerController::StartServerStatsFile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "StartServerStatsFile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.StopServerStatsFile
// (Final, Exec, Native, Public)

void AMordhauPlayerController::StopServerStatsFile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "StopServerStatsFile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.TakeReportScreenshot
// (Final, Exec, Native, Public)

void AMordhauPlayerController::TakeReportScreenshot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "TakeReportScreenshot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ToggleDamage
// (Final, Exec, Native, Public)

void AMordhauPlayerController::ToggleDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ToggleDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ToggleServerNetProfile
// (Final, Exec, Native, Public)

void AMordhauPlayerController::ToggleServerNetProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ToggleServerNetProfile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.ToggleStamina
// (Final, Exec, Native, Public)

void AMordhauPlayerController::ToggleStamina()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "ToggleStamina");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Turn
// (Final, Native, Public)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::Turn(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Turn");

	Params::MordhauPlayerController_Turn Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Unban
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::Unban(const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Unban");

	Params::MordhauPlayerController_Unban Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.UnmountPak
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           PakPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::UnmountPak(const class FString& PakPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "UnmountPak");

	Params::MordhauPlayerController_UnmountPak Parms{};

	Parms.PakPath = std::move(PakPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.Unmute
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           PlayerNameOrPlayFabID                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::Unmute(const class FString& PlayerNameOrPlayFabID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "Unmute");

	Params::MordhauPlayerController_Unmute Parms{};

	Parms.PlayerNameOrPlayFabID = std::move(PlayerNameOrPlayFabID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.UnregisterConsoleCommand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           CommandName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::UnregisterConsoleCommand(const class FString& CommandName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "UnregisterConsoleCommand");

	Params::MordhauPlayerController_UnregisterConsoleCommand Parms{};

	Parms.CommandName = std::move(CommandName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.UpdateWeaponMode
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TSubclassOf<class AMordhauEquipment>    WeaponToUpdate                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAltMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::UpdateWeaponMode(TSubclassOf<class AMordhauEquipment> WeaponToUpdate, bool bAltMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "UpdateWeaponMode");

	Params::MordhauPlayerController_UpdateWeaponMode Parms{};

	Parms.WeaponToUpdate = WeaponToUpdate;
	Parms.bAltMode = bAltMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.UploadImage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<uint8>                           ImageData                                              (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& response, bool bSuccess)>ImageUploadCompletedDelegate                           (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void AMordhauPlayerController::UploadImage(const TArray<uint8>& ImageData, const class FString& URL, TDelegate<void(const class FString& response, bool bSuccess)> ImageUploadCompletedDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "UploadImage");

	Params::MordhauPlayerController_UploadImage Parms{};

	Parms.ImageData = std::move(ImageData);
	Parms.URL = std::move(URL);
	Parms.ImageUploadCompletedDelegate = ImageUploadCompletedDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.VoteKick
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           PlayerNameOrPlayFabID                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::VoteKick(const class FString& PlayerNameOrPlayFabID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "VoteKick");

	Params::MordhauPlayerController_VoteKick Parms{};

	Parms.PlayerNameOrPlayFabID = std::move(PlayerNameOrPlayFabID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.VoteLevel
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           LevelName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::VoteLevel(const class FString& LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "VoteLevel");

	Params::MordhauPlayerController_VoteLevel Parms{};

	Parms.LevelName = std::move(LevelName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.VoteMap
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           MapName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerController::VoteMap(const class FString& MapName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "VoteMap");

	Params::MordhauPlayerController_VoteMap Parms{};

	Parms.MapName = std::move(MapName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerController.GetControlledMordhauCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bAlsoSearchVehicle                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauCharacter*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauCharacter* AMordhauPlayerController::GetControlledMordhauCharacter(bool bAlsoSearchVehicle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "GetControlledMordhauCharacter");

	Params::MordhauPlayerController_GetControlledMordhauCharacter Parms{};

	Parms.bAlsoSearchVehicle = bAlsoSearchVehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.GetPlayFabPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FPlayFabPlayer             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FPlayFabPlayer AMordhauPlayerController::GetPlayFabPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "GetPlayFabPlayer");

	Params::MordhauPlayerController_GetPlayFabPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.IsAdmin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauPlayerController::IsAdmin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "IsAdmin");

	Params::MordhauPlayerController_IsAdmin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerController.SharesInstanceWith
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           OtherActor                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauPlayerController::SharesInstanceWith(const class AActor* OtherActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerController", "SharesInstanceWith");

	Params::MordhauPlayerController_SharesInstanceWith Parms{};

	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerStart.GetSpawnPreferenceFor
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AMordhauPlayerStart::GetSpawnPreferenceFor(class AController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerStart", "GetSpawnPreferenceFor");

	Params::MordhauPlayerStart_GetSpawnPreferenceFor Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerStart.IsAllowedSpawnFor
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauPlayerStart::IsAllowedSpawnFor(class AController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerStart", "IsAllowedSpawnFor");

	Params::MordhauPlayerStart_IsAllowedSpawnFor Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerStart.OnSpawnChosen
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerStart::OnSpawnChosen(class AController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerStart", "OnSpawnChosen");

	Params::MordhauPlayerStart_OnSpawnChosen Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerState.AddAssists
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerState::AddAssists(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerState", "AddAssists");

	Params::MordhauPlayerState_AddAssists Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerState.AddDeaths
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerState::AddDeaths(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerState", "AddDeaths");

	Params::MordhauPlayerState_AddDeaths Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerState.AddKills
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerState::AddKills(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerState", "AddKills");

	Params::MordhauPlayerState_AddKills Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerState.AddScore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerState::AddScore(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerState", "AddScore");

	Params::MordhauPlayerState_AddScore Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerState.BanPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   BanDuration                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           BanReason                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsOfficialServerBan                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBanType                                BanType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerState::BanPlayer(const int32 BanDuration, const class FString& BanReason, const bool bIsOfficialServerBan, EBanType BanType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerState", "BanPlayer");

	Params::MordhauPlayerState_BanPlayer Parms{};

	Parms.BanDuration = BanDuration;
	Parms.BanReason = std::move(BanReason);
	Parms.bIsOfficialServerBan = bIsOfficialServerBan;
	Parms.BanType = BanType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerState.GetLastPossessedMordhauCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauCharacter*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauCharacter* AMordhauPlayerState::GetLastPossessedMordhauCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerState", "GetLastPossessedMordhauCharacter");

	Params::MordhauPlayerState_GetLastPossessedMordhauCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerState.GetPlayFabId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AMordhauPlayerState::GetPlayFabId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerState", "GetPlayFabId");

	Params::MordhauPlayerState_GetPlayFabId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerState.GetPlayFabPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FPlayFabPlayer             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FPlayFabPlayer AMordhauPlayerState::GetPlayFabPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerState", "GetPlayFabPlayer");

	Params::MordhauPlayerState_GetPlayFabPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauPlayerState.OnRep_ReplicatedAssists
// (Final, Native, Public)

void AMordhauPlayerState::OnRep_ReplicatedAssists()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerState", "OnRep_ReplicatedAssists");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerState.OnRep_ReplicatedDeathsAndFlags
// (Final, Native, Public)

void AMordhauPlayerState::OnRep_ReplicatedDeathsAndFlags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerState", "OnRep_ReplicatedDeathsAndFlags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerState.OnRep_ReplicatedKills
// (Final, Native, Public)

void AMordhauPlayerState::OnRep_ReplicatedKills()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerState", "OnRep_ReplicatedKills");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerState.OnRep_ReplicatedTeam
// (Final, Native, Public)

void AMordhauPlayerState::OnRep_ReplicatedTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerState", "OnRep_ReplicatedTeam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerState.SetPlayerName
// (Native, Public, BlueprintCallable)
// Parameters:
// class FString                           S                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerState::SetPlayerName(const class FString& S)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerState", "SetPlayerName");

	Params::MordhauPlayerState_SetPlayerName Parms{};

	Parms.S = std::move(S);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerState.SetTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewTeam                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauPlayerState::SetTeam(int32 NewTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerState", "SetTeam");

	Params::MordhauPlayerState_SetTeam Parms{};

	Parms.NewTeam = NewTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauPlayerState.GetRank
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMordhauPlayerState::GetRank() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauPlayerState", "GetRank");

	Params::MordhauPlayerState_GetRank Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauProjectile.GetProjectileMovementForProjectileClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class AMordhauProjectile>   ProjectileClass                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAdvProjectileMovementComponent*  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAdvProjectileMovementComponent* AMordhauProjectile::GetProjectileMovementForProjectileClass(TSubclassOf<class AMordhauProjectile> ProjectileClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauProjectile", "GetProjectileMovementForProjectileClass");

	Params::MordhauProjectile_GetProjectileMovementForProjectileClass Parms{};

	Parms.ProjectileClass = ProjectileClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauProjectile.AttachProjectile
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauProjectile::AttachProjectile(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "AttachProjectile");

	Params::MordhauProjectile_AttachProjectile Parms{};

	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauProjectile.BounceComponent
// (Final, Native, Public, HasDefaults)
// Parameters:
// class USkeletalMeshComponent*           ComponentToBounce                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NewVelocity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NewAngularVelocity                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauProjectile::BounceComponent(class USkeletalMeshComponent* ComponentToBounce, const struct FVector& NewVelocity, const struct FVector& NewAngularVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "BounceComponent");

	Params::MordhauProjectile_BounceComponent Parms{};

	Parms.ComponentToBounce = ComponentToBounce;
	Parms.NewVelocity = std::move(NewVelocity);
	Parms.NewAngularVelocity = std::move(NewAngularVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauProjectile.CarryOverTrail
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauProjectile*               NewProjectile                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauProjectile::CarryOverTrail(class AMordhauProjectile* NewProjectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "CarryOverTrail");

	Params::MordhauProjectile_CarryOverTrail Parms{};

	Parms.NewProjectile = NewProjectile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauProjectile.Fire
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AMordhauProjectile::Fire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "Fire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauProjectile.GetBlendedActorTransform
// (Native, Public, HasDefaults)
// Parameters:
// float                                   T                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform AMordhauProjectile::GetBlendedActorTransform(float T)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "GetBlendedActorTransform");

	Params::MordhauProjectile_GetBlendedActorTransform Parms{};

	Parms.T = T;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauProjectile.GetBlendedMeshTransform
// (Native, Public, HasDefaults)
// Parameters:
// float                                   T                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform AMordhauProjectile::GetBlendedMeshTransform(float T)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "GetBlendedMeshTransform");

	Params::MordhauProjectile_GetBlendedMeshTransform Parms{};

	Parms.T = T;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauProjectile.GetBlendedTransform
// (Native, Public, HasDefaults)
// Parameters:
// struct FTransform                       Ours                                                   (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FTransform                       Associated                                             (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   T                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform AMordhauProjectile::GetBlendedTransform(const struct FTransform& Ours, const struct FTransform& Associated, float T)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "GetBlendedTransform");

	Params::MordhauProjectile_GetBlendedTransform Parms{};

	Parms.Ours = std::move(Ours);
	Parms.Associated = std::move(Associated);
	Parms.T = T;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauProjectile.GetCurrentTrailParticles
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UParticleSystemComponent*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UParticleSystemComponent* AMordhauProjectile::GetCurrentTrailParticles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "GetCurrentTrailParticles");

	Params::MordhauProjectile_GetCurrentTrailParticles Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauProjectile.GetPercentageOfMaxVelocityClamped
// (Final, Native, Public)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AMordhauProjectile::GetPercentageOfMaxVelocityClamped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "GetPercentageOfMaxVelocityClamped");

	Params::MordhauProjectile_GetPercentageOfMaxVelocityClamped Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauProjectile.GetProjectileCreator
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AMordhauProjectile::GetProjectileCreator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "GetProjectileCreator");

	Params::MordhauProjectile_GetProjectileCreator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauProjectile.GetProjectileOwningController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AController*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AController* AMordhauProjectile::GetProjectileOwningController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "GetProjectileOwningController");

	Params::MordhauProjectile_GetProjectileOwningController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauProjectile.InitializeProjectile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AController*                      InOwningController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsLocallyPredicted                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InCreator                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauProjectile::InitializeProjectile(class AController* InOwningController, bool bInIsLocallyPredicted, class AActor* InCreator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "InitializeProjectile");

	Params::MordhauProjectile_InitializeProjectile Parms{};

	Parms.InOwningController = InOwningController;
	Parms.bInIsLocallyPredicted = bInIsLocallyPredicted;
	Parms.InCreator = InCreator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauProjectile.OnProjectileDamagedDamagable
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class UDamageableComponent*             DamagableComp                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWillKill                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauProjectile::OnProjectileDamagedDamagable(class UDamageableComponent* DamagableComp, bool bWillKill, const struct FVector& WorldLocation, class FName bone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "OnProjectileDamagedDamagable");

	Params::MordhauProjectile_OnProjectileDamagedDamagable Parms{};

	Parms.DamagableComp = DamagableComp;
	Parms.bWillKill = bWillKill;
	Parms.WorldLocation = std::move(WorldLocation);
	Parms.bone = bone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauProjectile.OnProjectileFired
// (Native, Event, Public, BlueprintEvent)

void AMordhauProjectile::OnProjectileFired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "OnProjectileFired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauProjectile.OnProjectileHit
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitNormal                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BounceForce                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Surface                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHasHitWorld                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHasStopped                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauProjectile::OnProjectileHit(const struct FVector& HitLocation, const struct FVector& HitNormal, float BounceForce, uint8 Surface, bool bHasHitWorld, bool bHasStopped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "OnProjectileHit");

	Params::MordhauProjectile_OnProjectileHit Parms{};

	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.BounceForce = BounceForce;
	Parms.Surface = Surface;
	Parms.bHasHitWorld = bHasHitWorld;
	Parms.bHasStopped = bHasStopped;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauProjectile.OnProjectileHitCosmetic
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AMordhauProjectile::OnProjectileHitCosmetic(class AActor* OtherActor, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "OnProjectileHitCosmetic");

	Params::MordhauProjectile_OnProjectileHitCosmetic Parms{};

	Parms.OtherActor = OtherActor;
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauProjectile.OnRep_ReplicatedProjectileInfo
// (Final, Native, Public)

void AMordhauProjectile::OnRep_ReplicatedProjectileInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "OnRep_ReplicatedProjectileInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauProjectile.ProcessProjectileHit
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bIsBlocking                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AMordhauProjectile::ProcessProjectileHit(bool bIsBlocking, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "ProcessProjectileHit");

	Params::MordhauProjectile_ProcessProjectileHit Parms{};

	Parms.bIsBlocking = bIsBlocking;
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauProjectile.RestockCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauProjectile::RestockCharacter(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "RestockCharacter");

	Params::MordhauProjectile_RestockCharacter Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauProjectile.SetCurrentTrailParticles
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UParticleSystemComponent*         ParticleSystemComponent                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauProjectile::SetCurrentTrailParticles(class UParticleSystemComponent* ParticleSystemComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "SetCurrentTrailParticles");

	Params::MordhauProjectile_SetCurrentTrailParticles Parms{};

	Parms.ParticleSystemComponent = ParticleSystemComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauProjectile.SpawnDecal
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FDecalInfo                       DecalInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AMordhauProjectile::SpawnDecal(const struct FVector& Location, const struct FRotator& Rotation, const struct FDecalInfo& DecalInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "SpawnDecal");

	Params::MordhauProjectile_SpawnDecal Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.DecalInfo = std::move(DecalInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauProjectile.SpawnParticles
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UParticleSystem*                  System                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauProjectile::SpawnParticles(const struct FVector& Location, const struct FRotator& Rotation, class UParticleSystem* System)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "SpawnParticles");

	Params::MordhauProjectile_SpawnParticles Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.System = System;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauProjectile.StartTrail
// (Native, Event, Public, BlueprintEvent)

void AMordhauProjectile::StartTrail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "StartTrail");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauProjectile.StopTrail
// (Native, Event, Public, BlueprintEvent)

void AMordhauProjectile::StopTrail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "StopTrail");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauProjectile.SweepProjectile
// (Final, Native, Public)

void AMordhauProjectile::SweepProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "SweepProjectile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauProjectile.TerminateProjectile
// (Native, Public)

void AMordhauProjectile::TerminateProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "TerminateProjectile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauProjectile.UpdateProjectileState
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMordhauProjectile::UpdateProjectileState(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "UpdateProjectileState");

	Params::MordhauProjectile_UpdateProjectileState Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauProjectile.WillPassThrough
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Surface                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauProjectile::WillPassThrough(uint8 Surface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "WillPassThrough");

	Params::MordhauProjectile_WillPassThrough Parms{};

	Parms.Surface = Surface;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauProjectile.WillSticky
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Surface                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauProjectile::WillSticky(uint8 Surface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "WillSticky");

	Params::MordhauProjectile_WillSticky Parms{};

	Parms.Surface = Surface;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauProjectile.GetWorldMeshTransformWithOffsets
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform AMordhauProjectile::GetWorldMeshTransformWithOffsets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "GetWorldMeshTransformWithOffsets");

	Params::MordhauProjectile_GetWorldMeshTransformWithOffsets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauProjectile.UsesProjectileBlending
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauProjectile::UsesProjectileBlending() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauProjectile", "UsesProjectileBlending");

	Params::MordhauProjectile_UsesProjectileBlending Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.AllowsJoin
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFindMordhauServerSessions::AllowsJoin(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "AllowsJoin");

	Params::FindMordhauServerSessions_AllowsJoin Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.FindMordhauServerSessions
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EServerList                             ServerList_0                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxResults_0                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFindServerSessionsFilter        Filter_0                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UFindMordhauServerSessions*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFindMordhauServerSessions* UFindMordhauServerSessions::FindMordhauServerSessions(class UObject* WorldContextObject, EServerList ServerList_0, int32 MaxResults_0, const struct FFindServerSessionsFilter& Filter_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "FindMordhauServerSessions");

	Params::FindMordhauServerSessions_FindMordhauServerSessions Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ServerList_0 = ServerList_0;
	Parms.MaxResults_0 = MaxResults_0;
	Parms.Filter_0 = std::move(Filter_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.GetCurrentPlayers
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFindMordhauServerSessions::GetCurrentPlayers(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "GetCurrentPlayers");

	Params::FindMordhauServerSessions_GetCurrentPlayers Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.GetGameMode
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFindMordhauServerSessions::GetGameMode(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "GetGameMode");

	Params::FindMordhauServerSessions_GetGameMode Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.GetMapName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFindMordhauServerSessions::GetMapName(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "GetMapName");

	Params::FindMordhauServerSessions_GetMapName Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.GetMaxPlayers
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFindMordhauServerSessions::GetMaxPlayers(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "GetMaxPlayers");

	Params::FindMordhauServerSessions_GetMaxPlayers Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.GetMods
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UFindMordhauServerSessions::GetMods(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "GetMods");

	Params::FindMordhauServerSessions_GetMods Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.GetPing
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFindMordhauServerSessions::GetPing(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "GetPing");

	Params::FindMordhauServerSessions_GetPing Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.GetPlayers
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UFindMordhauServerSessions::GetPlayers(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "GetPlayers");

	Params::FindMordhauServerSessions_GetPlayers Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.GetRegion
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EServerRegion                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EServerRegion UFindMordhauServerSessions::GetRegion(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "GetRegion");

	Params::FindMordhauServerSessions_GetRegion Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.GetServerAddress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFindMordhauServerSessions::GetServerAddress(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "GetServerAddress");

	Params::FindMordhauServerSessions_GetServerAddress Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.GetServerID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFindMordhauServerSessions::GetServerID(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "GetServerID");

	Params::FindMordhauServerSessions_GetServerID Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.GetServerList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EServerList                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EServerList UFindMordhauServerSessions::GetServerList(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "GetServerList");

	Params::FindMordhauServerSessions_GetServerList Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.GetServerName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFindMordhauServerSessions::GetServerName(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "GetServerName");

	Params::FindMordhauServerSessions_GetServerName Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.GetVisibility
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EServerVisibility                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EServerVisibility UFindMordhauServerSessions::GetVisibility(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "GetVisibility");

	Params::FindMordhauServerSessions_GetVisibility Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.IsConsoleServer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFindMordhauServerSessions::IsConsoleServer(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "IsConsoleServer");

	Params::FindMordhauServerSessions_IsConsoleServer Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.IsFavoriteServer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFindMordhauServerSessions::IsFavoriteServer(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "IsFavoriteServer");

	Params::FindMordhauServerSessions_IsFavoriteServer Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.IsModded
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFindMordhauServerSessions::IsModded(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "IsModded");

	Params::FindMordhauServerSessions_IsModded Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.IsNoviceServer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFindMordhauServerSessions::IsNoviceServer(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "IsNoviceServer");

	Params::FindMordhauServerSessions_IsNoviceServer Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.IsOfficial
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFindMordhauServerSessions::IsOfficial(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "IsOfficial");

	Params::FindMordhauServerSessions_IsOfficial Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.IsPasswordProtected
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFindMordhauServerSessions::IsPasswordProtected(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "IsPasswordProtected");

	Params::FindMordhauServerSessions_IsPasswordProtected Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessions.IsRecentServer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FServerSearchResult              Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFindMordhauServerSessions::IsRecentServer(const struct FServerSearchResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessions", "IsRecentServer");

	Params::FindMordhauServerSessions_IsRecentServer Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessionByAddress.FindMordhauServerSessionByAddress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerAddress                   Address_0                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UFindMordhauServerSessionByAddress*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFindMordhauServerSessionByAddress* UFindMordhauServerSessionByAddress::FindMordhauServerSessionByAddress(class UObject* WorldContextObject, const struct FServerAddress& Address_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessionByAddress", "FindMordhauServerSessionByAddress");

	Params::FindMordhauServerSessionByAddress_FindMordhauServerSessionByAddress Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Address_0 = std::move(Address_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.FindMordhauServerSessionByServerDetails.FindMordhauServerSessionByServerDetails
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabServerDetails            InServerDetails                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UFindMordhauServerSessionByServerDetails*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFindMordhauServerSessionByServerDetails* UFindMordhauServerSessionByServerDetails::FindMordhauServerSessionByServerDetails(class UObject* WorldContextObject, const struct FPlayFabServerDetails& InServerDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindMordhauServerSessionByServerDetails", "FindMordhauServerSessionByServerDetails");

	Params::FindMordhauServerSessionByServerDetails_FindMordhauServerSessionByServerDetails Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InServerDetails = std::move(InServerDetails);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.JoinMordhauServerSession.JoinMordhauServerSession
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FServerSearchResult              SearchResult                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UJoinMordhauServerSession*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UJoinMordhauServerSession* UJoinMordhauServerSession::JoinMordhauServerSession(const struct FServerSearchResult& SearchResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("JoinMordhauServerSession", "JoinMordhauServerSession");

	Params::JoinMordhauServerSession_JoinMordhauServerSession Parms{};

	Parms.SearchResult = std::move(SearchResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.CancelFindMordhauSessions.CancelFindMordhauSessions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCancelFindMordhauSessions::CancelFindMordhauSessions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CancelFindMordhauSessions", "CancelFindMordhauSessions");

	Params::CancelFindMordhauSessions_CancelFindMordhauSessions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.DestroyMordhauServerSession.DestroyMordhauServerSession
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDestroyMordhauServerSession*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDestroyMordhauServerSession* UDestroyMordhauServerSession::DestroyMordhauServerSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DestroyMordhauServerSession", "DestroyMordhauServerSession");

	Params::DestroyMordhauServerSession_DestroyMordhauServerSession Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.PingMordhauServerSession.PingMordhauServerSession
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerSearchResult              SearchResult_0                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UPingMordhauServerSession*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPingMordhauServerSession* UPingMordhauServerSession::PingMordhauServerSession(class UObject* WorldContextObject, const struct FServerSearchResult& SearchResult_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PingMordhauServerSession", "PingMordhauServerSession");

	Params::PingMordhauServerSession_PingMordhauServerSession Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SearchResult_0 = std::move(SearchResult_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.ReserveMordhauServerSessionSlots.ReserveMordhauServerSessionSlots
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerSearchResult              SearchResult_0                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FPlayFabPlayerEntity>     PartyMembers_0                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UReserveMordhauServerSessionSlots*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UReserveMordhauServerSessionSlots* UReserveMordhauServerSessionSlots::ReserveMordhauServerSessionSlots(class UObject* WorldContextObject, const struct FServerSearchResult& SearchResult_0, const TArray<struct FPlayFabPlayerEntity>& PartyMembers_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ReserveMordhauServerSessionSlots", "ReserveMordhauServerSessionSlots");

	Params::ReserveMordhauServerSessionSlots_ReserveMordhauServerSessionSlots Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SearchResult_0 = std::move(SearchResult_0);
	Parms.PartyMembers_0 = std::move(PartyMembers_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.GetMordhauServerSessionMods.GetMordhauServerSessionMods
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FServerSearchResult              SearchResult_0                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UGetMordhauServerSessionMods*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGetMordhauServerSessionMods* UGetMordhauServerSessionMods::GetMordhauServerSessionMods(const struct FServerSearchResult& SearchResult_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GetMordhauServerSessionMods", "GetMordhauServerSessionMods");

	Params::GetMordhauServerSessionMods_GetMordhauServerSessionMods Parms{};

	Parms.SearchResult_0 = std::move(SearchResult_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.ApplyProfileTo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterProfile                Profile                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AMordhauCharacter*                Char                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddEquipment                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauSingleton::ApplyProfileTo(const struct FCharacterProfile& Profile, class AMordhauCharacter* Char, uint8 Team, bool bAddEquipment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "ApplyProfileTo");

	Params::MordhauSingleton_ApplyProfileTo Parms{};

	Parms.Profile = std::move(Profile);
	Parms.Char = Char;
	Parms.Team = Team;
	Parms.bAddEquipment = bAddEquipment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauSingleton.GetEmblemColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// uint8                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UMordhauSingleton::GetEmblemColor(uint8 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetEmblemColor");

	Params::MordhauSingleton_GetEmblemColor Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetEmblemColorObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMordhauColor*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauColor* UMordhauSingleton::GetEmblemColorObject(uint8 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetEmblemColorObject");

	Params::MordhauSingleton_GetEmblemColorObject Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetEquipment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AMordhauEquipment>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class AMordhauEquipment> UMordhauSingleton::GetEquipment(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetEquipment");

	Params::MordhauSingleton_GetEquipment Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetEquipmentArray
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<TSoftClassPtr<class UClass>>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

const TArray<TSoftClassPtr<class UClass>> UMordhauSingleton::GetEquipmentArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetEquipmentArray");

	Params::MordhauSingleton_GetEquipmentArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetEquipmentID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AMordhauEquipment>    EquipmentType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UMordhauSingleton::GetEquipmentID(TSubclassOf<class AMordhauEquipment> EquipmentType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetEquipmentID");

	Params::MordhauSingleton_GetEquipmentID Parms{};

	Parms.EquipmentType = EquipmentType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetEyeColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// uint8                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UMordhauSingleton::GetEyeColor(uint8 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetEyeColor");

	Params::MordhauSingleton_GetEyeColor Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetEyeColorObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMordhauColor*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauColor* UMordhauSingleton::GetEyeColorObject(uint8 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetEyeColorObject");

	Params::MordhauSingleton_GetEyeColorObject Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetFemaleVoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UCharacterVoice>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UCharacterVoice> UMordhauSingleton::GetFemaleVoice(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetFemaleVoice");

	Params::MordhauSingleton_GetFemaleVoice Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetFemaleVoices
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<TSoftClassPtr<class UClass>>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

const TArray<TSoftClassPtr<class UClass>> UMordhauSingleton::GetFemaleVoices()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetFemaleVoices");

	Params::MordhauSingleton_GetFemaleVoices Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetHairColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// uint8                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UMordhauSingleton::GetHairColor(uint8 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetHairColor");

	Params::MordhauSingleton_GetHairColor Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetHairColorObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMordhauColor*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauColor* UMordhauSingleton::GetHairColorObject(uint8 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetHairColorObject");

	Params::MordhauSingleton_GetHairColorObject Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetHeadWearable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UHeadWearable>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UHeadWearable> UMordhauSingleton::GetHeadWearable(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetHeadWearable");

	Params::MordhauSingleton_GetHeadWearable Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetHeadWearables
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<TSoftClassPtr<class UClass>>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

const TArray<TSoftClassPtr<class UClass>> UMordhauSingleton::GetHeadWearables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetHeadWearables");

	Params::MordhauSingleton_GetHeadWearables Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetLegsWearable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ULegsWearable>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class ULegsWearable> UMordhauSingleton::GetLegsWearable(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetLegsWearable");

	Params::MordhauSingleton_GetLegsWearable Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetLegsWearables
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<TSoftClassPtr<class UClass>>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

const TArray<TSoftClassPtr<class UClass>> UMordhauSingleton::GetLegsWearables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetLegsWearables");

	Params::MordhauSingleton_GetLegsWearables Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetMaleVoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UCharacterVoice>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UCharacterVoice> UMordhauSingleton::GetMaleVoice(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetMaleVoice");

	Params::MordhauSingleton_GetMaleVoice Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetMaleVoices
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<TSoftClassPtr<class UClass>>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

const TArray<TSoftClassPtr<class UClass>> UMordhauSingleton::GetMaleVoices()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetMaleVoices");

	Params::MordhauSingleton_GetMaleVoices Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetMetalTintsColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// uint8                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UMordhauSingleton::GetMetalTintsColor(uint8 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetMetalTintsColor");

	Params::MordhauSingleton_GetMetalTintsColor Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetMetalTintsColorObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMordhauColor*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauColor* UMordhauSingleton::GetMetalTintsColorObject(uint8 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetMetalTintsColorObject");

	Params::MordhauSingleton_GetMetalTintsColorObject Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetRandomBotNames
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UMordhauSingleton::GetRandomBotNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetRandomBotNames");

	Params::MordhauSingleton_GetRandomBotNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetSkinColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// uint8                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UMordhauSingleton::GetSkinColor(uint8 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetSkinColor");

	Params::MordhauSingleton_GetSkinColor Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetSkinColorObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMordhauColor*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauColor* UMordhauSingleton::GetSkinColorObject(uint8 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetSkinColorObject");

	Params::MordhauSingleton_GetSkinColorObject Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetTableColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// uint8                                   Table                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UMordhauSingleton::GetTableColor(uint8 Table, uint8 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetTableColor");

	Params::MordhauSingleton_GetTableColor Parms{};

	Parms.Table = Table;
	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetTableColorObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Table                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMordhauColor*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauColor* UMordhauSingleton::GetTableColorObject(uint8 Table, uint8 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetTableColorObject");

	Params::MordhauSingleton_GetTableColorObject Parms{};

	Parms.Table = Table;
	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetUpperChestWearable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UUpperChestWearable>  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UUpperChestWearable> UMordhauSingleton::GetUpperChestWearable(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetUpperChestWearable");

	Params::MordhauSingleton_GetUpperChestWearable Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetUpperChestWearables
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<TSoftClassPtr<class UClass>>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

const TArray<TSoftClassPtr<class UClass>> UMordhauSingleton::GetUpperChestWearables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetUpperChestWearables");

	Params::MordhauSingleton_GetUpperChestWearables Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.LoadFromConfig
// (Final, Native, Public, BlueprintCallable)

void UMordhauSingleton::LoadFromConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "LoadFromConfig");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauSingleton.LoadQueueFinishedLoadingChunk
// (Final, Native, Public)

void UMordhauSingleton::LoadQueueFinishedLoadingChunk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "LoadQueueFinishedLoadingChunk");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauSingleton.SaveToConfig
// (Final, Native, Public, BlueprintCallable)

void UMordhauSingleton::SaveToConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "SaveToConfig");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauSingleton.SetEquipmentArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<TSoftClassPtr<class UClass>>     NewEquipment                                           (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauSingleton::SetEquipmentArray(const TArray<TSoftClassPtr<class UClass>>& NewEquipment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "SetEquipmentArray");

	Params::MordhauSingleton_SetEquipmentArray Parms{};

	Parms.NewEquipment = std::move(NewEquipment);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.SetFemaleVoices
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<TSoftClassPtr<class UClass>>     NewVoices                                              (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauSingleton::SetFemaleVoices(const TArray<TSoftClassPtr<class UClass>>& NewVoices)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "SetFemaleVoices");

	Params::MordhauSingleton_SetFemaleVoices Parms{};

	Parms.NewVoices = std::move(NewVoices);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.SetHeadWearables
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<TSoftClassPtr<class UClass>>     NewHeadWearables                                       (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauSingleton::SetHeadWearables(const TArray<TSoftClassPtr<class UClass>>& NewHeadWearables)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "SetHeadWearables");

	Params::MordhauSingleton_SetHeadWearables Parms{};

	Parms.NewHeadWearables = std::move(NewHeadWearables);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.SetLegsWearables
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<TSoftClassPtr<class UClass>>     NewLegsWearables                                       (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauSingleton::SetLegsWearables(const TArray<TSoftClassPtr<class UClass>>& NewLegsWearables)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "SetLegsWearables");

	Params::MordhauSingleton_SetLegsWearables Parms{};

	Parms.NewLegsWearables = std::move(NewLegsWearables);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.SetMaleVoices
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<TSoftClassPtr<class UClass>>     NewVoices                                              (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauSingleton::SetMaleVoices(const TArray<TSoftClassPtr<class UClass>>& NewVoices)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "SetMaleVoices");

	Params::MordhauSingleton_SetMaleVoices Parms{};

	Parms.NewVoices = std::move(NewVoices);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.SetRandomBotNames
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   InRandomBotNames                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauSingleton::SetRandomBotNames(const TArray<class FString>& InRandomBotNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "SetRandomBotNames");

	Params::MordhauSingleton_SetRandomBotNames Parms{};

	Parms.InRandomBotNames = std::move(InRandomBotNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.SetUpperChestWearables
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<TSoftClassPtr<class UClass>>     NewUpperChestWearables                                 (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauSingleton::SetUpperChestWearables(const TArray<TSoftClassPtr<class UClass>>& NewUpperChestWearables)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "SetUpperChestWearables");

	Params::MordhauSingleton_SetUpperChestWearables Parms{};

	Parms.NewUpperChestWearables = std::move(NewUpperChestWearables);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.SpawnEquipment
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWorld*                           WorldRef                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEquipmentCustomization          Customization                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// uint8                                   Emblem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   EmblemColor1                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   EmblemColor2                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceInstantMeshUpdate                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceMipStreaming                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauEquipment*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauEquipment* UMordhauSingleton::SpawnEquipment(class UWorld* WorldRef, const struct FEquipmentCustomization& Customization, uint8 Emblem, uint8 EmblemColor1, uint8 EmblemColor2, bool bForceInstantMeshUpdate, bool bForceMipStreaming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "SpawnEquipment");

	Params::MordhauSingleton_SpawnEquipment Parms{};

	Parms.WorldRef = WorldRef;
	Parms.Customization = std::move(Customization);
	Parms.Emblem = Emblem;
	Parms.EmblemColor1 = EmblemColor1;
	Parms.EmblemColor2 = EmblemColor2;
	Parms.bForceInstantMeshUpdate = bForceInstantMeshUpdate;
	Parms.bForceMipStreaming = bForceMipStreaming;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.SpawnEquipmentFromClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           WorldRef                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UClass>             EquipmentClass                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauEquipment*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauEquipment* UMordhauSingleton::SpawnEquipmentFromClass(class UWorld* WorldRef, TSoftClassPtr<class UClass> EquipmentClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "SpawnEquipmentFromClass");

	Params::MordhauSingleton_SpawnEquipmentFromClass Parms{};

	Parms.WorldRef = WorldRef;
	Parms.EquipmentClass = EquipmentClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.UpdatePreviousLaunchInventory
// (Final, Native, Public, BlueprintCallable)

void UMordhauSingleton::UpdatePreviousLaunchInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "UpdatePreviousLaunchInventory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauSingleton.GetEquipmentNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauSingleton::GetEquipmentNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetEquipmentNum");

	Params::MordhauSingleton_GetEquipmentNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetEquipmentRemapper
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMordhauEquipmentRemapper*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauEquipmentRemapper* UMordhauSingleton::GetEquipmentRemapper() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetEquipmentRemapper");

	Params::MordhauSingleton_GetEquipmentRemapper Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetFemaleVoicesNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauSingleton::GetFemaleVoicesNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetFemaleVoicesNum");

	Params::MordhauSingleton_GetFemaleVoicesNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetHeadWearablesNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauSingleton::GetHeadWearablesNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetHeadWearablesNum");

	Params::MordhauSingleton_GetHeadWearablesNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetIsLoadingAssets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauSingleton::GetIsLoadingAssets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetIsLoadingAssets");

	Params::MordhauSingleton_GetIsLoadingAssets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetLegsWearablesNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauSingleton::GetLegsWearablesNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetLegsWearablesNum");

	Params::MordhauSingleton_GetLegsWearablesNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetMaleVoicesNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauSingleton::GetMaleVoicesNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetMaleVoicesNum");

	Params::MordhauSingleton_GetMaleVoicesNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSingleton.GetUpperChestWearablesNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauSingleton::GetUpperChestWearablesNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSingleton", "GetUpperChestWearablesNum");

	Params::MordhauSingleton_GetUpperChestWearablesNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSpectator.IsWatchingOwnDeath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMordhauSpectator::IsWatchingOwnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSpectator", "IsWatchingOwnDeath");

	Params::MordhauSpectator_IsWatchingOwnDeath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauSpectator.PrimarySpectatorAction
// (Final, Native, Public, BlueprintCallable)

void AMordhauSpectator::PrimarySpectatorAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSpectator", "PrimarySpectatorAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauSpectator.SecondarySpectatorAction
// (Final, Native, Public, BlueprintCallable)

void AMordhauSpectator::SecondarySpectatorAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSpectator", "SecondarySpectatorAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauSpectator.SwitchToFreeCam
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AMordhauSpectator::SwitchToFreeCam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSpectator", "SwitchToFreeCam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauSpectator.TertiarySpectatorAction
// (Final, Native, Public, BlueprintCallable)

void AMordhauSpectator::TertiarySpectatorAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauSpectator", "TertiarySpectatorAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauStats.AreStatsAvailable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauStats::AreStatsAvailable(const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauStats", "AreStatsAvailable");

	Params::MordhauStats_AreStatsAvailable Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauStats.GetPlayerValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStat                            Stat                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauStats::GetPlayerValue(ECallResult* CallResult, const class FString& PlayFabId, const struct FStat& Stat, int32* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauStats", "GetPlayerValue");

	Params::MordhauStats_GetPlayerValue Parms{};

	Parms.PlayFabId = std::move(PlayFabId);
	Parms.Stat = std::move(Stat);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function Mordhau.MordhauStats.GetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStat                            Stat                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauStats::GetValue(ECallResult* CallResult, const struct FStat& Stat, int32* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauStats", "GetValue");

	Params::MordhauStats_GetValue Parms{};

	Parms.Stat = std::move(Stat);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function Mordhau.MordhauStats.GetValueByName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           StatName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauStats::GetValueByName(const class FString& StatName, int32* OutValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauStats", "GetValueByName");

	Params::MordhauStats_GetValueByName Parms{};

	Parms.StatName = std::move(StatName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = Parms.OutValue;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauStats.IncrementValueChecked
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStat                            Stat                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMordhauStats::IncrementValueChecked(class UWorld* World, const struct FStat& Stat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauStats", "IncrementValueChecked");

	Params::MordhauStats_IncrementValueChecked Parms{};

	Parms.World = World;
	Parms.Stat = std::move(Stat);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauStats.IsAchievementUnlocked
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAchievement                     Achievement                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bIsUnlocked                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauStats::IsAchievementUnlocked(ECallResult* CallResult, const struct FAchievement& Achievement, bool* bIsUnlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauStats", "IsAchievementUnlocked");

	Params::MordhauStats_IsAchievementUnlocked Parms{};

	Parms.Achievement = std::move(Achievement);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;

	if (bIsUnlocked != nullptr)
		*bIsUnlocked = Parms.bIsUnlocked;
}


// Function Mordhau.MordhauStats.LockAchievement
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAchievement                     Achievement                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMordhauStats::LockAchievement(ECallResult* CallResult, const struct FAchievement& Achievement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauStats", "LockAchievement");

	Params::MordhauStats_LockAchievement Parms{};

	Parms.Achievement = std::move(Achievement);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauStats.RequestPlayerStats
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauStats::RequestPlayerStats(ECallResult* CallResult, const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauStats", "RequestPlayerStats");

	Params::MordhauStats_RequestPlayerStats Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauStats.RequestStats
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauStats::RequestStats(ECallResult* CallResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauStats", "RequestStats");

	Params::MordhauStats_RequestStats Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauStats.ResetAllStats
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAchievementsToo                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauStats::ResetAllStats(ECallResult* CallResult, bool bAchievementsToo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauStats", "ResetAllStats");

	Params::MordhauStats_ResetAllStats Parms{};

	Parms.bAchievementsToo = bAchievementsToo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauStats.SetAchievementProgress
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAchievement                     Achievement                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauStats::SetAchievementProgress(ECallResult* CallResult, const struct FAchievement& Achievement, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauStats", "SetAchievementProgress");

	Params::MordhauStats_SetAchievementProgress Parms{};

	Parms.Achievement = std::move(Achievement);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauStats.SetPlayerValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStat                            Stat                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauStats::SetPlayerValue(ECallResult* CallResult, const class FString& PlayFabId, const struct FStat& Stat, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauStats", "SetPlayerValue");

	Params::MordhauStats_SetPlayerValue Parms{};

	Parms.PlayFabId = std::move(PlayFabId);
	Parms.Stat = std::move(Stat);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauStats.SetValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStat                            Stat                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauStats::SetValue(ECallResult* CallResult, const struct FStat& Stat, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauStats", "SetValue");

	Params::MordhauStats_SetValue Parms{};

	Parms.Stat = std::move(Stat);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauStats.StorePlayerStats
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauStats::StorePlayerStats(ECallResult* CallResult, const class FString& PlayFabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauStats", "StorePlayerStats");

	Params::MordhauStats_StorePlayerStats Parms{};

	Parms.PlayFabId = std::move(PlayFabId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauStats.StoreStats
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauStats::StoreStats(ECallResult* CallResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauStats", "StoreStats");

	Params::MordhauStats_StoreStats Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauStats.UnlockAchievement
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECallResult                             CallResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAchievement                     Achievement                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMordhauStats::UnlockAchievement(ECallResult* CallResult, const struct FAchievement& Achievement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauStats", "UnlockAchievement");

	Params::MordhauStats_UnlockAchievement Parms{};

	Parms.Achievement = std::move(Achievement);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CallResult != nullptr)
		*CallResult = Parms.CallResult;
}


// Function Mordhau.MordhauTitleScreen.ConsumeKeyPressed
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGeometry                        InGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FKeyEvent                        InKeyEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauTitleScreen::ConsumeKeyPressed(const struct FGeometry& InGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauTitleScreen", "ConsumeKeyPressed");

	Params::MordhauTitleScreen_ConsumeKeyPressed Parms{};

	Parms.InGeometry = std::move(InGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauTitleScreen.ConsumeMouseKeyEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGeometry                        InGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    InMouseEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauTitleScreen::ConsumeMouseKeyEvent(const struct FGeometry& InGeometry, const struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauTitleScreen", "ConsumeMouseKeyEvent");

	Params::MordhauTitleScreen_ConsumeMouseKeyEvent Parms{};

	Parms.InGeometry = std::move(InGeometry);
	Parms.InMouseEvent = std::move(InMouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauTitleScreen.ForceCloseTitleScreen
// (Final, Native, Public, BlueprintCallable)

void UMordhauTitleScreen::ForceCloseTitleScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauTitleScreen", "ForceCloseTitleScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauTitleScreen.OnShowAgeRestrictionDialog
// (Event, Public, BlueprintEvent)

void UMordhauTitleScreen::OnShowAgeRestrictionDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauTitleScreen", "OnShowAgeRestrictionDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauTitleScreen.OnShowLicenseRequiredDialog
// (Event, Public, BlueprintEvent)

void UMordhauTitleScreen::OnShowLicenseRequiredDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauTitleScreen", "OnShowLicenseRequiredDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauTitleScreen.OnShowLoginRequiredDialog
// (Event, Public, BlueprintEvent)

void UMordhauTitleScreen::OnShowLoginRequiredDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauTitleScreen", "OnShowLoginRequiredDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauTitleScreen.OnUserConfirmedAgeRestricton
// (Final, Native, Private)
// Parameters:
// class FString                           Info                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauTitleScreen::OnUserConfirmedAgeRestricton(const class FString& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauTitleScreen", "OnUserConfirmedAgeRestricton");

	Params::MordhauTitleScreen_OnUserConfirmedAgeRestricton Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauTitleScreen.OnUserConfirmedLicenceDialog
// (Final, Native, Private)
// Parameters:
// class FString                           Info                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauTitleScreen::OnUserConfirmedLicenceDialog(const class FString& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauTitleScreen", "OnUserConfirmedLicenceDialog");

	Params::MordhauTitleScreen_OnUserConfirmedLicenceDialog Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauTitleScreen.OnUserConfirmedLogin
// (Event, Public, BlueprintEvent)

void UMordhauTitleScreen::OnUserConfirmedLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauTitleScreen", "OnUserConfirmedLogin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.MordhauTitleScreen.OnUserConfirmedNotLoggedIn
// (Final, Native, Private)
// Parameters:
// class FString                           Info                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauTitleScreen::OnUserConfirmedNotLoggedIn(const class FString& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauTitleScreen", "OnUserConfirmedNotLoggedIn");

	Params::MordhauTitleScreen_OnUserConfirmedNotLoggedIn Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauTitleScreen.Setup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                             InKeyToContinue                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             InGamepadKeyToContinue                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauTitleScreen::Setup(const struct FKey& InKeyToContinue, const struct FKey& InGamepadKeyToContinue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauTitleScreen", "Setup");

	Params::MordhauTitleScreen_Setup Parms{};

	Parms.InKeyToContinue = std::move(InKeyToContinue);
	Parms.InGamepadKeyToContinue = std::move(InGamepadKeyToContinue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.ActorGetDistanceToCollision
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Point                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PointOnCollision                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECollisionChannel                       TraceChannel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauUtilityLibrary::ActorGetDistanceToCollision(class AActor* Actor, const struct FVector& Point, struct FVector* PointOnCollision, ECollisionChannel TraceChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "ActorGetDistanceToCollision");

	Params::MordhauUtilityLibrary_ActorGetDistanceToCollision Parms{};

	Parms.Actor = Actor;
	Parms.Point = std::move(Point);
	Parms.TraceChannel = TraceChannel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PointOnCollision != nullptr)
		*PointOnCollision = std::move(Parms.PointOnCollision);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.AngularDistance
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRotator                         A                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         B                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauUtilityLibrary::AngularDistance(const struct FRotator& A, const struct FRotator& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "AngularDistance");

	Params::MordhauUtilityLibrary_AngularDistance Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.AreActorsFromSameLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ActorA                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ActorB                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::AreActorsFromSameLevel(class AActor* ActorA, class AActor* ActorB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "AreActorsFromSameLevel");

	Params::MordhauUtilityLibrary_AreActorsFromSameLevel Parms{};

	Parms.ActorA = ActorA;
	Parms.ActorB = ActorB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.AreConfirmCancelSwapped
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::AreConfirmCancelSwapped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "AreConfirmCancelSwapped");

	Params::MordhauUtilityLibrary_AreConfirmCancelSwapped Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.AreProfilesEqual
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterProfile                First                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FCharacterProfile                Second                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::AreProfilesEqual(const struct FCharacterProfile& First, const struct FCharacterProfile& Second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "AreProfilesEqual");

	Params::MordhauUtilityLibrary_AreProfilesEqual Parms{};

	Parms.First = std::move(First);
	Parms.Second = std::move(Second);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.AwardDuelMMR
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           WinnerID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           LoserID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewWinnerMMR                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewLoserMMR                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::AwardDuelMMR(const class FString& WinnerID, const class FString& LoserID, int32* NewWinnerMMR, int32* NewLoserMMR)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "AwardDuelMMR");

	Params::MordhauUtilityLibrary_AwardDuelMMR Parms{};

	Parms.WinnerID = std::move(WinnerID);
	Parms.LoserID = std::move(LoserID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (NewWinnerMMR != nullptr)
		*NewWinnerMMR = Parms.NewWinnerMMR;

	if (NewLoserMMR != nullptr)
		*NewLoserMMR = Parms.NewLoserMMR;
}


// Function Mordhau.MordhauUtilityLibrary.AwardTeamfightMMR
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bIsWin                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PlayFabId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherTeamMMR                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewMMR                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::AwardTeamfightMMR(const bool& bIsWin, const class FString& PlayFabId, const int32& OtherTeamMMR, int32* NewMMR)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "AwardTeamfightMMR");

	Params::MordhauUtilityLibrary_AwardTeamfightMMR Parms{};

	Parms.bIsWin = bIsWin;
	Parms.PlayFabId = std::move(PlayFabId);
	Parms.OtherTeamMMR = OtherTeamMMR;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (NewMMR != nullptr)
		*NewMMR = Parms.NewMMR;
}


// Function Mordhau.MordhauUtilityLibrary.BreakFaceCustomization
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFaceCustomization               FaceCustomization                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           OutTranslate                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>                           OutRotate                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>                           OutScale                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::BreakFaceCustomization(const struct FFaceCustomization& FaceCustomization, TArray<int32>* OutTranslate, TArray<int32>* OutRotate, TArray<int32>* OutScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "BreakFaceCustomization");

	Params::MordhauUtilityLibrary_BreakFaceCustomization Parms{};

	Parms.FaceCustomization = std::move(FaceCustomization);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTranslate != nullptr)
		*OutTranslate = std::move(Parms.OutTranslate);

	if (OutRotate != nullptr)
		*OutRotate = std::move(Parms.OutRotate);

	if (OutScale != nullptr)
		*OutScale = std::move(Parms.OutScale);
}


// Function Mordhau.MordhauUtilityLibrary.BreakSkillsCustomization
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSkillsCustomization             SkillsCustomization                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   OutPerks                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::BreakSkillsCustomization(const struct FSkillsCustomization& SkillsCustomization, int32* OutPerks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "BreakSkillsCustomization");

	Params::MordhauUtilityLibrary_BreakSkillsCustomization Parms{};

	Parms.SkillsCustomization = std::move(SkillsCustomization);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPerks != nullptr)
		*OutPerks = Parms.OutPerks;
}


// Function Mordhau.MordhauUtilityLibrary.CalculateAngle2D
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          Direction                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Yaw                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauUtilityLibrary::CalculateAngle2D(const struct FVector& Direction, float Yaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "CalculateAngle2D");

	Params::MordhauUtilityLibrary_CalculateAngle2D Parms{};

	Parms.Direction = std::move(Direction);
	Parms.Yaw = Yaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.CalculateGCD
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ValueA                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ValueB                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::CalculateGCD(int32 ValueA, int32 ValueB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "CalculateGCD");

	Params::MordhauUtilityLibrary_CalculateGCD Parms{};

	Parms.ValueA = ValueA;
	Parms.ValueB = ValueB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.CallFunctionByNameWithArgs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Str                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Executor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::CallFunctionByNameWithArgs(const class FString& Str, class UObject* Executor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "CallFunctionByNameWithArgs");

	Params::MordhauUtilityLibrary_CallFunctionByNameWithArgs Parms{};

	Parms.Str = std::move(Str);
	Parms.Executor = Executor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.CanCrossplayWith
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlatform                               OtherPlatform                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::CanCrossplayWith(EPlatform OtherPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "CanCrossplayWith");

	Params::MordhauUtilityLibrary_CanCrossplayWith Parms{};

	Parms.OtherPlatform = OtherPlatform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.Capitalize
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::Capitalize(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "Capitalize");

	Params::MordhauUtilityLibrary_Capitalize Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.ClosestPointOnLine
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          LineStart                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          LineEnd                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Point                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMordhauUtilityLibrary::ClosestPointOnLine(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FVector& Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "ClosestPointOnLine");

	Params::MordhauUtilityLibrary_ClosestPointOnLine Parms{};

	Parms.LineStart = std::move(LineStart);
	Parms.LineEnd = std::move(LineEnd);
	Parms.Point = std::move(Point);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.CompareAppearanceCustomization
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAppearanceCustomization         First                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAppearanceCustomization         Second                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::CompareAppearanceCustomization(const struct FAppearanceCustomization& First, const struct FAppearanceCustomization& Second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "CompareAppearanceCustomization");

	Params::MordhauUtilityLibrary_CompareAppearanceCustomization Parms{};

	Parms.First = std::move(First);
	Parms.Second = std::move(Second);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.CompareEquipmentCustomization
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FEquipmentCustomization          First                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FEquipmentCustomization          Second                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::CompareEquipmentCustomization(const struct FEquipmentCustomization& First, const struct FEquipmentCustomization& Second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "CompareEquipmentCustomization");

	Params::MordhauUtilityLibrary_CompareEquipmentCustomization Parms{};

	Parms.First = std::move(First);
	Parms.Second = std::move(Second);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.CompareFaceCustomization
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFaceCustomization               First                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFaceCustomization               Second                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::CompareFaceCustomization(const struct FFaceCustomization& First, const struct FFaceCustomization& Second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "CompareFaceCustomization");

	Params::MordhauUtilityLibrary_CompareFaceCustomization Parms{};

	Parms.First = std::move(First);
	Parms.Second = std::move(Second);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.CompareGearCustomization
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterGearCustomization      First                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FCharacterGearCustomization      Second                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::CompareGearCustomization(const struct FCharacterGearCustomization& First, const struct FCharacterGearCustomization& Second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "CompareGearCustomization");

	Params::MordhauUtilityLibrary_CompareGearCustomization Parms{};

	Parms.First = std::move(First);
	Parms.Second = std::move(Second);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.CompressData
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// TArray<uint8>                           InData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           OutData                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::CompressData(const TArray<uint8>& InData, class FString* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "CompressData");

	Params::MordhauUtilityLibrary_CompressData Parms{};

	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.ComputePointsLeft
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterProfile                Profile                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::ComputePointsLeft(const struct FCharacterProfile& Profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "ComputePointsLeft");

	Params::MordhauUtilityLibrary_ComputePointsLeft Parms{};

	Parms.Profile = std::move(Profile);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.ConsumeBudget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBudgetType                             BudgetType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSkipInvisible                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DistanceCutoff                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::ConsumeBudget(class AAdvancedCharacter* Character, EBudgetType BudgetType, bool bSkipInvisible, float Duration, float DistanceCutoff, bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "ConsumeBudget");

	Params::MordhauUtilityLibrary_ConsumeBudget Parms{};

	Parms.Character = Character;
	Parms.BudgetType = BudgetType;
	Parms.bSkipInvisible = bSkipInvisible;
	Parms.Duration = Duration;
	Parms.DistanceCutoff = DistanceCutoff;
	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.Conv_SoftObjectPathToString
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSoftObjectPath                  SoftObjectPath                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::Conv_SoftObjectPathToString(const struct FSoftObjectPath& SoftObjectPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "Conv_SoftObjectPathToString");

	Params::MordhauUtilityLibrary_Conv_SoftObjectPathToString Parms{};

	Parms.SoftObjectPath = std::move(SoftObjectPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.ConvertColorArrayToImage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InSizeX                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSizeY                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FColor>                   InImageData                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint8>                           CompressedData                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ImageQuality                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ImageFormat                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::ConvertColorArrayToImage(int32 InSizeX, int32 InSizeY, const TArray<struct FColor>& InImageData, TArray<uint8>* CompressedData, int32 ImageQuality, const class FString& ImageFormat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "ConvertColorArrayToImage");

	Params::MordhauUtilityLibrary_ConvertColorArrayToImage Parms{};

	Parms.InSizeX = InSizeX;
	Parms.InSizeY = InSizeY;
	Parms.InImageData = std::move(InImageData);
	Parms.ImageQuality = ImageQuality;
	Parms.ImageFormat = std::move(ImageFormat);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CompressedData != nullptr)
		*CompressedData = std::move(Parms.CompressedData);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.ConvertRelativePathToFull
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::ConvertRelativePathToFull(const class FString& Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "ConvertRelativePathToFull");

	Params::MordhauUtilityLibrary_ConvertRelativePathToFull Parms{};

	Parms.Path = std::move(Path);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.ConvertStringSteamIDsToPlayFabIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   InSteamIDArray                                         (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess, struct FSteamPlayFabConversionResult& OutMap)>Delegate                                               (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::ConvertStringSteamIDsToPlayFabIDs(const TArray<class FString>& InSteamIDArray, const class FString& Filename, TDelegate<void(bool bSuccess, struct FSteamPlayFabConversionResult& OutMap)> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "ConvertStringSteamIDsToPlayFabIDs");

	Params::MordhauUtilityLibrary_ConvertStringSteamIDsToPlayFabIDs Parms{};

	Parms.InSteamIDArray = std::move(InSteamIDArray);
	Parms.Filename = std::move(Filename);
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.ConvertTextureToColorArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTexture2DDynamic*                DynTex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(TArray<struct FColor>& ColorData)>OnTextureConvertedToColorArrayDelegate                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::ConvertTextureToColorArray(class UTexture2DDynamic* DynTex, const TDelegate<void(TArray<struct FColor>& ColorData)>& OnTextureConvertedToColorArrayDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "ConvertTextureToColorArray");

	Params::MordhauUtilityLibrary_ConvertTextureToColorArray Parms{};

	Parms.DynTex = DynTex;
	Parms.OnTextureConvertedToColorArrayDelegate = OnTextureConvertedToColorArrayDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.CopyToClipboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           MessageToCopy                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::CopyToClipboard(const class FString& MessageToCopy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "CopyToClipboard");

	Params::MordhauUtilityLibrary_CopyToClipboard Parms{};

	Parms.MessageToCopy = std::move(MessageToCopy);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.DecodeBase64ToByteArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Source                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Dest                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::DecodeBase64ToByteArray(const class FString& Source, TArray<uint8>* Dest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "DecodeBase64ToByteArray");

	Params::MordhauUtilityLibrary_DecodeBase64ToByteArray Parms{};

	Parms.Source = std::move(Source);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Dest != nullptr)
		*Dest = std::move(Parms.Dest);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.DecodeBase64ToString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Source                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutDest                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::DecodeBase64ToString(const class FString& Source, class FString* OutDest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "DecodeBase64ToString");

	Params::MordhauUtilityLibrary_DecodeBase64ToString Parms{};

	Parms.Source = std::move(Source);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDest != nullptr)
		*OutDest = std::move(Parms.OutDest);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.DoesProfileContainBannedEquipment
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterProfile                Profile                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AGameStateBase*                   GameState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::DoesProfileContainBannedEquipment(const struct FCharacterProfile& Profile, class AGameStateBase* GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "DoesProfileContainBannedEquipment");

	Params::MordhauUtilityLibrary_DoesProfileContainBannedEquipment Parms{};

	Parms.Profile = std::move(Profile);
	Parms.GameState = GameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.DoesProfileContainBannedPerks
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterProfile                Profile                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AGameStateBase*                   GameState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::DoesProfileContainBannedPerks(const struct FCharacterProfile& Profile, class AGameStateBase* GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "DoesProfileContainBannedPerks");

	Params::MordhauUtilityLibrary_DoesProfileContainBannedPerks Parms{};

	Parms.Profile = std::move(Profile);
	Parms.GameState = GameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.DrawText
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UCanvas*                          Canvas                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFont*                            Font                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Text                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     TextColor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Kerning                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ShadowColor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ShadowOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCentreX                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCentreY                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOutlined                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     OutlineColor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::DrawText(class UCanvas* Canvas, const class UFont* Font, int32 Size, const class FString& Text, const struct FVector2D& position, const struct FLinearColor& TextColor, float Kerning, const struct FLinearColor& ShadowColor, const struct FVector2D& ShadowOffset, bool bCentreX, bool bCentreY, bool bOutlined, const struct FLinearColor& OutlineColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "DrawText");

	Params::MordhauUtilityLibrary_DrawText Parms{};

	Parms.Canvas = Canvas;
	Parms.Font = Font;
	Parms.Size = Size;
	Parms.Text = std::move(Text);
	Parms.position = std::move(position);
	Parms.TextColor = std::move(TextColor);
	Parms.Kerning = Kerning;
	Parms.ShadowColor = std::move(ShadowColor);
	Parms.ShadowOffset = std::move(ShadowOffset);
	Parms.bCentreX = bCentreX;
	Parms.bCentreY = bCentreY;
	Parms.bOutlined = bOutlined;
	Parms.OutlineColor = std::move(OutlineColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.EncodeByteArrayToBase64String
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<uint8>                           Array                                                  (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::EncodeByteArrayToBase64String(const TArray<uint8>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "EncodeByteArrayToBase64String");

	Params::MordhauUtilityLibrary_EncodeByteArrayToBase64String Parms{};

	Parms.Array = std::move(Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.EncodeStringToBase64String
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::EncodeStringToBase64String(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "EncodeStringToBase64String");

	Params::MordhauUtilityLibrary_EncodeStringToBase64String Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.Equal_PlayFabPlayer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPlayFabPlayer                   A                                                      (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabPlayer                   B                                                      (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::Equal_PlayFabPlayer(const struct FPlayFabPlayer& A, const struct FPlayFabPlayer& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "Equal_PlayFabPlayer");

	Params::MordhauUtilityLibrary_Equal_PlayFabPlayer Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.FakeTickComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  Component                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::FakeTickComponent(class USceneComponent* Component, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "FakeTickComponent");

	Params::MordhauUtilityLibrary_FakeTickComponent Parms{};

	Parms.Component = Component;
	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.FilterArrayByFunction
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UObject*>                  Array                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(class UObject* Obj, bool* RetVal)>FuncDel                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TSubclassOf<class UObject>              Class_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UObject*>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UObject*> UMordhauUtilityLibrary::FilterArrayByFunction(const TArray<class UObject*>& Array, const TDelegate<void(class UObject* Obj, bool* RetVal)>& FuncDel, const TSubclassOf<class UObject> Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "FilterArrayByFunction");

	Params::MordhauUtilityLibrary_FilterArrayByFunction Parms{};

	Parms.Array = std::move(Array);
	Parms.FuncDel = FuncDel;
	Parms.Class_0 = Class_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.FindBetween
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          A                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          B                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UMordhauUtilityLibrary::FindBetween(const struct FVector& A, const struct FVector& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "FindBetween");

	Params::MordhauUtilityLibrary_FindBetween Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.FindByFunction
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UObject*>                  Array                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(class UObject* Obj, bool* RetVal)>FuncDel                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UMordhauUtilityLibrary::FindByFunction(const TArray<class UObject*>& Array, const TDelegate<void(class UObject* Obj, bool* RetVal)>& FuncDel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "FindByFunction");

	Params::MordhauUtilityLibrary_FindByFunction Parms{};

	Parms.Array = std::move(Array);
	Parms.FuncDel = FuncDel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.FindByFunctionTyped
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UObject*>                  Array                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(class UObject* Obj, bool* RetVal)>FuncDel                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TSubclassOf<class UObject>              Class_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UMordhauUtilityLibrary::FindByFunctionTyped(const TArray<class UObject*>& Array, const TDelegate<void(class UObject* Obj, bool* RetVal)>& FuncDel, const TSubclassOf<class UObject> Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "FindByFunctionTyped");

	Params::MordhauUtilityLibrary_FindByFunctionTyped Parms{};

	Parms.Array = std::move(Array);
	Parms.FuncDel = FuncDel;
	Parms.Class_0 = Class_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.FindCircleIntersectionPoints
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        CenterA                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RadiusA                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        CenterB                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RadiusB                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        PointA                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        PointB                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::FindCircleIntersectionPoints(const struct FVector2D& CenterA, const float& RadiusA, const struct FVector2D& CenterB, const float& RadiusB, struct FVector2D* PointA, struct FVector2D* PointB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "FindCircleIntersectionPoints");

	Params::MordhauUtilityLibrary_FindCircleIntersectionPoints Parms{};

	Parms.CenterA = std::move(CenterA);
	Parms.RadiusA = RadiusA;
	Parms.CenterB = std::move(CenterB);
	Parms.RadiusB = RadiusB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PointA != nullptr)
		*PointA = std::move(Parms.PointA);

	if (PointB != nullptr)
		*PointB = std::move(Parms.PointB);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.FindClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ClassName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UMordhauUtilityLibrary::FindClass(const class FString& ClassName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "FindClass");

	Params::MordhauUtilityLibrary_FindClass Parms{};

	Parms.ClassName = std::move(ClassName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.FindPlayerState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           PlayerNameOrPlayFabID                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauPlayerState*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauPlayerState* UMordhauUtilityLibrary::FindPlayerState(const class FString& PlayerNameOrPlayFabID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "FindPlayerState");

	Params::MordhauUtilityLibrary_FindPlayerState Parms{};

	Parms.PlayerNameOrPlayFabID = std::move(PlayerNameOrPlayFabID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.FindPlayerStateWithoutLocalID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           PlayerNameOrPlayFabID                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauPlayerState*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauPlayerState* UMordhauUtilityLibrary::FindPlayerStateWithoutLocalID(const class FString& PlayerNameOrPlayFabID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "FindPlayerStateWithoutLocalID");

	Params::MordhauUtilityLibrary_FindPlayerStateWithoutLocalID Parms{};

	Parms.PlayerNameOrPlayFabID = std::move(PlayerNameOrPlayFabID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.FindPlayFabPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           PlayerNameOrPlayFabID                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FPlayFabPlayer             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FPlayFabPlayer UMordhauUtilityLibrary::FindPlayFabPlayer(const class FString& PlayerNameOrPlayFabID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "FindPlayFabPlayer");

	Params::MordhauUtilityLibrary_FindPlayFabPlayer Parms{};

	Parms.PlayerNameOrPlayFabID = std::move(PlayerNameOrPlayFabID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.FindTeleportSpot
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InRotation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::FindTeleportSpot(class AActor* Actor, const struct FVector& InLocation, const struct FRotator& InRotation, struct FVector* OutLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "FindTeleportSpot");

	Params::MordhauUtilityLibrary_FindTeleportSpot Parms{};

	Parms.Actor = Actor;
	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.FInterpConstantToSeparate
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Current                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   IncreaseSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DecreaseSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauUtilityLibrary::FInterpConstantToSeparate(float Current, float Target, float DeltaTime, float IncreaseSpeed, float DecreaseSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "FInterpConstantToSeparate");

	Params::MordhauUtilityLibrary_FInterpConstantToSeparate Parms{};

	Parms.Current = Current;
	Parms.Target = Target;
	Parms.DeltaTime = DeltaTime;
	Parms.IncreaseSpeed = IncreaseSpeed;
	Parms.DecreaseSpeed = DecreaseSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.FInterpToSeparate
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Current                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   IncreaseSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DecreaseSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauUtilityLibrary::FInterpToSeparate(float Current, float Target, float DeltaTime, float IncreaseSpeed, float DecreaseSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "FInterpToSeparate");

	Params::MordhauUtilityLibrary_FInterpToSeparate Parms{};

	Parms.Current = Current;
	Parms.Target = Target;
	Parms.DeltaTime = DeltaTime;
	Parms.IncreaseSpeed = IncreaseSpeed;
	Parms.DecreaseSpeed = DecreaseSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.FlashWindow
// (Final, Native, Static, Public, BlueprintCallable)

void UMordhauUtilityLibrary::FlashWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "FlashWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.FlushPlayerControllerPressedKeys
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::FlushPlayerControllerPressedKeys(class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "FlushPlayerControllerPressedKeys");

	Params::MordhauUtilityLibrary_FlushPlayerControllerPressedKeys Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.ForceReplicationUpdate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCharacterMovementComponent*      CMC                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::ForceReplicationUpdate(class UCharacterMovementComponent* CMC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "ForceReplicationUpdate");

	Params::MordhauUtilityLibrary_ForceReplicationUpdate Parms{};

	Parms.CMC = CMC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.ForceSRGB
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           rt                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::ForceSRGB(class UTextureRenderTarget2D* rt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "ForceSRGB");

	Params::MordhauUtilityLibrary_ForceSRGB Parms{};

	Parms.rt = rt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.ForceValidCharacterProfile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterProfile                Profile                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FCharacterProfile                ForceValidatedProfile                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    bValidateInventory                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::ForceValidCharacterProfile(const struct FCharacterProfile& Profile, struct FCharacterProfile* ForceValidatedProfile, bool bValidateInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "ForceValidCharacterProfile");

	Params::MordhauUtilityLibrary_ForceValidCharacterProfile Parms{};

	Parms.Profile = std::move(Profile);
	Parms.bValidateInventory = bValidateInventory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ForceValidatedProfile != nullptr)
		*ForceValidatedProfile = std::move(Parms.ForceValidatedProfile);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.FormatText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UMordhauUtilityLibrary::FormatText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "FormatText");

	Params::MordhauUtilityLibrary_FormatText Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.FSmoothDamp
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Current                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CurrentVelocity                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SmoothTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxSpeed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::FSmoothDamp(float* Current, float Target, float* CurrentVelocity, float SmoothTime, float DeltaTime, float MaxSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "FSmoothDamp");

	Params::MordhauUtilityLibrary_FSmoothDamp Parms{};

	Parms.Target = Target;
	Parms.SmoothTime = SmoothTime;
	Parms.DeltaTime = DeltaTime;
	Parms.MaxSpeed = MaxSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Current != nullptr)
		*Current = Parms.Current;

	if (CurrentVelocity != nullptr)
		*CurrentVelocity = Parms.CurrentVelocity;
}


// Function Mordhau.MordhauUtilityLibrary.GetActorLevelName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetActorLevelName(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetActorLevelName");

	Params::MordhauUtilityLibrary_GetActorLevelName Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetAllActorsInLevelOfClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               ActorClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           LevelName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   OutActors                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::GetAllActorsInLevelOfClass(class UObject* WorldContextObject, TSubclassOf<class AActor> ActorClass, const class FString& LevelName, TArray<class AActor*>* OutActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetAllActorsInLevelOfClass");

	Params::MordhauUtilityLibrary_GetAllActorsInLevelOfClass Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ActorClass = ActorClass;
	Parms.LevelName = std::move(LevelName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActors != nullptr)
		*OutActors = std::move(Parms.OutActors);
}


// Function Mordhau.MordhauUtilityLibrary.GetAllPaksPathsInCustomPaksFolder
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UMordhauUtilityLibrary::GetAllPaksPathsInCustomPaksFolder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetAllPaksPathsInCustomPaksFolder");

	Params::MordhauUtilityLibrary_GetAllPaksPathsInCustomPaksFolder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetAllWearableClassesForSlotExhaustive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EWearableSlot                           Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<TSubclassOf<class UMordhauWearable>>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSubclassOf<class UMordhauWearable>> UMordhauUtilityLibrary::GetAllWearableClassesForSlotExhaustive(EWearableSlot Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetAllWearableClassesForSlotExhaustive");

	Params::MordhauUtilityLibrary_GetAllWearableClassesForSlotExhaustive Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetArchetypeObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterProfile                Profile                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UArchetype*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UArchetype* UMordhauUtilityLibrary::GetArchetypeObject(const struct FCharacterProfile& Profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetArchetypeObject");

	Params::MordhauUtilityLibrary_GetArchetypeObject Parms{};

	Parms.Profile = std::move(Profile);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetAttachParentActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UMordhauUtilityLibrary::GetAttachParentActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetAttachParentActor");

	Params::MordhauUtilityLibrary_GetAttachParentActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetAxisAngleFromRotator
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRotator                         Rot                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   OutAngle                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMordhauUtilityLibrary::GetAxisAngleFromRotator(const struct FRotator& Rot, float* OutAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetAxisAngleFromRotator");

	Params::MordhauUtilityLibrary_GetAxisAngleFromRotator Parms{};

	Parms.Rot = std::move(Rot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAngle != nullptr)
		*OutAngle = Parms.OutAngle;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetBannedEquipmentArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterProfile                Profile                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AGameStateBase*                   GameState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UMordhauUtilityLibrary::GetBannedEquipmentArray(const struct FCharacterProfile& Profile, class AGameStateBase* GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetBannedEquipmentArray");

	Params::MordhauUtilityLibrary_GetBannedEquipmentArray Parms{};

	Parms.Profile = std::move(Profile);
	Parms.GameState = GameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetBannedEquipmentNames
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterProfile                Profile                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AGameStateBase*                   GameState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetBannedEquipmentNames(const struct FCharacterProfile& Profile, class AGameStateBase* GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetBannedEquipmentNames");

	Params::MordhauUtilityLibrary_GetBannedEquipmentNames Parms{};

	Parms.Profile = std::move(Profile);
	Parms.GameState = GameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetBannedPerkNames
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterProfile                Profile                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AGameStateBase*                   GameState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetBannedPerkNames(const struct FCharacterProfile& Profile, class AGameStateBase* GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetBannedPerkNames");

	Params::MordhauUtilityLibrary_GetBannedPerkNames Parms{};

	Parms.Profile = std::move(Profile);
	Parms.GameState = GameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetBannedPerksArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterProfile                Profile                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AGameStateBase*                   GameState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UPerk*>                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UPerk*> UMordhauUtilityLibrary::GetBannedPerksArray(const struct FCharacterProfile& Profile, class AGameStateBase* GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetBannedPerksArray");

	Params::MordhauUtilityLibrary_GetBannedPerksArray Parms{};

	Parms.Profile = std::move(Profile);
	Parms.GameState = GameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetBaseFilename
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           InPath                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRemovePath                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetBaseFilename(const class FString& InPath, bool bRemovePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetBaseFilename");

	Params::MordhauUtilityLibrary_GetBaseFilename Parms{};

	Parms.InPath = std::move(InPath);
	Parms.bRemovePath = bRemovePath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetBeaconPortName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetBeaconPortName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetBeaconPortName");

	Params::MordhauUtilityLibrary_GetBeaconPortName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetBoundingBoxOfBoneInfluence
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           MeshComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     Bones                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// float                                   WeightThreshold                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBox                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FBox UMordhauUtilityLibrary::GetBoundingBoxOfBoneInfluence(class USkeletalMeshComponent* MeshComponent, const TArray<class FName>& Bones, float WeightThreshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetBoundingBoxOfBoneInfluence");

	Params::MordhauUtilityLibrary_GetBoundingBoxOfBoneInfluence Parms{};

	Parms.MeshComponent = MeshComponent;
	Parms.Bones = std::move(Bones);
	Parms.WeightThreshold = WeightThreshold;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetBoxCenter
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FBox                             Box                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMordhauUtilityLibrary::GetBoxCenter(const struct FBox& Box)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetBoxCenter");

	Params::MordhauUtilityLibrary_GetBoxCenter Parms{};

	Parms.Box = std::move(Box);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetBuildDateTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetBuildDateTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetBuildDateTime");

	Params::MordhauUtilityLibrary_GetBuildDateTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetBuildVersion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetBuildVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetBuildVersion");

	Params::MordhauUtilityLibrary_GetBuildVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetCanEverAffectNavigation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  SceneComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::GetCanEverAffectNavigation(class USceneComponent* SceneComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetCanEverAffectNavigation");

	Params::MordhauUtilityLibrary_GetCanEverAffectNavigation Parms{};

	Parms.SceneComp = SceneComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetCategoryMaxNameLenght
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetCategoryMaxNameLenght()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetCategoryMaxNameLenght");

	Params::MordhauUtilityLibrary_GetCategoryMaxNameLenght Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetCentroid
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<struct FVector>                  Points                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMordhauUtilityLibrary::GetCentroid(const TArray<struct FVector>& Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetCentroid");

	Params::MordhauUtilityLibrary_GetCentroid Parms{};

	Parms.Points = std::move(Points);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetClassByPath
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ClassPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UMordhauUtilityLibrary::GetClassByPath(const class FString& ClassPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetClassByPath");

	Params::MordhauUtilityLibrary_GetClassByPath Parms{};

	Parms.ClassPath = std::move(ClassPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetComponentsBoundingBoxInActorSpace
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMordhauUtilityLibrary::GetComponentsBoundingBoxInActorSpace(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetComponentsBoundingBoxInActorSpace");

	Params::MordhauUtilityLibrary_GetComponentsBoundingBoxInActorSpace Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetConsoleMaxLoadouts
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetConsoleMaxLoadouts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetConsoleMaxLoadouts");

	Params::MordhauUtilityLibrary_GetConsoleMaxLoadouts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetConsoleVariableFloat
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauUtilityLibrary::GetConsoleVariableFloat(const class FString& VariableName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetConsoleVariableFloat");

	Params::MordhauUtilityLibrary_GetConsoleVariableFloat Parms{};

	Parms.VariableName = std::move(VariableName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetConsoleVariableInt
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetConsoleVariableInt(const class FString& VariableName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetConsoleVariableInt");

	Params::MordhauUtilityLibrary_GetConsoleVariableInt Parms{};

	Parms.VariableName = std::move(VariableName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetConsoleVariableString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetConsoleVariableString(const class FString& VariableName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetConsoleVariableString");

	Params::MordhauUtilityLibrary_GetConsoleVariableString Parms{};

	Parms.VariableName = std::move(VariableName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetCurrentDemoTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauUtilityLibrary::GetCurrentDemoTime(class UWorld* World)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetCurrentDemoTime");

	Params::MordhauUtilityLibrary_GetCurrentDemoTime Parms{};

	Parms.World = World;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetCurrentFrame
// (Final, Native, Static, Public)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetCurrentFrame(class UWorld* World)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetCurrentFrame");

	Params::MordhauUtilityLibrary_GetCurrentFrame Parms{};

	Parms.World = World;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetCurrentFrameBP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetCurrentFrameBP(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetCurrentFrameBP");

	Params::MordhauUtilityLibrary_GetCurrentFrameBP Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetCurrentPlatformName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetCurrentPlatformName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetCurrentPlatformName");

	Params::MordhauUtilityLibrary_GetCurrentPlatformName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetCustomConfigVar_Array
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ArraySize                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UMordhauUtilityLibrary::GetCustomConfigVar_Array(const class FString& SectionName, const class FString& VariableName, int32* ArraySize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetCustomConfigVar_Array");

	Params::MordhauUtilityLibrary_GetCustomConfigVar_Array Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.VariableName = std::move(VariableName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ArraySize != nullptr)
		*ArraySize = Parms.ArraySize;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetCustomConfigVar_Bool
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::GetCustomConfigVar_Bool(const class FString& SectionName, const class FString& VariableName, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetCustomConfigVar_Bool");

	Params::MordhauUtilityLibrary_GetCustomConfigVar_Bool Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.VariableName = std::move(VariableName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetCustomConfigVar_Color
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UMordhauUtilityLibrary::GetCustomConfigVar_Color(const class FString& SectionName, const class FString& VariableName, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetCustomConfigVar_Color");

	Params::MordhauUtilityLibrary_GetCustomConfigVar_Color Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.VariableName = std::move(VariableName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetCustomConfigVar_Float
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauUtilityLibrary::GetCustomConfigVar_Float(const class FString& SectionName, const class FString& VariableName, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetCustomConfigVar_Float");

	Params::MordhauUtilityLibrary_GetCustomConfigVar_Float Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.VariableName = std::move(VariableName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetCustomConfigVar_Int
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetCustomConfigVar_Int(const class FString& SectionName, const class FString& VariableName, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetCustomConfigVar_Int");

	Params::MordhauUtilityLibrary_GetCustomConfigVar_Int Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.VariableName = std::move(VariableName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetCustomConfigVar_Rotator
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UMordhauUtilityLibrary::GetCustomConfigVar_Rotator(const class FString& SectionName, const class FString& VariableName, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetCustomConfigVar_Rotator");

	Params::MordhauUtilityLibrary_GetCustomConfigVar_Rotator Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.VariableName = std::move(VariableName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetCustomConfigVar_String
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetCustomConfigVar_String(const class FString& SectionName, const class FString& VariableName, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetCustomConfigVar_String");

	Params::MordhauUtilityLibrary_GetCustomConfigVar_String Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.VariableName = std::move(VariableName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetCustomConfigVar_Vector
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMordhauUtilityLibrary::GetCustomConfigVar_Vector(const class FString& SectionName, const class FString& VariableName, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetCustomConfigVar_Vector");

	Params::MordhauUtilityLibrary_GetCustomConfigVar_Vector Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.VariableName = std::move(VariableName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetCustomConfigVar_Vector2D
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMordhauUtilityLibrary::GetCustomConfigVar_Vector2D(const class FString& SectionName, const class FString& VariableName, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetCustomConfigVar_Vector2D");

	Params::MordhauUtilityLibrary_GetCustomConfigVar_Vector2D Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.VariableName = std::move(VariableName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetDateTimeFromUnixTimestamp
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Timestamp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UMordhauUtilityLibrary::GetDateTimeFromUnixTimestamp(int32 Timestamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetDateTimeFromUnixTimestamp");

	Params::MordhauUtilityLibrary_GetDateTimeFromUnixTimestamp Parms{};

	Parms.Timestamp = Timestamp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetDefaultActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                           FromClass                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UMordhauUtilityLibrary::GetDefaultActor(class UClass* FromClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetDefaultActor");

	Params::MordhauUtilityLibrary_GetDefaultActor Parms{};

	Parms.FromClass = FromClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetDefaultActorCopy
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                           FromClass                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ActorCopy                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::GetDefaultActorCopy(class UClass* FromClass, class AActor** ActorCopy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetDefaultActorCopy");

	Params::MordhauUtilityLibrary_GetDefaultActorCopy Parms{};

	Parms.FromClass = FromClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ActorCopy != nullptr)
		*ActorCopy = Parms.ActorCopy;
}


// Function Mordhau.MordhauUtilityLibrary.GetDefaultBadge
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class UBadge>               BadgeClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBadge*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBadge* UMordhauUtilityLibrary::GetDefaultBadge(TSubclassOf<class UBadge> BadgeClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetDefaultBadge");

	Params::MordhauUtilityLibrary_GetDefaultBadge Parms{};

	Parms.BadgeClass = BadgeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetDefaultObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                           FromClass                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UMordhauUtilityLibrary::GetDefaultObject(class UClass* FromClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetDefaultObject");

	Params::MordhauUtilityLibrary_GetDefaultObject Parms{};

	Parms.FromClass = FromClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetDefaultObjectCopy
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                           FromClass                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ObjectCopy                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Outer_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::GetDefaultObjectCopy(class UClass* FromClass, class UObject** ObjectCopy, class UObject* Outer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetDefaultObjectCopy");

	Params::MordhauUtilityLibrary_GetDefaultObjectCopy Parms{};

	Parms.FromClass = FromClass;
	Parms.Outer_0 = Outer_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ObjectCopy != nullptr)
		*ObjectCopy = Parms.ObjectCopy;
}


// Function Mordhau.MordhauUtilityLibrary.GetDefaultWearable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                           FromClass                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMordhauWearable*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauWearable* UMordhauUtilityLibrary::GetDefaultWearable(class UClass* FromClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetDefaultWearable");

	Params::MordhauUtilityLibrary_GetDefaultWearable Parms{};

	Parms.FromClass = FromClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetDurationText
// (Final, Native, Static, Public)
// Parameters:
// int32                                   Seconds                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UMordhauUtilityLibrary::GetDurationText(int32 Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetDurationText");

	Params::MordhauUtilityLibrary_GetDurationText Parms{};

	Parms.Seconds = Seconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetEnumKey
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           EnumName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EnumValue                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetEnumKey(const class FString& EnumName, const int32 EnumValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetEnumKey");

	Params::MordhauUtilityLibrary_GetEnumKey Parms{};

	Parms.EnumName = std::move(EnumName);
	Parms.EnumValue = EnumValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetEnumValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           EnumName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           EnumKey                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetEnumValue(const class FString& EnumName, const class FString& EnumKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetEnumValue");

	Params::MordhauUtilityLibrary_GetEnumValue Parms{};

	Parms.EnumName = std::move(EnumName);
	Parms.EnumKey = std::move(EnumKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.getErrorText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ErrorString                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UMordhauUtilityLibrary::getErrorText(const class FString& ErrorString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "getErrorText");

	Params::MordhauUtilityLibrary_getErrorText Parms{};

	Parms.ErrorString = std::move(ErrorString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetFaceIndex
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetFaceIndex(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetFaceIndex");

	Params::MordhauUtilityLibrary_GetFaceIndex Parms{};

	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetGamePortName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetGamePortName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetGamePortName");

	Params::MordhauUtilityLibrary_GetGamePortName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetGameServerGamePort
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetGameServerGamePort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetGameServerGamePort");

	Params::MordhauUtilityLibrary_GetGameServerGamePort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetImportedBounds
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBoxSphereBounds                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FBoxSphereBounds UMordhauUtilityLibrary::GetImportedBounds(class USkeletalMeshComponent* SkeletalMeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetImportedBounds");

	Params::MordhauUtilityLibrary_GetImportedBounds Parms{};

	Parms.SkeletalMeshComponent = SkeletalMeshComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetIngameEvent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EIngameEvent                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EIngameEvent UMordhauUtilityLibrary::GetIngameEvent(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetIngameEvent");

	Params::MordhauUtilityLibrary_GetIngameEvent Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetIsPeasant
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterProfile                Profile                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::GetIsPeasant(const struct FCharacterProfile& Profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetIsPeasant");

	Params::MordhauUtilityLibrary_GetIsPeasant Parms{};

	Parms.Profile = std::move(Profile);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetIsUsingController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::GetIsUsingController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetIsUsingController");

	Params::MordhauUtilityLibrary_GetIsUsingController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetLastReceiveTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauUtilityLibrary::GetLastReceiveTime(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetLastReceiveTime");

	Params::MordhauUtilityLibrary_GetLastReceiveTime Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetLocalNetworkVersion
// (Final, Native, Static, Public)
// Parameters:
// uint32                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint32 UMordhauUtilityLibrary::GetLocalNetworkVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetLocalNetworkVersion");

	Params::MordhauUtilityLibrary_GetLocalNetworkVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetLocalShortID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AMordhauPlayerState*              PlayerState                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetLocalShortID(const class AMordhauPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetLocalShortID");

	Params::MordhauUtilityLibrary_GetLocalShortID Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetLocation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           LocationName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EServerLocation                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EServerLocation UMordhauUtilityLibrary::GetLocation(const class FString& LocationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetLocation");

	Params::MordhauUtilityLibrary_GetLocation Parms{};

	Parms.LocationName = std::move(LocationName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetLocationDisplayName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EServerLocation                         Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UMordhauUtilityLibrary::GetLocationDisplayName(EServerLocation Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetLocationDisplayName");

	Params::MordhauUtilityLibrary_GetLocationDisplayName Parms{};

	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetLocationName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EServerLocation                         Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetLocationName(EServerLocation Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetLocationName");

	Params::MordhauUtilityLibrary_GetLocationName Parms{};

	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetLODParentPrimitive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              Comp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* UMordhauUtilityLibrary::GetLODParentPrimitive(class UPrimitiveComponent* Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetLODParentPrimitive");

	Params::MordhauUtilityLibrary_GetLODParentPrimitive Parms{};

	Parms.Comp = Comp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetMapInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MapPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMapInfo                         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMapInfo UMordhauUtilityLibrary::GetMapInfo(const class UObject* WorldContextObject, const class FString& MapPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetMapInfo");

	Params::MordhauUtilityLibrary_GetMapInfo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MapPath = std::move(MapPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetMapName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetMapName(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetMapName");

	Params::MordhauUtilityLibrary_GetMapName Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetMaxIndexWithDraw
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<int32>                           inArray                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bFoundDraw                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetMaxIndexWithDraw(const TArray<int32>& inArray, bool* bFoundDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetMaxIndexWithDraw");

	Params::MordhauUtilityLibrary_GetMaxIndexWithDraw Parms{};

	Parms.inArray = std::move(inArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bFoundDraw != nullptr)
		*bFoundDraw = Parms.bFoundDraw;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetMordhauGameSession
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauGameSession*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauGameSession* UMordhauUtilityLibrary::GetMordhauGameSession(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetMordhauGameSession");

	Params::MordhauUtilityLibrary_GetMordhauGameSession Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetMordhauGameUserSettings
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMordhauGameUserSettings*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauGameUserSettings* UMordhauUtilityLibrary::GetMordhauGameUserSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetMordhauGameUserSettings");

	Params::MordhauUtilityLibrary_GetMordhauGameUserSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetMordhauHUD
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauHUD*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauHUD* UMordhauUtilityLibrary::GetMordhauHUD(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetMordhauHUD");

	Params::MordhauUtilityLibrary_GetMordhauHUD Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetMordhauInput
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMordhauInput*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauInput* UMordhauUtilityLibrary::GetMordhauInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetMordhauInput");

	Params::MordhauUtilityLibrary_GetMordhauInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetMordhauInventory
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMordhauInventory*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauInventory* UMordhauUtilityLibrary::GetMordhauInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetMordhauInventory");

	Params::MordhauUtilityLibrary_GetMordhauInventory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetMordhauSingleton
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMordhauSingleton*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauSingleton* UMordhauUtilityLibrary::GetMordhauSingleton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetMordhauSingleton");

	Params::MordhauUtilityLibrary_GetMordhauSingleton Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetMordhauStats
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMordhauStats*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauStats* UMordhauUtilityLibrary::GetMordhauStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetMordhauStats");

	Params::MordhauUtilityLibrary_GetMordhauStats Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetMousePosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController*                Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMordhauUtilityLibrary::GetMousePosition(class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetMousePosition");

	Params::MordhauUtilityLibrary_GetMousePosition Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetNormalizedTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Start                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   End                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Current                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauUtilityLibrary::GetNormalizedTime(float Start, float End, float Current)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetNormalizedTime");

	Params::MordhauUtilityLibrary_GetNormalizedTime Parms{};

	Parms.Start = Start;
	Parms.End = End;
	Parms.Current = Current;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetNotifyServerReceivedClientData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCharacterMovementComponent*      CMC                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::GetNotifyServerReceivedClientData(class UCharacterMovementComponent* CMC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetNotifyServerReceivedClientData");

	Params::MordhauUtilityLibrary_GetNotifyServerReceivedClientData Parms{};

	Parms.CMC = CMC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetOnlineEnvironmentName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetOnlineEnvironmentName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetOnlineEnvironmentName");

	Params::MordhauUtilityLibrary_GetOnlineEnvironmentName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetOnlineServiceName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UMordhauUtilityLibrary::GetOnlineServiceName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetOnlineServiceName");

	Params::MordhauUtilityLibrary_GetOnlineServiceName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetOSVersion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetOSVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetOSVersion");

	Params::MordhauUtilityLibrary_GetOSVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPacketsLost
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetPacketsLost(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPacketsLost");

	Params::MordhauUtilityLibrary_GetPacketsLost Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPerforceRevision
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetPerforceRevision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPerforceRevision");

	Params::MordhauUtilityLibrary_GetPerforceRevision Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPerforceRevisionEnforced
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetPerforceRevisionEnforced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPerforceRevisionEnforced");

	Params::MordhauUtilityLibrary_GetPerforceRevisionEnforced Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPerks
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterProfile                Profile                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UPerk*>                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UPerk*> UMordhauUtilityLibrary::GetPerks(const struct FCharacterProfile& Profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPerks");

	Params::MordhauUtilityLibrary_GetPerks Parms{};

	Parms.Profile = std::move(Profile);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPerksCost
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterProfile                Profile                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetPerksCost(const struct FCharacterProfile& Profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPerksCost");

	Params::MordhauUtilityLibrary_GetPerksCost Parms{};

	Parms.Profile = std::move(Profile);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPhysicsBodyBounds
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           MeshComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBox                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FBox UMordhauUtilityLibrary::GetPhysicsBodyBounds(class USkeletalMeshComponent* MeshComponent, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPhysicsBodyBounds");

	Params::MordhauUtilityLibrary_GetPhysicsBodyBounds Parms{};

	Parms.MeshComponent = MeshComponent;
	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPhysicsBodyWorldTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           MeshComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform UMordhauUtilityLibrary::GetPhysicsBodyWorldTransform(class USkeletalMeshComponent* MeshComponent, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPhysicsBodyWorldTransform");

	Params::MordhauUtilityLibrary_GetPhysicsBodyWorldTransform Parms{};

	Parms.MeshComponent = MeshComponent;
	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPing
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseMedian                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauUtilityLibrary::GetPing(const class UObject* WorldContextObject, bool bUseMedian)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPing");

	Params::MordhauUtilityLibrary_GetPing Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bUseMedian = bUseMedian;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPlatform                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlatform UMordhauUtilityLibrary::GetPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPlatform");

	Params::MordhauUtilityLibrary_GetPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPlatformByName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           PlatformName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlatform                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlatform UMordhauUtilityLibrary::GetPlatformByName(const class FString& PlatformName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPlatformByName");

	Params::MordhauUtilityLibrary_GetPlatformByName Parms{};

	Parms.PlatformName = std::move(PlatformName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPlatformName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPlatform                               Platform                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetPlatformName(EPlatform Platform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPlatformName");

	Params::MordhauUtilityLibrary_GetPlatformName Parms{};

	Parms.Platform = Platform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPlatformSpecific
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPlatformSpecific                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlatformSpecific UMordhauUtilityLibrary::GetPlatformSpecific()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPlatformSpecific");

	Params::MordhauUtilityLibrary_GetPlatformSpecific Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPlayerAvatar
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2DDynamic*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2DDynamic* UMordhauUtilityLibrary::GetPlayerAvatar(const struct FPlayFabPlayer& Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPlayerAvatar");

	Params::MordhauUtilityLibrary_GetPlayerAvatar Parms{};

	Parms.Player = std::move(Player);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPlayerByShortId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ShortId                                                (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// EPlatform                               PlatformFilter                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bWasSuccessful, struct FPlayFabApiError& Error, struct FGetPlayerByShortIdResult& ShortIdResults)>Delegate                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::GetPlayerByShortId(const TArray<class FString>& ShortId, const EPlatform PlatformFilter, const TDelegate<void(bool bWasSuccessful, struct FPlayFabApiError& Error, struct FGetPlayerByShortIdResult& ShortIdResults)>& Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPlayerByShortId");

	Params::MordhauUtilityLibrary_GetPlayerByShortId Parms{};

	Parms.ShortId = std::move(ShortId);
	Parms.PlatformFilter = PlatformFilter;
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.GetPlayerCountFromGameModeMetadataClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class UGameModeMetadata>    MetadataClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UMordhauUtilityLibrary::GetPlayerCountFromGameModeMetadataClass(TSubclassOf<class UGameModeMetadata> MetadataClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPlayerCountFromGameModeMetadataClass");

	Params::MordhauUtilityLibrary_GetPlayerCountFromGameModeMetadataClass Parms{};

	Parms.MetadataClass = MetadataClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPlayerMaxNameLenght
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetPlayerMaxNameLenght()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPlayerMaxNameLenght");

	Params::MordhauUtilityLibrary_GetPlayerMaxNameLenght Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPlayFabAPI
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPlayFabAPI*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAPI* UMordhauUtilityLibrary::GetPlayFabAPI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPlayFabAPI");

	Params::MordhauUtilityLibrary_GetPlayFabAPI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPlayFabEntityID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetPlayFabEntityID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPlayFabEntityID");

	Params::MordhauUtilityLibrary_GetPlayFabEntityID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPlayFabId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetPlayFabId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPlayFabId");

	Params::MordhauUtilityLibrary_GetPlayFabId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPlayFabPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPlayFabPlayer                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FPlayFabPlayer UMordhauUtilityLibrary::GetPlayFabPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPlayFabPlayer");

	Params::MordhauUtilityLibrary_GetPlayFabPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetPlayFabTimestamp
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UMordhauUtilityLibrary::GetPlayFabTimestamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetPlayFabTimestamp");

	Params::MordhauUtilityLibrary_GetPlayFabTimestamp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRandomArmsWearable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUpperChestWearable*              UpperChestWearable                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSkillsCustomization             SkillsCustomization                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EItemRarity                             MaxRarity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UArmsWearable*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UArmsWearable* UMordhauUtilityLibrary::GetRandomArmsWearable(int32* ID, class UUpperChestWearable* UpperChestWearable, const struct FSkillsCustomization& SkillsCustomization, EItemRarity MaxRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRandomArmsWearable");

	Params::MordhauUtilityLibrary_GetRandomArmsWearable Parms{};

	Parms.UpperChestWearable = UpperChestWearable;
	Parms.SkillsCustomization = std::move(SkillsCustomization);
	Parms.MaxRarity = MaxRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ID != nullptr)
		*ID = Parms.ID;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRandomCoifWearable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHeadWearable*                    HeadWearable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSkillsCustomization             SkillsCustomization                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EItemRarity                             MaxRarity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMordhauWearable*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauWearable* UMordhauUtilityLibrary::GetRandomCoifWearable(int32* ID, class UHeadWearable* HeadWearable, const struct FSkillsCustomization& SkillsCustomization, EItemRarity MaxRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRandomCoifWearable");

	Params::MordhauUtilityLibrary_GetRandomCoifWearable Parms{};

	Parms.HeadWearable = HeadWearable;
	Parms.SkillsCustomization = std::move(SkillsCustomization);
	Parms.MaxRarity = MaxRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ID != nullptr)
		*ID = Parms.ID;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRandomEquipment
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSkillsCustomization             SkillsCustomization                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EItemRarity                             MaxRarity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauEquipment*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauEquipment* UMordhauUtilityLibrary::GetRandomEquipment(int32* ID, const struct FSkillsCustomization& SkillsCustomization, EItemRarity MaxRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRandomEquipment");

	Params::MordhauUtilityLibrary_GetRandomEquipment Parms{};

	Parms.SkillsCustomization = std::move(SkillsCustomization);
	Parms.MaxRarity = MaxRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ID != nullptr)
		*ID = Parms.ID;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRandomFaceCustomizationVector
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   RandomExponent                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Limit                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMordhauUtilityLibrary::GetRandomFaceCustomizationVector(float RandomExponent, const float Limit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRandomFaceCustomizationVector");

	Params::MordhauUtilityLibrary_GetRandomFaceCustomizationVector Parms{};

	Parms.RandomExponent = RandomExponent;
	Parms.Limit = Limit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRandomFeetWearable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULegsWearable*                    LegsWearable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSkillsCustomization             SkillsCustomization                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EItemRarity                             MaxRarity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMordhauWearable*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauWearable* UMordhauUtilityLibrary::GetRandomFeetWearable(int32* ID, class ULegsWearable* LegsWearable, const struct FSkillsCustomization& SkillsCustomization, EItemRarity MaxRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRandomFeetWearable");

	Params::MordhauUtilityLibrary_GetRandomFeetWearable Parms{};

	Parms.LegsWearable = LegsWearable;
	Parms.SkillsCustomization = std::move(SkillsCustomization);
	Parms.MaxRarity = MaxRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ID != nullptr)
		*ID = Parms.ID;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRandomHandsWearable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UArmsWearable*                    ArmsWearable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSkillsCustomization             SkillsCustomization                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EItemRarity                             MaxRarity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMordhauWearable*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauWearable* UMordhauUtilityLibrary::GetRandomHandsWearable(int32* ID, class UArmsWearable* ArmsWearable, const struct FSkillsCustomization& SkillsCustomization, EItemRarity MaxRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRandomHandsWearable");

	Params::MordhauUtilityLibrary_GetRandomHandsWearable Parms{};

	Parms.ArmsWearable = ArmsWearable;
	Parms.SkillsCustomization = std::move(SkillsCustomization);
	Parms.MaxRarity = MaxRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ID != nullptr)
		*ID = Parms.ID;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRandomHeadWearable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSkillsCustomization             SkillsCustomization                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EItemRarity                             MaxRarity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHeadWearable*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHeadWearable* UMordhauUtilityLibrary::GetRandomHeadWearable(int32* ID, const struct FSkillsCustomization& SkillsCustomization, EItemRarity MaxRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRandomHeadWearable");

	Params::MordhauUtilityLibrary_GetRandomHeadWearable Parms{};

	Parms.SkillsCustomization = std::move(SkillsCustomization);
	Parms.MaxRarity = MaxRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ID != nullptr)
		*ID = Parms.ID;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRandomLegsWearable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSkillsCustomization             SkillsCustomization                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EItemRarity                             MaxRarity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULegsWearable*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULegsWearable* UMordhauUtilityLibrary::GetRandomLegsWearable(int32* ID, const struct FSkillsCustomization& SkillsCustomization, EItemRarity MaxRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRandomLegsWearable");

	Params::MordhauUtilityLibrary_GetRandomLegsWearable Parms{};

	Parms.SkillsCustomization = std::move(SkillsCustomization);
	Parms.MaxRarity = MaxRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ID != nullptr)
		*ID = Parms.ID;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRandomLowerChestWearable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUpperChestWearable*              UpperChestWearable                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSkillsCustomization             SkillsCustomization                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EItemRarity                             MaxRarity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMordhauWearable*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauWearable* UMordhauUtilityLibrary::GetRandomLowerChestWearable(int32* ID, class UUpperChestWearable* UpperChestWearable, const struct FSkillsCustomization& SkillsCustomization, EItemRarity MaxRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRandomLowerChestWearable");

	Params::MordhauUtilityLibrary_GetRandomLowerChestWearable Parms{};

	Parms.UpperChestWearable = UpperChestWearable;
	Parms.SkillsCustomization = std::move(SkillsCustomization);
	Parms.MaxRarity = MaxRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ID != nullptr)
		*ID = Parms.ID;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRandomMeleeWeapon
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSkillsCustomization             SkillsCustomization                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EItemRarity                             MaxRarity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauEquipment*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauEquipment* UMordhauUtilityLibrary::GetRandomMeleeWeapon(int32* ID, const struct FSkillsCustomization& SkillsCustomization, EItemRarity MaxRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRandomMeleeWeapon");

	Params::MordhauUtilityLibrary_GetRandomMeleeWeapon Parms{};

	Parms.SkillsCustomization = std::move(SkillsCustomization);
	Parms.MaxRarity = MaxRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ID != nullptr)
		*ID = Parms.ID;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRandomRangedWeapon
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSkillsCustomization             SkillsCustomization                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EItemRarity                             MaxRarity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauEquipment*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauEquipment* UMordhauUtilityLibrary::GetRandomRangedWeapon(int32* ID, const struct FSkillsCustomization& SkillsCustomization, EItemRarity MaxRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRandomRangedWeapon");

	Params::MordhauUtilityLibrary_GetRandomRangedWeapon Parms{};

	Parms.SkillsCustomization = std::move(SkillsCustomization);
	Parms.MaxRarity = MaxRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ID != nullptr)
		*ID = Parms.ID;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRandomShouldersWearable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUpperChestWearable*              UpperChestWearable                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSkillsCustomization             SkillsCustomization                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EItemRarity                             MaxRarity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMordhauWearable*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMordhauWearable* UMordhauUtilityLibrary::GetRandomShouldersWearable(int32* ID, class UUpperChestWearable* UpperChestWearable, const struct FSkillsCustomization& SkillsCustomization, EItemRarity MaxRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRandomShouldersWearable");

	Params::MordhauUtilityLibrary_GetRandomShouldersWearable Parms{};

	Parms.UpperChestWearable = UpperChestWearable;
	Parms.SkillsCustomization = std::move(SkillsCustomization);
	Parms.MaxRarity = MaxRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ID != nullptr)
		*ID = Parms.ID;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRandomSkin
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEquipmentSkinEntry              Skin                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// class AMordhauEquipment*                Equipment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemRarity                             MaxRarity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::GetRandomSkin(int32* ID, struct FEquipmentSkinEntry* Skin, class AMordhauEquipment* Equipment, EItemRarity MaxRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRandomSkin");

	Params::MordhauUtilityLibrary_GetRandomSkin Parms{};

	Parms.Equipment = Equipment;
	Parms.MaxRarity = MaxRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ID != nullptr)
		*ID = Parms.ID;

	if (Skin != nullptr)
		*Skin = std::move(Parms.Skin);
}


// Function Mordhau.MordhauUtilityLibrary.GetRandomUpperChestWearable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSkillsCustomization             SkillsCustomization                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EItemRarity                             MaxRarity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUpperChestWearable*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUpperChestWearable* UMordhauUtilityLibrary::GetRandomUpperChestWearable(int32* ID, const struct FSkillsCustomization& SkillsCustomization, EItemRarity MaxRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRandomUpperChestWearable");

	Params::MordhauUtilityLibrary_GetRandomUpperChestWearable Parms{};

	Parms.SkillsCustomization = std::move(SkillsCustomization);
	Parms.MaxRarity = MaxRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ID != nullptr)
		*ID = Parms.ID;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRandomWeapon
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSkillsCustomization             SkillsCustomization                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EItemRarity                             MaxRarity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauEquipment*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauEquipment* UMordhauUtilityLibrary::GetRandomWeapon(int32* ID, const struct FSkillsCustomization& SkillsCustomization, EItemRarity MaxRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRandomWeapon");

	Params::MordhauUtilityLibrary_GetRandomWeapon Parms{};

	Parms.SkillsCustomization = std::move(SkillsCustomization);
	Parms.MaxRarity = MaxRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ID != nullptr)
		*ID = Parms.ID;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRankFromXP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   XP                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetRankFromXP(int32 XP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRankFromXP");

	Params::MordhauUtilityLibrary_GetRankFromXP Parms{};

	Parms.XP = XP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRegion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           RegionName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EServerRegion                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EServerRegion UMordhauUtilityLibrary::GetRegion(const class FString& RegionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRegion");

	Params::MordhauUtilityLibrary_GetRegion Parms{};

	Parms.RegionName = std::move(RegionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRegionDisplayName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EServerRegion                           Region                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UMordhauUtilityLibrary::GetRegionDisplayName(EServerRegion Region)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRegionDisplayName");

	Params::MordhauUtilityLibrary_GetRegionDisplayName Parms{};

	Parms.Region = Region;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRegionName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EServerRegion                           Region                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetRegionName(EServerRegion Region)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRegionName");

	Params::MordhauUtilityLibrary_GetRegionName Parms{};

	Parms.Region = Region;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetReleaseVersion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetReleaseVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetReleaseVersion");

	Params::MordhauUtilityLibrary_GetReleaseVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetRole
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ENetRole                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ENetRole UMordhauUtilityLibrary::GetRole(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetRole");

	Params::MordhauUtilityLibrary_GetRole Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetSculptableBoneAtLine
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          LineStart                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          LineEnd                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SearchRadius                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           MeshComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UMordhauUtilityLibrary::GetSculptableBoneAtLine(const struct FVector& LineStart, const struct FVector& LineEnd, float SearchRadius, class USkeletalMeshComponent* MeshComponent, class AMordhauCharacter* Character, int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetSculptableBoneAtLine");

	Params::MordhauUtilityLibrary_GetSculptableBoneAtLine Parms{};

	Parms.LineStart = std::move(LineStart);
	Parms.LineEnd = std::move(LineEnd);
	Parms.SearchRadius = SearchRadius;
	Parms.MeshComponent = MeshComponent;
	Parms.Character = Character;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetServerConnectString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabServerDetails            ServerDetails                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           PortName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetServerConnectString(const struct FPlayFabServerDetails& ServerDetails, const class FString& PortName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetServerConnectString");

	Params::MordhauUtilityLibrary_GetServerConnectString Parms{};

	Parms.ServerDetails = std::move(ServerDetails);
	Parms.PortName = std::move(PortName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetSoundMixInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoundMixInfo                    SoundMixInfo                                           (Parm, OutParm, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::GetSoundMixInfo(const class FString& Name_0, struct FSoundMixInfo* SoundMixInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetSoundMixInfo");

	Params::MordhauUtilityLibrary_GetSoundMixInfo Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SoundMixInfo != nullptr)
		*SoundMixInfo = std::move(Parms.SoundMixInfo);
}


// Function Mordhau.MordhauUtilityLibrary.GetSupportedScreenResolutions
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FString>                   Resolutions                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::GetSupportedScreenResolutions(TArray<class FString>* Resolutions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetSupportedScreenResolutions");

	Params::MordhauUtilityLibrary_GetSupportedScreenResolutions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Resolutions != nullptr)
		*Resolutions = std::move(Parms.Resolutions);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetSyncGroupPositionBetweenMarkers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAnimInstance*                    AnimInstance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SyncGroup                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauUtilityLibrary::GetSyncGroupPositionBetweenMarkers(class UAnimInstance* AnimInstance, class FName SyncGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetSyncGroupPositionBetweenMarkers");

	Params::MordhauUtilityLibrary_GetSyncGroupPositionBetweenMarkers Parms{};

	Parms.AnimInstance = AnimInstance;
	Parms.SyncGroup = SyncGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetTexture2DDynamicDimensions
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTexture2DDynamic*                DynTex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Height                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Width                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::GetTexture2DDynamicDimensions(class UTexture2DDynamic* DynTex, int32* Height, int32* Width)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetTexture2DDynamicDimensions");

	Params::MordhauUtilityLibrary_GetTexture2DDynamicDimensions Parms{};

	Parms.DynTex = DynTex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Height != nullptr)
		*Height = Parms.Height;

	if (Width != nullptr)
		*Width = Parms.Width;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetTotalDemoTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauUtilityLibrary::GetTotalDemoTime(class UWorld* World)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetTotalDemoTime");

	Params::MordhauUtilityLibrary_GetTotalDemoTime Parms{};

	Parms.World = World;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetVersionName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetVersionName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetVersionName");

	Params::MordhauUtilityLibrary_GetVersionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetVersionString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::GetVersionString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetVersionString");

	Params::MordhauUtilityLibrary_GetVersionString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetViewTargetCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOnlyLiving                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMordhauCharacter*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMordhauCharacter* UMordhauUtilityLibrary::GetViewTargetCharacter(class UObject* WorldContextObject, bool bOnlyLiving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetViewTargetCharacter");

	Params::MordhauUtilityLibrary_GetViewTargetCharacter Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bOnlyLiving = bOnlyLiving;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetVisibilityId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              Comp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetVisibilityId(class UPrimitiveComponent* Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetVisibilityId");

	Params::MordhauUtilityLibrary_GetVisibilityId Parms{};

	Parms.Comp = Comp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetWearableClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCharacterGearCustomization      CharacterGearCustomization                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EWearableSlot                           Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UMordhauWearable>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UMordhauWearable> UMordhauUtilityLibrary::GetWearableClass(const struct FCharacterGearCustomization& CharacterGearCustomization, EWearableSlot Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetWearableClass");

	Params::MordhauUtilityLibrary_GetWearableClass Parms{};

	Parms.CharacterGearCustomization = std::move(CharacterGearCustomization);
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetWearableClasses
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCharacterGearCustomization      CharacterGearCustomization                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EWearableSlot                           Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<TSubclassOf<class UMordhauWearable>>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSubclassOf<class UMordhauWearable>> UMordhauUtilityLibrary::GetWearableClasses(const struct FCharacterGearCustomization& CharacterGearCustomization, EWearableSlot Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetWearableClasses");

	Params::MordhauUtilityLibrary_GetWearableClasses Parms{};

	Parms.CharacterGearCustomization = std::move(CharacterGearCustomization);
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetWearableNames
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCharacterGearCustomization      CharacterGearCustomization                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EWearableSlot                           Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UMordhauUtilityLibrary::GetWearableNames(const struct FCharacterGearCustomization& CharacterGearCustomization, EWearableSlot Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetWearableNames");

	Params::MordhauUtilityLibrary_GetWearableNames Parms{};

	Parms.CharacterGearCustomization = std::move(CharacterGearCustomization);
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetWearableSlot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UMordhauWearable>     Wearable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWearableSlot                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EWearableSlot UMordhauUtilityLibrary::GetWearableSlot(TSubclassOf<class UMordhauWearable> Wearable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetWearableSlot");

	Params::MordhauUtilityLibrary_GetWearableSlot Parms{};

	Parms.Wearable = Wearable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetWorldOf
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWorld* UMordhauUtilityLibrary::GetWorldOf(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetWorldOf");

	Params::MordhauUtilityLibrary_GetWorldOf Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GetXPFromRank
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Rank                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::GetXPFromRank(int32 Rank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GetXPFromRank");

	Params::MordhauUtilityLibrary_GetXPFromRank Parms{};

	Parms.Rank = Rank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.GrowBoxToIncludePoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FBox                             Box                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          Vector                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBox                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FBox UMordhauUtilityLibrary::GrowBoxToIncludePoint(const struct FBox& Box, const struct FVector& Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "GrowBoxToIncludePoint");

	Params::MordhauUtilityLibrary_GrowBoxToIncludePoint Parms{};

	Parms.Box = std::move(Box);
	Parms.Vector = std::move(Vector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.HasActorBegunPlay
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::HasActorBegunPlay(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "HasActorBegunPlay");

	Params::MordhauUtilityLibrary_HasActorBegunPlay Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.HasBeenReallyRecentlyRendered
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMeshComponent*                   MeshComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::HasBeenReallyRecentlyRendered(class UMeshComponent* MeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "HasBeenReallyRecentlyRendered");

	Params::MordhauUtilityLibrary_HasBeenReallyRecentlyRendered Parms{};

	Parms.MeshComponent = MeshComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.HasPath
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AAIController*                    Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::HasPath(class AAIController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "HasPath");

	Params::MordhauUtilityLibrary_HasPath Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsClient
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsClient");

	Params::MordhauUtilityLibrary_IsClient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsCommunityServer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsCommunityServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsCommunityServer");

	Params::MordhauUtilityLibrary_IsCommunityServer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsConsolePlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsConsolePlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsConsolePlatform");

	Params::MordhauUtilityLibrary_IsConsolePlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsDedicatedServer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsDedicatedServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsDedicatedServer");

	Params::MordhauUtilityLibrary_IsDedicatedServer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsDemoPlayback
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsDemoPlayback(class UWorld* World)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsDemoPlayback");

	Params::MordhauUtilityLibrary_IsDemoPlayback Parms{};

	Parms.World = World;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsDevelopmentBranch
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsDevelopmentBranch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsDevelopmentBranch");

	Params::MordhauUtilityLibrary_IsDevelopmentBranch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsDevelopmentBuild
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsDevelopmentBuild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsDevelopmentBuild");

	Params::MordhauUtilityLibrary_IsDevelopmentBuild Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsDevelopmentEnvironment
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsDevelopmentEnvironment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsDevelopmentEnvironment");

	Params::MordhauUtilityLibrary_IsDevelopmentEnvironment Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsDLCInstalled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDownloadableContent                    DLC                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsDLCInstalled(const EDownloadableContent DLC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsDLCInstalled");

	Params::MordhauUtilityLibrary_IsDLCInstalled Parms{};

	Parms.DLC = DLC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsEditor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsEditor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsEditor");

	Params::MordhauUtilityLibrary_IsEditor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsFriend
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AMordhauPlayerState*              Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool UMordhauUtilityLibrary::IsFriend(class AMordhauPlayerState* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsFriend");

	Params::MordhauUtilityLibrary_IsFriend Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsFriendlyToLocalPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWorld*                           WorldReference                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsFriendlyToLocalPlayer(class UWorld* WorldReference, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsFriendlyToLocalPlayer");

	Params::MordhauUtilityLibrary_IsFriendlyToLocalPlayer Parms{};

	Parms.WorldReference = WorldReference;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsListenServer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsListenServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsListenServer");

	Params::MordhauUtilityLibrary_IsListenServer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsNonShippingBuildConfig
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsNonShippingBuildConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsNonShippingBuildConfig");

	Params::MordhauUtilityLibrary_IsNonShippingBuildConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsOfficialServer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsOfficialServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsOfficialServer");

	Params::MordhauUtilityLibrary_IsOfficialServer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsOnlinePurchaseQueryEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsOnlinePurchaseQueryEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsOnlinePurchaseQueryEnabled");

	Params::MordhauUtilityLibrary_IsOnlinePurchaseQueryEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsPartyMember
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AMordhauPlayerState*              Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool UMordhauUtilityLibrary::IsPartyMember(class AMordhauPlayerState* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsPartyMember");

	Params::MordhauUtilityLibrary_IsPartyMember Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsPIE
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsPIE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsPIE");

	Params::MordhauUtilityLibrary_IsPIE Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsPlayInEditor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsPlayInEditor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsPlayInEditor");

	Params::MordhauUtilityLibrary_IsPlayInEditor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsPrivateIPAddress
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           IPAddress                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsPrivateIPAddress(const class FString& IPAddress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsPrivateIPAddress");

	Params::MordhauUtilityLibrary_IsPrivateIPAddress Parms{};

	Parms.IPAddress = std::move(IPAddress);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsPublicIPAddress
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           IPAddress                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsPublicIPAddress(const class FString& IPAddress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsPublicIPAddress");

	Params::MordhauUtilityLibrary_IsPublicIPAddress Parms{};

	Parms.IPAddress = std::move(IPAddress);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsReflexAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsReflexAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsReflexAvailable");

	Params::MordhauUtilityLibrary_IsReflexAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsServer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsServer");

	Params::MordhauUtilityLibrary_IsServer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsStandalone
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsStandalone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsStandalone");

	Params::MordhauUtilityLibrary_IsStandalone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsValid_PlayFabPlayer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsValid_PlayFabPlayer(const struct FPlayFabPlayer& Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsValid_PlayFabPlayer");

	Params::MordhauUtilityLibrary_IsValid_PlayFabPlayer Parms{};

	Parms.Player = std::move(Player);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.IsValidIPAddress
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           IPAddress                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::IsValidIPAddress(const class FString& IPAddress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "IsValidIPAddress");

	Params::MordhauUtilityLibrary_IsValidIPAddress Parms{};

	Parms.IPAddress = std::move(IPAddress);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.LerpPOV
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPOV                             A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FPOV                             B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPOV                             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPOV UMordhauUtilityLibrary::LerpPOV(const struct FPOV& A, const struct FPOV& B, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "LerpPOV");

	Params::MordhauUtilityLibrary_LerpPOV Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.LineTraceMultiForObjectsReturnFace
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Start                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          End                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EObjectTypeQuery>                ObjectTypes                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bTraceComplex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ActorsToIgnore                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EDrawDebugTrace                         DrawDebugType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>               OutHits                                                (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    bIgnoreSelf                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::LineTraceMultiForObjectsReturnFace(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const TArray<EObjectTypeQuery>& ObjectTypes, bool bTraceComplex, const TArray<class AActor*>& ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "LineTraceMultiForObjectsReturnFace");

	Params::MordhauUtilityLibrary_LineTraceMultiForObjectsReturnFace Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.ObjectTypes = std::move(ObjectTypes);
	Parms.bTraceComplex = bTraceComplex;
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);
	Parms.DrawDebugType = DrawDebugType;
	Parms.bIgnoreSelf = bIgnoreSelf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHits != nullptr)
		*OutHits = std::move(Parms.OutHits);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.LoadArrayFromFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           LoadedArray                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           FileExtension                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::LoadArrayFromFile(const class FString& Filename, TArray<uint8>* LoadedArray, const class FString& FileExtension)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "LoadArrayFromFile");

	Params::MordhauUtilityLibrary_LoadArrayFromFile Parms{};

	Parms.Filename = std::move(Filename);
	Parms.FileExtension = std::move(FileExtension);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (LoadedArray != nullptr)
		*LoadedArray = std::move(Parms.LoadedArray);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.LoadAsset
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath                  SoftObjectPath                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UMordhauUtilityLibrary::LoadAsset(const struct FSoftObjectPath& SoftObjectPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "LoadAsset");

	Params::MordhauUtilityLibrary_LoadAsset Parms{};

	Parms.SoftObjectPath = std::move(SoftObjectPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.LoadReportImageByteArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           ImageName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           LoadedArray                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::LoadReportImageByteArray(const class FString& ImageName, TArray<uint8>* LoadedArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "LoadReportImageByteArray");

	Params::MordhauUtilityLibrary_LoadReportImageByteArray Parms{};

	Parms.ImageName = std::move(ImageName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (LoadedArray != nullptr)
		*LoadedArray = std::move(Parms.LoadedArray);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.LoadStringArrayFromFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   LoadedStringArray                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           FileExtension                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::LoadStringArrayFromFile(const class FString& Filename, TArray<class FString>* LoadedStringArray, const class FString& FileExtension)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "LoadStringArrayFromFile");

	Params::MordhauUtilityLibrary_LoadStringArrayFromFile Parms{};

	Parms.Filename = std::move(Filename);
	Parms.FileExtension = std::move(FileExtension);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (LoadedStringArray != nullptr)
		*LoadedStringArray = std::move(Parms.LoadedStringArray);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.LoadStringFromFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           LoadedString                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FileExtension                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::LoadStringFromFile(const class FString& Filename, class FString* LoadedString, const class FString& FileExtension)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "LoadStringFromFile");

	Params::MordhauUtilityLibrary_LoadStringFromFile Parms{};

	Parms.Filename = std::move(Filename);
	Parms.FileExtension = std::move(FileExtension);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (LoadedString != nullptr)
		*LoadedString = std::move(Parms.LoadedString);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.MakeEmptyProfile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AMordhauCharacter>    CharacterClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRandomizeVoice                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharacterProfile                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCharacterProfile UMordhauUtilityLibrary::MakeEmptyProfile(TSubclassOf<class AMordhauCharacter> CharacterClass, bool bRandomizeVoice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "MakeEmptyProfile");

	Params::MordhauUtilityLibrary_MakeEmptyProfile Parms{};

	Parms.CharacterClass = CharacterClass;
	Parms.bRandomizeVoice = bRandomizeVoice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.MakeFaceCustomization
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<int32>                           Translate                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           Rotate                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           Scale                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFaceCustomization               FaceCustomization                                      (Parm, OutParm, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::MakeFaceCustomization(const TArray<int32>& Translate, const TArray<int32>& Rotate, const TArray<int32>& Scale, struct FFaceCustomization* FaceCustomization)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "MakeFaceCustomization");

	Params::MordhauUtilityLibrary_MakeFaceCustomization Parms{};

	Parms.Translate = std::move(Translate);
	Parms.Rotate = std::move(Rotate);
	Parms.Scale = std::move(Scale);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FaceCustomization != nullptr)
		*FaceCustomization = std::move(Parms.FaceCustomization);
}


// Function Mordhau.MordhauUtilityLibrary.MakeSkillsCustomization
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Perks                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSkillsCustomization             OutSkillsCustomization                                 (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::MakeSkillsCustomization(int32 Perks, struct FSkillsCustomization* OutSkillsCustomization)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "MakeSkillsCustomization");

	Params::MordhauUtilityLibrary_MakeSkillsCustomization Parms{};

	Parms.Perks = Perks;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSkillsCustomization != nullptr)
		*OutSkillsCustomization = std::move(Parms.OutSkillsCustomization);
}


// Function Mordhau.MordhauUtilityLibrary.MarkRenderStateDirty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent*                   MeshComp                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::MarkRenderStateDirty(class UMeshComponent* MeshComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "MarkRenderStateDirty");

	Params::MordhauUtilityLibrary_MarkRenderStateDirty Parms{};

	Parms.MeshComp = MeshComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.MordhauApplyRadialDamageWithFalloff
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BaseDamage                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinimumDamage                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BaseStructureDamage                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinimumStructureDamage                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Origin                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DamageInnerRadius                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DamageOuterRadius                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DamageFalloff                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   IgnoreActors                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   BaseKnockback                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinimumKnockback                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RagdollFallRadius                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedByController                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECollisionChannel                       DamagePreventionChannel                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreFriendly                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMordhauDamageType                      DamageType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::MordhauApplyRadialDamageWithFalloff(const class UObject* WorldContextObject, float BaseDamage, float MinimumDamage, float BaseStructureDamage, float MinimumStructureDamage, const struct FVector& Origin, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, const TArray<class AActor*>& IgnoreActors, float BaseKnockback, float MinimumKnockback, float RagdollFallRadius, class AActor* DamageCauser, class AController* InstigatedByController, ECollisionChannel DamagePreventionChannel, bool bIgnoreFriendly, EMordhauDamageType DamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "MordhauApplyRadialDamageWithFalloff");

	Params::MordhauUtilityLibrary_MordhauApplyRadialDamageWithFalloff Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.BaseDamage = BaseDamage;
	Parms.MinimumDamage = MinimumDamage;
	Parms.BaseStructureDamage = BaseStructureDamage;
	Parms.MinimumStructureDamage = MinimumStructureDamage;
	Parms.Origin = std::move(Origin);
	Parms.DamageInnerRadius = DamageInnerRadius;
	Parms.DamageOuterRadius = DamageOuterRadius;
	Parms.DamageFalloff = DamageFalloff;
	Parms.IgnoreActors = std::move(IgnoreActors);
	Parms.BaseKnockback = BaseKnockback;
	Parms.MinimumKnockback = MinimumKnockback;
	Parms.RagdollFallRadius = RagdollFallRadius;
	Parms.DamageCauser = DamageCauser;
	Parms.InstigatedByController = InstigatedByController;
	Parms.DamagePreventionChannel = DamagePreventionChannel;
	Parms.bIgnoreFriendly = bIgnoreFriendly;
	Parms.DamageType = DamageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.MountPak
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           PakPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::MountPak(const class FString& PakPath, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "MountPak");

	Params::MordhauUtilityLibrary_MountPak Parms{};

	Parms.PakPath = std::move(PakPath);
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.NotEqual_PlayFabPlayer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPlayFabPlayer                   A                                                      (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayFabPlayer                   B                                                      (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::NotEqual_PlayFabPlayer(const struct FPlayFabPlayer& A, const struct FPlayFabPlayer& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "NotEqual_PlayFabPlayer");

	Params::MordhauUtilityLibrary_NotEqual_PlayFabPlayer Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.OpenDiscordInvite
// (Final, Native, Static, Public, BlueprintCallable)

void UMordhauUtilityLibrary::OpenDiscordInvite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "OpenDiscordInvite");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.OpenDLCStorePage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           DlcId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::OpenDLCStorePage(const class FString& DlcId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "OpenDLCStorePage");

	Params::MordhauUtilityLibrary_OpenDLCStorePage Parms{};

	Parms.DlcId = std::move(DlcId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.OpenKeyBindings
// (Final, Native, Static, Public, BlueprintCallable)

void UMordhauUtilityLibrary::OpenKeyBindings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "OpenKeyBindings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.OpenPlayerProfile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::OpenPlayerProfile(const struct FPlayFabPlayer& Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "OpenPlayerProfile");

	Params::MordhauUtilityLibrary_OpenPlayerProfile Parms{};

	Parms.Player = std::move(Player);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.OpenRentServer
// (Final, Native, Static, Public, BlueprintCallable)

void UMordhauUtilityLibrary::OpenRentServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "OpenRentServer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.OpenSocial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::OpenSocial(const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "OpenSocial");

	Params::MordhauUtilityLibrary_OpenSocial Parms{};

	Parms.URL = std::move(URL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.OpenURL
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::OpenURL(const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "OpenURL");

	Params::MordhauUtilityLibrary_OpenURL Parms{};

	Parms.URL = std::move(URL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.PerformCharacterRenderingStressTest
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AMordhauCharacter>    Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Spread                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DistanceFromCamera                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::PerformCharacterRenderingStressTest(const class UObject* WorldContextObject, TSubclassOf<class AMordhauCharacter> Type, int32 Amount, float Spread, float DistanceFromCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "PerformCharacterRenderingStressTest");

	Params::MordhauUtilityLibrary_PerformCharacterRenderingStressTest Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Type = Type;
	Parms.Amount = Amount;
	Parms.Spread = Spread;
	Parms.DistanceFromCamera = DistanceFromCamera;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.PlaneTrace
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Left                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Right                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Forward                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Back                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          TraceAmount                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EObjectTypeQuery>                ObjectTypes                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bTraceComplex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ActorsToIgnore                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bConnectLeftRight                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bConnectForwardBack                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ConnectOffset                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       LeftHit                                                (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FHitResult                       RightHit                                               (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FHitResult                       ForwardHit                                             (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FHitResult                       BackHit                                                (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                          OutRight                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutForward                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreSelf                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::PlaneTrace(class UObject* WorldContextObject, const struct FVector& Left, const struct FVector& Right, const struct FVector& Forward, const struct FVector& Back, const struct FVector& TraceAmount, const TArray<EObjectTypeQuery>& ObjectTypes, bool bTraceComplex, const TArray<class AActor*>& ActorsToIgnore, bool bConnectLeftRight, bool bConnectForwardBack, const struct FVector& ConnectOffset, struct FHitResult* LeftHit, struct FHitResult* RightHit, struct FHitResult* ForwardHit, struct FHitResult* BackHit, struct FVector* OutRight, struct FVector* OutForward, bool bIgnoreSelf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "PlaneTrace");

	Params::MordhauUtilityLibrary_PlaneTrace Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Left = std::move(Left);
	Parms.Right = std::move(Right);
	Parms.Forward = std::move(Forward);
	Parms.Back = std::move(Back);
	Parms.TraceAmount = std::move(TraceAmount);
	Parms.ObjectTypes = std::move(ObjectTypes);
	Parms.bTraceComplex = bTraceComplex;
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);
	Parms.bConnectLeftRight = bConnectLeftRight;
	Parms.bConnectForwardBack = bConnectForwardBack;
	Parms.ConnectOffset = std::move(ConnectOffset);
	Parms.bIgnoreSelf = bIgnoreSelf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (LeftHit != nullptr)
		*LeftHit = std::move(Parms.LeftHit);

	if (RightHit != nullptr)
		*RightHit = std::move(Parms.RightHit);

	if (ForwardHit != nullptr)
		*ForwardHit = std::move(Parms.ForwardHit);

	if (BackHit != nullptr)
		*BackHit = std::move(Parms.BackHit);

	if (OutRight != nullptr)
		*OutRight = std::move(Parms.OutRight);

	if (OutForward != nullptr)
		*OutForward = std::move(Parms.OutForward);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.PrintToConsoleAndLog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSkipRepeatedStrings                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::PrintToConsoleAndLog(const class FString& String, bool bSkipRepeatedStrings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "PrintToConsoleAndLog");

	Params::MordhauUtilityLibrary_PrintToConsoleAndLog Parms{};

	Parms.String = std::move(String);
	Parms.bSkipRepeatedStrings = bSkipRepeatedStrings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.ProjectWorldToScreenBidirectional
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController*                Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldPosition                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ScreenPosition                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTargetBehindCamera                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerViewportRelative                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::ProjectWorldToScreenBidirectional(class APlayerController* Player, const struct FVector& WorldPosition, struct FVector2D* ScreenPosition, bool* bTargetBehindCamera, bool bPlayerViewportRelative)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "ProjectWorldToScreenBidirectional");

	Params::MordhauUtilityLibrary_ProjectWorldToScreenBidirectional Parms{};

	Parms.Player = Player;
	Parms.WorldPosition = std::move(WorldPosition);
	Parms.bPlayerViewportRelative = bPlayerViewportRelative;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ScreenPosition != nullptr)
		*ScreenPosition = std::move(Parms.ScreenPosition);

	if (bTargetBehindCamera != nullptr)
		*bTargetBehindCamera = Parms.bTargetBehindCamera;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.RandomRangeExclude
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Min                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Max                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Exclude                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::RandomRangeExclude(int32 Min, int32 Max, int32 Exclude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "RandomRangeExclude");

	Params::MordhauUtilityLibrary_RandomRangeExclude Parms{};

	Parms.Min = Min;
	Parms.Max = Max;
	Parms.Exclude = Exclude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.ReserveCharacterRagdoll
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::ReserveCharacterRagdoll(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "ReserveCharacterRagdoll");

	Params::MordhauUtilityLibrary_ReserveCharacterRagdoll Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.ResetClientPredictionData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCharacterMovementComponent*      CMC                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::ResetClientPredictionData(class UCharacterMovementComponent* CMC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "ResetClientPredictionData");

	Params::MordhauUtilityLibrary_ResetClientPredictionData Parms{};

	Parms.CMC = CMC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.ResetController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AController*                      Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::ResetController(class AController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "ResetController");

	Params::MordhauUtilityLibrary_ResetController Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.ResetServerPredictionData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCharacterMovementComponent*      CMC                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::ResetServerPredictionData(class UCharacterMovementComponent* CMC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "ResetServerPredictionData");

	Params::MordhauUtilityLibrary_ResetServerPredictionData Parms{};

	Parms.CMC = CMC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SanitizePlayerName
// (Final, Native, Static, Public)
// Parameters:
// class FString                           InName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InFallback                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::SanitizePlayerName(const class FString& InName, const class FString& InFallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SanitizePlayerName");

	Params::MordhauUtilityLibrary_SanitizePlayerName Parms{};

	Parms.InName = std::move(InName);
	Parms.InFallback = std::move(InFallback);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SaveArrayToFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ByteArray                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           FileExtension                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::SaveArrayToFile(const class FString& Filename, const TArray<uint8>& ByteArray, const class FString& FileExtension)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SaveArrayToFile");

	Params::MordhauUtilityLibrary_SaveArrayToFile Parms{};

	Parms.Filename = std::move(Filename);
	Parms.ByteArray = std::move(ByteArray);
	Parms.FileExtension = std::move(FileExtension);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SaveStringArrayToFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   StringArray                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           FileExtension                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::SaveStringArrayToFile(const class FString& Filename, const TArray<class FString>& StringArray, const class FString& FileExtension)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SaveStringArrayToFile");

	Params::MordhauUtilityLibrary_SaveStringArrayToFile Parms{};

	Parms.Filename = std::move(Filename);
	Parms.StringArray = std::move(StringArray);
	Parms.FileExtension = std::move(FileExtension);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SaveStringToFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FileExtension                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::SaveStringToFile(const class FString& Filename, const class FString& String, const class FString& FileExtension)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SaveStringToFile");

	Params::MordhauUtilityLibrary_SaveStringToFile Parms{};

	Parms.Filename = std::move(Filename);
	Parms.String = std::move(String);
	Parms.FileExtension = std::move(FileExtension);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SCompare
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           StringA                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           StringB                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMordhauUtilityLibrary::SCompare(const class FString& StringA, const class FString& StringB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SCompare");

	Params::MordhauUtilityLibrary_SCompare Parms{};

	Parms.StringA = std::move(StringA);
	Parms.StringB = std::move(StringB);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SearchUsername
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Usernames                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bWasSuccessful, struct FPlayFabApiError& Error, struct FUsernameSearchResult& SearchResults)>Delegate                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EUsernameSearchFilter                   SearchFilter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Limit                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Offset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlatform                               PlatformFilter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SearchUsername(const class FString& Usernames, const TDelegate<void(bool bWasSuccessful, struct FPlayFabApiError& Error, struct FUsernameSearchResult& SearchResults)>& Delegate, EUsernameSearchFilter SearchFilter, int32 Limit, int32 Offset, EPlatform PlatformFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SearchUsername");

	Params::MordhauUtilityLibrary_SearchUsername Parms{};

	Parms.Usernames = std::move(Usernames);
	Parms.Delegate = Delegate;
	Parms.SearchFilter = SearchFilter;
	Parms.Limit = Limit;
	Parms.Offset = Offset;
	Parms.PlatformFilter = PlatformFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SendClientAdjustment
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCharacterMovementComponent*      CMC                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SendClientAdjustment(class UCharacterMovementComponent* CMC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SendClientAdjustment");

	Params::MordhauUtilityLibrary_SendClientAdjustment Parms{};

	Parms.CMC = CMC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SendMessageToRconClients
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ClientId                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bToAll                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBroadcastTypes                         TypeOfBroadcast                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::SendMessageToRconClients(const class FString& Message, const int32& ClientId, bool bToAll, EBroadcastTypes TypeOfBroadcast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SendMessageToRconClients");

	Params::MordhauUtilityLibrary_SendMessageToRconClients Parms{};

	Parms.Message = std::move(Message);
	Parms.ClientId = ClientId;
	Parms.bToAll = bToAll;
	Parms.TypeOfBroadcast = TypeOfBroadcast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SetCachedMaxDistanceAndMarkDirty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              Comp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewMaxDistance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetCachedMaxDistanceAndMarkDirty(class UPrimitiveComponent* Comp, float NewMaxDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetCachedMaxDistanceAndMarkDirty");

	Params::MordhauUtilityLibrary_SetCachedMaxDistanceAndMarkDirty Parms{};

	Parms.Comp = Comp;
	Parms.NewMaxDistance = NewMaxDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetCanEverAffectNavigation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UActorComponent*                  ActorComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRelevant                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetCanEverAffectNavigation(class UActorComponent* ActorComponent, bool bRelevant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetCanEverAffectNavigation");

	Params::MordhauUtilityLibrary_SetCanEverAffectNavigation Parms{};

	Parms.ActorComponent = ActorComponent;
	Parms.bRelevant = bRelevant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetCustomConfigVar_Array
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   Value                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetCustomConfigVar_Array(const class FString& SectionName, const class FString& VariableName, const TArray<class FString>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetCustomConfigVar_Array");

	Params::MordhauUtilityLibrary_SetCustomConfigVar_Array Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.VariableName = std::move(VariableName);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetCustomConfigVar_Bool
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetCustomConfigVar_Bool(const class FString& SectionName, const class FString& VariableName, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetCustomConfigVar_Bool");

	Params::MordhauUtilityLibrary_SetCustomConfigVar_Bool Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.VariableName = std::move(VariableName);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetCustomConfigVar_Color
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetCustomConfigVar_Color(const class FString& SectionName, const class FString& VariableName, const struct FLinearColor& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetCustomConfigVar_Color");

	Params::MordhauUtilityLibrary_SetCustomConfigVar_Color Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.VariableName = std::move(VariableName);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetCustomConfigVar_Float
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetCustomConfigVar_Float(const class FString& SectionName, const class FString& VariableName, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetCustomConfigVar_Float");

	Params::MordhauUtilityLibrary_SetCustomConfigVar_Float Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.VariableName = std::move(VariableName);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetCustomConfigVar_Int
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetCustomConfigVar_Int(const class FString& SectionName, const class FString& VariableName, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetCustomConfigVar_Int");

	Params::MordhauUtilityLibrary_SetCustomConfigVar_Int Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.VariableName = std::move(VariableName);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetCustomConfigVar_Rotator
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetCustomConfigVar_Rotator(const class FString& SectionName, const class FString& VariableName, const struct FRotator& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetCustomConfigVar_Rotator");

	Params::MordhauUtilityLibrary_SetCustomConfigVar_Rotator Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.VariableName = std::move(VariableName);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetCustomConfigVar_String
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetCustomConfigVar_String(const class FString& SectionName, const class FString& VariableName, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetCustomConfigVar_String");

	Params::MordhauUtilityLibrary_SetCustomConfigVar_String Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.VariableName = std::move(VariableName);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetCustomConfigVar_Vector
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetCustomConfigVar_Vector(const class FString& SectionName, const class FString& VariableName, const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetCustomConfigVar_Vector");

	Params::MordhauUtilityLibrary_SetCustomConfigVar_Vector Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.VariableName = std::move(VariableName);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetCustomConfigVar_Vector2D
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetCustomConfigVar_Vector2D(const class FString& SectionName, const class FString& VariableName, const struct FVector2D& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetCustomConfigVar_Vector2D");

	Params::MordhauUtilityLibrary_SetCustomConfigVar_Vector2D Parms{};

	Parms.SectionName = std::move(SectionName);
	Parms.VariableName = std::move(VariableName);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetDecalFadeScreenSize
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDecalComponent*                  Decal                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewFadeScreenSize                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetDecalFadeScreenSize(class UDecalComponent* Decal, float NewFadeScreenSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetDecalFadeScreenSize");

	Params::MordhauUtilityLibrary_SetDecalFadeScreenSize Parms{};

	Parms.Decal = Decal;
	Parms.NewFadeScreenSize = NewFadeScreenSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetForceMipStreaming
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           SMC                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetForceMipStreaming(class USkeletalMeshComponent* SMC, bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetForceMipStreaming");

	Params::MordhauUtilityLibrary_SetForceMipStreaming Parms{};

	Parms.SMC = SMC;
	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetLocalSpaceKinematics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           Mesh                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetLocalSpaceKinematics(class USkeletalMeshComponent* Mesh, bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetLocalSpaceKinematics");

	Params::MordhauUtilityLibrary_SetLocalSpaceKinematics Parms{};

	Parms.Mesh = Mesh;
	Parms.bNewValue = bNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetLODActorDrawDistance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ALODActor*                        Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewDrawDistance                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetLODActorDrawDistance(class ALODActor* Actor, float NewDrawDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetLODActorDrawDistance");

	Params::MordhauUtilityLibrary_SetLODActorDrawDistance Parms{};

	Parms.Actor = Actor;
	Parms.NewDrawDistance = NewDrawDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetMousePosition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LocationX                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LocationY                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetMousePosition(class APlayerController* Controller, float LocationX, float LocationY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetMousePosition");

	Params::MordhauUtilityLibrary_SetMousePosition Parms{};

	Parms.Controller = Controller;
	Parms.LocationX = LocationX;
	Parms.LocationY = LocationY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetNavAreaClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UShapeComponent*                  ShapeComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UNavArea>             AreaClass                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetNavAreaClass(class UShapeComponent* ShapeComponent, TSubclassOf<class UNavArea> AreaClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetNavAreaClass");

	Params::MordhauUtilityLibrary_SetNavAreaClass Parms{};

	Parms.ShapeComponent = ShapeComponent;
	Parms.AreaClass = AreaClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetNeverDistanceCull
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              Comp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetNeverDistanceCull(class UPrimitiveComponent* Comp, bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetNeverDistanceCull");

	Params::MordhauUtilityLibrary_SetNeverDistanceCull Parms{};

	Parms.Comp = Comp;
	Parms.bNewValue = bNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetPawnFromRep
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AController*                      Contr                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            NewPawn                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetPawnFromRep(class AController* Contr, class APawn* NewPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetPawnFromRep");

	Params::MordhauUtilityLibrary_SetPawnFromRep Parms{};

	Parms.Contr = Contr;
	Parms.NewPawn = NewPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetPerBoneMotionBlur
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           Component                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetPerBoneMotionBlur(class USkeletalMeshComponent* Component, bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetPerBoneMotionBlur");

	Params::MordhauUtilityLibrary_SetPerBoneMotionBlur Parms{};

	Parms.Component = Component;
	Parms.bNewValue = bNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetRealMultiplayerStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCrossplay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSpectate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetRealMultiplayerStatus(bool bEnable, bool bCrossplay, bool bSpectate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetRealMultiplayerStatus");

	Params::MordhauUtilityLibrary_SetRealMultiplayerStatus Parms{};

	Parms.bEnable = bEnable;
	Parms.bCrossplay = bCrossplay;
	Parms.bSpectate = bSpectate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetSoundMixVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ESoundMix                               SoundMix                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetSoundMixVolume(ESoundMix SoundMix, float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetSoundMixVolume");

	Params::MordhauUtilityLibrary_SetSoundMixVolume Parms{};

	Parms.SoundMix = SoundMix;
	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SetVisibilityId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              Comp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::SetVisibilityId(class UPrimitiveComponent* Comp, int32 NewId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SetVisibilityId");

	Params::MordhauUtilityLibrary_SetVisibilityId Parms{};

	Parms.Comp = Comp;
	Parms.NewId = NewId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.SGreaterThan
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           StringA                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           StringB                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::SGreaterThan(const class FString& StringA, const class FString& StringB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SGreaterThan");

	Params::MordhauUtilityLibrary_SGreaterThan Parms{};

	Parms.StringA = std::move(StringA);
	Parms.StringB = std::move(StringB);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SLessThan
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           StringA                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           StringB                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::SLessThan(const class FString& StringA, const class FString& StringB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SLessThan");

	Params::MordhauUtilityLibrary_SLessThan Parms{};

	Parms.StringA = std::move(StringA);
	Parms.StringB = std::move(StringB);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.Snap180AngleToSteps
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Angle180                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Step                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMordhauUtilityLibrary::Snap180AngleToSteps(float Angle180, float Step)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "Snap180AngleToSteps");

	Params::MordhauUtilityLibrary_Snap180AngleToSteps Parms{};

	Parms.Angle180 = Angle180;
	Parms.Step = Step;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SortAndFilterArrayByFunction
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UObject*>                  Array                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(class UObject* ObjA, class UObject* ObjB, bool* RetVal)>FuncDel                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TSubclassOf<class UObject>              Class_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UObject*>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UObject*> UMordhauUtilityLibrary::SortAndFilterArrayByFunction(const TArray<class UObject*>& Array, const TDelegate<void(class UObject* ObjA, class UObject* ObjB, bool* RetVal)>& FuncDel, const TSubclassOf<class UObject> Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SortAndFilterArrayByFunction");

	Params::MordhauUtilityLibrary_SortAndFilterArrayByFunction Parms{};

	Parms.Array = std::move(Array);
	Parms.FuncDel = FuncDel;
	Parms.Class_0 = Class_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SortArrayByFunction
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UObject*>                  Array                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(class UObject* ObjA, class UObject* ObjB, bool* RetVal)>FuncDel                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<class UObject*>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UObject*> UMordhauUtilityLibrary::SortArrayByFunction(const TArray<class UObject*>& Array, const TDelegate<void(class UObject* ObjA, class UObject* ObjB, bool* RetVal)>& FuncDel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SortArrayByFunction");

	Params::MordhauUtilityLibrary_SortArrayByFunction Parms{};

	Parms.Array = std::move(Array);
	Parms.FuncDel = FuncDel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SortArrayByProperty
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UObject*>                  Array                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             PropertyName                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAscending                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWasTypeValid                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UObject*>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UObject*> UMordhauUtilityLibrary::SortArrayByProperty(const TArray<class UObject*>& Array, const class FName& PropertyName, bool bAscending, bool* bWasTypeValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SortArrayByProperty");

	Params::MordhauUtilityLibrary_SortArrayByProperty Parms{};

	Parms.Array = std::move(Array);
	Parms.PropertyName = PropertyName;
	Parms.bAscending = bAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bWasTypeValid != nullptr)
		*bWasTypeValid = Parms.bWasTypeValid;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SortForMatchmaking
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FServerSearchResult>      Array                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FServerSearchResult>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FServerSearchResult> UMordhauUtilityLibrary::SortForMatchmaking(const TArray<struct FServerSearchResult>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SortForMatchmaking");

	Params::MordhauUtilityLibrary_SortForMatchmaking Parms{};

	Parms.Array = std::move(Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SortForMatchmakingByLocationPreference
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FPlayFabGameServer>       Servers                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<EServerLocation>                 LocationPreference                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FPlayFabGameServer>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FPlayFabGameServer> UMordhauUtilityLibrary::SortForMatchmakingByLocationPreference(const TArray<struct FPlayFabGameServer>& Servers, const TArray<EServerLocation>& LocationPreference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SortForMatchmakingByLocationPreference");

	Params::MordhauUtilityLibrary_SortForMatchmakingByLocationPreference Parms{};

	Parms.Servers = std::move(Servers);
	Parms.LocationPreference = std::move(LocationPreference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SortForServerBrowserByCount
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FServerSearchResult>      Array                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bSortAscending                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FServerSearchResult>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FServerSearchResult> UMordhauUtilityLibrary::SortForServerBrowserByCount(const TArray<struct FServerSearchResult>& Array, bool bSortAscending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SortForServerBrowserByCount");

	Params::MordhauUtilityLibrary_SortForServerBrowserByCount Parms{};

	Parms.Array = std::move(Array);
	Parms.bSortAscending = bSortAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SortForServerBrowserByGameModeName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FServerSearchResult>      Array                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bSortAscending                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FServerSearchResult>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FServerSearchResult> UMordhauUtilityLibrary::SortForServerBrowserByGameModeName(const TArray<struct FServerSearchResult>& Array, bool bSortAscending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SortForServerBrowserByGameModeName");

	Params::MordhauUtilityLibrary_SortForServerBrowserByGameModeName Parms{};

	Parms.Array = std::move(Array);
	Parms.bSortAscending = bSortAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SortForServerBrowserByMapName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FServerSearchResult>      Array                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bSortAscending                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FServerSearchResult>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FServerSearchResult> UMordhauUtilityLibrary::SortForServerBrowserByMapName(const TArray<struct FServerSearchResult>& Array, bool bSortAscending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SortForServerBrowserByMapName");

	Params::MordhauUtilityLibrary_SortForServerBrowserByMapName Parms{};

	Parms.Array = std::move(Array);
	Parms.bSortAscending = bSortAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SortForServerBrowserByPing
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FServerSearchResult>      Array                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bSortAscending                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FServerSearchResult>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FServerSearchResult> UMordhauUtilityLibrary::SortForServerBrowserByPing(const TArray<struct FServerSearchResult>& Array, bool bSortAscending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SortForServerBrowserByPing");

	Params::MordhauUtilityLibrary_SortForServerBrowserByPing Parms{};

	Parms.Array = std::move(Array);
	Parms.bSortAscending = bSortAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SortForServerBrowserByServerName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FServerSearchResult>      Array                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bSortAscending                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FServerSearchResult>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FServerSearchResult> UMordhauUtilityLibrary::SortForServerBrowserByServerName(const TArray<struct FServerSearchResult>& Array, bool bSortAscending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SortForServerBrowserByServerName");

	Params::MordhauUtilityLibrary_SortForServerBrowserByServerName Parms{};

	Parms.Array = std::move(Array);
	Parms.bSortAscending = bSortAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SortIntArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           Array                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bSortAscending                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UMordhauUtilityLibrary::SortIntArray(const TArray<int32>& Array, bool bSortAscending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SortIntArray");

	Params::MordhauUtilityLibrary_SortIntArray Parms{};

	Parms.Array = std::move(Array);
	Parms.bSortAscending = bSortAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SortPlayers
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AMordhauPlayerState*>      Array                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AMordhauPlayerState*>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AMordhauPlayerState*> UMordhauUtilityLibrary::SortPlayers(const TArray<class AMordhauPlayerState*>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SortPlayers");

	Params::MordhauUtilityLibrary_SortPlayers Parms{};

	Parms.Array = std::move(Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SortQueueNamesByBestMatch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<class FString, struct FPlayFabMatchmakingMatch>Matches                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UMordhauUtilityLibrary::SortQueueNamesByBestMatch(const TMap<class FString, struct FPlayFabMatchmakingMatch>& Matches)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SortQueueNamesByBestMatch");

	Params::MordhauUtilityLibrary_SortQueueNamesByBestMatch Parms{};

	Parms.Matches = std::move(Matches);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SortStringArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   Array                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bSortAscending                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UMordhauUtilityLibrary::SortStringArray(const TArray<class FString>& Array, bool bSortAscending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SortStringArray");

	Params::MordhauUtilityLibrary_SortStringArray Parms{};

	Parms.Array = std::move(Array);
	Parms.bSortAscending = bSortAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.SpawnBloodDecalAtLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               DecalMaterial                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          DecalSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   LifeSpan                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDecalComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDecalComponent* UMordhauUtilityLibrary::SpawnBloodDecalAtLocation(class UObject* WorldContextObject, class UMaterialInterface* DecalMaterial, const struct FVector& DecalSize, const struct FVector& Location, const struct FRotator& Rotation, float LifeSpan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "SpawnBloodDecalAtLocation");

	Params::MordhauUtilityLibrary_SpawnBloodDecalAtLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.DecalMaterial = DecalMaterial;
	Parms.DecalSize = std::move(DecalSize);
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.LifeSpan = LifeSpan;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.StripProfile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterProfile                InProfile                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bStripEquipment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStripPerks                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStripNonTier0Armor                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharacterProfile                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCharacterProfile UMordhauUtilityLibrary::StripProfile(const struct FCharacterProfile& InProfile, bool bStripEquipment, bool bStripPerks, bool bStripNonTier0Armor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "StripProfile");

	Params::MordhauUtilityLibrary_StripProfile Parms{};

	Parms.InProfile = std::move(InProfile);
	Parms.bStripEquipment = bStripEquipment;
	Parms.bStripPerks = bStripPerks;
	Parms.bStripNonTier0Armor = bStripNonTier0Armor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.TermAllChildBodiesOf
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           USMC                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::TermAllChildBodiesOf(class USkeletalMeshComponent* USMC, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "TermAllChildBodiesOf");

	Params::MordhauUtilityLibrary_TermAllChildBodiesOf Parms{};

	Parms.USMC = USMC;
	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.ToggleNavigation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PlayerController                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::ToggleNavigation(const class APlayerController* PlayerController, const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "ToggleNavigation");

	Params::MordhauUtilityLibrary_ToggleNavigation Parms{};

	Parms.PlayerController = PlayerController;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.TryExecuteHeavydutyOperation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           WorldObject                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsForced                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::TryExecuteHeavydutyOperation(class UWorld* WorldObject, bool bIsForced)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "TryExecuteHeavydutyOperation");

	Params::MordhauUtilityLibrary_TryExecuteHeavydutyOperation Parms{};

	Parms.WorldObject = WorldObject;
	Parms.bIsForced = bIsForced;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.UncompressData
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// class FString                           InData                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::UncompressData(const class FString& InData, TArray<uint8>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "UncompressData");

	Params::MordhauUtilityLibrary_UncompressData Parms{};

	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.UnmountPak
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           PakPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::UnmountPak(const class FString& PakPath, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "UnmountPak");

	Params::MordhauUtilityLibrary_UnmountPak Parms{};

	Parms.PakPath = std::move(PakPath);
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.UnpossessCharacterAndHandleSpectating
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AController*                      Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::UnpossessCharacterAndHandleSpectating(class AController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "UnpossessCharacterAndHandleSpectating");

	Params::MordhauUtilityLibrary_UnpossessCharacterAndHandleSpectating Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MordhauUtilityLibrary.UploadChat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ChatString                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMordhauUtilityLibrary::UploadChat(const class FString& ChatString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "UploadChat");

	Params::MordhauUtilityLibrary_UploadChat Parms{};

	Parms.ChatString = std::move(ChatString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.ValidateCharacterProfile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCharacterProfile                Profile                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bValidateInventory                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMordhauUtilityLibrary::ValidateCharacterProfile(const struct FCharacterProfile& Profile, bool bValidateInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "ValidateCharacterProfile");

	Params::MordhauUtilityLibrary_ValidateCharacterProfile Parms{};

	Parms.Profile = std::move(Profile);
	Parms.bValidateInventory = bValidateInventory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.MordhauUtilityLibrary.VSmoothDamp
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          Current                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Target                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          CurrentVelocity                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SmoothTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxSpeed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauUtilityLibrary::VSmoothDamp(struct FVector* Current, const struct FVector& Target, struct FVector* CurrentVelocity, float SmoothTime, float DeltaTime, float MaxSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MordhauUtilityLibrary", "VSmoothDamp");

	Params::MordhauUtilityLibrary_VSmoothDamp Parms{};

	Parms.Target = std::move(Target);
	Parms.SmoothTime = SmoothTime;
	Parms.DeltaTime = DeltaTime;
	Parms.MaxSpeed = MaxSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Current != nullptr)
		*Current = std::move(Parms.Current);

	if (CurrentVelocity != nullptr)
		*CurrentVelocity = std::move(Parms.CurrentVelocity);
}


// Function Mordhau.MordhauWidgetComponent.SetPlayerStateAlwaysSee
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerState*                     PlayerState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMordhauWidgetComponent::SetPlayerStateAlwaysSee(class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MordhauWidgetComponent", "SetPlayerStateAlwaysSee");

	Params::MordhauWidgetComponent_SetPlayerStateAlwaysSee Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MotionSystemComponent.OnClientSetNetMotion
// (Final, Native, Public)
// Parameters:
// struct FNetMotion                       NewMotion                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ServerStartTime                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMotionSystemComponent::OnClientSetNetMotion(const struct FNetMotion& NewMotion, float ServerStartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MotionSystemComponent", "OnClientSetNetMotion");

	Params::MotionSystemComponent_OnClientSetNetMotion Parms{};

	Parms.NewMotion = std::move(NewMotion);
	Parms.ServerStartTime = ServerStartTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MotionSystemComponent.OnLateTick
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMotionSystemComponent::OnLateTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MotionSystemComponent", "OnLateTick");

	Params::MotionSystemComponent_OnLateTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MotionSystemComponent.OnLODTick
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMotionSystemComponent::OnLODTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MotionSystemComponent", "OnLODTick");

	Params::MotionSystemComponent_OnLODTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MotionSystemComponent.OnPreBeginPlay
// (Final, Native, Public)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMotionSystemComponent::OnPreBeginPlay(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MotionSystemComponent", "OnPreBeginPlay");

	Params::MotionSystemComponent_OnPreBeginPlay Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MotionSystemComponent.OnServerAssignNetMotion
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FNetMotion                       NewNetMotion                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// uint8                                   LastAuthObserved                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMotionSystemComponent::OnServerAssignNetMotion(const struct FNetMotion& NewNetMotion, uint8 LastAuthObserved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MotionSystemComponent", "OnServerAssignNetMotion");

	Params::MotionSystemComponent_OnServerAssignNetMotion Parms{};

	Parms.NewNetMotion = std::move(NewNetMotion);
	Parms.LastAuthObserved = LastAuthObserved;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MoveSoundComponent.OnCharacterDied
// (Final, Native, Public)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoveSoundComponent::OnCharacterDied(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoveSoundComponent", "OnCharacterDied");

	Params::MoveSoundComponent_OnCharacterDied Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.MoveSoundComponent.OnLODTick
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoveSoundComponent::OnLODTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoveSoundComponent", "OnLODTick");

	Params::MoveSoundComponent_OnLODTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.OneDimensionalMovementComponent.SetMovementLine
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          NewLineStart                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NewLineEnd                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOneDimensionalMovementComponent::SetMovementLine(const struct FVector& NewLineStart, const struct FVector& NewLineEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OneDimensionalMovementComponent", "SetMovementLine");

	Params::OneDimensionalMovementComponent_SetMovementLine Parms{};

	Parms.NewLineStart = std::move(NewLineStart);
	Parms.NewLineEnd = std::move(NewLineEnd);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ParticleSystemActor.SparseTick
// (Final, Native, Public)

void AParticleSystemActor::SparseTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParticleSystemActor", "SparseTick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.PerkSystemComponent.OnCharacterBuilt
// (Final, Native, Public)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPerkSystemComponent::OnCharacterBuilt(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PerkSystemComponent", "OnCharacterBuilt");

	Params::PerkSystemComponent_OnCharacterBuilt Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.PerkSystemComponent.OnLODTick
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPerkSystemComponent::OnLODTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PerkSystemComponent", "OnLODTick");

	Params::PerkSystemComponent_OnLODTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.PerkSystemComponent.OnPreBeginPlay
// (Final, Native, Public)
// Parameters:
// class AMordhauCharacter*                Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPerkSystemComponent::OnPreBeginPlay(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PerkSystemComponent", "OnPreBeginPlay");

	Params::PerkSystemComponent_OnPreBeginPlay Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.PerkSystemComponent.OnTakeDamage
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMordhauDamageInfo               DamageInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPerkSystemComponent::OnTakeDamage(class AAdvancedCharacter* Character, const struct FMordhauDamageInfo& DamageInfo, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PerkSystemComponent", "OnTakeDamage");

	Params::PerkSystemComponent_OnTakeDamage Parms{};

	Parms.Character = Character;
	Parms.DamageInfo = std::move(DamageInfo);
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.PerspectiveTypes.Get
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPerspectiveAnimMontage          PerspectiveType                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bIsFirstPerson                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimMontage* UPerspectiveTypes::Get(const struct FPerspectiveAnimMontage& PerspectiveType, bool bIsFirstPerson)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PerspectiveTypes", "Get");

	Params::PerspectiveTypes_Get Parms{};

	Parms.PerspectiveType = std::move(PerspectiveType);
	Parms.bIsFirstPerson = bIsFirstPerson;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.ProjectileArmShooterComponent.AdjustArm
// (Final, Native, Private)
// Parameters:
// int32                                   Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProjectileArmShooterComponent::AdjustArm(int32 Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileArmShooterComponent", "AdjustArm");

	Params::ProjectileArmShooterComponent_AdjustArm Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileArmShooterComponent.LowerArm
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UProjectileArmShooterComponent::LowerArm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileArmShooterComponent", "LowerArm");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileArmShooterComponent.OnLowerArmPressed
// (Final, Native, Public, BlueprintCallable)

void UProjectileArmShooterComponent::OnLowerArmPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileArmShooterComponent", "OnLowerArmPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileArmShooterComponent.OnRaiseArmPressed
// (Final, Native, Public, BlueprintCallable)

void UProjectileArmShooterComponent::OnRaiseArmPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileArmShooterComponent", "OnRaiseArmPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileArmShooterComponent.RaiseArm
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UProjectileArmShooterComponent::RaiseArm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileArmShooterComponent", "RaiseArm");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileArmShooterComponent.UpdateArmPullSound
// (Final, Native, Private)
// Parameters:
// class AActor*                           CharacterOwner                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProjectileArmShooterComponent::UpdateArmPullSound(class AActor* CharacterOwner, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileArmShooterComponent", "UpdateArmPullSound");

	Params::ProjectileArmShooterComponent_UpdateArmPullSound Parms{};

	Parms.CharacterOwner = CharacterOwner;
	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileArmShooterComponent.UpdateArmTarget
// (Final, Native, Private)
// Parameters:
// class AActor*                           Owner                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProjectileArmShooterComponent::UpdateArmTarget(class AActor* Owner, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileArmShooterComponent", "UpdateArmTarget");

	Params::ProjectileArmShooterComponent_UpdateArmTarget Parms{};

	Parms.Owner = Owner;
	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileTurretShooterComponent.OnRep_LookUpCapChanged
// (Final, Native, Public)

void UProjectileTurretShooterComponent::OnRep_LookUpCapChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileTurretShooterComponent", "OnRep_LookUpCapChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileTurretShooterComponent.OnRep_TurnCapChanged
// (Final, Native, Public)

void UProjectileTurretShooterComponent::OnRep_TurnCapChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileTurretShooterComponent", "OnRep_TurnCapChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileTurretShooterComponent.SetLookUpCap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProjectileTurretShooterComponent::SetLookUpCap(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileTurretShooterComponent", "SetLookUpCap");

	Params::ProjectileTurretShooterComponent_SetLookUpCap Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ProjectileTurretShooterComponent.SetTurnCap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProjectileTurretShooterComponent::SetTurnCap(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileTurretShooterComponent", "SetTurnCap");

	Params::ProjectileTurretShooterComponent_SetTurnCap Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.PushableActor.OnInitialProgressReplication
// (Event, Public, BlueprintEvent)

void APushableActor::OnInitialProgressReplication()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PushableActor", "OnInitialProgressReplication");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.PushableActor.OnProgressUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   OldProgress                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APushableActor::OnProgressUpdated(float OldProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PushableActor", "OnProgressUpdated");

	Params::PushableActor_OnProgressUpdated Parms{};

	Parms.OldProgress = OldProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Mordhau.PushableActor.OnRep_ReplicatedProgress
// (Final, Native, Public)

void APushableActor::OnRep_ReplicatedProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PushableActor", "OnRep_ReplicatedProgress");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.PushableActor.SetProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewProgress                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APushableActor::SetProgress(float NewProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PushableActor", "SetProgress");

	Params::PushableActor_SetProgress Parms{};

	Parms.NewProgress = NewProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.Quiver.GetQuiverMeshesForClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class UQuiver>              QuiverClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UStaticMesh*>              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UStaticMesh*> UQuiver::GetQuiverMeshesForClass(TSubclassOf<class UQuiver> QuiverClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Quiver", "GetQuiverMeshesForClass");

	Params::Quiver_GetQuiverMeshesForClass Parms{};

	Parms.QuiverClass = QuiverClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.Quiver.FindAppropriateQuiverMesh
// (Final, Native, Public, Const)
// Parameters:
// uint8                                   Ammo                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   MaxAmmo                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMesh*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStaticMesh* UQuiver::FindAppropriateQuiverMesh(uint8 Ammo, uint8 MaxAmmo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quiver", "FindAppropriateQuiverMesh");

	Params::Quiver_FindAppropriateQuiverMesh Parms{};

	Parms.Ammo = Ammo;
	Parms.MaxAmmo = MaxAmmo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.RconFunctionLibrary.GenerateRconParameterValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRconParameter                   RconParameter                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// class UPlayFabJsonValue*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabJsonValue* URconFunctionLibrary::GenerateRconParameterValue(struct FRconParameter* RconParameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RconFunctionLibrary", "GenerateRconParameterValue");

	Params::RconFunctionLibrary_GenerateRconParameterValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RconParameter != nullptr)
		*RconParameter = std::move(Parms.RconParameter);

	return Parms.ReturnValue;
}


// Function Mordhau.RconFunctionLibrary.GenerateRequestInfoResponseObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRconRequestInfoResponse         RconRequestInfoResponse                                (Parm, OutParm, NativeAccessSpecifierPublic)
// class UPlayFabJsonObject*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabJsonObject* URconFunctionLibrary::GenerateRequestInfoResponseObject(struct FRconRequestInfoResponse* RconRequestInfoResponse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RconFunctionLibrary", "GenerateRequestInfoResponseObject");

	Params::RconFunctionLibrary_GenerateRequestInfoResponseObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RconRequestInfoResponse != nullptr)
		*RconRequestInfoResponse = std::move(Parms.RconRequestInfoResponse);

	return Parms.ReturnValue;
}


// Function Mordhau.RconFunctionLibrary.GenerateResponseObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRconResponseStruct              RconResponse                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// class UPlayFabJsonObject*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabJsonObject* URconFunctionLibrary::GenerateResponseObject(struct FRconResponseStruct* RconResponse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RconFunctionLibrary", "GenerateResponseObject");

	Params::RconFunctionLibrary_GenerateResponseObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RconResponse != nullptr)
		*RconResponse = std::move(Parms.RconResponse);

	return Parms.ReturnValue;
}


// Function Mordhau.RconFunctionLibrary.GetJsonTypeAsString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPFJson                                 Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URconFunctionLibrary::GetJsonTypeAsString(EPFJson Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RconFunctionLibrary", "GetJsonTypeAsString");

	Params::RconFunctionLibrary_GetJsonTypeAsString Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.SeparatedBodyPart.InitializeDismemberment
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       SourceBoneTransform                                    (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bIsPartial                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsBluntForce                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASeparatedBodyPart::InitializeDismemberment(class AMordhauCharacter* Source, class FName bone, const struct FTransform& SourceBoneTransform, bool bIsPartial, bool bIsBluntForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeparatedBodyPart", "InitializeDismemberment");

	Params::SeparatedBodyPart_InitializeDismemberment Parms{};

	Parms.Source = Source;
	Parms.bone = bone;
	Parms.SourceBoneTransform = std::move(SourceBoneTransform);
	Parms.bIsPartial = bIsPartial;
	Parms.bIsBluntForce = bIsBluntForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.SeparatedBodyPart.IsDismembered
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASeparatedBodyPart::IsDismembered(class FName bone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeparatedBodyPart", "IsDismembered");

	Params::SeparatedBodyPart_IsDismembered Parms{};

	Parms.bone = bone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.SeparatedBodyPart.OnCosmeticHit
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// EMordhauDamageType                      DamageType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SubType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AActor*                           Agent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASeparatedBodyPart::OnCosmeticHit(EMordhauDamageType DamageType, uint8 SubType, const struct FHitResult& Hit, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeparatedBodyPart", "OnCosmeticHit");

	Params::SeparatedBodyPart_OnCosmeticHit Parms{};

	Parms.DamageType = DamageType;
	Parms.SubType = SubType;
	Parms.Hit = std::move(Hit);
	Parms.Agent = Agent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.SeparatedBodyPart.IsPartiallyDismembered
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASeparatedBodyPart::IsPartiallyDismembered() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeparatedBodyPart", "IsPartiallyDismembered");

	Params::SeparatedBodyPart_IsPartiallyDismembered Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.SpawnGroup.SetAreSpawnsEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASpawnGroup::SetAreSpawnsEnabled(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnGroup", "SetAreSpawnsEnabled");

	Params::SpawnGroup_SetAreSpawnsEnabled Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.SpawnGroup.SetSpawnsTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewTeam                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASpawnGroup::SetSpawnsTeam(int32 NewTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnGroup", "SetSpawnsTeam");

	Params::SpawnGroup_SetSpawnsTeam Parms{};

	Parms.NewTeam = NewTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.SpawnGroup.GetAreSpawnsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASpawnGroup::GetAreSpawnsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnGroup", "GetAreSpawnsEnabled");

	Params::SpawnGroup_GetAreSpawnsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.SplineAudio.OnActivate
// (Event, Protected, BlueprintEvent)

void ASplineAudio::OnActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineAudio", "OnActivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.SplineAudio.OnDeactivate
// (Event, Protected, BlueprintEvent)

void ASplineAudio::OnDeactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineAudio", "OnDeactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Mordhau.SplineAudio.SetCurve
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCurveFloat*                      InCurve                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASplineAudio::SetCurve(class UCurveFloat* InCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineAudio", "SetCurve");

	Params::SplineAudio_SetCurve Parms{};

	Parms.InCurve = InCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.StaminaStatComponent.OnCharacterDied
// (Final, Native, Public)
// Parameters:
// class AAdvancedCharacter*               Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStaminaStatComponent::OnCharacterDied(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaminaStatComponent", "OnCharacterDied");

	Params::StaminaStatComponent_OnCharacterDied Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.TagSystemComponent.AddAndRemoveTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     TagToAdd                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     TagToRemove                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTagSystemComponent::AddAndRemoveTag(const struct FGameplayTag& TagToAdd, const struct FGameplayTag& TagToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TagSystemComponent", "AddAndRemoveTag");

	Params::TagSystemComponent_AddAndRemoveTag Parms{};

	Parms.TagToAdd = std::move(TagToAdd);
	Parms.TagToRemove = std::move(TagToRemove);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.TagSystemComponent.AddAndRemoveTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            TagsToAdd                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            TagsToRemove                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTagSystemComponent::AddAndRemoveTags(const struct FGameplayTagContainer& TagsToAdd, const struct FGameplayTagContainer& TagsToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TagSystemComponent", "AddAndRemoveTags");

	Params::TagSystemComponent_AddAndRemoveTags Parms{};

	Parms.TagsToAdd = std::move(TagsToAdd);
	Parms.TagsToRemove = std::move(TagsToRemove);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.TagSystemComponent.AddTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTagSystemComponent::AddTag(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TagSystemComponent", "AddTag");

	Params::TagSystemComponent_AddTag Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.TagSystemComponent.AddTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            TagContainer                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTagSystemComponent::AddTags(const struct FGameplayTagContainer& TagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TagSystemComponent", "AddTags");

	Params::TagSystemComponent_AddTags Parms{};

	Parms.TagContainer = std::move(TagContainer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.TagSystemComponent.FlashTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTagSystemComponent::FlashTag(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TagSystemComponent", "FlashTag");

	Params::TagSystemComponent_FlashTag Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.TagSystemComponent.FlashTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            TagContainer                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTagSystemComponent::FlashTags(const struct FGameplayTagContainer& TagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TagSystemComponent", "FlashTags");

	Params::TagSystemComponent_FlashTags Parms{};

	Parms.TagContainer = std::move(TagContainer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.TagSystemComponent.RegisterTagConditionDelegate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagCondition            Condition                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Function                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTagSystemComponent::RegisterTagConditionDelegate(const struct FGameplayTagCondition& Condition, class UObject* Object, class FName Function)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TagSystemComponent", "RegisterTagConditionDelegate");

	Params::TagSystemComponent_RegisterTagConditionDelegate Parms{};

	Parms.Condition = std::move(Condition);
	Parms.Object = Object;
	Parms.Function = Function;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.TagSystemComponent.RemoveTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTagSystemComponent::RemoveTag(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TagSystemComponent", "RemoveTag");

	Params::TagSystemComponent_RemoveTag Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.TagSystemComponent.RemoveTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            TagContainer                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTagSystemComponent::RemoveTags(const struct FGameplayTagContainer& TagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TagSystemComponent", "RemoveTags");

	Params::TagSystemComponent_RemoveTags Parms{};

	Parms.TagContainer = std::move(TagContainer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.TagSystemComponent.SetTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            TagContainer                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTagSystemComponent::SetTags(const struct FGameplayTagContainer& TagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TagSystemComponent", "SetTags");

	Params::TagSystemComponent_SetTags Parms{};

	Parms.TagContainer = std::move(TagContainer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.ThudderComponent.DoTick
// (Final, Native, Public, BlueprintCallable)

void UThudderComponent::DoTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThudderComponent", "DoTick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.UpperChestWearable.AddArmsWearable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UClass>             Wearable                                               (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUpperChestWearable::AddArmsWearable(TSoftClassPtr<class UClass> Wearable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UpperChestWearable", "AddArmsWearable");

	Params::UpperChestWearable_AddArmsWearable Parms{};

	Parms.Wearable = Wearable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.UpperChestWearable.AddLowerChestWearable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UClass>             Wearable                                               (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUpperChestWearable::AddLowerChestWearable(TSoftClassPtr<class UClass> Wearable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UpperChestWearable", "AddLowerChestWearable");

	Params::UpperChestWearable_AddLowerChestWearable Parms{};

	Parms.Wearable = Wearable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.UpperChestWearable.AddShoulderWearable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UClass>             Wearable                                               (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUpperChestWearable::AddShoulderWearable(TSoftClassPtr<class UClass> Wearable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UpperChestWearable", "AddShoulderWearable");

	Params::UpperChestWearable_AddShoulderWearable Parms{};

	Parms.Wearable = Wearable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mordhau.UpperChestWearable.GetArmsWearable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UArmsWearable>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UArmsWearable> UUpperChestWearable::GetArmsWearable(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UpperChestWearable", "GetArmsWearable");

	Params::UpperChestWearable_GetArmsWearable Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.UpperChestWearable.GetLowerChestWearable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UMordhauWearable>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UMordhauWearable> UUpperChestWearable::GetLowerChestWearable(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UpperChestWearable", "GetLowerChestWearable");

	Params::UpperChestWearable_GetLowerChestWearable Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.UpperChestWearable.GetShouldersWearable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UMordhauWearable>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UMordhauWearable> UUpperChestWearable::GetShouldersWearable(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UpperChestWearable", "GetShouldersWearable");

	Params::UpperChestWearable_GetShouldersWearable Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.UpperChestWearable.GetArmsWearablesNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUpperChestWearable::GetArmsWearablesNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UpperChestWearable", "GetArmsWearablesNum");

	Params::UpperChestWearable_GetArmsWearablesNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.UpperChestWearable.GetLowerChestWearablesNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUpperChestWearable::GetLowerChestWearablesNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UpperChestWearable", "GetLowerChestWearablesNum");

	Params::UpperChestWearable_GetLowerChestWearablesNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mordhau.UpperChestWearable.GetShouldersWearablesNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUpperChestWearable::GetShouldersWearablesNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UpperChestWearable", "GetShouldersWearablesNum");

	Params::UpperChestWearable_GetShouldersWearablesNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

