#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DemonHordeEnemy_Special_Minotaur

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Mordhau_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_DemonHordeEnemy_Special_Minotaur.BP_DemonHordeEnemy_Special_Minotaur_C.ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur
// 0x0558 (0x0558 - 0x0000)
struct BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauMotion*                         CallFunc_GetMotion_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AbilityMotion_MinotaurCharge_C*     K2Node_DynamicCast_AsBP_Ability_Motion_Minotaur_Charge; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Angle;                                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            K2Node_Event_Type;                                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SubType;                              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Bone;                                 // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Point;                                // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Source;                               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Agent;                                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauActor*                          K2Node_DynamicCast_AsMordhau_Actor;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAB_MordhauCharacterAnimation_Minotaur_C* K2Node_DynamicCast_AsAB_Mordhau_Character_Animation_Minotaur; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAdvancedCharacter*                     K2Node_DynamicCast_AsAdvanced_Character;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLeg_ReturnValue;                        // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Percent_ByteByte_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBeenReallyRecentlyRendered_ReturnValue; // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAB_MordhauCharacterAnimation_Minotaur_C* K2Node_DynamicCast_AsAB_Mordhau_Character_Animation_Minotaur_1; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FF[0x1];                                       // 0x00FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauVehicleComponent*               CallFunc_GetLastUsedVehicle_ReturnValue;           // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauMotion*                         CallFunc_GetMotion_ReturnValue_1;                  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIdleMotion*                            K2Node_DynamicCast_AsIdle_Motion;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetClosestPlayer_ClosestPlayer;           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetClosestPlayer_NearbyPlayerCount;       // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162[0x2];                                      // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0198(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0234(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Impact;                               // 0x02DC(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UMordhauMotion*                         CallFunc_GetMotion_ReturnValue_2;                  // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AbilityMotion_MinotaurCharge_C*     K2Node_DynamicCast_AsBP_Ability_Motion_Minotaur_Charge_1; // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x0382(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_383[0x5];                                      // 0x0383(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_ImpactTarget;                   // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0390(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue_1;     // 0x039C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauCharacter_C*                 K2Node_DynamicCast_AsBP_Mordhau_Character;         // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x03B8(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Trip_ReturnValue;                         // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x03E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DemonHordeCharacter_C*              K2Node_DynamicCast_AsBP_Demon_Horde_Character;     // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x3];                                      // 0x03F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0408(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0418(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0428(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_435[0x3];                                      // 0x0435(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0438(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C5[0x3];                                      // 0x04C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DemonHordeEnemy_C*                  K2Node_DynamicCast_AsBP_Demon_Horde_Enemy;         // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D1[0x3];                                      // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x04D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x04E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x04E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_1; // 0x04F8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0508(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x0520(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x052C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52D[0x3];                                      // 0x052D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0530(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MordhauTakeDamage_ReturnValue;            // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauMotion*                         CallFunc_GetMotion_ReturnValue_3;                  // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AbilityMotion_MinotaurRoar_C*       K2Node_DynamicCast_AsBP_Ability_Motion_Minotaur_Roar; // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur) == 0x000008, "Wrong alignment on BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur");
static_assert(sizeof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur) == 0x000558, "Wrong size on BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, EntryPoint) == 0x000000, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_GetMotion_ReturnValue) == 0x000008, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_GetMotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_AsBP_Ability_Motion_Minotaur_Charge) == 0x000010, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_AsBP_Ability_Motion_Minotaur_Charge' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_MakeLiteralByte_ReturnValue) == 0x000019, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, Temp_bool_Variable) == 0x000038, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, Temp_float_Variable) == 0x00003C, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, Temp_float_Variable_1) == 0x000040, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, Temp_bool_Variable_1) == 0x000044, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, Temp_float_Variable_2) == 0x000048, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, Temp_float_Variable_3) == 0x00004C, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00005C, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_HasAuthority_ReturnValue) == 0x00005D, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, Temp_int_Loop_Counter_Variable_1) == 0x000060, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, Temp_int_Array_Index_Variable_1) == 0x000068, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_Event_Angle) == 0x00006C, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_Event_Angle' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_Event_Type) == 0x000070, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_Event_SubType) == 0x000071, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_Event_SubType' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_Event_Bone) == 0x000074, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_Event_Bone' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_Event_Point) == 0x00007C, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_Event_Point' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_Event_Source) == 0x000088, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_Event_Source' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_Event_Agent) == 0x000090, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_Event_Agent' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_AsMordhau_Actor) == 0x000098, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_AsMordhau_Actor' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_GetAnimInstance_ReturnValue) == 0x0000A8, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_AsAB_Mordhau_Character_Animation_Minotaur) == 0x0000B0, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_AsAB_Mordhau_Character_Animation_Minotaur' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_bSuccess_2) == 0x0000B8, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_AsAdvanced_Character) == 0x0000C0, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_AsAdvanced_Character' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_bSuccess_3) == 0x0000C8, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_IsLeg_ReturnValue) == 0x0000C9, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_IsLeg_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000CA, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x0000CB, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x0000CC, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000CD, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000CE, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_BooleanAND_ReturnValue) == 0x0000CF, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_Percent_ByteByte_ReturnValue) == 0x0000D0, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_Percent_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_Less_ByteByte_ReturnValue) == 0x0000D1, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_HasBeenReallyRecentlyRendered_ReturnValue) == 0x0000D2, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_HasBeenReallyRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_GetAnimInstance_ReturnValue_1) == 0x0000D8, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_Not_PreBool_ReturnValue) == 0x0000E0, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_AsAB_Mordhau_Character_Animation_Minotaur_1) == 0x0000E8, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_AsAB_Mordhau_Character_Animation_Minotaur_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_bSuccess_4) == 0x0000F0, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_BooleanOR_ReturnValue) == 0x0000F1, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_VSize_ReturnValue) == 0x0000F4, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_BooleanOR_ReturnValue_1) == 0x0000F8, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000F9, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_BooleanOR_ReturnValue_2) == 0x0000FA, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_BooleanOR_ReturnValue_3) == 0x0000FB, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_BooleanOR_ReturnValue_4) == 0x0000FC, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_BooleanOR_ReturnValue_5) == 0x0000FD, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_BooleanOR_ReturnValue_6) == 0x0000FE, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_GetLastUsedVehicle_ReturnValue) == 0x000100, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_GetLastUsedVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_HasAuthority_ReturnValue_1) == 0x000109, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_GetMotion_ReturnValue_1) == 0x000110, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_GetMotion_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_AsIdle_Motion) == 0x000118, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_AsIdle_Motion' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_bSuccess_5) == 0x000120, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_GetClosestPlayer_ClosestPlayer) == 0x000128, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_GetClosestPlayer_ClosestPlayer' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_GetClosestPlayer_NearbyPlayerCount) == 0x000130, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_GetClosestPlayer_NearbyPlayerCount' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000134, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_IsValid_ReturnValue_1) == 0x000140, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000144, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x000150, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_Vector_Distance_ReturnValue) == 0x00015C, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000160, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_BooleanOR_ReturnValue_7) == 0x000161, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_Event_DeltaSeconds) == 0x000164, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_MakeRotFromX_ReturnValue) == 0x000168, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000178, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000180, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000188, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000190, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000194, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000198, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_HasAuthority_ReturnValue_2) == 0x000224, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000228, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_MakeHitResult_ReturnValue) == 0x000234, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0002C0, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_RLerp_ReturnValue) == 0x0002CC, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0002D8, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_Event_Impact) == 0x0002DC, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_Event_Impact' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_GetMotion_ReturnValue_2) == 0x000368, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_GetMotion_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_Not_PreBool_ReturnValue_1) == 0x000370, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_AsBP_Ability_Motion_Minotaur_Charge_1) == 0x000378, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_AsBP_Ability_Motion_Minotaur_Charge_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_bSuccess_6) == 0x000380, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_BooleanAND_ReturnValue_1) == 0x000381, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_BooleanOR_ReturnValue_8) == 0x000382, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_CustomEvent_ImpactTarget) == 0x000388, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_CustomEvent_ImpactTarget' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000390, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_GetDirectionUnitVector_ReturnValue_1) == 0x00039C, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_GetDirectionUnitVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_AsBP_Mordhau_Character) == 0x0003A8, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_AsBP_Mordhau_Character' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_bSuccess_7) == 0x0003B0, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_GetOverlappingActors_OverlappingActors) == 0x0003B8, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_Array_Get_Item) == 0x0003C8, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_Select_Default) == 0x0003D0, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_Array_Length_ReturnValue) == 0x0003D4, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_Less_IntInt_ReturnValue) == 0x0003D8, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_Select_Default_1) == 0x0003DC, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_Trip_ReturnValue) == 0x0003E0, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_Trip_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0003E4, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_AsBP_Demon_Horde_Character) == 0x0003F0, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_AsBP_Demon_Horde_Character' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_bSuccess_8) == 0x0003F8, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_BreakVector_X) == 0x0003FC, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_BreakVector_Y) == 0x000400, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_BreakVector_Z) == 0x000404, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_MakeVector_ReturnValue) == 0x000408, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000418, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_ComponentBoundEvent_OtherActor) == 0x000420, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_ComponentBoundEvent_OtherComp) == 0x000428, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000430, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_ComponentBoundEvent_bFromSweep) == 0x000434, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_ComponentBoundEvent_SweepResult) == 0x000438, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0004C4, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_AsBP_Demon_Horde_Enemy) == 0x0004C8, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_AsBP_Demon_Horde_Enemy' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_bSuccess_9) == 0x0004D0, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_CustomEvent_Location_1) == 0x0004D4, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0004E0, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_CustomEvent_Location) == 0x0004E8, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_GetOverlappingActors_OverlappingActors_1) == 0x0004F8, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_GetOverlappingActors_OverlappingActors_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000508, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_Array_Get_Item_1) == 0x000518, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x000520, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_Array_Length_ReturnValue_1) == 0x000528, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_Less_IntInt_ReturnValue_1) == 0x00052C, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000530, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_MordhauTakeDamage_ReturnValue) == 0x00053C, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_MordhauTakeDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, CallFunc_GetMotion_ReturnValue_3) == 0x000540, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::CallFunc_GetMotion_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_AsBP_Ability_Motion_Minotaur_Roar) == 0x000548, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_AsBP_Ability_Motion_Minotaur_Roar' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur, K2Node_DynamicCast_bSuccess_10) == 0x000550, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Minotaur::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");

// Function BP_DemonHordeEnemy_Special_Minotaur.BP_DemonHordeEnemy_Special_Minotaur_C.RoarEffectsMulti
// 0x000C (0x000C - 0x0000)
struct BP_DemonHordeEnemy_Special_Minotaur_C_RoarEffectsMulti final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeEnemy_Special_Minotaur_C_RoarEffectsMulti) == 0x000004, "Wrong alignment on BP_DemonHordeEnemy_Special_Minotaur_C_RoarEffectsMulti");
static_assert(sizeof(BP_DemonHordeEnemy_Special_Minotaur_C_RoarEffectsMulti) == 0x00000C, "Wrong size on BP_DemonHordeEnemy_Special_Minotaur_C_RoarEffectsMulti");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_RoarEffectsMulti, Location) == 0x000000, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_RoarEffectsMulti::Location' has a wrong offset!");

// Function BP_DemonHordeEnemy_Special_Minotaur.BP_DemonHordeEnemy_Special_Minotaur_C.ImpactEffectsMulti
// 0x000C (0x000C - 0x0000)
struct BP_DemonHordeEnemy_Special_Minotaur_C_ImpactEffectsMulti final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeEnemy_Special_Minotaur_C_ImpactEffectsMulti) == 0x000004, "Wrong alignment on BP_DemonHordeEnemy_Special_Minotaur_C_ImpactEffectsMulti");
static_assert(sizeof(BP_DemonHordeEnemy_Special_Minotaur_C_ImpactEffectsMulti) == 0x00000C, "Wrong size on BP_DemonHordeEnemy_Special_Minotaur_C_ImpactEffectsMulti");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ImpactEffectsMulti, Location) == 0x000000, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ImpactEffectsMulti::Location' has a wrong offset!");

// Function BP_DemonHordeEnemy_Special_Minotaur.BP_DemonHordeEnemy_Special_Minotaur_C.BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphereExtra_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphereExtra_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphereExtra_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphereExtra_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphereExtra_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphereExtra_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphereExtra_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphereExtra_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphereExtra_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphereExtra_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphereExtra_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphereExtra_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphereExtra_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphereExtra_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphereExtra_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphereExtra_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphereExtra_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphereExtra_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_DemonHordeEnemy_Special_Minotaur.BP_DemonHordeEnemy_Special_Minotaur_C.ImpactKnockback
// 0x0008 (0x0008 - 0x0000)
struct BP_DemonHordeEnemy_Special_Minotaur_C_ImpactKnockback final
{
public:
	class AActor*                                 ImpactTarget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeEnemy_Special_Minotaur_C_ImpactKnockback) == 0x000008, "Wrong alignment on BP_DemonHordeEnemy_Special_Minotaur_C_ImpactKnockback");
static_assert(sizeof(BP_DemonHordeEnemy_Special_Minotaur_C_ImpactKnockback) == 0x000008, "Wrong size on BP_DemonHordeEnemy_Special_Minotaur_C_ImpactKnockback");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ImpactKnockback, ImpactTarget) == 0x000000, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ImpactKnockback::ImpactTarget' has a wrong offset!");

// Function BP_DemonHordeEnemy_Special_Minotaur.BP_DemonHordeEnemy_Special_Minotaur_C.MoveBlockedBySlow
// 0x008C (0x008C - 0x0000)
struct BP_DemonHordeEnemy_Special_Minotaur_C_MoveBlockedBySlow final
{
public:
	struct FHitResult                             Impact;                                            // 0x0000(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DemonHordeEnemy_Special_Minotaur_C_MoveBlockedBySlow) == 0x000004, "Wrong alignment on BP_DemonHordeEnemy_Special_Minotaur_C_MoveBlockedBySlow");
static_assert(sizeof(BP_DemonHordeEnemy_Special_Minotaur_C_MoveBlockedBySlow) == 0x00008C, "Wrong size on BP_DemonHordeEnemy_Special_Minotaur_C_MoveBlockedBySlow");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_MoveBlockedBySlow, Impact) == 0x000000, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_MoveBlockedBySlow::Impact' has a wrong offset!");

// Function BP_DemonHordeEnemy_Special_Minotaur.BP_DemonHordeEnemy_Special_Minotaur_C.BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_BndEvt__BP_DemonHordeEnemy_Special_Minotaur_ChargeSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_DemonHordeEnemy_Special_Minotaur.BP_DemonHordeEnemy_Special_Minotaur_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_DemonHordeEnemy_Special_Minotaur_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeEnemy_Special_Minotaur_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_DemonHordeEnemy_Special_Minotaur_C_ReceiveTick");
static_assert(sizeof(BP_DemonHordeEnemy_Special_Minotaur_C_ReceiveTick) == 0x000004, "Wrong size on BP_DemonHordeEnemy_Special_Minotaur_C_ReceiveTick");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_DemonHordeEnemy_Special_Minotaur.BP_DemonHordeEnemy_Special_Minotaur_C.OnDied
// 0x0030 (0x0030 - 0x0000)
struct BP_DemonHordeEnemy_Special_Minotaur_C_OnDied final
{
public:
	float                                         Angle;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SubType;                                           // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   bone;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Agent;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeEnemy_Special_Minotaur_C_OnDied) == 0x000008, "Wrong alignment on BP_DemonHordeEnemy_Special_Minotaur_C_OnDied");
static_assert(sizeof(BP_DemonHordeEnemy_Special_Minotaur_C_OnDied) == 0x000030, "Wrong size on BP_DemonHordeEnemy_Special_Minotaur_C_OnDied");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_OnDied, Angle) == 0x000000, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_OnDied::Angle' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_OnDied, Type) == 0x000004, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_OnDied::Type' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_OnDied, SubType) == 0x000005, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_OnDied::SubType' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_OnDied, bone) == 0x000008, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_OnDied::bone' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_OnDied, Point) == 0x000010, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_OnDied::Point' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_OnDied, Source) == 0x000020, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_OnDied::Source' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Minotaur_C_OnDied, Agent) == 0x000028, "Member 'BP_DemonHordeEnemy_Special_Minotaur_C_OnDied::Agent' has a wrong offset!");

}

