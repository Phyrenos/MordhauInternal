#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BlessingComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BlessingVisuals_structs.hpp"


namespace SDK::Params
{

// Function BP_BlessingComponent.BP_BlessingComponent_C.ExecuteUbergraph_BP_BlessingComponent
// 0x0078 (0x0078 - 0x0000)
struct BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauEquipment*                      K2Node_DynamicCast_AsMordhau_Equipment;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauWeapon*                         K2Node_DynamicCast_AsMordhau_Weapon;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauEquipment*                      K2Node_DynamicCast_AsMordhau_Equipment_1;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetParentCharacter_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DemonHordeCharacter_C*              K2Node_DynamicCast_AsBP_Demon_Horde_Character;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent) == 0x000008, "Wrong alignment on BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent");
static_assert(sizeof(BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent) == 0x000078, "Wrong size on BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent");
static_assert(offsetof(BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent, EntryPoint) == 0x000000, "Member 'BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent, K2Node_DynamicCast_AsMordhau_Equipment) == 0x000010, "Member 'BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent::K2Node_DynamicCast_AsMordhau_Equipment' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent, K2Node_DynamicCast_AsMordhau_Weapon) == 0x000020, "Member 'BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent::K2Node_DynamicCast_AsMordhau_Weapon' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent, CallFunc_GetOwner_ReturnValue_1) == 0x000030, "Member 'BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent, K2Node_DynamicCast_AsMordhau_Equipment_1) == 0x000038, "Member 'BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent::K2Node_DynamicCast_AsMordhau_Equipment_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent, CallFunc_GetParentCharacter_ReturnValue) == 0x000048, "Member 'BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent::CallFunc_GetParentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent, K2Node_DynamicCast_AsBP_Demon_Horde_Character) == 0x000050, "Member 'BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent::K2Node_DynamicCast_AsBP_Demon_Horde_Character' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent, K2Node_DynamicCast_bSuccess_3) == 0x000058, "Member 'BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent, K2Node_Event_DeltaSeconds) == 0x00005C, "Member 'BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000060, "Member 'BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000070, "Member 'BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_BlessingComponent.BP_BlessingComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BlessingComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlessingComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BlessingComponent_C_ReceiveTick");
static_assert(sizeof(BP_BlessingComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_BlessingComponent_C_ReceiveTick");
static_assert(offsetof(BP_BlessingComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BlessingComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BlessingComponent.BP_BlessingComponent_C.ApplyVisuals
// 0x0180 (0x0180 - 0x0000)
struct BP_BlessingComponent_C_ApplyVisuals final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MordhauWeapon_C*                    K2Node_DynamicCast_AsBP_Mordhau_Weapon;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue_1;       // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HolyHandGrenade_C*                  K2Node_DynamicCast_AsBP_Holy_Hand_Grenade;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBlessingVisuals                       K2Node_MakeStruct_BlessingVisuals;                 // 0x0098(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ExecutionerSword_C*                 K2Node_DynamicCast_AsBP_Executioner_Sword;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SmithHammer_C*                      K2Node_DynamicCast_AsBP_Smith_Hammer;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00D8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0128(0x0018)()
	class ABP_SetupDemonHorde_C*                  CallFunc_GetActorOfClass_ReturnValue;              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauEquipment*                      K2Node_DynamicCast_AsMordhau_Equipment;            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlessingVisuals                       CallFunc_Map_Find_Value;                           // 0x015C(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BlessingComponent_C_ApplyVisuals) == 0x000008, "Wrong alignment on BP_BlessingComponent_C_ApplyVisuals");
static_assert(sizeof(BP_BlessingComponent_C_ApplyVisuals) == 0x000180, "Wrong size on BP_BlessingComponent_C_ApplyVisuals");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, Temp_bool_Variable) == 0x000000, "Member 'BP_BlessingComponent_C_ApplyVisuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, Temp_name_Variable) == 0x000004, "Member 'BP_BlessingComponent_C_ApplyVisuals::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, Temp_name_Variable_1) == 0x00000C, "Member 'BP_BlessingComponent_C_ApplyVisuals::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000014, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, K2Node_DynamicCast_AsBP_Mordhau_Weapon) == 0x000018, "Member 'BP_BlessingComponent_C_ApplyVisuals::K2Node_DynamicCast_AsBP_Mordhau_Weapon' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BlessingComponent_C_ApplyVisuals::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, K2Node_Select_Default) == 0x000024, "Member 'BP_BlessingComponent_C_ApplyVisuals::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000030, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_K2_GetComponentScale_ReturnValue) == 0x00003C, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_GetObjectClass_ReturnValue) == 0x000048, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_BreakVector_X) == 0x000050, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_BreakVector_Y) == 0x000054, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_BreakVector_Z) == 0x000058, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_K2_GetComponentScale_ReturnValue_1) == 0x00005C, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_K2_GetComponentScale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000068, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_BreakVector_X_1) == 0x00006C, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_BreakVector_Y_1) == 0x000070, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_BreakVector_Z_1) == 0x000074, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000078, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, K2Node_DynamicCast_AsBP_Holy_Hand_Grenade) == 0x000080, "Member 'BP_BlessingComponent_C_ApplyVisuals::K2Node_DynamicCast_AsBP_Holy_Hand_Grenade' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_BlessingComponent_C_ApplyVisuals::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_MakeVector_ReturnValue) == 0x00008C, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, K2Node_MakeStruct_BlessingVisuals) == 0x000098, "Member 'BP_BlessingComponent_C_ApplyVisuals::K2Node_MakeStruct_BlessingVisuals' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, K2Node_DynamicCast_AsBP_Executioner_Sword) == 0x0000B8, "Member 'BP_BlessingComponent_C_ApplyVisuals::K2Node_DynamicCast_AsBP_Executioner_Sword' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, K2Node_DynamicCast_bSuccess_2) == 0x0000C0, "Member 'BP_BlessingComponent_C_ApplyVisuals::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, K2Node_DynamicCast_AsBP_Smith_Hammer) == 0x0000C8, "Member 'BP_BlessingComponent_C_ApplyVisuals::K2Node_DynamicCast_AsBP_Smith_Hammer' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, K2Node_DynamicCast_bSuccess_3) == 0x0000D0, "Member 'BP_BlessingComponent_C_ApplyVisuals::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, K2Node_MakeStruct_FormatArgumentData) == 0x0000D8, "Member 'BP_BlessingComponent_C_ApplyVisuals::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, K2Node_MakeArray_Array) == 0x000118, "Member 'BP_BlessingComponent_C_ApplyVisuals::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_Format_ReturnValue) == 0x000128, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_GetActorOfClass_ReturnValue) == 0x000140, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_GetOwner_ReturnValue) == 0x000148, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, K2Node_DynamicCast_AsMordhau_Equipment) == 0x000150, "Member 'BP_BlessingComponent_C_ApplyVisuals::K2Node_DynamicCast_AsMordhau_Equipment' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, K2Node_DynamicCast_bSuccess_4) == 0x000158, "Member 'BP_BlessingComponent_C_ApplyVisuals::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_Map_Find_Value) == 0x00015C, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_ApplyVisuals, CallFunc_Map_Find_ReturnValue) == 0x000178, "Member 'BP_BlessingComponent_C_ApplyVisuals::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_BlessingComponent.BP_BlessingComponent_C.AddPointLight
// 0x0130 (0x0130 - 0x0000)
struct BP_BlessingComponent_C_AddPointLight final
{
public:
	class ABP_Crossbow_C*                         K2Node_DynamicCast_AsBP_Crossbow;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauShield*                         K2Node_DynamicCast_AsMordhau_Shield;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_2;                           // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	class UPointLightComponent*                   CallFunc_AddComponentByClass_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult;    // 0x0098(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BlessingComponent_C_AddPointLight) == 0x000010, "Wrong alignment on BP_BlessingComponent_C_AddPointLight");
static_assert(sizeof(BP_BlessingComponent_C_AddPointLight) == 0x000130, "Wrong size on BP_BlessingComponent_C_AddPointLight");
static_assert(offsetof(BP_BlessingComponent_C_AddPointLight, K2Node_DynamicCast_AsBP_Crossbow) == 0x000000, "Member 'BP_BlessingComponent_C_AddPointLight::K2Node_DynamicCast_AsBP_Crossbow' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddPointLight, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_BlessingComponent_C_AddPointLight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddPointLight, K2Node_DynamicCast_AsMordhau_Shield) == 0x000010, "Member 'BP_BlessingComponent_C_AddPointLight::K2Node_DynamicCast_AsMordhau_Shield' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddPointLight, K2Node_DynamicCast_bSuccess_1) == 0x000018, "Member 'BP_BlessingComponent_C_AddPointLight::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddPointLight, Temp_float_Variable) == 0x00001C, "Member 'BP_BlessingComponent_C_AddPointLight::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddPointLight, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_BlessingComponent_C_AddPointLight::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddPointLight, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_BlessingComponent_C_AddPointLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddPointLight, Temp_bool_Variable) == 0x000029, "Member 'BP_BlessingComponent_C_AddPointLight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddPointLight, CallFunc_Add_VectorVector_ReturnValue) == 0x00002C, "Member 'BP_BlessingComponent_C_AddPointLight::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddPointLight, Temp_float_Variable_1) == 0x000038, "Member 'BP_BlessingComponent_C_AddPointLight::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddPointLight, K2Node_Select_Default) == 0x00003C, "Member 'BP_BlessingComponent_C_AddPointLight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddPointLight, Temp_bool_Variable_1) == 0x000040, "Member 'BP_BlessingComponent_C_AddPointLight::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddPointLight, Temp_bool_Variable_2) == 0x000041, "Member 'BP_BlessingComponent_C_AddPointLight::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddPointLight, K2Node_Select_Default_1) == 0x000044, "Member 'BP_BlessingComponent_C_AddPointLight::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddPointLight, K2Node_Select_Default_2) == 0x000048, "Member 'BP_BlessingComponent_C_AddPointLight::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddPointLight, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_BlessingComponent_C_AddPointLight::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddPointLight, CallFunc_AddComponentByClass_ReturnValue) == 0x000090, "Member 'BP_BlessingComponent_C_AddPointLight::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddPointLight, CallFunc_K2_AddRelativeRotation_SweepHitResult) == 0x000098, "Member 'BP_BlessingComponent_C_AddPointLight::CallFunc_K2_AddRelativeRotation_SweepHitResult' has a wrong offset!");

// Function BP_BlessingComponent.BP_BlessingComponent_C.AddShineMesh
// 0x0010 (0x0010 - 0x0000)
struct BP_BlessingComponent_C_AddShineMesh final
{
public:
	class AMordhauShield*                         K2Node_DynamicCast_AsMordhau_Shield;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BlessingComponent_C_AddShineMesh) == 0x000008, "Wrong alignment on BP_BlessingComponent_C_AddShineMesh");
static_assert(sizeof(BP_BlessingComponent_C_AddShineMesh) == 0x000010, "Wrong size on BP_BlessingComponent_C_AddShineMesh");
static_assert(offsetof(BP_BlessingComponent_C_AddShineMesh, K2Node_DynamicCast_AsMordhau_Shield) == 0x000000, "Member 'BP_BlessingComponent_C_AddShineMesh::K2Node_DynamicCast_AsMordhau_Shield' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddShineMesh, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_BlessingComponent_C_AddShineMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BlessingComponent.BP_BlessingComponent_C.CloneMesh
// 0x00F0 (0x00F0 - 0x0000)
struct BP_BlessingComponent_C_CloneMesh final
{
public:
	struct FVector                                LocationOffset;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScaleMultiplier;                                   // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                 CallFunc_AddComponentByClass_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x00D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BlessingComponent_C_CloneMesh) == 0x000010, "Wrong alignment on BP_BlessingComponent_C_CloneMesh");
static_assert(sizeof(BP_BlessingComponent_C_CloneMesh) == 0x0000F0, "Wrong size on BP_BlessingComponent_C_CloneMesh");
static_assert(offsetof(BP_BlessingComponent_C_CloneMesh, LocationOffset) == 0x000000, "Member 'BP_BlessingComponent_C_CloneMesh::LocationOffset' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_CloneMesh, ScaleMultiplier) == 0x00000C, "Member 'BP_BlessingComponent_C_CloneMesh::ScaleMultiplier' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_CloneMesh, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_BlessingComponent_C_CloneMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_CloneMesh, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_BlessingComponent_C_CloneMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_CloneMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_BlessingComponent_C_CloneMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_CloneMesh, CallFunc_GetRelativeTransform_ReturnValue) == 0x000030, "Member 'BP_BlessingComponent_C_CloneMesh::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_CloneMesh, CallFunc_BreakTransform_Location) == 0x000060, "Member 'BP_BlessingComponent_C_CloneMesh::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_CloneMesh, CallFunc_BreakTransform_Rotation) == 0x00006C, "Member 'BP_BlessingComponent_C_CloneMesh::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_CloneMesh, CallFunc_BreakTransform_Scale) == 0x000078, "Member 'BP_BlessingComponent_C_CloneMesh::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_CloneMesh, CallFunc_Add_VectorVector_ReturnValue) == 0x000084, "Member 'BP_BlessingComponent_C_CloneMesh::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_CloneMesh, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000090, "Member 'BP_BlessingComponent_C_CloneMesh::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_CloneMesh, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'BP_BlessingComponent_C_CloneMesh::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_CloneMesh, CallFunc_AddComponentByClass_ReturnValue) == 0x0000D0, "Member 'BP_BlessingComponent_C_CloneMesh::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_CloneMesh, CallFunc_GetMaterials_ReturnValue) == 0x0000D8, "Member 'BP_BlessingComponent_C_CloneMesh::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_CloneMesh, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'BP_BlessingComponent_C_CloneMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_CloneMesh, CallFunc_Less_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_BlessingComponent_C_CloneMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BlessingComponent.BP_BlessingComponent_C.AddParticleEmitter
// 0x0200 (0x0200 - 0x0000)
struct BP_BlessingComponent_C_AddParticleEmitter final
{
public:
	class AMordhauCharacter*                      CallFunc_GetParentCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFistsWeapon*                           K2Node_DynamicCast_AsFists_Weapon;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauShield_C*                    K2Node_DynamicCast_AsBP_Mordhau_Shield;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_1;       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauWeapon_C*                    K2Node_DynamicCast_AsBP_Mordhau_Weapon;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam;                // 0x0070(0x0080)(IsPlainOldData, NoDestructor, UObjectWrapper)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FParticleSysParam>              K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_2;       // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0xC];                                      // 0x0144(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_1;              // 0x0150(0x0080)(IsPlainOldData, NoDestructor, UObjectWrapper)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FParticleSysParam>              K2Node_MakeArray_Array_1;                          // 0x01E0(0x0010)(ReferenceParm)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_3;       // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BlessingComponent_C_AddParticleEmitter) == 0x000010, "Wrong alignment on BP_BlessingComponent_C_AddParticleEmitter");
static_assert(sizeof(BP_BlessingComponent_C_AddParticleEmitter) == 0x000200, "Wrong size on BP_BlessingComponent_C_AddParticleEmitter");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_GetParentCharacter_ReturnValue) == 0x000000, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_GetParentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, K2Node_DynamicCast_AsFists_Weapon) == 0x000008, "Member 'BP_BlessingComponent_C_AddParticleEmitter::K2Node_DynamicCast_AsFists_Weapon' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_BlessingComponent_C_AddParticleEmitter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000018, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, K2Node_DynamicCast_AsBP_Mordhau_Shield) == 0x000020, "Member 'BP_BlessingComponent_C_AddParticleEmitter::K2Node_DynamicCast_AsBP_Mordhau_Shield' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_BlessingComponent_C_AddParticleEmitter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_SpawnEmitterAttached_ReturnValue_1) == 0x000030, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_SpawnEmitterAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, K2Node_DynamicCast_AsBP_Mordhau_Weapon) == 0x000038, "Member 'BP_BlessingComponent_C_AddParticleEmitter::K2Node_DynamicCast_AsBP_Mordhau_Weapon' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'BP_BlessingComponent_C_AddParticleEmitter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_BreakVector_X) == 0x000044, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_BreakVector_Z) == 0x00004C, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000054, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_MakeVector_ReturnValue) == 0x00005C, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000068, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, K2Node_MakeStruct_ParticleSysParam) == 0x000070, "Member 'BP_BlessingComponent_C_AddParticleEmitter::K2Node_MakeStruct_ParticleSysParam' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000F0, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, K2Node_MakeArray_Array) == 0x0000F8, "Member 'BP_BlessingComponent_C_AddParticleEmitter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_MakeVector_ReturnValue_1) == 0x000108, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_SpawnEmitterAttached_ReturnValue_2) == 0x000118, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_SpawnEmitterAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_IsValid_ReturnValue) == 0x000120, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000124, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_BreakVector_X_1) == 0x000128, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_BreakVector_Y_1) == 0x00012C, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_BreakVector_Z_1) == 0x000130, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_MakeVector_ReturnValue_2) == 0x000134, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000140, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, K2Node_MakeStruct_ParticleSysParam_1) == 0x000150, "Member 'BP_BlessingComponent_C_AddParticleEmitter::K2Node_MakeStruct_ParticleSysParam_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_MakeVector_ReturnValue_3) == 0x0001D0, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, K2Node_MakeArray_Array_1) == 0x0001E0, "Member 'BP_BlessingComponent_C_AddParticleEmitter::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_SpawnEmitterAttached_ReturnValue_3) == 0x0001F0, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_SpawnEmitterAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_AddParticleEmitter, CallFunc_IsValid_ReturnValue_1) == 0x0001F8, "Member 'BP_BlessingComponent_C_AddParticleEmitter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_BlessingComponent.BP_BlessingComponent_C.SetWeaponStats
// 0x0040 (0x0040 - 0x0000)
struct BP_BlessingComponent_C_SetWeaponStats final
{
public:
	TArray<class UParticleSystem*>                K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BlessingSetup_C>  K2Node_DynamicCast_AsBPI_Blessing_Setup;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetCurrentMaxAmmo_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFistsWeapon*                           K2Node_DynamicCast_AsFists_Weapon;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BlessingComponent_C_SetWeaponStats) == 0x000008, "Wrong alignment on BP_BlessingComponent_C_SetWeaponStats");
static_assert(sizeof(BP_BlessingComponent_C_SetWeaponStats) == 0x000040, "Wrong size on BP_BlessingComponent_C_SetWeaponStats");
static_assert(offsetof(BP_BlessingComponent_C_SetWeaponStats, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_BlessingComponent_C_SetWeaponStats::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_SetWeaponStats, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BlessingComponent_C_SetWeaponStats::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_SetWeaponStats, K2Node_DynamicCast_AsBPI_Blessing_Setup) == 0x000018, "Member 'BP_BlessingComponent_C_SetWeaponStats::K2Node_DynamicCast_AsBPI_Blessing_Setup' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_SetWeaponStats, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_BlessingComponent_C_SetWeaponStats::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_SetWeaponStats, CallFunc_GetCurrentMaxAmmo_ReturnValue) == 0x000029, "Member 'BP_BlessingComponent_C_SetWeaponStats::CallFunc_GetCurrentMaxAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_SetWeaponStats, K2Node_DynamicCast_AsFists_Weapon) == 0x000030, "Member 'BP_BlessingComponent_C_SetWeaponStats::K2Node_DynamicCast_AsFists_Weapon' has a wrong offset!");
static_assert(offsetof(BP_BlessingComponent_C_SetWeaponStats, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_BlessingComponent_C_SetWeaponStats::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

