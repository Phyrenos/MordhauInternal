#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillTreeInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_SkillTreeInfo.BP_SkillTreeInfo_C
// 0x0098 (0x02F8 - 0x0260)
class UBP_SkillTreeInfo_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UBP_SkillTreeNode_C*                    BP_SkillTreeNode;                                  // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CostText;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DescriptionCurrentLevel;                           // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EntryIconImage;                                    // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_7;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_8;                                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           NextLevelBox;                                      // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               NodeSlot;                                          // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_0;                                         // 0x02B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_4;                                         // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_0;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_2;                                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextDescription;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextDescriptionNextLevel;                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextName;                                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextTreeName;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsValidSkillInfo;                                  // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_SkillTreeInfo(int32 EntryPoint);
	void Construct();
	void Update(class UBP_SkillTreeNode_C* Node);
	ESlateVisibility GetVisibility_0();
	ESlateVisibility GetVisibility_1();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SkillTreeInfo_C">();
	}
	static class UBP_SkillTreeInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SkillTreeInfo_C>();
	}
};
static_assert(alignof(UBP_SkillTreeInfo_C) == 0x000008, "Wrong alignment on UBP_SkillTreeInfo_C");
static_assert(sizeof(UBP_SkillTreeInfo_C) == 0x0002F8, "Wrong size on UBP_SkillTreeInfo_C");
static_assert(offsetof(UBP_SkillTreeInfo_C, UberGraphFrame) == 0x000260, "Member 'UBP_SkillTreeInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeInfo_C, BP_SkillTreeNode) == 0x000268, "Member 'UBP_SkillTreeInfo_C::BP_SkillTreeNode' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeInfo_C, CostText) == 0x000270, "Member 'UBP_SkillTreeInfo_C::CostText' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeInfo_C, DescriptionCurrentLevel) == 0x000278, "Member 'UBP_SkillTreeInfo_C::DescriptionCurrentLevel' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeInfo_C, EntryIconImage) == 0x000280, "Member 'UBP_SkillTreeInfo_C::EntryIconImage' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeInfo_C, Image_3) == 0x000288, "Member 'UBP_SkillTreeInfo_C::Image_3' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeInfo_C, Image_7) == 0x000290, "Member 'UBP_SkillTreeInfo_C::Image_7' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeInfo_C, Image_8) == 0x000298, "Member 'UBP_SkillTreeInfo_C::Image_8' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeInfo_C, NextLevelBox) == 0x0002A0, "Member 'UBP_SkillTreeInfo_C::NextLevelBox' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeInfo_C, NodeSlot) == 0x0002A8, "Member 'UBP_SkillTreeInfo_C::NodeSlot' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeInfo_C, Overlay_0) == 0x0002B0, "Member 'UBP_SkillTreeInfo_C::Overlay_0' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeInfo_C, Overlay_4) == 0x0002B8, "Member 'UBP_SkillTreeInfo_C::Overlay_4' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeInfo_C, SizeBox_0) == 0x0002C0, "Member 'UBP_SkillTreeInfo_C::SizeBox_0' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeInfo_C, TextBlock_2) == 0x0002C8, "Member 'UBP_SkillTreeInfo_C::TextBlock_2' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeInfo_C, TextDescription) == 0x0002D0, "Member 'UBP_SkillTreeInfo_C::TextDescription' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeInfo_C, TextDescriptionNextLevel) == 0x0002D8, "Member 'UBP_SkillTreeInfo_C::TextDescriptionNextLevel' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeInfo_C, TextName) == 0x0002E0, "Member 'UBP_SkillTreeInfo_C::TextName' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeInfo_C, TextTreeName) == 0x0002E8, "Member 'UBP_SkillTreeInfo_C::TextTreeName' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeInfo_C, IsValidSkillInfo) == 0x0002F0, "Member 'UBP_SkillTreeInfo_C::IsValidSkillInfo' has a wrong offset!");

}

