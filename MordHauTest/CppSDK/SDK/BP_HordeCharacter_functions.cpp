#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordeCharacter

#include "Basic.hpp"

#include "BP_HordeCharacter_classes.hpp"
#include "BP_HordeCharacter_parameters.hpp"


namespace SDK
{

// Function BP_HordeCharacter.BP_HordeCharacter_C.ExecuteUbergraph_BP_HordeCharacter
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeCharacter_C::ExecuteUbergraph_BP_HordeCharacter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "ExecuteUbergraph_BP_HordeCharacter");

	Params::BP_HordeCharacter_C_ExecuteUbergraph_BP_HordeCharacter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeCharacter_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "ReceiveTick");

	Params::BP_HordeCharacter_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.UndoTauntDamageModifier
// (BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::UndoTauntDamageModifier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "UndoTauntDamageModifier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.RequestVolley
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeCharacter_C::RequestVolley(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "RequestVolley");

	Params::BP_HordeCharacter_C_RequestVolley Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.MaintenanceTick
// (BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::MaintenanceTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "MaintenanceTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.RegenerationTick
// (BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::RegenerationTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "RegenerationTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_HordeCharacter_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.Unvanish
// (BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::Unvanish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "Unvanish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.TriggerImmortality
// (BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::TriggerImmortality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "TriggerImmortality");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.OnAttackStarted
// (Event, Public, BlueprintEvent)

void ABP_HordeCharacter_C::OnAttackStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "OnAttackStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.OnBlockedMelee
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AMordhauCharacter*                Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeCharacter_C::OnBlockedMelee(const struct FHitResult& HitResult, class AMordhauCharacter* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "OnBlockedMelee");

	Params::BP_HordeCharacter_C_OnBlockedMelee Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.OnPickedUp
// (Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauEquipment*                Eq                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeCharacter_C::OnPickedUp(class AMordhauEquipment* Eq)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "OnPickedUp");

	Params::BP_HordeCharacter_C_OnPickedUp Parms{};

	Parms.Eq = Eq;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.OnKilled
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeCharacter_C::OnKilled(class AController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "OnKilled");

	Params::BP_HordeCharacter_C_OnKilled Parms{};

	Parms.EventInstigator = EventInstigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.OnArmorReplicated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWearableSlot                           Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeCharacter_C::OnArmorReplicated(EWearableSlot Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "OnArmorReplicated");

	Params::BP_HordeCharacter_C_OnArmorReplicated Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.OnRep_ReplicatedSkills
// (BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::OnRep_ReplicatedSkills()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "OnRep_ReplicatedSkills");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.GetSkill
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_HordeSkill                            Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Level                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PercentA                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PercentB                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   IntegerA                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TimeA                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeCharacter_C::GetSkill(E_HordeSkill Skill, uint8* Level, float* PercentA, float* PercentB, int32* IntegerA, float* TimeA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "GetSkill");

	Params::BP_HordeCharacter_C_GetSkill Parms{};

	Parms.Skill = Skill;

	UObject::ProcessEvent(Func, &Parms);

	if (Level != nullptr)
		*Level = Parms.Level;

	if (PercentA != nullptr)
		*PercentA = Parms.PercentA;

	if (PercentB != nullptr)
		*PercentB = Parms.PercentB;

	if (IntegerA != nullptr)
		*IntegerA = Parms.IntegerA;

	if (TimeA != nullptr)
		*TimeA = Parms.TimeA;
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.ApplySkills
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::ApplySkills()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "ApplySkills");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.RoundEnded
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::RoundEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "RoundEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.GetSkillFloat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_HordeSkill                            Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PercentA                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PercentB                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   IntegerA                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TimeA                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeCharacter_C::GetSkillFloat(E_HordeSkill Skill, float* Value, float* PercentA, float* PercentB, int32* IntegerA, float* TimeA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "GetSkillFloat");

	Params::BP_HordeCharacter_C_GetSkillFloat Parms{};

	Parms.Skill = Skill;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;

	if (PercentA != nullptr)
		*PercentA = Parms.PercentA;

	if (PercentB != nullptr)
		*PercentB = Parms.PercentB;

	if (IntegerA != nullptr)
		*IntegerA = Parms.IntegerA;

	if (TimeA != nullptr)
		*TimeA = Parms.TimeA;
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.ModifyOutgoingDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Receiver                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMordhauDamageType                      DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AActor*                           Agent                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InDamage                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutDamage                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeCharacter_C::ModifyOutgoingDamage(class AActor* Receiver, EMordhauDamageType DamageType, struct FHitResult& HitInfo, class AActor* Agent, float InDamage, float* OutDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "ModifyOutgoingDamage");

	Params::BP_HordeCharacter_C_ModifyOutgoingDamage Parms{};

	Parms.Receiver = Receiver;
	Parms.DamageType = DamageType;
	Parms.HitInfo = std::move(HitInfo);
	Parms.Agent = Agent;
	Parms.InDamage = InDamage;

	UObject::ProcessEvent(Func, &Parms);

	HitInfo = std::move(Parms.HitInfo);

	if (OutDamage != nullptr)
		*OutDamage = Parms.OutDamage;
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.ApplySkillsToEquipment
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauEquipment*                Equip                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeCharacter_C::ApplySkillsToEquipment(class AMordhauEquipment* Equip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "ApplySkillsToEquipment");

	Params::BP_HordeCharacter_C_ApplySkillsToEquipment Parms{};

	Parms.Equip = Equip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.ModifyDamage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DamageAmount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FMordhauDamageInfo               DamageInfo                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_HordeCharacter_C::ModifyDamage(float DamageAmount, const struct FMordhauDamageInfo& DamageInfo, class AController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "ModifyDamage");

	Params::BP_HordeCharacter_C_ModifyDamage Parms{};

	Parms.DamageAmount = DamageAmount;
	Parms.DamageInfo = std::move(DamageInfo);
	Parms.EventInstigator = EventInstigator;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.BeginHookshot
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::BeginHookshot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "BeginHookshot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.BeginShockwave
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::BeginShockwave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "BeginShockwave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.Stage2Hookshot
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::Stage2Hookshot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "Stage2Hookshot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.Stage2Shockwave
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::Stage2Shockwave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "Stage2Shockwave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.BeginTaunt
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::BeginTaunt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "BeginTaunt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.Stage2Taunt
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::Stage2Taunt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "Stage2Taunt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.BeginDivineFavor
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::BeginDivineFavor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "BeginDivineFavor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.Stage2DivineFavor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::Stage2DivineFavor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "Stage2DivineFavor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.OnDied
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMordhauDamageType                      Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   SubType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Agent                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeCharacter_C::OnDied(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "OnDied");

	Params::BP_HordeCharacter_C_OnDied Parms{};

	Parms.Angle = Angle;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Source = Source;
	Parms.Agent = Agent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_HordeCharacter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.BeginImmortality
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::BeginImmortality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "BeginImmortality");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.Stage2Immortality
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::Stage2Immortality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "Stage2Immortality");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.BeginVanish
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::BeginVanish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "BeginVanish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.Stage2Vanish
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::Stage2Vanish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "Stage2Vanish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.DoSpecialAbility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HordeCharacter_C::DoSpecialAbility(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "DoSpecialAbility");

	Params::BP_HordeCharacter_C_DoSpecialAbility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.SpecialCooldown
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeCharacter_C::SpecialCooldown(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "SpecialCooldown");

	Params::BP_HordeCharacter_C_SpecialCooldown Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.OnKilledEnemy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_HordeEnemy_C*                 Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeCharacter_C::OnKilledEnemy(class ABP_HordeEnemy_C* Enemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "OnKilledEnemy");

	Params::BP_HordeCharacter_C_OnKilledEnemy Parms{};

	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.AwardHealthOnKillToTeammates
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::AwardHealthOnKillToTeammates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "AwardHealthOnKillToTeammates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.OnRep_DivineFavorCounter
// (BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::OnRep_DivineFavorCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "OnRep_DivineFavorCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.SaveEquipmentToPlayerState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HordeCharacter_C::SaveEquipmentToPlayerState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "SaveEquipmentToPlayerState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.RememberStartAbilityTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutDuration                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeCharacter_C::RememberStartAbilityTime(float Duration, float* OutDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "RememberStartAbilityTime");

	Params::BP_HordeCharacter_C_RememberStartAbilityTime Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);

	if (OutDuration != nullptr)
		*OutDuration = Parms.OutDuration;
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.FindVolleyTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          AimLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         AimRotation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeCharacter_C::FindVolleyTarget(const struct FVector& AimLocation, const struct FRotator& AimRotation, bool* Success, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "FindVolleyTarget");

	Params::BP_HordeCharacter_C_FindVolleyTarget Parms{};

	Parms.AimLocation = std::move(AimLocation);
	Parms.AimRotation = std::move(AimRotation);

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_HordeCharacter.BP_HordeCharacter_C.SpawnArmorPiece
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           WearablePickupClass                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeCharacter_C::SpawnArmorPiece(class UClass* WearablePickupClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeCharacter_C", "SpawnArmorPiece");

	Params::BP_HordeCharacter_C_SpawnArmorPiece Parms{};

	Parms.WearablePickupClass = WearablePickupClass;

	UObject::ProcessEvent(Func, &Parms);
}

}

