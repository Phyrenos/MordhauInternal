#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ModListEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MordhauOnlineSubsystem_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_ModListEntry.BP_ModListEntry_C
// 0x00E0 (0x0340 - 0x0260)
class UBP_ModListEntry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UButton*                                Button;                                            // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_23;                                      // 0x0270(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(float Value)>   OnValueChanged;                                    // 0x0278(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   Name_0;                                            // 0x0288(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	TMulticastInlineDelegate<void(class UBP_ModListEntry_C* Ref)> OnHovered;                                         // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnClicked;                                         // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   Description;                                       // 0x02C0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   Author;                                            // 0x02D8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FModInfo                               Mod;                                               // 0x02F0(0x0050)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_ModListEntry(int32 EntryPoint);
	void BndEvt__sliderEntry_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__sliderEntry_K2Node_ComponentBoundEvent_10_OnButtonHoverEvent__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ModListEntry_C">();
	}
	static class UBP_ModListEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ModListEntry_C>();
	}
};
static_assert(alignof(UBP_ModListEntry_C) == 0x000008, "Wrong alignment on UBP_ModListEntry_C");
static_assert(sizeof(UBP_ModListEntry_C) == 0x000340, "Wrong size on UBP_ModListEntry_C");
static_assert(offsetof(UBP_ModListEntry_C, UberGraphFrame) == 0x000260, "Member 'UBP_ModListEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ModListEntry_C, Button) == 0x000268, "Member 'UBP_ModListEntry_C::Button' has a wrong offset!");
static_assert(offsetof(UBP_ModListEntry_C, TextBlock_23) == 0x000270, "Member 'UBP_ModListEntry_C::TextBlock_23' has a wrong offset!");
static_assert(offsetof(UBP_ModListEntry_C, OnValueChanged) == 0x000278, "Member 'UBP_ModListEntry_C::OnValueChanged' has a wrong offset!");
static_assert(offsetof(UBP_ModListEntry_C, Name_0) == 0x000288, "Member 'UBP_ModListEntry_C::Name_0' has a wrong offset!");
static_assert(offsetof(UBP_ModListEntry_C, OnHovered) == 0x0002A0, "Member 'UBP_ModListEntry_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UBP_ModListEntry_C, OnClicked) == 0x0002B0, "Member 'UBP_ModListEntry_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UBP_ModListEntry_C, Description) == 0x0002C0, "Member 'UBP_ModListEntry_C::Description' has a wrong offset!");
static_assert(offsetof(UBP_ModListEntry_C, Author) == 0x0002D8, "Member 'UBP_ModListEntry_C::Author' has a wrong offset!");
static_assert(offsetof(UBP_ModListEntry_C, Mod) == 0x0002F0, "Member 'UBP_ModListEntry_C::Mod' has a wrong offset!");

}

