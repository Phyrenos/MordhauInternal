#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DamageMatrix

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_DamageMatrix.BP_DamageMatrix_C
// 0x0110 (0x0370 - 0x0260)
class UBP_DamageMatrix_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UBP_ArmorLevelIndicator_C*              BP_ArmorLevelIndicator;                            // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ArmorLevelIndicator_C*              BP_ArmorLevelIndicator_1;                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ArmorLevelIndicator_C*              BP_ArmorLevelIndicator_2;                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ArmorLevelIndicator_C*              BP_ArmorLevelIndicator_3;                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_DamageMatrixCell_C*                 BP_DamageMatrixCell_Head0;                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_DamageMatrixCell_C*                 BP_DamageMatrixCell_Head1;                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_DamageMatrixCell_C*                 BP_DamageMatrixCell_Head2;                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_DamageMatrixCell_C*                 BP_DamageMatrixCell_Head3;                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_DamageMatrixCell_C*                 BP_DamageMatrixCell_Legs0;                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_DamageMatrixCell_C*                 BP_DamageMatrixCell_Legs1;                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_DamageMatrixCell_C*                 BP_DamageMatrixCell_Legs2;                         // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_DamageMatrixCell_C*                 BP_DamageMatrixCell_Legs3;                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_DamageMatrixCell_C*                 BP_DamageMatrixCell_Torso0;                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_DamageMatrixCell_C*                 BP_DamageMatrixCell_Torso1;                        // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_DamageMatrixCell_C*                 BP_DamageMatrixCell_Torso2;                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_DamageMatrixCell_C*                 BP_DamageMatrixCell_Torso3;                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ic_head;                                           // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ic_legs;                                           // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ic_torso;                                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           StatEntry_DamageTable;                             // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           DamageColor_VeryHigh;                              // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DamageColor_High;                                  // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DamageColor_Medium;                                // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DamageColor_Low;                                   // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DamageColor_VeryLow;                               // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_DamageMatrixCell_C*>         Damage_Cells;                                      // 0x0358(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UBP_SimpleTooltip_C*                    SimpleTooltip;                                     // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DamageMatrix(int32 EntryPoint);
	void Construct();
	void Update_from_Attack_Info(const struct FAttackInfo& Attack_Info_);
	void Update_from_Projectile_Class(class UClass* Projectile_Class);
	class UWidget* Get_ic_head_ToolTipWidget_0();
	class UWidget* Get_ic_torso_ToolTipWidget_0();
	class UWidget* Get_ic_legs_ToolTipWidget_0();
	class UWidget* GetToolTipWidget_0();
	class UWidget* GetToolTipWidget_1();
	class UWidget* GetToolTipWidget_2();
	class UWidget* GetToolTipWidget_3();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DamageMatrix_C">();
	}
	static class UBP_DamageMatrix_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_DamageMatrix_C>();
	}
};
static_assert(alignof(UBP_DamageMatrix_C) == 0x000008, "Wrong alignment on UBP_DamageMatrix_C");
static_assert(sizeof(UBP_DamageMatrix_C) == 0x000370, "Wrong size on UBP_DamageMatrix_C");
static_assert(offsetof(UBP_DamageMatrix_C, UberGraphFrame) == 0x000260, "Member 'UBP_DamageMatrix_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, BP_ArmorLevelIndicator) == 0x000268, "Member 'UBP_DamageMatrix_C::BP_ArmorLevelIndicator' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, BP_ArmorLevelIndicator_1) == 0x000270, "Member 'UBP_DamageMatrix_C::BP_ArmorLevelIndicator_1' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, BP_ArmorLevelIndicator_2) == 0x000278, "Member 'UBP_DamageMatrix_C::BP_ArmorLevelIndicator_2' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, BP_ArmorLevelIndicator_3) == 0x000280, "Member 'UBP_DamageMatrix_C::BP_ArmorLevelIndicator_3' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, BP_DamageMatrixCell_Head0) == 0x000288, "Member 'UBP_DamageMatrix_C::BP_DamageMatrixCell_Head0' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, BP_DamageMatrixCell_Head1) == 0x000290, "Member 'UBP_DamageMatrix_C::BP_DamageMatrixCell_Head1' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, BP_DamageMatrixCell_Head2) == 0x000298, "Member 'UBP_DamageMatrix_C::BP_DamageMatrixCell_Head2' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, BP_DamageMatrixCell_Head3) == 0x0002A0, "Member 'UBP_DamageMatrix_C::BP_DamageMatrixCell_Head3' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, BP_DamageMatrixCell_Legs0) == 0x0002A8, "Member 'UBP_DamageMatrix_C::BP_DamageMatrixCell_Legs0' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, BP_DamageMatrixCell_Legs1) == 0x0002B0, "Member 'UBP_DamageMatrix_C::BP_DamageMatrixCell_Legs1' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, BP_DamageMatrixCell_Legs2) == 0x0002B8, "Member 'UBP_DamageMatrix_C::BP_DamageMatrixCell_Legs2' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, BP_DamageMatrixCell_Legs3) == 0x0002C0, "Member 'UBP_DamageMatrix_C::BP_DamageMatrixCell_Legs3' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, BP_DamageMatrixCell_Torso0) == 0x0002C8, "Member 'UBP_DamageMatrix_C::BP_DamageMatrixCell_Torso0' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, BP_DamageMatrixCell_Torso1) == 0x0002D0, "Member 'UBP_DamageMatrix_C::BP_DamageMatrixCell_Torso1' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, BP_DamageMatrixCell_Torso2) == 0x0002D8, "Member 'UBP_DamageMatrix_C::BP_DamageMatrixCell_Torso2' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, BP_DamageMatrixCell_Torso3) == 0x0002E0, "Member 'UBP_DamageMatrix_C::BP_DamageMatrixCell_Torso3' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, ic_head) == 0x0002E8, "Member 'UBP_DamageMatrix_C::ic_head' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, ic_legs) == 0x0002F0, "Member 'UBP_DamageMatrix_C::ic_legs' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, ic_torso) == 0x0002F8, "Member 'UBP_DamageMatrix_C::ic_torso' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, StatEntry_DamageTable) == 0x000300, "Member 'UBP_DamageMatrix_C::StatEntry_DamageTable' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, DamageColor_VeryHigh) == 0x000308, "Member 'UBP_DamageMatrix_C::DamageColor_VeryHigh' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, DamageColor_High) == 0x000318, "Member 'UBP_DamageMatrix_C::DamageColor_High' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, DamageColor_Medium) == 0x000328, "Member 'UBP_DamageMatrix_C::DamageColor_Medium' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, DamageColor_Low) == 0x000338, "Member 'UBP_DamageMatrix_C::DamageColor_Low' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, DamageColor_VeryLow) == 0x000348, "Member 'UBP_DamageMatrix_C::DamageColor_VeryLow' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, Damage_Cells) == 0x000358, "Member 'UBP_DamageMatrix_C::Damage_Cells' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrix_C, SimpleTooltip) == 0x000368, "Member 'UBP_DamageMatrix_C::SimpleTooltip' has a wrong offset!");

}

