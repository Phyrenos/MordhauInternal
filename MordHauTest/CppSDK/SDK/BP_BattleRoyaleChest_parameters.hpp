#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleRoyaleChest

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BattleRoyaleChest.BP_BattleRoyaleChest_C.ExecuteUbergraph_BP_BattleRoyaleChest
// 0x0058 (0x0058 - 0x0000)
struct BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerController*               K2Node_DynamicCast_AsMordhau_Player_Controller;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_Event_Character;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerController*               K2Node_DynamicCast_AsMordhau_Player_Controller_1;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest) == 0x000008, "Wrong alignment on BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest");
static_assert(sizeof(BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest) == 0x000058, "Wrong size on BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest");
static_assert(offsetof(BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest, EntryPoint) == 0x000000, "Member 'BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest, K2Node_Event_Damage) == 0x000004, "Member 'BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest, K2Node_Event_DamageType) == 0x000008, "Member 'BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest, K2Node_Event_InstigatedBy) == 0x000010, "Member 'BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest, K2Node_Event_DamageCauser) == 0x000018, "Member 'BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest, K2Node_DynamicCast_AsMordhau_Player_Controller) == 0x000020, "Member 'BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest::K2Node_DynamicCast_AsMordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest, K2Node_Event_Character) == 0x000030, "Member 'BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest, CallFunc_GetController_ReturnValue) == 0x000038, "Member 'BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest, K2Node_DynamicCast_AsMordhau_Player_Controller_1) == 0x000048, "Member 'BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest::K2Node_DynamicCast_AsMordhau_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_BattleRoyaleChest_C_ExecuteUbergraph_BP_BattleRoyaleChest::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_BattleRoyaleChest.BP_BattleRoyaleChest_C.OnInteractionStart
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleRoyaleChest_C_OnInteractionStart final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleRoyaleChest_C_OnInteractionStart) == 0x000008, "Wrong alignment on BP_BattleRoyaleChest_C_OnInteractionStart");
static_assert(sizeof(BP_BattleRoyaleChest_C_OnInteractionStart) == 0x000008, "Wrong size on BP_BattleRoyaleChest_C_OnInteractionStart");
static_assert(offsetof(BP_BattleRoyaleChest_C_OnInteractionStart, Character) == 0x000000, "Member 'BP_BattleRoyaleChest_C_OnInteractionStart::Character' has a wrong offset!");

// Function BP_BattleRoyaleChest.BP_BattleRoyaleChest_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_BattleRoyaleChest_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleRoyaleChest_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BP_BattleRoyaleChest_C_ReceiveAnyDamage");
static_assert(sizeof(BP_BattleRoyaleChest_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BP_BattleRoyaleChest_C_ReceiveAnyDamage");
static_assert(offsetof(BP_BattleRoyaleChest_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'BP_BattleRoyaleChest_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BP_BattleRoyaleChest_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BP_BattleRoyaleChest_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BP_BattleRoyaleChest_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function BP_BattleRoyaleChest.BP_BattleRoyaleChest_C.SpawnContents
// 0x02C0 (0x02C0 - 0x0000)
struct BP_BattleRoyaleChest_C_SpawnContents final
{
public:
	class AMordhauPlayerController*               CustomizeFor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, float>                    OriginalThirdItemList;                             // 0x0008(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TMap<class UClass*, float>                    OriginalSecondItemList;                            // 0x0058(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TMap<class UClass*, float>                    OriginalFirstItemList;                             // 0x00A8(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         TransformIdx;                                      // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     TransformToUse;                                    // 0x0100(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_SpawnRandomItem_SpawnedActor;             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x01B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WearablePickup_C*                   K2Node_DynamicCast_AsBP_Wearable_Pickup;           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue_1;                 // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauEquipment*                      K2Node_DynamicCast_AsMordhau_Equipment;            // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0xF];                                      // 0x0211(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActorBeingDestroyed_ReturnValue;        // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26A[0x2];                                      // 0x026A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0xC];                                      // 0x0274(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_2;     // 0x0280(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleRoyaleChest_C_SpawnContents) == 0x000010, "Wrong alignment on BP_BattleRoyaleChest_C_SpawnContents");
static_assert(sizeof(BP_BattleRoyaleChest_C_SpawnContents) == 0x0002C0, "Wrong size on BP_BattleRoyaleChest_C_SpawnContents");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CustomizeFor) == 0x000000, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CustomizeFor' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, OriginalThirdItemList) == 0x000008, "Member 'BP_BattleRoyaleChest_C_SpawnContents::OriginalThirdItemList' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, OriginalSecondItemList) == 0x000058, "Member 'BP_BattleRoyaleChest_C_SpawnContents::OriginalSecondItemList' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, OriginalFirstItemList) == 0x0000A8, "Member 'BP_BattleRoyaleChest_C_SpawnContents::OriginalFirstItemList' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, TransformIdx) == 0x0000F8, "Member 'BP_BattleRoyaleChest_C_SpawnContents::TransformIdx' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, TransformToUse) == 0x000100, "Member 'BP_BattleRoyaleChest_C_SpawnContents::TransformToUse' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, Temp_int_Variable) == 0x000110, "Member 'BP_BattleRoyaleChest_C_SpawnContents::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_MakeVector_ReturnValue) == 0x000114, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, K2Node_SwitchInteger_CmpSuccess) == 0x000120, "Member 'BP_BattleRoyaleChest_C_SpawnContents::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000121, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_Add_IntInt_ReturnValue) == 0x000124, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_RandomFloatInRange_ReturnValue) == 0x000128, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, Temp_int_Variable_1) == 0x00012C, "Member 'BP_BattleRoyaleChest_C_SpawnContents::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_MakeRotator_ReturnValue) == 0x000130, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00013C, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_Add_VectorVector_ReturnValue) == 0x000148, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000154, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000160, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_Add_IntInt_ReturnValue_1) == 0x00016C, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_Array_Get_Item) == 0x000170, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_SpawnRandomItem_SpawnedActor) == 0x0001A0, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_SpawnRandomItem_SpawnedActor' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0001B0, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_IsValid_ReturnValue) == 0x0001E0, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, K2Node_DynamicCast_AsBP_Wearable_Pickup) == 0x0001E8, "Member 'BP_BattleRoyaleChest_C_SpawnContents::K2Node_DynamicCast_AsBP_Wearable_Pickup' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, K2Node_DynamicCast_bSuccess) == 0x0001F0, "Member 'BP_BattleRoyaleChest_C_SpawnContents::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_GetObjectClass_ReturnValue) == 0x0001F8, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_Map_Remove_ReturnValue) == 0x000200, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_Map_Remove_ReturnValue_1) == 0x000201, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_Map_Remove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, K2Node_DynamicCast_AsMordhau_Equipment) == 0x000208, "Member 'BP_BattleRoyaleChest_C_SpawnContents::K2Node_DynamicCast_AsMordhau_Equipment' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, K2Node_DynamicCast_bSuccess_1) == 0x000210, "Member 'BP_BattleRoyaleChest_C_SpawnContents::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000220, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000250, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_IsValid_ReturnValue_1) == 0x000258, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000260, "Member 'BP_BattleRoyaleChest_C_SpawnContents::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, K2Node_DynamicCast_bSuccess_2) == 0x000268, "Member 'BP_BattleRoyaleChest_C_SpawnContents::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_IsActorBeingDestroyed_ReturnValue) == 0x000269, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_IsActorBeingDestroyed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_Array_Add_ReturnValue) == 0x00026C, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_Array_Add_ReturnValue_1) == 0x000270, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_K2_GetComponentToWorld_ReturnValue_2) == 0x000280, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_K2_GetComponentToWorld_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_SpawnContents, CallFunc_Array_Add_ReturnValue_2) == 0x0002B0, "Member 'BP_BattleRoyaleChest_C_SpawnContents::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BP_BattleRoyaleChest.BP_BattleRoyaleChest_C.OnRep_Destroyed
// 0x0080 (0x0080 - 0x0000)
struct BP_BattleRoyaleChest_C_OnRep_Destroyed final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0xE];                                        // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattleRoyaleChestRagdoll_C*         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleRoyaleChest_C_OnRep_Destroyed) == 0x000010, "Wrong alignment on BP_BattleRoyaleChest_C_OnRep_Destroyed");
static_assert(sizeof(BP_BattleRoyaleChest_C_OnRep_Destroyed) == 0x000080, "Wrong size on BP_BattleRoyaleChest_C_OnRep_Destroyed");
static_assert(offsetof(BP_BattleRoyaleChest_C_OnRep_Destroyed, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_BattleRoyaleChest_C_OnRep_Destroyed::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_OnRep_Destroyed, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_BattleRoyaleChest_C_OnRep_Destroyed::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_OnRep_Destroyed, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_BattleRoyaleChest_C_OnRep_Destroyed::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_OnRep_Destroyed, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BP_BattleRoyaleChest_C_OnRep_Destroyed::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_OnRep_Destroyed, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_BattleRoyaleChest_C_OnRep_Destroyed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_OnRep_Destroyed, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'BP_BattleRoyaleChest_C_OnRep_Destroyed::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_OnRep_Destroyed, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BP_BattleRoyaleChest_C_OnRep_Destroyed::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_OnRep_Destroyed, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000068, "Member 'BP_BattleRoyaleChest_C_OnRep_Destroyed::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_OnRep_Destroyed, CallFunc_IsDedicatedServer_ReturnValue) == 0x000070, "Member 'BP_BattleRoyaleChest_C_OnRep_Destroyed::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_OnRep_Destroyed, CallFunc_GetCollisionEnabled_ReturnValue) == 0x000071, "Member 'BP_BattleRoyaleChest_C_OnRep_Destroyed::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_OnRep_Destroyed, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000072, "Member 'BP_BattleRoyaleChest_C_OnRep_Destroyed::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_OnRep_Destroyed, CallFunc_Not_PreBool_ReturnValue) == 0x000073, "Member 'BP_BattleRoyaleChest_C_OnRep_Destroyed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleChest_C_OnRep_Destroyed, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000074, "Member 'BP_BattleRoyaleChest_C_OnRep_Destroyed::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BP_BattleRoyaleChest.BP_BattleRoyaleChest_C.BreakChest
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleRoyaleChest_C_BreakChest final
{
public:
	class AMordhauPlayerController*               DestroyerPlayerController;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleRoyaleChest_C_BreakChest) == 0x000008, "Wrong alignment on BP_BattleRoyaleChest_C_BreakChest");
static_assert(sizeof(BP_BattleRoyaleChest_C_BreakChest) == 0x000008, "Wrong size on BP_BattleRoyaleChest_C_BreakChest");
static_assert(offsetof(BP_BattleRoyaleChest_C_BreakChest, DestroyerPlayerController) == 0x000000, "Member 'BP_BattleRoyaleChest_C_BreakChest::DestroyerPlayerController' has a wrong offset!");

}

