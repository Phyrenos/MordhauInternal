#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordeAbilityMotion

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AbilityMotion_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HordeAbilityMotion.BP_HordeAbilityMotion_C
// 0x0018 (0x00B8 - 0x00A0)
class UBP_HordeAbilityMotion_C final : public UBP_AbilityMotion_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class ABP_HookshotProjectile_C*               Projectile;                                        // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Stage2Time;                                        // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentStage;                                      // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_HordeAbilityMotion(int32 EntryPoint);
	void OnTick(float DeltaTime);
	void OnLeave(bool Interrupted);
	void OnBegin();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HordeAbilityMotion_C">();
	}
	static class UBP_HordeAbilityMotion_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HordeAbilityMotion_C>();
	}
};
static_assert(alignof(UBP_HordeAbilityMotion_C) == 0x000008, "Wrong alignment on UBP_HordeAbilityMotion_C");
static_assert(sizeof(UBP_HordeAbilityMotion_C) == 0x0000B8, "Wrong size on UBP_HordeAbilityMotion_C");
static_assert(offsetof(UBP_HordeAbilityMotion_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_HordeAbilityMotion_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_HordeAbilityMotion_C, Projectile) == 0x0000A8, "Member 'UBP_HordeAbilityMotion_C::Projectile' has a wrong offset!");
static_assert(offsetof(UBP_HordeAbilityMotion_C, Stage2Time) == 0x0000B0, "Member 'UBP_HordeAbilityMotion_C::Stage2Time' has a wrong offset!");
static_assert(offsetof(UBP_HordeAbilityMotion_C, CurrentStage) == 0x0000B4, "Member 'UBP_HordeAbilityMotion_C::CurrentStage' has a wrong offset!");

}

