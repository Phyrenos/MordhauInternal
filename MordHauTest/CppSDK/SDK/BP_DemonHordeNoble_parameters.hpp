#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DemonHordeNoble

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Mordhau_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_DemonHordeNoble.BP_DemonHordeNoble_C.ExecuteUbergraph_BP_DemonHordeNoble
// 0x05B0 (0x05B0 - 0x0000)
struct BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauEquipment*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PickUp_ReturnValue;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEquipmentCustomization                CallFunc_GetRandomCustomization_ReturnValue;       // 0x0078(0x0030)()
	class FName                                   Temp_name_Variable;                                // 0x00A8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Impact;                               // 0x00B0(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13E[0x2];                                      // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FrontlineDestroyable_C*             K2Node_DynamicCast_AsBP_Frontline_Destroyable;     // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DeployableBallista_C*               K2Node_DynamicCast_AsBP_Deployable_Ballista;       // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PaviseShield_C*                     K2Node_DynamicCast_AsBP_Pavise_Shield;             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DestroyableActor_C*                 K2Node_DynamicCast_AsBP_Destroyable_Actor;         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DemonHordeGamestate_C*              K2Node_DynamicCast_AsBP_Demon_Horde_Gamestate;     // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Angle;                                // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            K2Node_Event_Type;                                 // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SubType;                              // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_222[0x2];                                      // 0x0222(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Bone;                                 // 0x0224(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Point;                                // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Source;                               // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Agent;                                // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0250(0x0088)(UObjectWrapper)
	class UBP_HordeDefendWidgetFloater_C*         K2Node_DynamicCast_AsBP_Horde_Defend_Widget_Floater; // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x02E8(0x0028)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0310(0x0088)()
	struct FProgressBarStyle                      K2Node_MakeStruct_ProgressBarStyle;                // 0x0398(0x01A0)(UObjectWrapper)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_539[0x3];                                      // 0x0539(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x053C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_544[0x4];                                      // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DemonHordeGamestate_C*              K2Node_DynamicCast_AsBP_Demon_Horde_Gamestate_1;   // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0561(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_562[0x2];                                      // 0x0562(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0574(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0584(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0594(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_595[0x3];                                      // 0x0595(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble) == 0x000010, "Wrong alignment on BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble");
static_assert(sizeof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble) == 0x0005B0, "Wrong size on BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, EntryPoint) == 0x000000, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_CustomEvent_MovementResult_1) == 0x000004, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_CustomEvent_MovementResult) == 0x000018, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, Temp_byte_Variable) == 0x00002C, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_HasAuthority_ReturnValue) == 0x00002D, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_FinishSpawningActor_ReturnValue) == 0x000068, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_PickUp_ReturnValue) == 0x000070, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_PickUp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_GetRandomCustomization_ReturnValue) == 0x000078, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_GetRandomCustomization_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, Temp_name_Variable) == 0x0000A8, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_Event_Impact) == 0x0000B0, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_Event_Impact' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_BreakHitResult_bBlockingHit) == 0x00013C, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_BreakHitResult_bInitialOverlap) == 0x00013D, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_BreakHitResult_Time) == 0x000140, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_BreakHitResult_Distance) == 0x000144, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_BreakHitResult_Location) == 0x000148, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_BreakHitResult_ImpactPoint) == 0x000154, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_BreakHitResult_Normal) == 0x000160, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_BreakHitResult_ImpactNormal) == 0x00016C, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_BreakHitResult_HitItem) == 0x000198, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_BreakHitResult_FaceIndex) == 0x00019C, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_BreakHitResult_TraceEnd) == 0x0001AC, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_GetController_ReturnValue) == 0x0001B8, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_DynamicCast_AsBP_Frontline_Destroyable) == 0x0001C0, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_DynamicCast_AsBP_Frontline_Destroyable' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_DynamicCast_bSuccess) == 0x0001C8, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_ApplyDamage_ReturnValue) == 0x0001CC, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_DynamicCast_AsBP_Deployable_Ballista) == 0x0001D0, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_DynamicCast_AsBP_Deployable_Ballista' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_DynamicCast_bSuccess_1) == 0x0001D8, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_DynamicCast_AsBP_Pavise_Shield) == 0x0001E0, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_DynamicCast_AsBP_Pavise_Shield' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_DynamicCast_bSuccess_2) == 0x0001E8, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_DynamicCast_AsBP_Destroyable_Actor) == 0x0001F0, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_DynamicCast_AsBP_Destroyable_Actor' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_DynamicCast_bSuccess_3) == 0x0001F8, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_HasAuthority_ReturnValue_1) == 0x0001F9, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_GetGameState_ReturnValue) == 0x000200, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_Array_AddUnique_ReturnValue) == 0x000208, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_DynamicCast_AsBP_Demon_Horde_Gamestate) == 0x000210, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_DynamicCast_AsBP_Demon_Horde_Gamestate' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_DynamicCast_bSuccess_4) == 0x000218, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_Event_Angle) == 0x00021C, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_Event_Angle' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_Event_Type) == 0x000220, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_Event_SubType) == 0x000221, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_Event_SubType' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_Event_Bone) == 0x000224, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_Event_Bone' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_Event_Point) == 0x00022C, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_Event_Point' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_Event_Source) == 0x000238, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_Event_Source' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_Event_Agent) == 0x000240, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_Event_Agent' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000248, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_MakeStruct_SlateBrush) == 0x000250, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_DynamicCast_AsBP_Horde_Defend_Widget_Floater) == 0x0002D8, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_DynamicCast_AsBP_Horde_Defend_Widget_Floater' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_DynamicCast_bSuccess_5) == 0x0002E0, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_MakeStruct_SlateColor) == 0x0002E8, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_MakeStruct_SlateBrush_1) == 0x000310, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_MakeStruct_ProgressBarStyle) == 0x000398, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_MakeStruct_ProgressBarStyle' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_HasAuthority_ReturnValue_2) == 0x000538, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, Temp_name_Variable_1) == 0x00053C, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_GetGameState_ReturnValue_1) == 0x000548, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000550, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_DynamicCast_AsBP_Demon_Horde_Gamestate_1) == 0x000558, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_DynamicCast_AsBP_Demon_Horde_Gamestate_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_DynamicCast_bSuccess_6) == 0x000560, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000561, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000564, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_FTrunc_ReturnValue) == 0x000568, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x00056C, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_FTrunc_ReturnValue_1) == 0x000570, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000574, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, K2Node_Event_DeltaSeconds) == 0x000580, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000584, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_Vector_Distance_ReturnValue) == 0x000590, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000594, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x000598, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble, CallFunc_IsValid_ReturnValue) == 0x0005A0, "Member 'BP_DemonHordeNoble_C_ExecuteUbergraph_BP_DemonHordeNoble::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_DemonHordeNoble.BP_DemonHordeNoble_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_DemonHordeNoble_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeNoble_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_DemonHordeNoble_C_ReceiveTick");
static_assert(sizeof(BP_DemonHordeNoble_C_ReceiveTick) == 0x000004, "Wrong size on BP_DemonHordeNoble_C_ReceiveTick");
static_assert(offsetof(BP_DemonHordeNoble_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_DemonHordeNoble_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_DemonHordeNoble.BP_DemonHordeNoble_C.MoveBlockedBySlow
// 0x008C (0x008C - 0x0000)
struct BP_DemonHordeNoble_C_MoveBlockedBySlow final
{
public:
	struct FHitResult                             Impact;                                            // 0x0000(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DemonHordeNoble_C_MoveBlockedBySlow) == 0x000004, "Wrong alignment on BP_DemonHordeNoble_C_MoveBlockedBySlow");
static_assert(sizeof(BP_DemonHordeNoble_C_MoveBlockedBySlow) == 0x00008C, "Wrong size on BP_DemonHordeNoble_C_MoveBlockedBySlow");
static_assert(offsetof(BP_DemonHordeNoble_C_MoveBlockedBySlow, Impact) == 0x000000, "Member 'BP_DemonHordeNoble_C_MoveBlockedBySlow::Impact' has a wrong offset!");

// Function BP_DemonHordeNoble.BP_DemonHordeNoble_C.OnSuccess_120A297343E79B3039C8978770FB9450
// 0x0001 (0x0001 - 0x0000)
struct BP_DemonHordeNoble_C_OnSuccess_120A297343E79B3039C8978770FB9450 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeNoble_C_OnSuccess_120A297343E79B3039C8978770FB9450) == 0x000001, "Wrong alignment on BP_DemonHordeNoble_C_OnSuccess_120A297343E79B3039C8978770FB9450");
static_assert(sizeof(BP_DemonHordeNoble_C_OnSuccess_120A297343E79B3039C8978770FB9450) == 0x000001, "Wrong size on BP_DemonHordeNoble_C_OnSuccess_120A297343E79B3039C8978770FB9450");
static_assert(offsetof(BP_DemonHordeNoble_C_OnSuccess_120A297343E79B3039C8978770FB9450, MovementResult) == 0x000000, "Member 'BP_DemonHordeNoble_C_OnSuccess_120A297343E79B3039C8978770FB9450::MovementResult' has a wrong offset!");

// Function BP_DemonHordeNoble.BP_DemonHordeNoble_C.OnFail_120A297343E79B3039C8978770FB9450
// 0x0001 (0x0001 - 0x0000)
struct BP_DemonHordeNoble_C_OnFail_120A297343E79B3039C8978770FB9450 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeNoble_C_OnFail_120A297343E79B3039C8978770FB9450) == 0x000001, "Wrong alignment on BP_DemonHordeNoble_C_OnFail_120A297343E79B3039C8978770FB9450");
static_assert(sizeof(BP_DemonHordeNoble_C_OnFail_120A297343E79B3039C8978770FB9450) == 0x000001, "Wrong size on BP_DemonHordeNoble_C_OnFail_120A297343E79B3039C8978770FB9450");
static_assert(offsetof(BP_DemonHordeNoble_C_OnFail_120A297343E79B3039C8978770FB9450, MovementResult) == 0x000000, "Member 'BP_DemonHordeNoble_C_OnFail_120A297343E79B3039C8978770FB9450::MovementResult' has a wrong offset!");

// Function BP_DemonHordeNoble.BP_DemonHordeNoble_C.DeactivateStageObjective
// 0x0001 (0x0001 - 0x0000)
struct BP_DemonHordeNoble_C_DeactivateStageObjective final
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DemonHordeNoble_C_DeactivateStageObjective) == 0x000001, "Wrong alignment on BP_DemonHordeNoble_C_DeactivateStageObjective");
static_assert(sizeof(BP_DemonHordeNoble_C_DeactivateStageObjective) == 0x000001, "Wrong size on BP_DemonHordeNoble_C_DeactivateStageObjective");
static_assert(offsetof(BP_DemonHordeNoble_C_DeactivateStageObjective, Return_Value) == 0x000000, "Member 'BP_DemonHordeNoble_C_DeactivateStageObjective::Return_Value' has a wrong offset!");

// Function BP_DemonHordeNoble.BP_DemonHordeNoble_C.ActivateStageObjective
// 0x0001 (0x0001 - 0x0000)
struct BP_DemonHordeNoble_C_ActivateStageObjective final
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DemonHordeNoble_C_ActivateStageObjective) == 0x000001, "Wrong alignment on BP_DemonHordeNoble_C_ActivateStageObjective");
static_assert(sizeof(BP_DemonHordeNoble_C_ActivateStageObjective) == 0x000001, "Wrong size on BP_DemonHordeNoble_C_ActivateStageObjective");
static_assert(offsetof(BP_DemonHordeNoble_C_ActivateStageObjective, Return_Value) == 0x000000, "Member 'BP_DemonHordeNoble_C_ActivateStageObjective::Return_Value' has a wrong offset!");

// Function BP_DemonHordeNoble.BP_DemonHordeNoble_C.OnDied
// 0x0030 (0x0030 - 0x0000)
struct BP_DemonHordeNoble_C_OnDied final
{
public:
	float                                         Angle;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SubType;                                           // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   bone;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Agent;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeNoble_C_OnDied) == 0x000008, "Wrong alignment on BP_DemonHordeNoble_C_OnDied");
static_assert(sizeof(BP_DemonHordeNoble_C_OnDied) == 0x000030, "Wrong size on BP_DemonHordeNoble_C_OnDied");
static_assert(offsetof(BP_DemonHordeNoble_C_OnDied, Angle) == 0x000000, "Member 'BP_DemonHordeNoble_C_OnDied::Angle' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_OnDied, Type) == 0x000004, "Member 'BP_DemonHordeNoble_C_OnDied::Type' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_OnDied, SubType) == 0x000005, "Member 'BP_DemonHordeNoble_C_OnDied::SubType' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_OnDied, bone) == 0x000008, "Member 'BP_DemonHordeNoble_C_OnDied::bone' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_OnDied, Point) == 0x000010, "Member 'BP_DemonHordeNoble_C_OnDied::Point' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_OnDied, Source) == 0x000020, "Member 'BP_DemonHordeNoble_C_OnDied::Source' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeNoble_C_OnDied, Agent) == 0x000028, "Member 'BP_DemonHordeNoble_C_OnDied::Agent' has a wrong offset!");

}

