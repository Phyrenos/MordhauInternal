#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordePlayerController

#include "Basic.hpp"

#include "E_HordeSkill_structs.hpp"
#include "STRUCT_HordeSkillInfo_structs.hpp"
#include "Mordhau_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "MordhauOnlineSubsystem_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_HordePlayerController.BP_HordePlayerController_C.ExecuteUbergraph_BP_HordePlayerController
// 0x03B0 (0x03B0 - 0x0000)
struct BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x0008(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsUsingController_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsUsingController_ReturnValue_1;       // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0028(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0058(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0078(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0090(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x00A8(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x00C8(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_aPawn;                                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeCharacter_C*                   K2Node_DynamicCast_AsBP_Horde_Character;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetSkillLevel_Level;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeCharacter_C*                   K2Node_DynamicCast_AsBP_Horde_Character_1;         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x0150(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetIsDead_ReturnValue;                    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoSpecialAbility_Success;                 // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x2];                                      // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Structure;                            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DeployableBallista_C*               K2Node_DynamicCast_AsBP_Deployable_Ballista;       // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DestroyableActor_C*                 K2Node_DynamicCast_AsBP_Destroyable_Actor;         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSkillLevelFloat_SkillLevel;            // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauHUD*                            CallFunc_GetMordhauHUD_ReturnValue;                // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordeHUD_C*                         K2Node_DynamicCast_AsBP_Horde_HUD;                 // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HordeSkill                                  K2Node_CustomEvent_Skill;                          // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpgradeSkill_Success;                     // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E3[0x5];                                      // 0x01E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeCharacter_C*                   K2Node_DynamicCast_AsBP_Horde_Character_2;         // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Array_Get_Item;                           // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20B[0x5];                                      // 0x020B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauEquipment*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         CallFunc_GetAmmo_ReturnValue;                      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PickUpToSlot_ReturnValue;                 // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x023B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_2;               // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_3;               // 0x023E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsUsingController_ReturnValue_2;       // 0x023F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMordhauHUD*                            CallFunc_GetMordhauHUD_ReturnValue_1;              // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeHUD_C*                         K2Node_DynamicCast_AsBP_Horde_HUD_1;               // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsUsingController_ReturnValue_3;       // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252[0x2];                                      // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Buy_Menu_Entry;                 // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeGameState_C*                   K2Node_DynamicCast_AsBP_Horde_Game_State;          // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1; // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHordePurchaseAllowed_Allowed;           // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_273[0x5];                                      // 0x0273(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State_1;      // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State_2;      // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayInEditor_ReturnValue;               // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEditor_ReturnValue_1;                   // 0x029B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayInEditor_ReturnValue_1;             // 0x029D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAdmin_ReturnValue;                      // 0x029E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x029F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAdmin_ReturnValue_1;                    // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A3[0x5];                                      // 0x02A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauGameSession*                    CallFunc_GetMordhauGameSession_ReturnValue;        // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayFabPlayer                         CallFunc_GetPlayFabPlayer_ReturnValue;             // 0x02B0(0x0060)(ConstParm, HasGetValueTypeHash)
	class AMordhauGameSession*                    CallFunc_GetMordhauGameSession_ReturnValue_1;      // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayFabPlayer                         CallFunc_GetPlayFabPlayer_ReturnValue_1;           // 0x0318(0x0060)(ConstParm, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State_3;      // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordeCharacter_C*                   K2Node_DynamicCast_AsBP_Horde_Character_3;         // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController) == 0x000010, "Wrong alignment on BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController");
static_assert(sizeof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController) == 0x0003B0, "Wrong size on BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, EntryPoint) == 0x000000, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000004, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, Temp_struct_Variable) == 0x000008, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, Temp_bool_Has_Been_Initd_Variable) == 0x000020, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GetIsUsingController_ReturnValue) == 0x000021, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GetIsUsingController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GetIsUsingController_ReturnValue_1) == 0x000022, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GetIsUsingController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_InputActionEvent_Key) == 0x000028, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_HasAuthority_ReturnValue) == 0x000040, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_Conv_IntToByte_ReturnValue) == 0x000050, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_InputActionEvent_Key_1) == 0x000058, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, Temp_bool_IsClosed_Variable) == 0x000070, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_InputActionEvent_Key_2) == 0x000078, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_InputActionEvent_Key_3) == 0x000090, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, Temp_struct_Variable_1) == 0x0000A8, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, Temp_bool_IsClosed_Variable_1) == 0x0000C0, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, Temp_bool_Has_Been_Initd_Variable_1) == 0x0000C1, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_InputActionEvent_Key_4) == 0x0000C8, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, Temp_bool_IsClosed_Variable_2) == 0x0000E0, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, Temp_bool_Has_Been_Initd_Variable_2) == 0x0000E1, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_Event_aPawn) == 0x0000E8, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_Event_aPawn' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_AsBP_Horde_Character) == 0x0000F0, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_AsBP_Horde_Character' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GetSkillLevel_Level) == 0x000130, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GetSkillLevel_Level' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_Greater_ByteByte_ReturnValue) == 0x000131, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_K2_GetPawn_ReturnValue) == 0x000138, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_AsBP_Horde_Character_1) == 0x000140, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_AsBP_Horde_Character_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_bSuccess_1) == 0x000148, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_InputActionEvent_Key_5) == 0x000150, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GetIsDead_ReturnValue) == 0x000168, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GetIsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_Not_PreBool_ReturnValue) == 0x000169, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_DoSpecialAbility_Success) == 0x00016A, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_DoSpecialAbility_Success' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00016B, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_BooleanAND_ReturnValue) == 0x00016C, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_MakeLiteralName_ReturnValue) == 0x000170, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GetGameState_ReturnValue) == 0x000178, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, Temp_bool_Has_Been_Initd_Variable_3) == 0x000180, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_IsValid_ReturnValue) == 0x000181, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000184, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_Event_Structure) == 0x000188, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_Event_Structure' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000190, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_AsBP_Deployable_Ballista) == 0x000198, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_AsBP_Deployable_Ballista' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_bSuccess_2) == 0x0001A0, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_AsBP_Destroyable_Actor) == 0x0001A8, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_AsBP_Destroyable_Actor' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_bSuccess_3) == 0x0001B0, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GetSkillLevelFloat_SkillLevel) == 0x0001B4, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GetSkillLevelFloat_SkillLevel' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GetMordhauHUD_ReturnValue) == 0x0001B8, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GetMordhauHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001C0, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_AsBP_Horde_HUD) == 0x0001C8, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_AsBP_Horde_HUD' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_bSuccess_4) == 0x0001D0, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001D4, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0001D8, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0001DC, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_CustomEvent_Skill) == 0x0001E0, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_CustomEvent_Skill' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_UpgradeSkill_Success) == 0x0001E1, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_UpgradeSkill_Success' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_Event_EndPlayReason) == 0x0001E2, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x0001E8, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_bSuccess_5) == 0x0001F0, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_K2_GetPawn_ReturnValue_1) == 0x0001F8, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_AsBP_Horde_Character_2) == 0x000200, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_AsBP_Horde_Character_2' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_bSuccess_6) == 0x000208, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_Array_Get_Item) == 0x000209, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00020A, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_Array_Get_Item_1) == 0x000210, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_Array_Length_ReturnValue) == 0x000218, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000220, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_Less_IntInt_ReturnValue) == 0x000228, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_FinishSpawningActor_ReturnValue) == 0x000230, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GetAmmo_ReturnValue) == 0x000238, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GetAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_PickUpToSlot_ReturnValue) == 0x000239, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_PickUpToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00023A, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_IsValidClass_ReturnValue) == 0x00023B, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_IsValidClass_ReturnValue_1) == 0x00023C, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_IsValidClass_ReturnValue_2) == 0x00023D, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_IsValidClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_IsValidClass_ReturnValue_3) == 0x00023E, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_IsValidClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GetIsUsingController_ReturnValue_2) == 0x00023F, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GetIsUsingController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GetMordhauHUD_ReturnValue_1) == 0x000240, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GetMordhauHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_AsBP_Horde_HUD_1) == 0x000248, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_AsBP_Horde_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_bSuccess_7) == 0x000250, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GetIsUsingController_ReturnValue_3) == 0x000251, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GetIsUsingController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_CustomEvent_Buy_Menu_Entry) == 0x000254, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_CustomEvent_Buy_Menu_Entry' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_IsValid_ReturnValue_1) == 0x000258, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GetGameState_ReturnValue_1) == 0x000260, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_AsBP_Horde_Game_State) == 0x000268, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_AsBP_Horde_Game_State' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_bSuccess_8) == 0x000270, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1) == 0x000271, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_IsHordePurchaseAllowed_Allowed) == 0x000272, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_IsHordePurchaseAllowed_Allowed' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_AsBP_Horde_Player_State_1) == 0x000278, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_AsBP_Horde_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_bSuccess_9) == 0x000280, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_AsBP_Horde_Player_State_2) == 0x000288, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_AsBP_Horde_Player_State_2' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_bSuccess_10) == 0x000290, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_Add_IntInt_ReturnValue_1) == 0x000294, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_Add_ByteByte_ReturnValue) == 0x000298, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_IsEditor_ReturnValue) == 0x000299, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_IsPlayInEditor_ReturnValue) == 0x00029A, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_IsPlayInEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_IsEditor_ReturnValue_1) == 0x00029B, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_IsEditor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_BooleanOR_ReturnValue) == 0x00029C, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_IsPlayInEditor_ReturnValue_1) == 0x00029D, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_IsPlayInEditor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_IsAdmin_ReturnValue) == 0x00029E, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_IsAdmin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_BooleanOR_ReturnValue_1) == 0x00029F, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_BooleanOR_ReturnValue_2) == 0x0002A0, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_IsAdmin_ReturnValue_1) == 0x0002A1, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_IsAdmin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_BooleanOR_ReturnValue_3) == 0x0002A2, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GetMordhauGameSession_ReturnValue) == 0x0002A8, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GetMordhauGameSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GetPlayFabPlayer_ReturnValue) == 0x0002B0, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GetPlayFabPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GetMordhauGameSession_ReturnValue_1) == 0x000310, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GetMordhauGameSession_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, CallFunc_GetPlayFabPlayer_ReturnValue_1) == 0x000318, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::CallFunc_GetPlayFabPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, Temp_bool_IsClosed_Variable_3) == 0x000378, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_Event_PossessedPawn) == 0x000380, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_Event_PossessedPawn' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_AsBP_Horde_Player_State_3) == 0x000388, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_AsBP_Horde_Player_State_3' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_bSuccess_11) == 0x000390, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_AsBP_Horde_Character_3) == 0x000398, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_AsBP_Horde_Character_3' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController, K2Node_DynamicCast_bSuccess_12) == 0x0003A0, "Member 'BP_HordePlayerController_C_ExecuteUbergraph_BP_HordePlayerController::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct BP_HordePlayerController_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_ReceivePossess) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_ReceivePossess");
static_assert(sizeof(BP_HordePlayerController_C_ReceivePossess) == 0x000008, "Wrong size on BP_HordePlayerController_C_ReceivePossess");
static_assert(offsetof(BP_HordePlayerController_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'BP_HordePlayerController_C_ReceivePossess::PossessedPawn' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.AttemptPurchaseBuyMenuEntry
// 0x0004 (0x0004 - 0x0000)
struct BP_HordePlayerController_C_AttemptPurchaseBuyMenuEntry final
{
public:
	int32                                         Buy_Menu_Entry;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_AttemptPurchaseBuyMenuEntry) == 0x000004, "Wrong alignment on BP_HordePlayerController_C_AttemptPurchaseBuyMenuEntry");
static_assert(sizeof(BP_HordePlayerController_C_AttemptPurchaseBuyMenuEntry) == 0x000004, "Wrong size on BP_HordePlayerController_C_AttemptPurchaseBuyMenuEntry");
static_assert(offsetof(BP_HordePlayerController_C_AttemptPurchaseBuyMenuEntry, Buy_Menu_Entry) == 0x000000, "Member 'BP_HordePlayerController_C_AttemptPurchaseBuyMenuEntry::Buy_Menu_Entry' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_HordePlayerController_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_HordePlayerController_C_ReceiveEndPlay");
static_assert(sizeof(BP_HordePlayerController_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_HordePlayerController_C_ReceiveEndPlay");
static_assert(offsetof(BP_HordePlayerController_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_HordePlayerController_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.RequestUpgradeSkill
// 0x0001 (0x0001 - 0x0000)
struct BP_HordePlayerController_C_RequestUpgradeSkill final
{
public:
	E_HordeSkill                                  Skill;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_RequestUpgradeSkill) == 0x000001, "Wrong alignment on BP_HordePlayerController_C_RequestUpgradeSkill");
static_assert(sizeof(BP_HordePlayerController_C_RequestUpgradeSkill) == 0x000001, "Wrong size on BP_HordePlayerController_C_RequestUpgradeSkill");
static_assert(offsetof(BP_HordePlayerController_C_RequestUpgradeSkill, Skill) == 0x000000, "Member 'BP_HordePlayerController_C_RequestUpgradeSkill::Skill' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.InpActEvt_Show Scoreboard_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_HordePlayerController_C_InpActEvt_Show_Scoreboard_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_InpActEvt_Show_Scoreboard_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_InpActEvt_Show_Scoreboard_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_HordePlayerController_C_InpActEvt_Show_Scoreboard_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_HordePlayerController_C_InpActEvt_Show_Scoreboard_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_HordePlayerController_C_InpActEvt_Show_Scoreboard_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_HordePlayerController_C_InpActEvt_Show_Scoreboard_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.InpActEvt_Show Scoreboard_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_HordePlayerController_C_InpActEvt_Show_Scoreboard_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_InpActEvt_Show_Scoreboard_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_InpActEvt_Show_Scoreboard_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_HordePlayerController_C_InpActEvt_Show_Scoreboard_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_HordePlayerController_C_InpActEvt_Show_Scoreboard_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_HordePlayerController_C_InpActEvt_Show_Scoreboard_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_HordePlayerController_C_InpActEvt_Show_Scoreboard_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.InpActEvt_Use Horde Ultimate_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_HordePlayerController_C_InpActEvt_Use_Horde_Ultimate_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_InpActEvt_Use_Horde_Ultimate_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_InpActEvt_Use_Horde_Ultimate_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_HordePlayerController_C_InpActEvt_Use_Horde_Ultimate_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_HordePlayerController_C_InpActEvt_Use_Horde_Ultimate_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_HordePlayerController_C_InpActEvt_Use_Horde_Ultimate_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_HordePlayerController_C_InpActEvt_Use_Horde_Ultimate_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.InpActEvt_Show Horde Skill Menu_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_HordePlayerController_C_InpActEvt_Show_Horde_Skill_Menu_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_InpActEvt_Show_Horde_Skill_Menu_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_InpActEvt_Show_Horde_Skill_Menu_K2Node_InputActionEvent_3");
static_assert(sizeof(BP_HordePlayerController_C_InpActEvt_Show_Horde_Skill_Menu_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on BP_HordePlayerController_C_InpActEvt_Show_Horde_Skill_Menu_K2Node_InputActionEvent_3");
static_assert(offsetof(BP_HordePlayerController_C_InpActEvt_Show_Horde_Skill_Menu_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'BP_HordePlayerController_C_InpActEvt_Show_Horde_Skill_Menu_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.InpActEvt_Battlecry_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_HordePlayerController_C_InpActEvt_Battlecry_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_InpActEvt_Battlecry_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_InpActEvt_Battlecry_K2Node_InputActionEvent_4");
static_assert(sizeof(BP_HordePlayerController_C_InpActEvt_Battlecry_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on BP_HordePlayerController_C_InpActEvt_Battlecry_K2Node_InputActionEvent_4");
static_assert(offsetof(BP_HordePlayerController_C_InpActEvt_Battlecry_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'BP_HordePlayerController_C_InpActEvt_Battlecry_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.OnRep_PurchaseTrigger
// 0x0001 (0x0001 - 0x0000)
struct BP_HordePlayerController_C_OnRep_PurchaseTrigger final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_OnRep_PurchaseTrigger) == 0x000001, "Wrong alignment on BP_HordePlayerController_C_OnRep_PurchaseTrigger");
static_assert(sizeof(BP_HordePlayerController_C_OnRep_PurchaseTrigger) == 0x000001, "Wrong size on BP_HordePlayerController_C_OnRep_PurchaseTrigger");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_PurchaseTrigger, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_HordePlayerController_C_OnRep_PurchaseTrigger::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.CustomizeEquipment
// 0x00B0 (0x00B0 - 0x0000)
struct BP_HordePlayerController_C_CustomizeEquipment final
{
public:
	class AMordhauEquipment*                      Equipment;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         EmblemColor2;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         EmblemColor1;                                      // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Emblem;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEquipmentCustomization                Customization;                                     // 0x0010(0x0030)(Edit, BlueprintVisible)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEquipmentCustomization                CallFunc_GetRandomCustomization_ReturnValue;       // 0x0048(0x0030)()
	struct FEquipmentCustomization                CallFunc_GetDefaultEquipmentCustomizationFor_OutCustomization; // 0x0078(0x0030)()
	bool                                          CallFunc_GetDefaultEquipmentCustomizationFor_ReturnValue; // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Array_Get_Item;                           // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Array_Get_Item_1;                         // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_CustomizeEquipment) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_CustomizeEquipment");
static_assert(sizeof(BP_HordePlayerController_C_CustomizeEquipment) == 0x0000B0, "Wrong size on BP_HordePlayerController_C_CustomizeEquipment");
static_assert(offsetof(BP_HordePlayerController_C_CustomizeEquipment, Equipment) == 0x000000, "Member 'BP_HordePlayerController_C_CustomizeEquipment::Equipment' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_CustomizeEquipment, EmblemColor2) == 0x000008, "Member 'BP_HordePlayerController_C_CustomizeEquipment::EmblemColor2' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_CustomizeEquipment, EmblemColor1) == 0x000009, "Member 'BP_HordePlayerController_C_CustomizeEquipment::EmblemColor1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_CustomizeEquipment, Emblem) == 0x00000C, "Member 'BP_HordePlayerController_C_CustomizeEquipment::Emblem' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_CustomizeEquipment, Customization) == 0x000010, "Member 'BP_HordePlayerController_C_CustomizeEquipment::Customization' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_CustomizeEquipment, CallFunc_GetObjectClass_ReturnValue) == 0x000040, "Member 'BP_HordePlayerController_C_CustomizeEquipment::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_CustomizeEquipment, CallFunc_GetRandomCustomization_ReturnValue) == 0x000048, "Member 'BP_HordePlayerController_C_CustomizeEquipment::CallFunc_GetRandomCustomization_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_CustomizeEquipment, CallFunc_GetDefaultEquipmentCustomizationFor_OutCustomization) == 0x000078, "Member 'BP_HordePlayerController_C_CustomizeEquipment::CallFunc_GetDefaultEquipmentCustomizationFor_OutCustomization' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_CustomizeEquipment, CallFunc_GetDefaultEquipmentCustomizationFor_ReturnValue) == 0x0000A8, "Member 'BP_HordePlayerController_C_CustomizeEquipment::CallFunc_GetDefaultEquipmentCustomizationFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_CustomizeEquipment, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000A9, "Member 'BP_HordePlayerController_C_CustomizeEquipment::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_CustomizeEquipment, CallFunc_Array_Get_Item) == 0x0000AA, "Member 'BP_HordePlayerController_C_CustomizeEquipment::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_CustomizeEquipment, CallFunc_Array_Get_Item_1) == 0x0000AB, "Member 'BP_HordePlayerController_C_CustomizeEquipment::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.UpgradeSkill
// 0x00B8 (0x00B8 - 0x0000)
struct BP_HordePlayerController_C_UpgradeSkill final
{
public:
	E_HordeSkill                                  Skill;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasPrerequisite_Result;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_HordeSkillInfo                 CallFunc_Map_Find_Value;                           // 0x0010(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordeCharacter_C*                   K2Node_DynamicCast_AsBP_Horde_Character;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Array_Get_Item;                           // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_UpgradeSkill) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_UpgradeSkill");
static_assert(sizeof(BP_HordePlayerController_C_UpgradeSkill) == 0x0000B8, "Wrong size on BP_HordePlayerController_C_UpgradeSkill");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, Skill) == 0x000000, "Member 'BP_HordePlayerController_C_UpgradeSkill::Skill' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, Success) == 0x000001, "Member 'BP_HordePlayerController_C_UpgradeSkill::Success' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_HasAuthority_ReturnValue) == 0x000002, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_HasPrerequisite_Result) == 0x000004, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_HasPrerequisite_Result' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_Map_Find_ReturnValue) == 0x000078, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000079, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00007A, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_K2_GetPawn_ReturnValue) == 0x000080, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_BooleanAND_ReturnValue) == 0x000088, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, K2Node_DynamicCast_AsBP_Horde_Character) == 0x000090, "Member 'BP_HordePlayerController_C_UpgradeSkill::K2Node_DynamicCast_AsBP_Horde_Character' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_HordePlayerController_C_UpgradeSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_BooleanAND_ReturnValue_1) == 0x000099, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x0000A0, "Member 'BP_HordePlayerController_C_UpgradeSkill::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'BP_HordePlayerController_C_UpgradeSkill::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_Array_Get_Item) == 0x0000A9, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_Subtract_ByteByte_ReturnValue) == 0x0000AA, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000AB, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_Add_ByteByte_ReturnValue) == 0x0000AC, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_Less_ByteByte_ReturnValue) == 0x0000AD, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000AE, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_Greater_ByteByte_ReturnValue) == 0x0000AF, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_UpgradeSkill, CallFunc_BooleanAND_ReturnValue_2) == 0x0000B0, "Member 'BP_HordePlayerController_C_UpgradeSkill::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.GetSkillLevel
// 0x0018 (0x0018 - 0x0000)
struct BP_HordePlayerController_C_GetSkillLevel final
{
public:
	E_HordeSkill                                  Skill;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Level;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Array_Get_Item;                           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_GetSkillLevel) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_GetSkillLevel");
static_assert(sizeof(BP_HordePlayerController_C_GetSkillLevel) == 0x000018, "Wrong size on BP_HordePlayerController_C_GetSkillLevel");
static_assert(offsetof(BP_HordePlayerController_C_GetSkillLevel, Skill) == 0x000000, "Member 'BP_HordePlayerController_C_GetSkillLevel::Skill' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetSkillLevel, Level) == 0x000001, "Member 'BP_HordePlayerController_C_GetSkillLevel::Level' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetSkillLevel, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'BP_HordePlayerController_C_GetSkillLevel::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetSkillLevel, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x000008, "Member 'BP_HordePlayerController_C_GetSkillLevel::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetSkillLevel, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_HordePlayerController_C_GetSkillLevel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetSkillLevel, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000011, "Member 'BP_HordePlayerController_C_GetSkillLevel::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetSkillLevel, CallFunc_Array_Get_Item) == 0x000012, "Member 'BP_HordePlayerController_C_GetSkillLevel::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.HasPrerequisite
// 0x0008 (0x0008 - 0x0000)
struct BP_HordePlayerController_C_HasPrerequisite final
{
public:
	E_HordeSkill                                  Skill;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_HordeSkill                                  CallFunc_Map_Find_Value;                           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetSkillLevel_Level;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_HasPrerequisite) == 0x000001, "Wrong alignment on BP_HordePlayerController_C_HasPrerequisite");
static_assert(sizeof(BP_HordePlayerController_C_HasPrerequisite) == 0x000008, "Wrong size on BP_HordePlayerController_C_HasPrerequisite");
static_assert(offsetof(BP_HordePlayerController_C_HasPrerequisite, Skill) == 0x000000, "Member 'BP_HordePlayerController_C_HasPrerequisite::Skill' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_HasPrerequisite, Result) == 0x000001, "Member 'BP_HordePlayerController_C_HasPrerequisite::Result' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_HasPrerequisite, CallFunc_Map_Find_Value) == 0x000002, "Member 'BP_HordePlayerController_C_HasPrerequisite::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_HasPrerequisite, CallFunc_Map_Find_ReturnValue) == 0x000003, "Member 'BP_HordePlayerController_C_HasPrerequisite::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_HasPrerequisite, CallFunc_GetSkillLevel_Level) == 0x000004, "Member 'BP_HordePlayerController_C_HasPrerequisite::CallFunc_GetSkillLevel_Level' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_HasPrerequisite, CallFunc_Greater_ByteByte_ReturnValue) == 0x000005, "Member 'BP_HordePlayerController_C_HasPrerequisite::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_HasPrerequisite, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'BP_HordePlayerController_C_HasPrerequisite::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_HasPrerequisite, CallFunc_BooleanOR_ReturnValue) == 0x000007, "Member 'BP_HordePlayerController_C_HasPrerequisite::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.SkillsUpdated
// 0x00D8 (0x00D8 - 0x0000)
struct BP_HordePlayerController_C_SkillsUpdated final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauHUD*                            CallFunc_GetMordhauHUD_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordeHUD_C*                         K2Node_DynamicCast_AsBP_Horde_HUD;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Array_Get_Item;                           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_HordeSkillInfo                 CallFunc_Map_Find_Value;                           // 0x0048(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordeCharacter_C*                   K2Node_DynamicCast_AsBP_Horde_Character;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_SkillsUpdated) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_SkillsUpdated");
static_assert(sizeof(BP_HordePlayerController_C_SkillsUpdated) == 0x0000D8, "Wrong size on BP_HordePlayerController_C_SkillsUpdated");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'BP_HordePlayerController_C_SkillsUpdated::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_HordePlayerController_C_SkillsUpdated::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, CallFunc_Conv_IntToByte_ReturnValue) == 0x000008, "Member 'BP_HordePlayerController_C_SkillsUpdated::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, CallFunc_GetValidValue_ReturnValue) == 0x000009, "Member 'BP_HordePlayerController_C_SkillsUpdated::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, CallFunc_GetValidValue_ReturnValue_1) == 0x00000A, "Member 'BP_HordePlayerController_C_SkillsUpdated::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'BP_HordePlayerController_C_SkillsUpdated::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_HordePlayerController_C_SkillsUpdated::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'BP_HordePlayerController_C_SkillsUpdated::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_HordePlayerController_C_SkillsUpdated::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, CallFunc_GetMordhauHUD_ReturnValue) == 0x000018, "Member 'BP_HordePlayerController_C_SkillsUpdated::CallFunc_GetMordhauHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x000020, "Member 'BP_HordePlayerController_C_SkillsUpdated::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_HordePlayerController_C_SkillsUpdated::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, K2Node_DynamicCast_AsBP_Horde_HUD) == 0x000030, "Member 'BP_HordePlayerController_C_SkillsUpdated::K2Node_DynamicCast_AsBP_Horde_HUD' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_HordePlayerController_C_SkillsUpdated::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, CallFunc_Array_Get_Item) == 0x000039, "Member 'BP_HordePlayerController_C_SkillsUpdated::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, CallFunc_IsValid_ReturnValue) == 0x00003A, "Member 'BP_HordePlayerController_C_SkillsUpdated::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, CallFunc_Greater_ByteByte_ReturnValue) == 0x00003B, "Member 'BP_HordePlayerController_C_SkillsUpdated::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_HordePlayerController_C_SkillsUpdated::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_HordePlayerController_C_SkillsUpdated::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'BP_HordePlayerController_C_SkillsUpdated::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, CallFunc_Map_Find_Value) == 0x000048, "Member 'BP_HordePlayerController_C_SkillsUpdated::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, CallFunc_Map_Find_ReturnValue) == 0x0000B0, "Member 'BP_HordePlayerController_C_SkillsUpdated::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, CallFunc_K2_GetPawn_ReturnValue) == 0x0000B8, "Member 'BP_HordePlayerController_C_SkillsUpdated::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C0, "Member 'BP_HordePlayerController_C_SkillsUpdated::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, K2Node_DynamicCast_AsBP_Horde_Character) == 0x0000C8, "Member 'BP_HordePlayerController_C_SkillsUpdated::K2Node_DynamicCast_AsBP_Horde_Character' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_SkillsUpdated, K2Node_DynamicCast_bSuccess_2) == 0x0000D0, "Member 'BP_HordePlayerController_C_SkillsUpdated::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.GetSkillLevelFloat
// 0x0010 (0x0010 - 0x0000)
struct BP_HordePlayerController_C_GetSkillLevelFloat final
{
public:
	E_HordeSkill                                  Skill;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SkillLevel;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetSkillLevel_Level;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_GetSkillLevelFloat) == 0x000004, "Wrong alignment on BP_HordePlayerController_C_GetSkillLevelFloat");
static_assert(sizeof(BP_HordePlayerController_C_GetSkillLevelFloat) == 0x000010, "Wrong size on BP_HordePlayerController_C_GetSkillLevelFloat");
static_assert(offsetof(BP_HordePlayerController_C_GetSkillLevelFloat, Skill) == 0x000000, "Member 'BP_HordePlayerController_C_GetSkillLevelFloat::Skill' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetSkillLevelFloat, SkillLevel) == 0x000004, "Member 'BP_HordePlayerController_C_GetSkillLevelFloat::SkillLevel' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetSkillLevelFloat, CallFunc_GetSkillLevel_Level) == 0x000008, "Member 'BP_HordePlayerController_C_GetSkillLevelFloat::CallFunc_GetSkillLevel_Level' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetSkillLevelFloat, CallFunc_Conv_ByteToFloat_ReturnValue) == 0x00000C, "Member 'BP_HordePlayerController_C_GetSkillLevelFloat::CallFunc_Conv_ByteToFloat_ReturnValue' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.TryFletcherRestock
// 0x0040 (0x0040 - 0x0000)
struct BP_HordePlayerController_C_TryFletcherRestock final
{
public:
	float                                         CallFunc_GetScaledSkillLevelParams_PercentA;       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledSkillLevelParams_PercentB;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetScaledSkillLevelParams_IntegerA;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledSkillLevelParams_TimeA;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetLastControlledCharacter_ReturnValue;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Bow_C*                              K2Node_DynamicCast_AsBP_Bow;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDead_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetCurrentMaxAmmo_ReturnValue;            // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetAmmo_ReturnValue;                      // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_BMin_ReturnValue;                         // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_TryFletcherRestock) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_TryFletcherRestock");
static_assert(sizeof(BP_HordePlayerController_C_TryFletcherRestock) == 0x000040, "Wrong size on BP_HordePlayerController_C_TryFletcherRestock");
static_assert(offsetof(BP_HordePlayerController_C_TryFletcherRestock, CallFunc_GetScaledSkillLevelParams_PercentA) == 0x000000, "Member 'BP_HordePlayerController_C_TryFletcherRestock::CallFunc_GetScaledSkillLevelParams_PercentA' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryFletcherRestock, CallFunc_GetScaledSkillLevelParams_PercentB) == 0x000004, "Member 'BP_HordePlayerController_C_TryFletcherRestock::CallFunc_GetScaledSkillLevelParams_PercentB' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryFletcherRestock, CallFunc_GetScaledSkillLevelParams_IntegerA) == 0x000008, "Member 'BP_HordePlayerController_C_TryFletcherRestock::CallFunc_GetScaledSkillLevelParams_IntegerA' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryFletcherRestock, CallFunc_GetScaledSkillLevelParams_TimeA) == 0x00000C, "Member 'BP_HordePlayerController_C_TryFletcherRestock::CallFunc_GetScaledSkillLevelParams_TimeA' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryFletcherRestock, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'BP_HordePlayerController_C_TryFletcherRestock::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryFletcherRestock, CallFunc_GetLastControlledCharacter_ReturnValue) == 0x000018, "Member 'BP_HordePlayerController_C_TryFletcherRestock::CallFunc_GetLastControlledCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryFletcherRestock, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_HordePlayerController_C_TryFletcherRestock::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryFletcherRestock, K2Node_DynamicCast_AsBP_Bow) == 0x000028, "Member 'BP_HordePlayerController_C_TryFletcherRestock::K2Node_DynamicCast_AsBP_Bow' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryFletcherRestock, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_HordePlayerController_C_TryFletcherRestock::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryFletcherRestock, CallFunc_GetIsDead_ReturnValue) == 0x000031, "Member 'BP_HordePlayerController_C_TryFletcherRestock::CallFunc_GetIsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryFletcherRestock, CallFunc_GetCurrentMaxAmmo_ReturnValue) == 0x000032, "Member 'BP_HordePlayerController_C_TryFletcherRestock::CallFunc_GetCurrentMaxAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryFletcherRestock, CallFunc_GetAmmo_ReturnValue) == 0x000033, "Member 'BP_HordePlayerController_C_TryFletcherRestock::CallFunc_GetAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryFletcherRestock, CallFunc_RandomFloat_ReturnValue) == 0x000034, "Member 'BP_HordePlayerController_C_TryFletcherRestock::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryFletcherRestock, CallFunc_Add_ByteByte_ReturnValue) == 0x000038, "Member 'BP_HordePlayerController_C_TryFletcherRestock::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryFletcherRestock, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000039, "Member 'BP_HordePlayerController_C_TryFletcherRestock::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryFletcherRestock, CallFunc_BMin_ReturnValue) == 0x00003A, "Member 'BP_HordePlayerController_C_TryFletcherRestock::CallFunc_BMin_ReturnValue' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.TryScatterShot
// 0x0180 (0x0180 - 0x0000)
struct BP_HordePlayerController_C_TryScatterShot final
{
public:
	class AMordhauProjectile*                     SourceProjectile;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B4[0xC];                                       // 0x00B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauProjectile*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauProjectile*                     CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledSkillLevelParams_PercentA;       // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledSkillLevelParams_PercentB;       // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetScaledSkillLevelParams_IntegerA;       // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledSkillLevelParams_TimeA;          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetLastControlledCharacter_ReturnValue;   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_TryScatterShot) == 0x000010, "Wrong alignment on BP_HordePlayerController_C_TryScatterShot");
static_assert(sizeof(BP_HordePlayerController_C_TryScatterShot) == 0x000180, "Wrong size on BP_HordePlayerController_C_TryScatterShot");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, SourceProjectile) == 0x000000, "Member 'BP_HordePlayerController_C_TryScatterShot::SourceProjectile' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_TransformLocation_ReturnValue) == 0x000040, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_BreakTransform_Location) == 0x00004C, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_BreakTransform_Rotation) == 0x000058, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_BreakTransform_Scale) == 0x000064, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_TransformLocation_ReturnValue_1) == 0x000070, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_BreakRotator_Roll) == 0x00007C, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_BreakRotator_Pitch) == 0x000080, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_BreakRotator_Yaw) == 0x000084, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_BreakRotator_Roll_1) == 0x000088, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_BreakRotator_Pitch_1) == 0x00008C, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_BreakRotator_Yaw_1) == 0x000090, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_Add_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000098, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_MakeRotator_ReturnValue) == 0x00009C, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_MakeRotator_ReturnValue_1) == 0x0000A8, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_MakeTransform_ReturnValue) == 0x0000C0, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_MakeTransform_ReturnValue_1) == 0x0000F0, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_GetObjectClass_ReturnValue) == 0x000120, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000128, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000130, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_FinishSpawningActor_ReturnValue) == 0x000138, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000140, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_HasAuthority_ReturnValue) == 0x000148, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_Add_ByteByte_ReturnValue) == 0x000149, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_GetScaledSkillLevelParams_PercentA) == 0x00014C, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_GetScaledSkillLevelParams_PercentA' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_GetScaledSkillLevelParams_PercentB) == 0x000150, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_GetScaledSkillLevelParams_PercentB' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_GetScaledSkillLevelParams_IntegerA) == 0x000154, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_GetScaledSkillLevelParams_IntegerA' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_GetScaledSkillLevelParams_TimeA) == 0x000158, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_GetScaledSkillLevelParams_TimeA' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_RandomFloat_ReturnValue) == 0x00015C, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000160, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_GetLastControlledCharacter_ReturnValue) == 0x000168, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_GetLastControlledCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_TryScatterShot, CallFunc_IsValid_ReturnValue) == 0x000170, "Member 'BP_HordePlayerController_C_TryScatterShot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.AssignFireArrowValues
// 0x0038 (0x0038 - 0x0000)
struct BP_HordePlayerController_C_AssignFireArrowValues final
{
public:
	class AActor*                                 Arrow;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledSkillLevelParams_PercentA;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledSkillLevelParams_PercentB;       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetScaledSkillLevelParams_IntegerA;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledSkillLevelParams_TimeA;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ArrowProjectile_C*                  K2Node_DynamicCast_AsBP_Arrow_Projectile;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetSkillLevel_Level;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_AssignFireArrowValues) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_AssignFireArrowValues");
static_assert(sizeof(BP_HordePlayerController_C_AssignFireArrowValues) == 0x000038, "Wrong size on BP_HordePlayerController_C_AssignFireArrowValues");
static_assert(offsetof(BP_HordePlayerController_C_AssignFireArrowValues, Arrow) == 0x000000, "Member 'BP_HordePlayerController_C_AssignFireArrowValues::Arrow' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_AssignFireArrowValues, CallFunc_GetScaledSkillLevelParams_PercentA) == 0x000008, "Member 'BP_HordePlayerController_C_AssignFireArrowValues::CallFunc_GetScaledSkillLevelParams_PercentA' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_AssignFireArrowValues, CallFunc_GetScaledSkillLevelParams_PercentB) == 0x00000C, "Member 'BP_HordePlayerController_C_AssignFireArrowValues::CallFunc_GetScaledSkillLevelParams_PercentB' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_AssignFireArrowValues, CallFunc_GetScaledSkillLevelParams_IntegerA) == 0x000010, "Member 'BP_HordePlayerController_C_AssignFireArrowValues::CallFunc_GetScaledSkillLevelParams_IntegerA' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_AssignFireArrowValues, CallFunc_GetScaledSkillLevelParams_TimeA) == 0x000014, "Member 'BP_HordePlayerController_C_AssignFireArrowValues::CallFunc_GetScaledSkillLevelParams_TimeA' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_AssignFireArrowValues, K2Node_DynamicCast_AsBP_Arrow_Projectile) == 0x000018, "Member 'BP_HordePlayerController_C_AssignFireArrowValues::K2Node_DynamicCast_AsBP_Arrow_Projectile' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_AssignFireArrowValues, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_HordePlayerController_C_AssignFireArrowValues::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_AssignFireArrowValues, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_HordePlayerController_C_AssignFireArrowValues::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_AssignFireArrowValues, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_HordePlayerController_C_AssignFireArrowValues::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_AssignFireArrowValues, CallFunc_GetSkillLevel_Level) == 0x00002C, "Member 'BP_HordePlayerController_C_AssignFireArrowValues::CallFunc_GetSkillLevel_Level' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_AssignFireArrowValues, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000030, "Member 'BP_HordePlayerController_C_AssignFireArrowValues::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_AssignFireArrowValues, CallFunc_Greater_ByteByte_ReturnValue) == 0x000034, "Member 'BP_HordePlayerController_C_AssignFireArrowValues::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.GetDiscountedPrice
// 0x0018 (0x0018 - 0x0000)
struct BP_HordePlayerController_C_GetDiscountedPrice final
{
public:
	int32                                         BasePrice;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Horde_Purchasable;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DiscountedPrice;                                   // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_GetDiscountedPrice) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_GetDiscountedPrice");
static_assert(sizeof(BP_HordePlayerController_C_GetDiscountedPrice) == 0x000018, "Wrong size on BP_HordePlayerController_C_GetDiscountedPrice");
static_assert(offsetof(BP_HordePlayerController_C_GetDiscountedPrice, BasePrice) == 0x000000, "Member 'BP_HordePlayerController_C_GetDiscountedPrice::BasePrice' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetDiscountedPrice, Horde_Purchasable) == 0x000008, "Member 'BP_HordePlayerController_C_GetDiscountedPrice::Horde_Purchasable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetDiscountedPrice, DiscountedPrice) == 0x000010, "Member 'BP_HordePlayerController_C_GetDiscountedPrice::DiscountedPrice' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.OnRep_BackstabCounter
// 0x0010 (0x0010 - 0x0000)
struct BP_HordePlayerController_C_OnRep_BackstabCounter final
{
public:
	class ABP_HordeHUD_C*                         K2Node_DynamicCast_AsBP_Horde_HUD;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_OnRep_BackstabCounter) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_OnRep_BackstabCounter");
static_assert(sizeof(BP_HordePlayerController_C_OnRep_BackstabCounter) == 0x000010, "Wrong size on BP_HordePlayerController_C_OnRep_BackstabCounter");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_BackstabCounter, K2Node_DynamicCast_AsBP_Horde_HUD) == 0x000000, "Member 'BP_HordePlayerController_C_OnRep_BackstabCounter::K2Node_DynamicCast_AsBP_Horde_HUD' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_BackstabCounter, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_HordePlayerController_C_OnRep_BackstabCounter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.OnRep_CriticalCounter
// 0x0010 (0x0010 - 0x0000)
struct BP_HordePlayerController_C_OnRep_CriticalCounter final
{
public:
	class ABP_HordeHUD_C*                         K2Node_DynamicCast_AsBP_Horde_HUD;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_OnRep_CriticalCounter) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_OnRep_CriticalCounter");
static_assert(sizeof(BP_HordePlayerController_C_OnRep_CriticalCounter) == 0x000010, "Wrong size on BP_HordePlayerController_C_OnRep_CriticalCounter");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_CriticalCounter, K2Node_DynamicCast_AsBP_Horde_HUD) == 0x000000, "Member 'BP_HordePlayerController_C_OnRep_CriticalCounter::K2Node_DynamicCast_AsBP_Horde_HUD' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_CriticalCounter, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_HordePlayerController_C_OnRep_CriticalCounter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.OnRep_NextSpecialTime
// 0x0030 (0x0030 - 0x0000)
struct BP_HordePlayerController_C_OnRep_NextSpecialTime final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauHUD*                            CallFunc_GetMordhauHUD_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeGameState_C*                   K2Node_DynamicCast_AsBP_Horde_Game_State;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordeHUD_C*                         K2Node_DynamicCast_AsBP_Horde_HUD;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_OnRep_NextSpecialTime) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_OnRep_NextSpecialTime");
static_assert(sizeof(BP_HordePlayerController_C_OnRep_NextSpecialTime) == 0x000030, "Wrong size on BP_HordePlayerController_C_OnRep_NextSpecialTime");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_NextSpecialTime, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'BP_HordePlayerController_C_OnRep_NextSpecialTime::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_NextSpecialTime, CallFunc_GetMordhauHUD_ReturnValue) == 0x000008, "Member 'BP_HordePlayerController_C_OnRep_NextSpecialTime::CallFunc_GetMordhauHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_NextSpecialTime, K2Node_DynamicCast_AsBP_Horde_Game_State) == 0x000010, "Member 'BP_HordePlayerController_C_OnRep_NextSpecialTime::K2Node_DynamicCast_AsBP_Horde_Game_State' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_NextSpecialTime, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HordePlayerController_C_OnRep_NextSpecialTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_NextSpecialTime, K2Node_DynamicCast_AsBP_Horde_HUD) == 0x000020, "Member 'BP_HordePlayerController_C_OnRep_NextSpecialTime::K2Node_DynamicCast_AsBP_Horde_HUD' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_NextSpecialTime, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_HordePlayerController_C_OnRep_NextSpecialTime::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_NextSpecialTime, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x00002C, "Member 'BP_HordePlayerController_C_OnRep_NextSpecialTime::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.GetScaledSkillLevelParams
// 0x00C0 (0x00C0 - 0x0000)
struct BP_HordePlayerController_C_GetScaledSkillLevelParams final
{
public:
	E_HordeSkill                                  Skill;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Bias;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PercentA;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PercentB;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IntegerA;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeA;                                             // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_HordeSkillInfo                 CallFunc_Map_Find_Value;                           // 0x0030(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Array_Get_Item;                           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_GetScaledSkillLevelParams) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_GetScaledSkillLevelParams");
static_assert(sizeof(BP_HordePlayerController_C_GetScaledSkillLevelParams) == 0x0000C0, "Wrong size on BP_HordePlayerController_C_GetScaledSkillLevelParams");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, Skill) == 0x000000, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::Skill' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, Bias) == 0x000004, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::Bias' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, PercentA) == 0x000008, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::PercentA' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, PercentB) == 0x00000C, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::PercentB' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, IntegerA) == 0x000010, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::IntegerA' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, TimeA) == 0x000014, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::TimeA' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000018, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x000020, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, CallFunc_Map_Find_Value) == 0x000030, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, CallFunc_Array_Get_Item) == 0x000099, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00009C, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000A0, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000B0, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B4, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000B8, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetScaledSkillLevelParams, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000BC, "Member 'BP_HordePlayerController_C_GetScaledSkillLevelParams::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.OnRep_OverpowerCounter
// 0x0010 (0x0010 - 0x0000)
struct BP_HordePlayerController_C_OnRep_OverpowerCounter final
{
public:
	class ABP_HordeHUD_C*                         K2Node_DynamicCast_AsBP_Horde_HUD;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_OnRep_OverpowerCounter) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_OnRep_OverpowerCounter");
static_assert(sizeof(BP_HordePlayerController_C_OnRep_OverpowerCounter) == 0x000010, "Wrong size on BP_HordePlayerController_C_OnRep_OverpowerCounter");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_OverpowerCounter, K2Node_DynamicCast_AsBP_Horde_HUD) == 0x000000, "Member 'BP_HordePlayerController_C_OnRep_OverpowerCounter::K2Node_DynamicCast_AsBP_Horde_HUD' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_OverpowerCounter, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_HordePlayerController_C_OnRep_OverpowerCounter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.OnRep_SweepCounter
// 0x0010 (0x0010 - 0x0000)
struct BP_HordePlayerController_C_OnRep_SweepCounter final
{
public:
	class ABP_HordeHUD_C*                         K2Node_DynamicCast_AsBP_Horde_HUD;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_OnRep_SweepCounter) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_OnRep_SweepCounter");
static_assert(sizeof(BP_HordePlayerController_C_OnRep_SweepCounter) == 0x000010, "Wrong size on BP_HordePlayerController_C_OnRep_SweepCounter");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_SweepCounter, K2Node_DynamicCast_AsBP_Horde_HUD) == 0x000000, "Member 'BP_HordePlayerController_C_OnRep_SweepCounter::K2Node_DynamicCast_AsBP_Horde_HUD' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_SweepCounter, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_HordePlayerController_C_OnRep_SweepCounter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.OnRep_RecoilCounter
// 0x0010 (0x0010 - 0x0000)
struct BP_HordePlayerController_C_OnRep_RecoilCounter final
{
public:
	class ABP_HordeHUD_C*                         K2Node_DynamicCast_AsBP_Horde_HUD;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_OnRep_RecoilCounter) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_OnRep_RecoilCounter");
static_assert(sizeof(BP_HordePlayerController_C_OnRep_RecoilCounter) == 0x000010, "Wrong size on BP_HordePlayerController_C_OnRep_RecoilCounter");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_RecoilCounter, K2Node_DynamicCast_AsBP_Horde_HUD) == 0x000000, "Member 'BP_HordePlayerController_C_OnRep_RecoilCounter::K2Node_DynamicCast_AsBP_Horde_HUD' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_RecoilCounter, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_HordePlayerController_C_OnRep_RecoilCounter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.OnRep_ScavengerCounter
// 0x0010 (0x0010 - 0x0000)
struct BP_HordePlayerController_C_OnRep_ScavengerCounter final
{
public:
	class ABP_HordeHUD_C*                         K2Node_DynamicCast_AsBP_Horde_HUD;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_OnRep_ScavengerCounter) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_OnRep_ScavengerCounter");
static_assert(sizeof(BP_HordePlayerController_C_OnRep_ScavengerCounter) == 0x000010, "Wrong size on BP_HordePlayerController_C_OnRep_ScavengerCounter");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_ScavengerCounter, K2Node_DynamicCast_AsBP_Horde_HUD) == 0x000000, "Member 'BP_HordePlayerController_C_OnRep_ScavengerCounter::K2Node_DynamicCast_AsBP_Horde_HUD' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_ScavengerCounter, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_HordePlayerController_C_OnRep_ScavengerCounter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.OnRep_LastChanceCounter
// 0x0010 (0x0010 - 0x0000)
struct BP_HordePlayerController_C_OnRep_LastChanceCounter final
{
public:
	class ABP_HordeHUD_C*                         K2Node_DynamicCast_AsBP_Horde_HUD;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_OnRep_LastChanceCounter) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_OnRep_LastChanceCounter");
static_assert(sizeof(BP_HordePlayerController_C_OnRep_LastChanceCounter) == 0x000010, "Wrong size on BP_HordePlayerController_C_OnRep_LastChanceCounter");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_LastChanceCounter, K2Node_DynamicCast_AsBP_Horde_HUD) == 0x000000, "Member 'BP_HordePlayerController_C_OnRep_LastChanceCounter::K2Node_DynamicCast_AsBP_Horde_HUD' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_LastChanceCounter, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_HordePlayerController_C_OnRep_LastChanceCounter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.OnRep_MiracleCounter
// 0x0010 (0x0010 - 0x0000)
struct BP_HordePlayerController_C_OnRep_MiracleCounter final
{
public:
	class ABP_HordeHUD_C*                         K2Node_DynamicCast_AsBP_Horde_HUD;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_OnRep_MiracleCounter) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_OnRep_MiracleCounter");
static_assert(sizeof(BP_HordePlayerController_C_OnRep_MiracleCounter) == 0x000010, "Wrong size on BP_HordePlayerController_C_OnRep_MiracleCounter");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_MiracleCounter, K2Node_DynamicCast_AsBP_Horde_HUD) == 0x000000, "Member 'BP_HordePlayerController_C_OnRep_MiracleCounter::K2Node_DynamicCast_AsBP_Horde_HUD' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_MiracleCounter, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_HordePlayerController_C_OnRep_MiracleCounter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.OnRep_CriticalShotCounter
// 0x0010 (0x0010 - 0x0000)
struct BP_HordePlayerController_C_OnRep_CriticalShotCounter final
{
public:
	class ABP_HordeHUD_C*                         K2Node_DynamicCast_AsBP_Horde_HUD;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_OnRep_CriticalShotCounter) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_OnRep_CriticalShotCounter");
static_assert(sizeof(BP_HordePlayerController_C_OnRep_CriticalShotCounter) == 0x000010, "Wrong size on BP_HordePlayerController_C_OnRep_CriticalShotCounter");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_CriticalShotCounter, K2Node_DynamicCast_AsBP_Horde_HUD) == 0x000000, "Member 'BP_HordePlayerController_C_OnRep_CriticalShotCounter::K2Node_DynamicCast_AsBP_Horde_HUD' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_CriticalShotCounter, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_HordePlayerController_C_OnRep_CriticalShotCounter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.OnAfterPossess
// 0x0008 (0x0008 - 0x0000)
struct BP_HordePlayerController_C_OnAfterPossess final
{
public:
	class APawn*                                  APawn;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_OnAfterPossess) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_OnAfterPossess");
static_assert(sizeof(BP_HordePlayerController_C_OnAfterPossess) == 0x000008, "Wrong size on BP_HordePlayerController_C_OnAfterPossess");
static_assert(offsetof(BP_HordePlayerController_C_OnAfterPossess, APawn) == 0x000000, "Member 'BP_HordePlayerController_C_OnAfterPossess::APawn' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.OnRep_ScattershotCounter
// 0x0010 (0x0010 - 0x0000)
struct BP_HordePlayerController_C_OnRep_ScattershotCounter final
{
public:
	class ABP_HordeHUD_C*                         K2Node_DynamicCast_AsBP_Horde_HUD;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_OnRep_ScattershotCounter) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_OnRep_ScattershotCounter");
static_assert(sizeof(BP_HordePlayerController_C_OnRep_ScattershotCounter) == 0x000010, "Wrong size on BP_HordePlayerController_C_OnRep_ScattershotCounter");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_ScattershotCounter, K2Node_DynamicCast_AsBP_Horde_HUD) == 0x000000, "Member 'BP_HordePlayerController_C_OnRep_ScattershotCounter::K2Node_DynamicCast_AsBP_Horde_HUD' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_ScattershotCounter, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_HordePlayerController_C_OnRep_ScattershotCounter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.OnRep_SellTrigger
// 0x0001 (0x0001 - 0x0000)
struct BP_HordePlayerController_C_OnRep_SellTrigger final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_OnRep_SellTrigger) == 0x000001, "Wrong alignment on BP_HordePlayerController_C_OnRep_SellTrigger");
static_assert(sizeof(BP_HordePlayerController_C_OnRep_SellTrigger) == 0x000001, "Wrong size on BP_HordePlayerController_C_OnRep_SellTrigger");
static_assert(offsetof(BP_HordePlayerController_C_OnRep_SellTrigger, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_HordePlayerController_C_OnRep_SellTrigger::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.GetMerchantDuplicateChance
// 0x0040 (0x0040 - 0x0000)
struct BP_HordePlayerController_C_GetMerchantDuplicateChance final
{
public:
	class UClass*                                 Purchased_Actor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DispenseBonus;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledSkillLevelParams_PercentA;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledSkillLevelParams_PercentB;       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetScaledSkillLevelParams_IntegerA;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledSkillLevelParams_TimeA;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerController_C_GetMerchantDuplicateChance) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_GetMerchantDuplicateChance");
static_assert(sizeof(BP_HordePlayerController_C_GetMerchantDuplicateChance) == 0x000040, "Wrong size on BP_HordePlayerController_C_GetMerchantDuplicateChance");
static_assert(offsetof(BP_HordePlayerController_C_GetMerchantDuplicateChance, Purchased_Actor) == 0x000000, "Member 'BP_HordePlayerController_C_GetMerchantDuplicateChance::Purchased_Actor' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetMerchantDuplicateChance, DispenseBonus) == 0x000008, "Member 'BP_HordePlayerController_C_GetMerchantDuplicateChance::DispenseBonus' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetMerchantDuplicateChance, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_HordePlayerController_C_GetMerchantDuplicateChance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetMerchantDuplicateChance, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_HordePlayerController_C_GetMerchantDuplicateChance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetMerchantDuplicateChance, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_HordePlayerController_C_GetMerchantDuplicateChance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetMerchantDuplicateChance, CallFunc_GetScaledSkillLevelParams_PercentA) == 0x000018, "Member 'BP_HordePlayerController_C_GetMerchantDuplicateChance::CallFunc_GetScaledSkillLevelParams_PercentA' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetMerchantDuplicateChance, CallFunc_GetScaledSkillLevelParams_PercentB) == 0x00001C, "Member 'BP_HordePlayerController_C_GetMerchantDuplicateChance::CallFunc_GetScaledSkillLevelParams_PercentB' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetMerchantDuplicateChance, CallFunc_GetScaledSkillLevelParams_IntegerA) == 0x000020, "Member 'BP_HordePlayerController_C_GetMerchantDuplicateChance::CallFunc_GetScaledSkillLevelParams_IntegerA' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetMerchantDuplicateChance, CallFunc_GetScaledSkillLevelParams_TimeA) == 0x000024, "Member 'BP_HordePlayerController_C_GetMerchantDuplicateChance::CallFunc_GetScaledSkillLevelParams_TimeA' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetMerchantDuplicateChance, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_HordePlayerController_C_GetMerchantDuplicateChance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetMerchantDuplicateChance, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000030, "Member 'BP_HordePlayerController_C_GetMerchantDuplicateChance::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetMerchantDuplicateChance, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000031, "Member 'BP_HordePlayerController_C_GetMerchantDuplicateChance::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetMerchantDuplicateChance, CallFunc_ClassIsChildOf_ReturnValue) == 0x000032, "Member 'BP_HordePlayerController_C_GetMerchantDuplicateChance::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetMerchantDuplicateChance, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_HordePlayerController_C_GetMerchantDuplicateChance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetMerchantDuplicateChance, CallFunc_BooleanOR_ReturnValue) == 0x000038, "Member 'BP_HordePlayerController_C_GetMerchantDuplicateChance::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetMerchantDuplicateChance, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BP_HordePlayerController_C_GetMerchantDuplicateChance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_GetMerchantDuplicateChance, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'BP_HordePlayerController_C_GetMerchantDuplicateChance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.ReassignWearablePickupsToProfile
// 0x0078 (0x0078 - 0x0000)
struct BP_HordePlayerController_C_ReassignWearablePickupsToProfile final
{
public:
	class UClass*                                 Wearable_Pickups;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauCharacter*                      Mordhau_Character;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_HordeGameState_C*                   K2Node_DynamicCast_AsBP_Horde_Game_State;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_ReassignWearablePickupsToProfile) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_ReassignWearablePickupsToProfile");
static_assert(sizeof(BP_HordePlayerController_C_ReassignWearablePickupsToProfile) == 0x000078, "Wrong size on BP_HordePlayerController_C_ReassignWearablePickupsToProfile");
static_assert(offsetof(BP_HordePlayerController_C_ReassignWearablePickupsToProfile, Wearable_Pickups) == 0x000000, "Member 'BP_HordePlayerController_C_ReassignWearablePickupsToProfile::Wearable_Pickups' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ReassignWearablePickupsToProfile, Mordhau_Character) == 0x000008, "Member 'BP_HordePlayerController_C_ReassignWearablePickupsToProfile::Mordhau_Character' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ReassignWearablePickupsToProfile, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'BP_HordePlayerController_C_ReassignWearablePickupsToProfile::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ReassignWearablePickupsToProfile, CallFunc_GetClassDisplayName_ReturnValue) == 0x000018, "Member 'BP_HordePlayerController_C_ReassignWearablePickupsToProfile::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ReassignWearablePickupsToProfile, K2Node_DynamicCast_AsBP_Horde_Game_State) == 0x000028, "Member 'BP_HordePlayerController_C_ReassignWearablePickupsToProfile::K2Node_DynamicCast_AsBP_Horde_Game_State' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ReassignWearablePickupsToProfile, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_HordePlayerController_C_ReassignWearablePickupsToProfile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ReassignWearablePickupsToProfile, CallFunc_IsValidClass_ReturnValue) == 0x000031, "Member 'BP_HordePlayerController_C_ReassignWearablePickupsToProfile::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ReassignWearablePickupsToProfile, CallFunc_Conv_BoolToString_ReturnValue) == 0x000038, "Member 'BP_HordePlayerController_C_ReassignWearablePickupsToProfile::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ReassignWearablePickupsToProfile, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_HordePlayerController_C_ReassignWearablePickupsToProfile::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ReassignWearablePickupsToProfile, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'BP_HordePlayerController_C_ReassignWearablePickupsToProfile::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerController_C_ReassignWearablePickupsToProfile, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000068, "Member 'BP_HordePlayerController_C_ReassignWearablePickupsToProfile::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.InpActEvt_Battlecry_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_HordePlayerController_C_InpActEvt_Battlecry_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_InpActEvt_Battlecry_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_InpActEvt_Battlecry_K2Node_InputActionEvent_5");
static_assert(sizeof(BP_HordePlayerController_C_InpActEvt_Battlecry_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on BP_HordePlayerController_C_InpActEvt_Battlecry_K2Node_InputActionEvent_5");
static_assert(offsetof(BP_HordePlayerController_C_InpActEvt_Battlecry_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'BP_HordePlayerController_C_InpActEvt_Battlecry_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function BP_HordePlayerController.BP_HordePlayerController_C.OnBuilt
// 0x0008 (0x0008 - 0x0000)
struct BP_HordePlayerController_C_OnBuilt final
{
public:
	class AActor*                                 Structure;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerController_C_OnBuilt) == 0x000008, "Wrong alignment on BP_HordePlayerController_C_OnBuilt");
static_assert(sizeof(BP_HordePlayerController_C_OnBuilt) == 0x000008, "Wrong size on BP_HordePlayerController_C_OnBuilt");
static_assert(offsetof(BP_HordePlayerController_C_OnBuilt, Structure) == 0x000000, "Member 'BP_HordePlayerController_C_OnBuilt::Structure' has a wrong offset!");

}

