#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ServerBrowserEntry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Mordhau_structs.hpp"


namespace SDK::Params
{

// Function BP_ServerBrowserEntry.BP_ServerBrowserEntry_C.ExecuteUbergraph_BP_ServerBrowserEntry
// 0x0080 (0x0080 - 0x0000)
struct BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBP_ServerBrowser_C*                    CallFunc_GetServerBrowser_ServerBrowser;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0010(0x0028)()
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry) == 0x000008, "Wrong alignment on BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry");
static_assert(sizeof(BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry) == 0x000080, "Wrong size on BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry");
static_assert(offsetof(BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry, EntryPoint) == 0x000000, "Member 'BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry, Temp_bool_Variable) == 0x000005, "Member 'BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry, Temp_bool_IsClosed_Variable) == 0x000006, "Member 'BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000007, "Member 'BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry, CallFunc_GetServerBrowser_ServerBrowser) == 0x000008, "Member 'BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry::CallFunc_GetServerBrowser_ServerBrowser' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry, K2Node_MakeStruct_SlateColor) == 0x000010, "Member 'BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry, CallFunc_MakeVector_ReturnValue) == 0x00003C, "Member 'BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry, CallFunc_IsConsolePlatform_ReturnValue) == 0x000048, "Member 'BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry, CallFunc_MakeVector_ReturnValue_1) == 0x00004C, "Member 'BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000058, "Member 'BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry, CallFunc_Conv_BoolToString_ReturnValue) == 0x000060, "Member 'BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'BP_ServerBrowserEntry_C_ExecuteUbergraph_BP_ServerBrowserEntry::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_ServerBrowserEntry.BP_ServerBrowserEntry_C.Select
// 0x0310 (0x0310 - 0x0000)
struct BP_ServerBrowserEntry_C_Select final
{
public:
	bool                                          isSelected;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            Style;                                             // 0x0008(0x0088)(Edit, BlueprintVisible)
	class UBP_ServerBrowser_C*                    CallFunc_GetServerBrowser_ServerBrowser;           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FButtonStyle                           K2Node_MakeStruct_ButtonStyle;                     // 0x0098(0x0278)()
};
static_assert(alignof(BP_ServerBrowserEntry_C_Select) == 0x000008, "Wrong alignment on BP_ServerBrowserEntry_C_Select");
static_assert(sizeof(BP_ServerBrowserEntry_C_Select) == 0x000310, "Wrong size on BP_ServerBrowserEntry_C_Select");
static_assert(offsetof(BP_ServerBrowserEntry_C_Select, isSelected) == 0x000000, "Member 'BP_ServerBrowserEntry_C_Select::isSelected' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Select, Style) == 0x000008, "Member 'BP_ServerBrowserEntry_C_Select::Style' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Select, CallFunc_GetServerBrowser_ServerBrowser) == 0x000090, "Member 'BP_ServerBrowserEntry_C_Select::CallFunc_GetServerBrowser_ServerBrowser' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Select, K2Node_MakeStruct_ButtonStyle) == 0x000098, "Member 'BP_ServerBrowserEntry_C_Select::K2Node_MakeStruct_ButtonStyle' has a wrong offset!");

// Function BP_ServerBrowserEntry.BP_ServerBrowserEntry_C.GetServerBrowser
// 0x0020 (0x0020 - 0x0000)
struct BP_ServerBrowserEntry_C_GetServerBrowser final
{
public:
	class UBP_ServerBrowser_C*                    ServerBrowser;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_ServerBrowser_C*>            CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_ServerBrowser_C*                    CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ServerBrowserEntry_C_GetServerBrowser) == 0x000008, "Wrong alignment on BP_ServerBrowserEntry_C_GetServerBrowser");
static_assert(sizeof(BP_ServerBrowserEntry_C_GetServerBrowser) == 0x000020, "Wrong size on BP_ServerBrowserEntry_C_GetServerBrowser");
static_assert(offsetof(BP_ServerBrowserEntry_C_GetServerBrowser, ServerBrowser) == 0x000000, "Member 'BP_ServerBrowserEntry_C_GetServerBrowser::ServerBrowser' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_GetServerBrowser, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000008, "Member 'BP_ServerBrowserEntry_C_GetServerBrowser::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_GetServerBrowser, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_ServerBrowserEntry_C_GetServerBrowser::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_ServerBrowserEntry.BP_ServerBrowserEntry_C.Update
// 0x03E0 (0x03E0 - 0x0000)
struct BP_ServerBrowserEntry_C_Update final
{
public:
	struct FServerSearchResult                    Session_0;                                         // 0x0000(0x0110)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FLinearColor                           Color;                                             // 0x0110(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0127(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsModded_ReturnValue;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOfficial_ReturnValue;                   // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNoviceServer_ReturnValue;               // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetServerAddress_ReturnValue;             // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetServerName_ReturnValue;                // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPing_ReturnValue;                      // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0158(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0170(0x0018)()
	int32                                         CallFunc_GetMaxPlayers_ReturnValue;                // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentPlayers_ReturnValue;            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0190(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x01A8(0x0018)()
	class FString                                 CallFunc_GetMapName_ReturnValue;                   // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetGameMode_ReturnValue;                  // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x01E0(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x01F8(0x0018)()
	bool                                          CallFunc_IsPasswordProtected_ReturnValue;          // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOfficial_ReturnValue_1;                 // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0213(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasPartyMemberConsolePlayer_ReturnValue;  // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0217(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAdmin_ReturnValue;                      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MordhauGameInstance_C*              K2Node_DynamicCast_AsBP_Mordhau_Game_Instance;     // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNovice_ReturnValue;                     // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0238(0x0028)(UObjectWrapper)
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetFavoriteServers_ReturnValue;           // 0x0268(0x0010)(ReferenceParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0278(0x0028)()
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x02A8(0x0088)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0330(0x0028)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0358(0x0088)()
};
static_assert(alignof(BP_ServerBrowserEntry_C_Update) == 0x000008, "Wrong alignment on BP_ServerBrowserEntry_C_Update");
static_assert(sizeof(BP_ServerBrowserEntry_C_Update) == 0x0003E0, "Wrong size on BP_ServerBrowserEntry_C_Update");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, Session_0) == 0x000000, "Member 'BP_ServerBrowserEntry_C_Update::Session_0' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, Color) == 0x000110, "Member 'BP_ServerBrowserEntry_C_Update::Color' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, Temp_byte_Variable) == 0x000120, "Member 'BP_ServerBrowserEntry_C_Update::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, Temp_byte_Variable_1) == 0x000121, "Member 'BP_ServerBrowserEntry_C_Update::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, Temp_bool_Variable) == 0x000122, "Member 'BP_ServerBrowserEntry_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, Temp_byte_Variable_2) == 0x000123, "Member 'BP_ServerBrowserEntry_C_Update::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, Temp_byte_Variable_3) == 0x000124, "Member 'BP_ServerBrowserEntry_C_Update::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, Temp_bool_Variable_1) == 0x000125, "Member 'BP_ServerBrowserEntry_C_Update::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, Temp_byte_Variable_4) == 0x000126, "Member 'BP_ServerBrowserEntry_C_Update::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, Temp_byte_Variable_5) == 0x000127, "Member 'BP_ServerBrowserEntry_C_Update::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_IsModded_ReturnValue) == 0x000128, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_IsModded_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_IsOfficial_ReturnValue) == 0x000129, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_IsOfficial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_Not_PreBool_ReturnValue) == 0x00012A, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, K2Node_Select_Default) == 0x00012B, "Member 'BP_ServerBrowserEntry_C_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_IsNoviceServer_ReturnValue) == 0x00012C, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_IsNoviceServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_GetServerAddress_ReturnValue) == 0x000130, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_GetServerAddress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_GetServerName_ReturnValue) == 0x000140, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_GetServerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_GetPing_ReturnValue) == 0x000150, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_GetPing_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_Conv_StringToText_ReturnValue) == 0x000158, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_Conv_IntToText_ReturnValue) == 0x000170, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_GetMaxPlayers_ReturnValue) == 0x000188, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_GetMaxPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_GetCurrentPlayers_ReturnValue) == 0x00018C, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_GetCurrentPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000190, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_Conv_IntToText_ReturnValue_2) == 0x0001A8, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_GetMapName_ReturnValue) == 0x0001C0, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_GetMapName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_GetGameMode_ReturnValue) == 0x0001D0, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0001E0, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0001F8, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_IsPasswordProtected_ReturnValue) == 0x000210, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_IsPasswordProtected_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_IsOfficial_ReturnValue_1) == 0x000211, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_IsOfficial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_IsConsolePlatform_ReturnValue) == 0x000212, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, K2Node_Select_Default_1) == 0x000213, "Member 'BP_ServerBrowserEntry_C_Update::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, Temp_bool_Variable_2) == 0x000214, "Member 'BP_ServerBrowserEntry_C_Update::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_HasPartyMemberConsolePlayer_ReturnValue) == 0x000215, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_HasPartyMemberConsolePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_BooleanAND_ReturnValue) == 0x000216, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, K2Node_Select_Default_2) == 0x000217, "Member 'BP_ServerBrowserEntry_C_Update::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_GetGameInstance_ReturnValue) == 0x000218, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_IsAdmin_ReturnValue) == 0x000220, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_IsAdmin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, K2Node_DynamicCast_AsBP_Mordhau_Game_Instance) == 0x000228, "Member 'BP_ServerBrowserEntry_C_Update::K2Node_DynamicCast_AsBP_Mordhau_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, K2Node_DynamicCast_bSuccess) == 0x000230, "Member 'BP_ServerBrowserEntry_C_Update::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_IsNovice_ReturnValue) == 0x000231, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_IsNovice_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, K2Node_MakeStruct_SlateColor) == 0x000238, "Member 'BP_ServerBrowserEntry_C_Update::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000260, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_GetFavoriteServers_ReturnValue) == 0x000268, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_GetFavoriteServers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, K2Node_MakeStruct_SlateColor_1) == 0x000278, "Member 'BP_ServerBrowserEntry_C_Update::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, CallFunc_Array_Contains_ReturnValue) == 0x0002A0, "Member 'BP_ServerBrowserEntry_C_Update::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, K2Node_MakeStruct_SlateBrush) == 0x0002A8, "Member 'BP_ServerBrowserEntry_C_Update::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, K2Node_MakeStruct_SlateColor_2) == 0x000330, "Member 'BP_ServerBrowserEntry_C_Update::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_Update, K2Node_MakeStruct_SlateBrush_1) == 0x000358, "Member 'BP_ServerBrowserEntry_C_Update::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");

// Function BP_ServerBrowserEntry.BP_ServerBrowserEntry_C.SetFavoriteServers
// 0x01C0 (0x01C0 - 0x0000)
struct BP_ServerBrowserEntry_C_SetFavoriteServers final
{
public:
	bool                                          bAddOrRemove;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         UpdatedServers;                                    // 0x0008(0x0010)(Edit, BlueprintVisible)
	class FString                                 CallFunc_GetServerAddress_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0058(0x0088)()
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00E8(0x0028)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0110(0x0088)()
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue_1; // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue_2; // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetFavoriteServers_ReturnValue;           // 0x01B0(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_ServerBrowserEntry_C_SetFavoriteServers) == 0x000008, "Wrong alignment on BP_ServerBrowserEntry_C_SetFavoriteServers");
static_assert(sizeof(BP_ServerBrowserEntry_C_SetFavoriteServers) == 0x0001C0, "Wrong size on BP_ServerBrowserEntry_C_SetFavoriteServers");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetFavoriteServers, bAddOrRemove) == 0x000000, "Member 'BP_ServerBrowserEntry_C_SetFavoriteServers::bAddOrRemove' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetFavoriteServers, UpdatedServers) == 0x000008, "Member 'BP_ServerBrowserEntry_C_SetFavoriteServers::UpdatedServers' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetFavoriteServers, CallFunc_GetServerAddress_ReturnValue) == 0x000018, "Member 'BP_ServerBrowserEntry_C_SetFavoriteServers::CallFunc_GetServerAddress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetFavoriteServers, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'BP_ServerBrowserEntry_C_SetFavoriteServers::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetFavoriteServers, CallFunc_Array_AddUnique_ReturnValue) == 0x000050, "Member 'BP_ServerBrowserEntry_C_SetFavoriteServers::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetFavoriteServers, K2Node_MakeStruct_SlateBrush) == 0x000058, "Member 'BP_ServerBrowserEntry_C_SetFavoriteServers::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetFavoriteServers, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000E0, "Member 'BP_ServerBrowserEntry_C_SetFavoriteServers::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetFavoriteServers, K2Node_MakeStruct_SlateColor_1) == 0x0000E8, "Member 'BP_ServerBrowserEntry_C_SetFavoriteServers::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetFavoriteServers, K2Node_MakeStruct_SlateBrush_1) == 0x000110, "Member 'BP_ServerBrowserEntry_C_SetFavoriteServers::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetFavoriteServers, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000198, "Member 'BP_ServerBrowserEntry_C_SetFavoriteServers::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetFavoriteServers, CallFunc_GetMordhauGameUserSettings_ReturnValue_1) == 0x0001A0, "Member 'BP_ServerBrowserEntry_C_SetFavoriteServers::CallFunc_GetMordhauGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetFavoriteServers, CallFunc_GetMordhauGameUserSettings_ReturnValue_2) == 0x0001A8, "Member 'BP_ServerBrowserEntry_C_SetFavoriteServers::CallFunc_GetMordhauGameUserSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetFavoriteServers, CallFunc_GetFavoriteServers_ReturnValue) == 0x0001B0, "Member 'BP_ServerBrowserEntry_C_SetFavoriteServers::CallFunc_GetFavoriteServers_ReturnValue' has a wrong offset!");

// Function BP_ServerBrowserEntry.BP_ServerBrowserEntry_C.SetEntryHeight
// 0x0038 (0x0038 - 0x0000)
struct BP_ServerBrowserEntry_C_SetEntryHeight final
{
public:
	int32                                         FontSize;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EntryWidth;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTextBlock*>                     K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UTextBlock*                             CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ServerBrowserEntry_C_SetEntryHeight) == 0x000008, "Wrong alignment on BP_ServerBrowserEntry_C_SetEntryHeight");
static_assert(sizeof(BP_ServerBrowserEntry_C_SetEntryHeight) == 0x000038, "Wrong size on BP_ServerBrowserEntry_C_SetEntryHeight");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetEntryHeight, FontSize) == 0x000000, "Member 'BP_ServerBrowserEntry_C_SetEntryHeight::FontSize' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetEntryHeight, EntryWidth) == 0x000004, "Member 'BP_ServerBrowserEntry_C_SetEntryHeight::EntryWidth' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetEntryHeight, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_ServerBrowserEntry_C_SetEntryHeight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetEntryHeight, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_ServerBrowserEntry_C_SetEntryHeight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetEntryHeight, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_ServerBrowserEntry_C_SetEntryHeight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetEntryHeight, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_ServerBrowserEntry_C_SetEntryHeight::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetEntryHeight, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_ServerBrowserEntry_C_SetEntryHeight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetEntryHeight, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_ServerBrowserEntry_C_SetEntryHeight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetEntryHeight, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_ServerBrowserEntry_C_SetEntryHeight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ServerBrowserEntry.BP_ServerBrowserEntry_C.SetFontSize
// 0x0068 (0x0068 - 0x0000)
struct BP_ServerBrowserEntry_C_SetFontSize final
{
public:
	class UTextBlock*                             TextObject;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TextSize;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0010(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(BP_ServerBrowserEntry_C_SetFontSize) == 0x000008, "Wrong alignment on BP_ServerBrowserEntry_C_SetFontSize");
static_assert(sizeof(BP_ServerBrowserEntry_C_SetFontSize) == 0x000068, "Wrong size on BP_ServerBrowserEntry_C_SetFontSize");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetFontSize, TextObject) == 0x000000, "Member 'BP_ServerBrowserEntry_C_SetFontSize::TextObject' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetFontSize, TextSize) == 0x000008, "Member 'BP_ServerBrowserEntry_C_SetFontSize::TextSize' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowserEntry_C_SetFontSize, K2Node_MakeStruct_SlateFontInfo) == 0x000010, "Member 'BP_ServerBrowserEntry_C_SetFontSize::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

}

