#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_2HRockThrowableProjectile

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Mordhau_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_2HRockThrowableProjectile.BP_2HRockThrowableProjectile_C.ExecuteUbergraph_BP_2HRockThrowableProjectile
// 0x0240 (0x0240 - 0x0000)
struct BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class AAdvancedCharacter*                     K2Node_Event_Character;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            K2Node_Event_Type;                                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SubType;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Bone;                                 // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Point;                                // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Source;                               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_DynamicCast_AsMordhau_Character;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_QueueDismember_ReturnValue;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit_1;                                // 0x0060(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauCharacter*                      K2Node_DynamicCast_AsMordhau_Character_1;          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDead_ReturnValue;                    // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_QueueDismember_ReturnValue_1;             // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsBlocking;                          // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0178(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetProjectileOwningController_ReturnValue; // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MordhauApplyRadialDamageWithFalloff_ReturnValue; // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile) == 0x000008, "Wrong alignment on BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile");
static_assert(sizeof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile) == 0x000240, "Wrong size on BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, EntryPoint) == 0x000000, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, Temp_object_Variable) == 0x000008, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, K2Node_Event_Character) == 0x000018, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, K2Node_Event_Type) == 0x000020, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, K2Node_Event_SubType) == 0x000021, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::K2Node_Event_SubType' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, K2Node_Event_Bone) == 0x000024, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::K2Node_Event_Bone' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, K2Node_Event_Point) == 0x00002C, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::K2Node_Event_Point' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, K2Node_Event_Source) == 0x000038, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::K2Node_Event_Source' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000040, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, K2Node_DynamicCast_AsMordhau_Character) == 0x000048, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::K2Node_DynamicCast_AsMordhau_Character' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_QueueDismember_ReturnValue) == 0x000051, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_QueueDismember_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, K2Node_Event_OtherActor) == 0x000058, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, K2Node_Event_Hit_1) == 0x000060, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::K2Node_Event_Hit_1' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakHitResult_bBlockingHit) == 0x0000EC, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000ED, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakHitResult_Time) == 0x0000F0, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakHitResult_Distance) == 0x0000F4, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakHitResult_Location) == 0x0000F8, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakHitResult_ImpactPoint) == 0x000104, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakHitResult_Normal) == 0x000110, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakHitResult_ImpactNormal) == 0x00011C, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakHitResult_PhysMat) == 0x000128, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakHitResult_HitActor) == 0x000130, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakHitResult_HitComponent) == 0x000138, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakHitResult_HitBoneName) == 0x000140, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakHitResult_HitItem) == 0x000148, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakHitResult_FaceIndex) == 0x00014C, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakHitResult_TraceStart) == 0x000150, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakHitResult_TraceEnd) == 0x00015C, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, K2Node_DynamicCast_AsMordhau_Character_1) == 0x000168, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::K2Node_DynamicCast_AsMordhau_Character_1' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, K2Node_DynamicCast_bSuccess_1) == 0x000170, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000171, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_GetIsDead_ReturnValue) == 0x000172, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_GetIsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_QueueDismember_ReturnValue_1) == 0x000173, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_QueueDismember_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, K2Node_Event_bIsBlocking) == 0x000174, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::K2Node_Event_bIsBlocking' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, K2Node_Event_Hit) == 0x000178, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_GetVelocity_ReturnValue) == 0x000204, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakVector_X) == 0x000210, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakVector_Y) == 0x000214, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_BreakVector_Z) == 0x000218, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_MapRangeClamped_ReturnValue) == 0x00021C, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000220, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_GetProjectileOwningController_ReturnValue) == 0x000230, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_GetProjectileOwningController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000238, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile, CallFunc_MordhauApplyRadialDamageWithFalloff_ReturnValue) == 0x000239, "Member 'BP_2HRockThrowableProjectile_C_ExecuteUbergraph_BP_2HRockThrowableProjectile::CallFunc_MordhauApplyRadialDamageWithFalloff_ReturnValue' has a wrong offset!");

// Function BP_2HRockThrowableProjectile.BP_2HRockThrowableProjectile_C.ProcessProjectileHit
// 0x0090 (0x0090 - 0x0000)
struct BP_2HRockThrowableProjectile_C_ProcessProjectileHit final
{
public:
	bool                                          bIsBlocking;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0004(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_2HRockThrowableProjectile_C_ProcessProjectileHit) == 0x000004, "Wrong alignment on BP_2HRockThrowableProjectile_C_ProcessProjectileHit");
static_assert(sizeof(BP_2HRockThrowableProjectile_C_ProcessProjectileHit) == 0x000090, "Wrong size on BP_2HRockThrowableProjectile_C_ProcessProjectileHit");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ProcessProjectileHit, bIsBlocking) == 0x000000, "Member 'BP_2HRockThrowableProjectile_C_ProcessProjectileHit::bIsBlocking' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_ProcessProjectileHit, Hit) == 0x000004, "Member 'BP_2HRockThrowableProjectile_C_ProcessProjectileHit::Hit' has a wrong offset!");

// Function BP_2HRockThrowableProjectile.BP_2HRockThrowableProjectile_C.OnProjectileHitCosmetic
// 0x0098 (0x0098 - 0x0000)
struct BP_2HRockThrowableProjectile_C_OnProjectileHitCosmetic final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_2HRockThrowableProjectile_C_OnProjectileHitCosmetic) == 0x000008, "Wrong alignment on BP_2HRockThrowableProjectile_C_OnProjectileHitCosmetic");
static_assert(sizeof(BP_2HRockThrowableProjectile_C_OnProjectileHitCosmetic) == 0x000098, "Wrong size on BP_2HRockThrowableProjectile_C_OnProjectileHitCosmetic");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_OnProjectileHitCosmetic, OtherActor) == 0x000000, "Member 'BP_2HRockThrowableProjectile_C_OnProjectileHitCosmetic::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_OnProjectileHitCosmetic, Hit) == 0x000008, "Member 'BP_2HRockThrowableProjectile_C_OnProjectileHitCosmetic::Hit' has a wrong offset!");

// Function BP_2HRockThrowableProjectile.BP_2HRockThrowableProjectile_C.OnUsedToKillOther
// 0x0028 (0x0028 - 0x0000)
struct BP_2HRockThrowableProjectile_C_OnUsedToKillOther final
{
public:
	class AAdvancedCharacter*                     Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            Type;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SubType;                                           // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   bone;                                              // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Source;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_2HRockThrowableProjectile_C_OnUsedToKillOther) == 0x000008, "Wrong alignment on BP_2HRockThrowableProjectile_C_OnUsedToKillOther");
static_assert(sizeof(BP_2HRockThrowableProjectile_C_OnUsedToKillOther) == 0x000028, "Wrong size on BP_2HRockThrowableProjectile_C_OnUsedToKillOther");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_OnUsedToKillOther, Character) == 0x000000, "Member 'BP_2HRockThrowableProjectile_C_OnUsedToKillOther::Character' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_OnUsedToKillOther, Type) == 0x000008, "Member 'BP_2HRockThrowableProjectile_C_OnUsedToKillOther::Type' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_OnUsedToKillOther, SubType) == 0x000009, "Member 'BP_2HRockThrowableProjectile_C_OnUsedToKillOther::SubType' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_OnUsedToKillOther, bone) == 0x00000C, "Member 'BP_2HRockThrowableProjectile_C_OnUsedToKillOther::bone' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_OnUsedToKillOther, Point) == 0x000014, "Member 'BP_2HRockThrowableProjectile_C_OnUsedToKillOther::Point' has a wrong offset!");
static_assert(offsetof(BP_2HRockThrowableProjectile_C_OnUsedToKillOther, Source) == 0x000020, "Member 'BP_2HRockThrowableProjectile_C_OnUsedToKillOther::Source' has a wrong offset!");

}

