#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordeChestBase

#include "Basic.hpp"

#include "BP_BattleRoyaleChest_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HordeChestBase.BP_HordeChestBase_C
// 0x0030 (0x0550 - 0x0520)
class ABP_HordeChestBase_C final : public ABP_BattleRoyaleChest_C
{
public:
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_HordeChestBase_C;                // 0x0518(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UMordhauWidgetComponent*                MordhauWidget;                                     // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Cost;                                              // 0x0528(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAvailable;                                       // 0x052C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52D[0x3];                                      // 0x052D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Name_0;                                            // 0x0530(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_HordeChestBase(int32 EntryPoint);
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnInteractionStart(class AMordhauCharacter* Character);
	void ReceiveBeginPlay();
	void SetAvailability(bool NewAvailable);
	void UpdateVisuals();

	bool CanInteract(class AMordhauCharacter* Character) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HordeChestBase_C">();
	}
	static class ABP_HordeChestBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HordeChestBase_C>();
	}
};
static_assert(alignof(ABP_HordeChestBase_C) == 0x000010, "Wrong alignment on ABP_HordeChestBase_C");
static_assert(sizeof(ABP_HordeChestBase_C) == 0x000550, "Wrong size on ABP_HordeChestBase_C");
static_assert(offsetof(ABP_HordeChestBase_C, UberGraphFrame_BP_HordeChestBase_C) == 0x000518, "Member 'ABP_HordeChestBase_C::UberGraphFrame_BP_HordeChestBase_C' has a wrong offset!");
static_assert(offsetof(ABP_HordeChestBase_C, MordhauWidget) == 0x000520, "Member 'ABP_HordeChestBase_C::MordhauWidget' has a wrong offset!");
static_assert(offsetof(ABP_HordeChestBase_C, Cost) == 0x000528, "Member 'ABP_HordeChestBase_C::Cost' has a wrong offset!");
static_assert(offsetof(ABP_HordeChestBase_C, IsAvailable) == 0x00052C, "Member 'ABP_HordeChestBase_C::IsAvailable' has a wrong offset!");
static_assert(offsetof(ABP_HordeChestBase_C, Name_0) == 0x000530, "Member 'ABP_HordeChestBase_C::Name_0' has a wrong offset!");

}

