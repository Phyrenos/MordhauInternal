#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FaceSculptingTooltip

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_FaceSculptingTooltip.BP_FaceSculptingTooltip_C.Update
// 0x0100 (0x0100 - 0x0000)
struct BP_FaceSculptingTooltip_C_Update final
{
public:
	class FText                                   bone;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Mode;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Group;                                             // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0050(0x0018)()
	class FString                                 CallFunc_PascalCaseSeparator_Out_String;           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00A8(0x0018)()
	int32                                         Temp_int_Variable_1;                               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00C8(0x0018)()
	class UTexture2D*                             Temp_object_Variable;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FaceSculptingTooltip_C_Update) == 0x000008, "Wrong alignment on BP_FaceSculptingTooltip_C_Update");
static_assert(sizeof(BP_FaceSculptingTooltip_C_Update) == 0x000100, "Wrong size on BP_FaceSculptingTooltip_C_Update");
static_assert(offsetof(BP_FaceSculptingTooltip_C_Update, bone) == 0x000000, "Member 'BP_FaceSculptingTooltip_C_Update::bone' has a wrong offset!");
static_assert(offsetof(BP_FaceSculptingTooltip_C_Update, Mode) == 0x000018, "Member 'BP_FaceSculptingTooltip_C_Update::Mode' has a wrong offset!");
static_assert(offsetof(BP_FaceSculptingTooltip_C_Update, Group) == 0x00001C, "Member 'BP_FaceSculptingTooltip_C_Update::Group' has a wrong offset!");
static_assert(offsetof(BP_FaceSculptingTooltip_C_Update, Temp_int_Variable) == 0x000020, "Member 'BP_FaceSculptingTooltip_C_Update::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FaceSculptingTooltip_C_Update, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'BP_FaceSculptingTooltip_C_Update::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FaceSculptingTooltip_C_Update, CallFunc_Conv_TextToString_ReturnValue) == 0x000040, "Member 'BP_FaceSculptingTooltip_C_Update::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FaceSculptingTooltip_C_Update, Temp_text_Variable) == 0x000050, "Member 'BP_FaceSculptingTooltip_C_Update::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_FaceSculptingTooltip_C_Update, CallFunc_PascalCaseSeparator_Out_String) == 0x000068, "Member 'BP_FaceSculptingTooltip_C_Update::CallFunc_PascalCaseSeparator_Out_String' has a wrong offset!");
static_assert(offsetof(BP_FaceSculptingTooltip_C_Update, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'BP_FaceSculptingTooltip_C_Update::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FaceSculptingTooltip_C_Update, Temp_text_Variable_1) == 0x000090, "Member 'BP_FaceSculptingTooltip_C_Update::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FaceSculptingTooltip_C_Update, Temp_text_Variable_2) == 0x0000A8, "Member 'BP_FaceSculptingTooltip_C_Update::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FaceSculptingTooltip_C_Update, Temp_int_Variable_1) == 0x0000C0, "Member 'BP_FaceSculptingTooltip_C_Update::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FaceSculptingTooltip_C_Update, K2Node_Select_Default) == 0x0000C8, "Member 'BP_FaceSculptingTooltip_C_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FaceSculptingTooltip_C_Update, Temp_object_Variable) == 0x0000E0, "Member 'BP_FaceSculptingTooltip_C_Update::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FaceSculptingTooltip_C_Update, Temp_object_Variable_1) == 0x0000E8, "Member 'BP_FaceSculptingTooltip_C_Update::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FaceSculptingTooltip_C_Update, Temp_object_Variable_2) == 0x0000F0, "Member 'BP_FaceSculptingTooltip_C_Update::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FaceSculptingTooltip_C_Update, K2Node_Select_Default_1) == 0x0000F8, "Member 'BP_FaceSculptingTooltip_C_Update::K2Node_Select_Default_1' has a wrong offset!");

}

