#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChoiceMenu

#include "Basic.hpp"

#include "BP_ChoiceMenu_classes.hpp"
#include "BP_ChoiceMenu_parameters.hpp"


namespace SDK
{

// Function BP_ChoiceMenu.BP_ChoiceMenu_C.ExecuteUbergraph_BP_ChoiceMenu
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ChoiceMenu_C::ExecuteUbergraph_BP_ChoiceMenu(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChoiceMenu_C", "ExecuteUbergraph_BP_ChoiceMenu");

	Params::BP_ChoiceMenu_C_ExecuteUbergraph_BP_ChoiceMenu Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChoiceMenu.BP_ChoiceMenu_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_ChoiceMenu_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChoiceMenu_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChoiceMenu.BP_ChoiceMenu_C.Show
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ChoiceMenu_C::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChoiceMenu_C", "Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChoiceMenu.BP_ChoiceMenu_C.Hide
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ChoiceMenu_C::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChoiceMenu_C", "Hide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChoiceMenu.BP_ChoiceMenu_C.OptionChosen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Choice                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ChoiceMenu_C::OptionChosen(int32 Choice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChoiceMenu_C", "OptionChosen");

	Params::BP_ChoiceMenu_C_OptionChosen Parms{};

	Parms.Choice = Choice;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChoiceMenu.BP_ChoiceMenu_C.UpdateCurrentPage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ChoiceMenu_C::UpdateCurrentPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChoiceMenu_C", "UpdateCurrentPage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChoiceMenu.BP_ChoiceMenu_C.Choose
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Choice                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ChoiceMenu_C::Choose(int32 Choice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChoiceMenu_C", "Choose");

	Params::BP_ChoiceMenu_C_Choose Parms{};

	Parms.Choice = Choice;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChoiceMenu.BP_ChoiceMenu_C.SetChoicesPerPage
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Keyboard                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ChoicePerPageChange                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ChoiceMenu_C::SetChoicesPerPage(int32 Keyboard, int32 Controller, bool* ChoicePerPageChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChoiceMenu_C", "SetChoicesPerPage");

	Params::BP_ChoiceMenu_C_SetChoicesPerPage Parms{};

	Parms.Keyboard = Keyboard;
	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);

	if (ChoicePerPageChange != nullptr)
		*ChoicePerPageChange = Parms.ChoicePerPageChange;
}

}

