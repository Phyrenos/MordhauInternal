#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SliderEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "S_MordhauSlider_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_SliderEntry.BP_SliderEntry_C.ExecuteUbergraph_BP_SliderEntry
// 0x0050 (0x0050 - 0x0000)
struct BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry) == 0x000004, "Wrong alignment on BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry");
static_assert(sizeof(BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry) == 0x000050, "Wrong size on BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry");
static_assert(offsetof(BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry, EntryPoint) == 0x000000, "Member 'BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry, CallFunc_IsConsolePlatform_ReturnValue) == 0x000005, "Member 'BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry, CallFunc_BooleanAND_ReturnValue_1) == 0x000008, "Member 'BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry, Temp_bool_IsClosed_Variable) == 0x00000A, "Member 'BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry, K2Node_ComponentBoundEvent_Value) == 0x00000C, "Member 'BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry, K2Node_Event_MyGeometry) == 0x000010, "Member 'BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry, K2Node_Event_InDeltaTime) == 0x000048, "Member 'BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry, CallFunc_IsHovered_ReturnValue) == 0x00004C, "Member 'BP_SliderEntry_C_ExecuteUbergraph_BP_SliderEntry::CallFunc_IsHovered_ReturnValue' has a wrong offset!");

// Function BP_SliderEntry.BP_SliderEntry_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_SliderEntry_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SliderEntry_C_Tick) == 0x000004, "Wrong alignment on BP_SliderEntry_C_Tick");
static_assert(sizeof(BP_SliderEntry_C_Tick) == 0x00003C, "Wrong size on BP_SliderEntry_C_Tick");
static_assert(offsetof(BP_SliderEntry_C_Tick, MyGeometry) == 0x000000, "Member 'BP_SliderEntry_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_SliderEntry_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_SliderEntry.BP_SliderEntry_C.BndEvt__BP_MordhauSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_SliderEntry_C_BndEvt__BP_MordhauSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SliderEntry_C_BndEvt__BP_MordhauSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on BP_SliderEntry_C_BndEvt__BP_MordhauSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature");
static_assert(sizeof(BP_SliderEntry_C_BndEvt__BP_MordhauSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on BP_SliderEntry_C_BndEvt__BP_MordhauSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature");
static_assert(offsetof(BP_SliderEntry_C_BndEvt__BP_MordhauSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'BP_SliderEntry_C_BndEvt__BP_MordhauSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function BP_SliderEntry.BP_SliderEntry_C.SetValue
// 0x0004 (0x0004 - 0x0000)
struct BP_SliderEntry_C_SetValue final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SliderEntry_C_SetValue) == 0x000004, "Wrong alignment on BP_SliderEntry_C_SetValue");
static_assert(sizeof(BP_SliderEntry_C_SetValue) == 0x000004, "Wrong size on BP_SliderEntry_C_SetValue");
static_assert(offsetof(BP_SliderEntry_C_SetValue, Value) == 0x000000, "Member 'BP_SliderEntry_C_SetValue::Value' has a wrong offset!");

// Function BP_SliderEntry.BP_SliderEntry_C.GetValue
// 0x0008 (0x0008 - 0x0000)
struct BP_SliderEntry_C_GetValue final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Slider_Value_Value;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SliderEntry_C_GetValue) == 0x000004, "Wrong alignment on BP_SliderEntry_C_GetValue");
static_assert(sizeof(BP_SliderEntry_C_GetValue) == 0x000008, "Wrong size on BP_SliderEntry_C_GetValue");
static_assert(offsetof(BP_SliderEntry_C_GetValue, Value) == 0x000000, "Member 'BP_SliderEntry_C_GetValue::Value' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_GetValue, CallFunc_Get_Slider_Value_Value) == 0x000004, "Member 'BP_SliderEntry_C_GetValue::CallFunc_Get_Slider_Value_Value' has a wrong offset!");

// Function BP_SliderEntry.BP_SliderEntry_C.Update Slider
// 0x0014 (0x0014 - 0x0000)
struct BP_SliderEntry_C_Update_Slider final
{
public:
	struct FS_MordhauSlider                       Slider_Struct_0;                                   // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SliderEntry_C_Update_Slider) == 0x000004, "Wrong alignment on BP_SliderEntry_C_Update_Slider");
static_assert(sizeof(BP_SliderEntry_C_Update_Slider) == 0x000014, "Wrong size on BP_SliderEntry_C_Update_Slider");
static_assert(offsetof(BP_SliderEntry_C_Update_Slider, Slider_Struct_0) == 0x000000, "Member 'BP_SliderEntry_C_Update_Slider::Slider_Struct_0' has a wrong offset!");

// Function BP_SliderEntry.BP_SliderEntry_C.OnPreviewKeyDown
// 0x02C0 (0x02C0 - 0x0000)
struct BP_SliderEntry_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0128(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0148(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0200(0x00B8)()
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SliderEntry_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on BP_SliderEntry_C_OnPreviewKeyDown");
static_assert(sizeof(BP_SliderEntry_C_OnPreviewKeyDown) == 0x0002C0, "Wrong size on BP_SliderEntry_C_OnPreviewKeyDown");
static_assert(offsetof(BP_SliderEntry_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'BP_SliderEntry_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'BP_SliderEntry_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_OnPreviewKeyDown, ReturnValue) == 0x000070, "Member 'BP_SliderEntry_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x000128, "Member 'BP_SliderEntry_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000140, "Member 'BP_SliderEntry_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000141, "Member 'BP_SliderEntry_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue) == 0x000148, "Member 'BP_SliderEntry_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_OnPreviewKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000200, "Member 'BP_SliderEntry_C_OnPreviewKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_OnPreviewKeyDown, CallFunc_IsHovered_ReturnValue) == 0x0002B8, "Member 'BP_SliderEntry_C_OnPreviewKeyDown::CallFunc_IsHovered_ReturnValue' has a wrong offset!");

// Function BP_SliderEntry.BP_SliderEntry_C.OnKeyUp
// 0x02B8 (0x02B8 - 0x0000)
struct BP_SliderEntry_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0128(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0148(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0200(0x00B8)()
};
static_assert(alignof(BP_SliderEntry_C_OnKeyUp) == 0x000008, "Wrong alignment on BP_SliderEntry_C_OnKeyUp");
static_assert(sizeof(BP_SliderEntry_C_OnKeyUp) == 0x0002B8, "Wrong size on BP_SliderEntry_C_OnKeyUp");
static_assert(offsetof(BP_SliderEntry_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'BP_SliderEntry_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'BP_SliderEntry_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_OnKeyUp, ReturnValue) == 0x000070, "Member 'BP_SliderEntry_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_OnKeyUp, CallFunc_GetKey_ReturnValue) == 0x000128, "Member 'BP_SliderEntry_C_OnKeyUp::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_OnKeyUp, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000140, "Member 'BP_SliderEntry_C_OnKeyUp::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_OnKeyUp, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000141, "Member 'BP_SliderEntry_C_OnKeyUp::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_OnKeyUp, CallFunc_Handled_ReturnValue) == 0x000148, "Member 'BP_SliderEntry_C_OnKeyUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_OnKeyUp, CallFunc_Unhandled_ReturnValue) == 0x000200, "Member 'BP_SliderEntry_C_OnKeyUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function BP_SliderEntry.BP_SliderEntry_C.GetVisibility_0
// 0x0008 (0x0008 - 0x0000)
struct BP_SliderEntry_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsUsingController_ReturnValue;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SliderEntry_C_GetVisibility_0) == 0x000001, "Wrong alignment on BP_SliderEntry_C_GetVisibility_0");
static_assert(sizeof(BP_SliderEntry_C_GetVisibility_0) == 0x000008, "Wrong size on BP_SliderEntry_C_GetVisibility_0");
static_assert(offsetof(BP_SliderEntry_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_SliderEntry_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_SliderEntry_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_SliderEntry_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_SliderEntry_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_GetVisibility_0, CallFunc_IsHovered_ReturnValue) == 0x000004, "Member 'BP_SliderEntry_C_GetVisibility_0::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_GetVisibility_0, CallFunc_GetIsUsingController_ReturnValue) == 0x000005, "Member 'BP_SliderEntry_C_GetVisibility_0::CallFunc_GetIsUsingController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_GetVisibility_0, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'BP_SliderEntry_C_GetVisibility_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SliderEntry_C_GetVisibility_0, K2Node_Select_Default) == 0x000007, "Member 'BP_SliderEntry_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

}

