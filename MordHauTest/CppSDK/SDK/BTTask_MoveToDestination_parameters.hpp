#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_MoveToDestination

#include "Basic.hpp"

#include "Mordhau_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function BTTask_MoveToDestination.BTTask_MoveToDestination_C.ExecuteUbergraph_BTTask_MoveToDestination
// 0x0178 (0x0178 - 0x0000)
struct BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_2;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauVehicle*                        K2Node_DynamicCast_AsMordhau_Vehicle;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackMove                                   Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAllyClearanceSides_ReturnValue;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauMotion*                         CallFunc_GetMotion_ReturnValue;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClimbingMotion*                        K2Node_DynamicCast_AsClimbing_Motion;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetLastMovementFrontalHitActor_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauMotion*                         CallFunc_GetMotion_ReturnValue_1;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DestroyableActor_C*                 K2Node_DynamicCast_AsBP_Destroyable_Actor;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIdleMotion*                            K2Node_DynamicCast_AsIdle_Motion;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Door_C*                             K2Node_DynamicCast_AsBP_Door;                      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetLoc_TargetLocation;              // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovePending_ReturnValue;                // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasPath_ReturnValue;                      // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAttackMove                                   Temp_byte_Variable_1;                              // 0x0127(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_KeepMoving_bKeepMoving;                   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAttackMove                                   K2Node_Select_Default;                             // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetLoc_TargetLocation_1;            // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue_1;                     // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue_1;     // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetFilterClass_FilterClass;               // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation; // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue; // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPathFollowingRequestResult                   CallFunc_MoveToLocation_ReturnValue;               // 0x0176(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination) == 0x000008, "Wrong alignment on BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination");
static_assert(sizeof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination) == 0x000178, "Wrong size on BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, EntryPoint) == 0x000000, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, K2Node_Event_OwnerController_2) == 0x000008, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::K2Node_Event_OwnerController_2' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, K2Node_Event_ControlledPawn_2) == 0x000010, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001C, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, K2Node_DynamicCast_AsMordhau_Vehicle) == 0x000020, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::K2Node_DynamicCast_AsMordhau_Vehicle' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000030, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000031, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_GetTimeSeconds_ReturnValue) == 0x000034, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_RandomFloatInRange_ReturnValue) == 0x000038, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, K2Node_Event_OwnerController_1) == 0x000040, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, K2Node_Event_ControlledPawn_1) == 0x000048, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, K2Node_Event_OwnerController) == 0x000058, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, K2Node_Event_ControlledPawn) == 0x000060, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, Temp_byte_Variable) == 0x000068, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_GetAllyClearanceSides_ReturnValue) == 0x00006C, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_GetAllyClearanceSides_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_IsValid_ReturnValue_2) == 0x000071, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_GetMotion_ReturnValue) == 0x000078, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_GetMotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, K2Node_DynamicCast_AsClimbing_Motion) == 0x000080, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::K2Node_DynamicCast_AsClimbing_Motion' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_GetLastMovementFrontalHitActor_ReturnValue) == 0x000090, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_GetLastMovementFrontalHitActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_GetMotion_ReturnValue_1) == 0x000098, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_GetMotion_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, K2Node_DynamicCast_AsBP_Destroyable_Actor) == 0x0000A0, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::K2Node_DynamicCast_AsBP_Destroyable_Actor' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, K2Node_DynamicCast_AsIdle_Motion) == 0x0000B0, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::K2Node_DynamicCast_AsIdle_Motion' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, K2Node_DynamicCast_bSuccess_3) == 0x0000B8, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_GetActorBounds_Origin) == 0x0000BC, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_GetActorBounds_BoxExtent) == 0x0000C8, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, K2Node_DynamicCast_AsBP_Door) == 0x0000D8, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::K2Node_DynamicCast_AsBP_Door' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, K2Node_DynamicCast_bSuccess_4) == 0x0000E0, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000E4, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000E8, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000EC, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F8, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_VSize_ReturnValue) == 0x000104, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000108, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, Temp_int_Variable) == 0x00010C, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_GetTargetLoc_TargetLocation) == 0x000110, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_GetTargetLoc_TargetLocation' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x00011C, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_Square_ReturnValue) == 0x000120, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000124, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_IsMovePending_ReturnValue) == 0x000125, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_IsMovePending_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_HasPath_ReturnValue) == 0x000126, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_HasPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, Temp_byte_Variable_1) == 0x000127, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_KeepMoving_bKeepMoving) == 0x000128, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_KeepMoving_bKeepMoving' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, K2Node_Select_Default) == 0x000129, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00012C, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_GetTargetLoc_TargetLocation_1) == 0x000138, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_GetTargetLoc_TargetLocation_1' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000144, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_Square_ReturnValue_1) == 0x000150, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_Square_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_Vector_DistanceSquared_ReturnValue_1) == 0x000154, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_Vector_DistanceSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000158, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_GetFilterClass_FilterClass) == 0x000160, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_GetFilterClass_FilterClass' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation) == 0x000168, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue) == 0x000174, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_IsValid_ReturnValue_3) == 0x000175, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination, CallFunc_MoveToLocation_ReturnValue) == 0x000176, "Member 'BTTask_MoveToDestination_C_ExecuteUbergraph_BTTask_MoveToDestination::CallFunc_MoveToLocation_ReturnValue' has a wrong offset!");

// Function BTTask_MoveToDestination.BTTask_MoveToDestination_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_MoveToDestination_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_MoveToDestination_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTTask_MoveToDestination_C_ReceiveExecuteAI");
static_assert(sizeof(BTTask_MoveToDestination_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTTask_MoveToDestination_C_ReceiveExecuteAI");
static_assert(offsetof(BTTask_MoveToDestination_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTTask_MoveToDestination_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTTask_MoveToDestination_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTTask_MoveToDestination.BTTask_MoveToDestination_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_MoveToDestination_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_MoveToDestination_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTTask_MoveToDestination_C_ReceiveAbortAI");
static_assert(sizeof(BTTask_MoveToDestination_C_ReceiveAbortAI) == 0x000010, "Wrong size on BTTask_MoveToDestination_C_ReceiveAbortAI");
static_assert(offsetof(BTTask_MoveToDestination_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTTask_MoveToDestination_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTTask_MoveToDestination_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BTTask_MoveToDestination.BTTask_MoveToDestination_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTTask_MoveToDestination_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_MoveToDestination_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTTask_MoveToDestination_C_ReceiveTickAI");
static_assert(sizeof(BTTask_MoveToDestination_C_ReceiveTickAI) == 0x000018, "Wrong size on BTTask_MoveToDestination_C_ReceiveTickAI");
static_assert(offsetof(BTTask_MoveToDestination_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTTask_MoveToDestination_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTTask_MoveToDestination_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTTask_MoveToDestination_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTTask_MoveToDestination.BTTask_MoveToDestination_C.SetPath
// 0x0030 (0x0030 - 0x0000)
struct BTTask_MoveToDestination_C_SetPath final
{
public:
	class UClass*                                 CallFunc_GetFilterClass_FilterClass;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetLoc_TargetLocation;              // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPathFollowingRequestResult                   CallFunc_MoveToLocation_ReturnValue;               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPathFollowingRequestResult                   CallFunc_MoveToLocationWithRandomMidpoint_ReturnValue; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTTask_MoveToDestination_C_SetPath) == 0x000008, "Wrong alignment on BTTask_MoveToDestination_C_SetPath");
static_assert(sizeof(BTTask_MoveToDestination_C_SetPath) == 0x000030, "Wrong size on BTTask_MoveToDestination_C_SetPath");
static_assert(offsetof(BTTask_MoveToDestination_C_SetPath, CallFunc_GetFilterClass_FilterClass) == 0x000000, "Member 'BTTask_MoveToDestination_C_SetPath::CallFunc_GetFilterClass_FilterClass' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_SetPath, CallFunc_GetTargetLoc_TargetLocation) == 0x000008, "Member 'BTTask_MoveToDestination_C_SetPath::CallFunc_GetTargetLoc_TargetLocation' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_SetPath, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BTTask_MoveToDestination_C_SetPath::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_SetPath, CallFunc_MoveToLocation_ReturnValue) == 0x000015, "Member 'BTTask_MoveToDestination_C_SetPath::CallFunc_MoveToLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_SetPath, CallFunc_IsValid_ReturnValue_1) == 0x000016, "Member 'BTTask_MoveToDestination_C_SetPath::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_SetPath, K2Node_SwitchEnum_CmpSuccess) == 0x000017, "Member 'BTTask_MoveToDestination_C_SetPath::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_SetPath, CallFunc_MoveToLocationWithRandomMidpoint_ReturnValue) == 0x000018, "Member 'BTTask_MoveToDestination_C_SetPath::CallFunc_MoveToLocationWithRandomMidpoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_SetPath, K2Node_SwitchEnum_CmpSuccess_1) == 0x000019, "Member 'BTTask_MoveToDestination_C_SetPath::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_SetPath, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'BTTask_MoveToDestination_C_SetPath::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_SetPath, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001B, "Member 'BTTask_MoveToDestination_C_SetPath::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_SetPath, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BTTask_MoveToDestination_C_SetPath::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_SetPath, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BTTask_MoveToDestination_C_SetPath::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_SetPath, CallFunc_BooleanOR_ReturnValue) == 0x000029, "Member 'BTTask_MoveToDestination_C_SetPath::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_SetPath, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002A, "Member 'BTTask_MoveToDestination_C_SetPath::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_SetPath, CallFunc_BooleanAND_ReturnValue) == 0x00002B, "Member 'BTTask_MoveToDestination_C_SetPath::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_SetPath, CallFunc_BooleanAND_ReturnValue_1) == 0x00002C, "Member 'BTTask_MoveToDestination_C_SetPath::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BTTask_MoveToDestination.BTTask_MoveToDestination_C.Init
// 0x0058 (0x0058 - 0x0000)
struct BTTask_MoveToDestination_C_Init final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauCharacter_C*                 K2Node_DynamicCast_AsBP_Mordhau_Character;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MordhauAIController_C*              K2Node_DynamicCast_AsBP_Mordhau_AIController;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauGameState_C*                 K2Node_DynamicCast_AsBP_Mordhau_Game_State;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTTask_MoveToDestination_C_Init) == 0x000008, "Wrong alignment on BTTask_MoveToDestination_C_Init");
static_assert(sizeof(BTTask_MoveToDestination_C_Init) == 0x000058, "Wrong size on BTTask_MoveToDestination_C_Init");
static_assert(offsetof(BTTask_MoveToDestination_C_Init, OwnerController) == 0x000000, "Member 'BTTask_MoveToDestination_C_Init::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_Init, ControlledPawn) == 0x000008, "Member 'BTTask_MoveToDestination_C_Init::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_Init, K2Node_DynamicCast_AsBP_Mordhau_Character) == 0x000010, "Member 'BTTask_MoveToDestination_C_Init::K2Node_DynamicCast_AsBP_Mordhau_Character' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_Init, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BTTask_MoveToDestination_C_Init::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_Init, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000020, "Member 'BTTask_MoveToDestination_C_Init::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_Init, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BTTask_MoveToDestination_C_Init::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_Init, K2Node_DynamicCast_AsBP_Mordhau_AIController) == 0x000030, "Member 'BTTask_MoveToDestination_C_Init::K2Node_DynamicCast_AsBP_Mordhau_AIController' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_Init, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BTTask_MoveToDestination_C_Init::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_Init, CallFunc_GetGameState_ReturnValue) == 0x000040, "Member 'BTTask_MoveToDestination_C_Init::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_Init, K2Node_DynamicCast_AsBP_Mordhau_Game_State) == 0x000048, "Member 'BTTask_MoveToDestination_C_Init::K2Node_DynamicCast_AsBP_Mordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_Init, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BTTask_MoveToDestination_C_Init::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BTTask_MoveToDestination.BTTask_MoveToDestination_C.ResetTimeAndDistance
// 0x0010 (0x0010 - 0x0000)
struct BTTask_MoveToDestination_C_ResetTimeAndDistance final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAIFacingMode                                 CallFunc_GetCurrentFacingMode_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_MoveToDestination_C_ResetTimeAndDistance) == 0x000004, "Wrong alignment on BTTask_MoveToDestination_C_ResetTimeAndDistance");
static_assert(sizeof(BTTask_MoveToDestination_C_ResetTimeAndDistance) == 0x000010, "Wrong size on BTTask_MoveToDestination_C_ResetTimeAndDistance");
static_assert(offsetof(BTTask_MoveToDestination_C_ResetTimeAndDistance, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BTTask_MoveToDestination_C_ResetTimeAndDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ResetTimeAndDistance, CallFunc_GetCurrentFacingMode_ReturnValue) == 0x000001, "Member 'BTTask_MoveToDestination_C_ResetTimeAndDistance::CallFunc_GetCurrentFacingMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ResetTimeAndDistance, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BTTask_MoveToDestination_C_ResetTimeAndDistance::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_ResetTimeAndDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BTTask_MoveToDestination_C_ResetTimeAndDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BTTask_MoveToDestination.BTTask_MoveToDestination_C.GetTargetLoc
// 0x0038 (0x0038 - 0x0000)
struct BTTask_MoveToDestination_C_GetTargetLoc final
{
public:
	struct FVector                                TargetLocation_0;                                  // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_MoveToDestination_C_GetTargetLoc) == 0x000008, "Wrong alignment on BTTask_MoveToDestination_C_GetTargetLoc");
static_assert(sizeof(BTTask_MoveToDestination_C_GetTargetLoc) == 0x000038, "Wrong size on BTTask_MoveToDestination_C_GetTargetLoc");
static_assert(offsetof(BTTask_MoveToDestination_C_GetTargetLoc, TargetLocation_0) == 0x000000, "Member 'BTTask_MoveToDestination_C_GetTargetLoc::TargetLocation_0' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_GetTargetLoc, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000010, "Member 'BTTask_MoveToDestination_C_GetTargetLoc::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_GetTargetLoc, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x000018, "Member 'BTTask_MoveToDestination_C_GetTargetLoc::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_GetTargetLoc, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BTTask_MoveToDestination_C_GetTargetLoc::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_GetTargetLoc, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'BTTask_MoveToDestination_C_GetTargetLoc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_GetTargetLoc, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BTTask_MoveToDestination_C_GetTargetLoc::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BTTask_MoveToDestination.BTTask_MoveToDestination_C.KeepMoving
// 0x0028 (0x0028 - 0x0000)
struct BTTask_MoveToDestination_C_KeepMoving final
{
public:
	bool                                          bKeepMoving;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTargetLoc_TargetLocation;              // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTTask_MoveToDestination_C_KeepMoving) == 0x000004, "Wrong alignment on BTTask_MoveToDestination_C_KeepMoving");
static_assert(sizeof(BTTask_MoveToDestination_C_KeepMoving) == 0x000028, "Wrong size on BTTask_MoveToDestination_C_KeepMoving");
static_assert(offsetof(BTTask_MoveToDestination_C_KeepMoving, bKeepMoving) == 0x000000, "Member 'BTTask_MoveToDestination_C_KeepMoving::bKeepMoving' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_KeepMoving, CallFunc_GetTargetLoc_TargetLocation) == 0x000004, "Member 'BTTask_MoveToDestination_C_KeepMoving::CallFunc_GetTargetLoc_TargetLocation' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_KeepMoving, CallFunc_Square_ReturnValue) == 0x000010, "Member 'BTTask_MoveToDestination_C_KeepMoving::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_KeepMoving, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'BTTask_MoveToDestination_C_KeepMoving::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_KeepMoving, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000020, "Member 'BTTask_MoveToDestination_C_KeepMoving::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_KeepMoving, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000024, "Member 'BTTask_MoveToDestination_C_KeepMoving::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BTTask_MoveToDestination.BTTask_MoveToDestination_C.GetFilterClass
// 0x0018 (0x0018 - 0x0000)
struct BTTask_MoveToDestination_C_GetFilterClass final
{
public:
	class UClass*                                 FilterClass;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetTeamFilterClass_FilterClass;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTTask_MoveToDestination_C_GetFilterClass) == 0x000008, "Wrong alignment on BTTask_MoveToDestination_C_GetFilterClass");
static_assert(sizeof(BTTask_MoveToDestination_C_GetFilterClass) == 0x000018, "Wrong size on BTTask_MoveToDestination_C_GetFilterClass");
static_assert(offsetof(BTTask_MoveToDestination_C_GetFilterClass, FilterClass) == 0x000000, "Member 'BTTask_MoveToDestination_C_GetFilterClass::FilterClass' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_GetFilterClass, CallFunc_GetTeamFilterClass_FilterClass) == 0x000008, "Member 'BTTask_MoveToDestination_C_GetFilterClass::CallFunc_GetTeamFilterClass_FilterClass' has a wrong offset!");
static_assert(offsetof(BTTask_MoveToDestination_C_GetFilterClass, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BTTask_MoveToDestination_C_GetFilterClass::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

