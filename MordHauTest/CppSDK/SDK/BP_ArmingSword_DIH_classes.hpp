#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ArmingSword_DIH

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_ArmingSword_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ArmingSword_DIH.BP_ArmingSword_DIH_C
// 0x0020 (0x1CC0 - 0x1CA0)
class ABP_ArmingSword_DIH_C final : public ABP_ArmingSword_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1C98(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UArrowComponent*                        Arrow;                                             // 0x1CA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_VortexAround_Group;                             // 0x1CA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_DemonHordeCharacter_C*              OwningCharacter;                                   // 0x1CB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ArmingSword_DIH(int32 EntryPoint);
	void CreateAndFireProjectile(float Accuracy, class UClass* Projectile, const struct FVector& Location);
	void ReceiveTick(float DeltaSeconds);
	void BlessingEffectsMulti();
	void ChamberCheck();
	void ReceiveBeginPlay();
	void SetupBlessingStats();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ArmingSword_DIH_C">();
	}
	static class ABP_ArmingSword_DIH_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ArmingSword_DIH_C>();
	}
};
static_assert(alignof(ABP_ArmingSword_DIH_C) == 0x000010, "Wrong alignment on ABP_ArmingSword_DIH_C");
static_assert(sizeof(ABP_ArmingSword_DIH_C) == 0x001CC0, "Wrong size on ABP_ArmingSword_DIH_C");
static_assert(offsetof(ABP_ArmingSword_DIH_C, UberGraphFrame) == 0x001C98, "Member 'ABP_ArmingSword_DIH_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ArmingSword_DIH_C, Arrow) == 0x001CA0, "Member 'ABP_ArmingSword_DIH_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_ArmingSword_DIH_C, SM_VortexAround_Group) == 0x001CA8, "Member 'ABP_ArmingSword_DIH_C::SM_VortexAround_Group' has a wrong offset!");
static_assert(offsetof(ABP_ArmingSword_DIH_C, OwningCharacter) == 0x001CB0, "Member 'ABP_ArmingSword_DIH_C::OwningCharacter' has a wrong offset!");

}

