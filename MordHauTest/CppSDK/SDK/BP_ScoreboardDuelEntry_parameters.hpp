#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ScoreboardDuelEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "MordhauOnlineSubsystem_structs.hpp"


namespace SDK::Params
{

// Function BP_ScoreboardDuelEntry.BP_ScoreboardDuelEntry_C.ExecuteUbergraph_BP_ScoreboardDuelEntry
// 0x0098 (0x0098 - 0x0000)
struct BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayFabPlayer                         CallFunc_GetPlayFabPlayer_ReturnValue;             // 0x0018(0x0060)(ConstParm, HasGetValueTypeHash)
	int32                                         CallFunc_GetRank_ReturnValue;                      // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MordhauPlayerState_C*               K2Node_DynamicCast_AsBP_Mordhau_Player_State;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry) == 0x000008, "Wrong alignment on BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry");
static_assert(sizeof(BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry) == 0x000098, "Wrong size on BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry, EntryPoint) == 0x000000, "Member 'BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry, CallFunc_GetPlayFabPlayer_ReturnValue) == 0x000018, "Member 'BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry::CallFunc_GetPlayFabPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry, CallFunc_GetRank_ReturnValue) == 0x000078, "Member 'BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry::CallFunc_GetRank_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry, K2Node_DynamicCast_AsBP_Mordhau_Player_State) == 0x000080, "Member 'BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry::K2Node_DynamicCast_AsBP_Mordhau_Player_State' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00008C, "Member 'BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry, CallFunc_GetValidValue_ReturnValue) == 0x000090, "Member 'BP_ScoreboardDuelEntry_C_ExecuteUbergraph_BP_ScoreboardDuelEntry::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function BP_ScoreboardDuelEntry.BP_ScoreboardDuelEntry_C.GetBackgroundColorAndOpacity
// 0x0010 (0x0010 - 0x0000)
struct BP_ScoreboardDuelEntry_C_GetBackgroundColorAndOpacity final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreboardDuelEntry_C_GetBackgroundColorAndOpacity) == 0x000004, "Wrong alignment on BP_ScoreboardDuelEntry_C_GetBackgroundColorAndOpacity");
static_assert(sizeof(BP_ScoreboardDuelEntry_C_GetBackgroundColorAndOpacity) == 0x000010, "Wrong size on BP_ScoreboardDuelEntry_C_GetBackgroundColorAndOpacity");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetBackgroundColorAndOpacity, ReturnValue) == 0x000000, "Member 'BP_ScoreboardDuelEntry_C_GetBackgroundColorAndOpacity::ReturnValue' has a wrong offset!");

// Function BP_ScoreboardDuelEntry.BP_ScoreboardDuelEntry_C.GetNameColorAndOpacity
// 0x0028 (0x0028 - 0x0000)
struct BP_ScoreboardDuelEntry_C_GetNameColorAndOpacity final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_ScoreboardDuelEntry_C_GetNameColorAndOpacity) == 0x000008, "Wrong alignment on BP_ScoreboardDuelEntry_C_GetNameColorAndOpacity");
static_assert(sizeof(BP_ScoreboardDuelEntry_C_GetNameColorAndOpacity) == 0x000028, "Wrong size on BP_ScoreboardDuelEntry_C_GetNameColorAndOpacity");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetNameColorAndOpacity, ReturnValue) == 0x000000, "Member 'BP_ScoreboardDuelEntry_C_GetNameColorAndOpacity::ReturnValue' has a wrong offset!");

// Function BP_ScoreboardDuelEntry.BP_ScoreboardDuelEntry_C.GetColorAndOpacity_0
// 0x00A8 (0x00A8 - 0x0000)
struct BP_ScoreboardDuelEntry_C_GetColorAndOpacity_0 final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0058(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0080(0x0028)()
};
static_assert(alignof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_0) == 0x000008, "Wrong alignment on BP_ScoreboardDuelEntry_C_GetColorAndOpacity_0");
static_assert(sizeof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_0) == 0x0000A8, "Wrong size on BP_ScoreboardDuelEntry_C_GetColorAndOpacity_0");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'BP_ScoreboardDuelEntry_C_GetColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_0, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'BP_ScoreboardDuelEntry_C_GetColorAndOpacity_0::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_0, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_ScoreboardDuelEntry_C_GetColorAndOpacity_0::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_0, CallFunc_Less_IntInt_ReturnValue_1) == 0x000051, "Member 'BP_ScoreboardDuelEntry_C_GetColorAndOpacity_0::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_0, K2Node_MakeStruct_SlateColor_1) == 0x000058, "Member 'BP_ScoreboardDuelEntry_C_GetColorAndOpacity_0::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_0, K2Node_MakeStruct_SlateColor_2) == 0x000080, "Member 'BP_ScoreboardDuelEntry_C_GetColorAndOpacity_0::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");

// Function BP_ScoreboardDuelEntry.BP_ScoreboardDuelEntry_C.GetVisibility_0
// 0x0020 (0x0020 - 0x0000)
struct BP_ScoreboardDuelEntry_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauGameState_C*                 K2Node_DynamicCast_AsBP_Mordhau_Game_State;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScoreboardDuelEntry_C_GetVisibility_0) == 0x000008, "Wrong alignment on BP_ScoreboardDuelEntry_C_GetVisibility_0");
static_assert(sizeof(BP_ScoreboardDuelEntry_C_GetVisibility_0) == 0x000020, "Wrong size on BP_ScoreboardDuelEntry_C_GetVisibility_0");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_ScoreboardDuelEntry_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetVisibility_0, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_ScoreboardDuelEntry_C_GetVisibility_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetVisibility_0, K2Node_DynamicCast_AsBP_Mordhau_Game_State) == 0x000010, "Member 'BP_ScoreboardDuelEntry_C_GetVisibility_0::K2Node_DynamicCast_AsBP_Mordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetVisibility_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ScoreboardDuelEntry_C_GetVisibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_ScoreboardDuelEntry.BP_ScoreboardDuelEntry_C.GetVisibility_1
// 0x0020 (0x0020 - 0x0000)
struct BP_ScoreboardDuelEntry_C_GetVisibility_1 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauGameState_C*                 K2Node_DynamicCast_AsBP_Mordhau_Game_State;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScoreboardDuelEntry_C_GetVisibility_1) == 0x000008, "Wrong alignment on BP_ScoreboardDuelEntry_C_GetVisibility_1");
static_assert(sizeof(BP_ScoreboardDuelEntry_C_GetVisibility_1) == 0x000020, "Wrong size on BP_ScoreboardDuelEntry_C_GetVisibility_1");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetVisibility_1, ReturnValue) == 0x000000, "Member 'BP_ScoreboardDuelEntry_C_GetVisibility_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetVisibility_1, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_ScoreboardDuelEntry_C_GetVisibility_1::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetVisibility_1, K2Node_DynamicCast_AsBP_Mordhau_Game_State) == 0x000010, "Member 'BP_ScoreboardDuelEntry_C_GetVisibility_1::K2Node_DynamicCast_AsBP_Mordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetVisibility_1, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ScoreboardDuelEntry_C_GetVisibility_1::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_ScoreboardDuelEntry.BP_ScoreboardDuelEntry_C.GetVisibility_2
// 0x0020 (0x0020 - 0x0000)
struct BP_ScoreboardDuelEntry_C_GetVisibility_2 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauGameState_C*                 K2Node_DynamicCast_AsBP_Mordhau_Game_State;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScoreboardDuelEntry_C_GetVisibility_2) == 0x000008, "Wrong alignment on BP_ScoreboardDuelEntry_C_GetVisibility_2");
static_assert(sizeof(BP_ScoreboardDuelEntry_C_GetVisibility_2) == 0x000020, "Wrong size on BP_ScoreboardDuelEntry_C_GetVisibility_2");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetVisibility_2, ReturnValue) == 0x000000, "Member 'BP_ScoreboardDuelEntry_C_GetVisibility_2::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetVisibility_2, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_ScoreboardDuelEntry_C_GetVisibility_2::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetVisibility_2, K2Node_DynamicCast_AsBP_Mordhau_Game_State) == 0x000010, "Member 'BP_ScoreboardDuelEntry_C_GetVisibility_2::K2Node_DynamicCast_AsBP_Mordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetVisibility_2, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ScoreboardDuelEntry_C_GetVisibility_2::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_ScoreboardDuelEntry.BP_ScoreboardDuelEntry_C.GetText_0
// 0x0018 (0x0018 - 0x0000)
struct BP_ScoreboardDuelEntry_C_GetText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_ScoreboardDuelEntry_C_GetText_0) == 0x000008, "Wrong alignment on BP_ScoreboardDuelEntry_C_GetText_0");
static_assert(sizeof(BP_ScoreboardDuelEntry_C_GetText_0) == 0x000018, "Wrong size on BP_ScoreboardDuelEntry_C_GetText_0");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetText_0, ReturnValue) == 0x000000, "Member 'BP_ScoreboardDuelEntry_C_GetText_0::ReturnValue' has a wrong offset!");

// Function BP_ScoreboardDuelEntry.BP_ScoreboardDuelEntry_C.GetColorAndOpacity_1
// 0x0028 (0x0028 - 0x0000)
struct BP_ScoreboardDuelEntry_C_GetColorAndOpacity_1 final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_1) == 0x000008, "Wrong alignment on BP_ScoreboardDuelEntry_C_GetColorAndOpacity_1");
static_assert(sizeof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_1) == 0x000028, "Wrong size on BP_ScoreboardDuelEntry_C_GetColorAndOpacity_1");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_1, ReturnValue) == 0x000000, "Member 'BP_ScoreboardDuelEntry_C_GetColorAndOpacity_1::ReturnValue' has a wrong offset!");

// Function BP_ScoreboardDuelEntry.BP_ScoreboardDuelEntry_C.GetVisibility_3
// 0x0005 (0x0005 - 0x0000)
struct BP_ScoreboardDuelEntry_C_GetVisibility_3 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreboardDuelEntry_C_GetVisibility_3) == 0x000001, "Wrong alignment on BP_ScoreboardDuelEntry_C_GetVisibility_3");
static_assert(sizeof(BP_ScoreboardDuelEntry_C_GetVisibility_3) == 0x000005, "Wrong size on BP_ScoreboardDuelEntry_C_GetVisibility_3");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetVisibility_3, ReturnValue) == 0x000000, "Member 'BP_ScoreboardDuelEntry_C_GetVisibility_3::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetVisibility_3, Temp_bool_Variable) == 0x000001, "Member 'BP_ScoreboardDuelEntry_C_GetVisibility_3::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetVisibility_3, Temp_byte_Variable) == 0x000002, "Member 'BP_ScoreboardDuelEntry_C_GetVisibility_3::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetVisibility_3, Temp_byte_Variable_1) == 0x000003, "Member 'BP_ScoreboardDuelEntry_C_GetVisibility_3::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetVisibility_3, K2Node_Select_Default) == 0x000004, "Member 'BP_ScoreboardDuelEntry_C_GetVisibility_3::K2Node_Select_Default' has a wrong offset!");

// Function BP_ScoreboardDuelEntry.BP_ScoreboardDuelEntry_C.GetColorAndOpacity_2
// 0x0080 (0x0080 - 0x0000)
struct BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetTeamColor_Output__Linear_;             // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetTeamColor_Output__Slate_;              // 0x0038(0x0028)()
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2) == 0x000008, "Wrong alignment on BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2");
static_assert(sizeof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2) == 0x000080, "Wrong size on BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2, ReturnValue) == 0x000000, "Member 'BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2, Temp_bool_Variable) == 0x000010, "Member 'BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2, Temp_struct_Variable) == 0x000014, "Member 'BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2, CallFunc_GetTeamColor_Output__Linear_) == 0x000024, "Member 'BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2::CallFunc_GetTeamColor_Output__Linear_' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2, CallFunc_GetTeamColor_Output__Slate_) == 0x000038, "Member 'BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2::CallFunc_GetTeamColor_Output__Slate_' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2, K2Node_MakeStruct_LinearColor) == 0x000060, "Member 'BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2, K2Node_Select_Default) == 0x000070, "Member 'BP_ScoreboardDuelEntry_C_GetColorAndOpacity_2::K2Node_Select_Default' has a wrong offset!");

// Function BP_ScoreboardDuelEntry.BP_ScoreboardDuelEntry_C.GetToolTipText_0
// 0x0148 (0x0148 - 0x0000)
struct BP_ScoreboardDuelEntry_C_GetToolTipText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_PlayFabPlayer_ReturnValue;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0070(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0088(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0130(0x0018)()
};
static_assert(alignof(BP_ScoreboardDuelEntry_C_GetToolTipText_0) == 0x000008, "Wrong alignment on BP_ScoreboardDuelEntry_C_GetToolTipText_0");
static_assert(sizeof(BP_ScoreboardDuelEntry_C_GetToolTipText_0) == 0x000148, "Wrong size on BP_ScoreboardDuelEntry_C_GetToolTipText_0");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetToolTipText_0, ReturnValue) == 0x000000, "Member 'BP_ScoreboardDuelEntry_C_GetToolTipText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetToolTipText_0, Temp_bool_Variable) == 0x000018, "Member 'BP_ScoreboardDuelEntry_C_GetToolTipText_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetToolTipText_0, Temp_string_Variable) == 0x000020, "Member 'BP_ScoreboardDuelEntry_C_GetToolTipText_0::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetToolTipText_0, Temp_bool_Variable_1) == 0x000030, "Member 'BP_ScoreboardDuelEntry_C_GetToolTipText_0::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetToolTipText_0, Temp_string_Variable_1) == 0x000038, "Member 'BP_ScoreboardDuelEntry_C_GetToolTipText_0::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetToolTipText_0, CallFunc_IsValid_PlayFabPlayer_ReturnValue) == 0x000048, "Member 'BP_ScoreboardDuelEntry_C_GetToolTipText_0::CallFunc_IsValid_PlayFabPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetToolTipText_0, K2Node_Select_Default) == 0x000050, "Member 'BP_ScoreboardDuelEntry_C_GetToolTipText_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetToolTipText_0, K2Node_Select_Default_1) == 0x000060, "Member 'BP_ScoreboardDuelEntry_C_GetToolTipText_0::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetToolTipText_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000070, "Member 'BP_ScoreboardDuelEntry_C_GetToolTipText_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetToolTipText_0, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000088, "Member 'BP_ScoreboardDuelEntry_C_GetToolTipText_0::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetToolTipText_0, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'BP_ScoreboardDuelEntry_C_GetToolTipText_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetToolTipText_0, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E0, "Member 'BP_ScoreboardDuelEntry_C_GetToolTipText_0::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetToolTipText_0, K2Node_MakeArray_Array) == 0x000120, "Member 'BP_ScoreboardDuelEntry_C_GetToolTipText_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ScoreboardDuelEntry_C_GetToolTipText_0, CallFunc_Format_ReturnValue) == 0x000130, "Member 'BP_ScoreboardDuelEntry_C_GetToolTipText_0::CallFunc_Format_ReturnValue' has a wrong offset!");

}

