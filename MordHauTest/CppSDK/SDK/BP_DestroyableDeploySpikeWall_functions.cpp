#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DestroyableDeploySpikeWall

#include "Basic.hpp"

#include "BP_DestroyableDeploySpikeWall_classes.hpp"
#include "BP_DestroyableDeploySpikeWall_parameters.hpp"


namespace SDK
{

// Function BP_DestroyableDeploySpikeWall.BP_DestroyableDeploySpikeWall_C.ExecuteUbergraph_BP_DestroyableDeploySpikeWall
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DestroyableDeploySpikeWall_C::ExecuteUbergraph_BP_DestroyableDeploySpikeWall(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestroyableDeploySpikeWall_C", "ExecuteUbergraph_BP_DestroyableDeploySpikeWall");

	Params::BP_DestroyableDeploySpikeWall_C_ExecuteUbergraph_BP_DestroyableDeploySpikeWall Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestroyableDeploySpikeWall.BP_DestroyableDeploySpikeWall_C.CheckCorrectTeam
// (BlueprintCallable, BlueprintEvent)

void ABP_DestroyableDeploySpikeWall_C::CheckCorrectTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestroyableDeploySpikeWall_C", "CheckCorrectTeam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestroyableDeploySpikeWall.BP_DestroyableDeploySpikeWall_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_DestroyableDeploySpikeWall_C::BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestroyableDeploySpikeWall_C", "BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::BP_DestroyableDeploySpikeWall_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestroyableDeploySpikeWall.BP_DestroyableDeploySpikeWall_C.OnUsedToKillOther
// (Event, Public, BlueprintEvent)
// Parameters:
// class AAdvancedCharacter*               Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMordhauDamageType                      Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   SubType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DestroyableDeploySpikeWall_C::OnUsedToKillOther(class AAdvancedCharacter* Character, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestroyableDeploySpikeWall_C", "OnUsedToKillOther");

	Params::BP_DestroyableDeploySpikeWall_C_OnUsedToKillOther Parms{};

	Parms.Character = Character;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Source = Source;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestroyableDeploySpikeWall.BP_DestroyableDeploySpikeWall_C.Impale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAdvancedCharacter*               Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DestroyableDeploySpikeWall_C::Impale(class AAdvancedCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestroyableDeploySpikeWall_C", "Impale");

	Params::BP_DestroyableDeploySpikeWall_C_Impale Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestroyableDeploySpikeWall.BP_DestroyableDeploySpikeWall_C.HandleCollision
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAdvancedCharacter*               Char                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DamageFactor_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DestroyableDeploySpikeWall_C::HandleCollision(class AAdvancedCharacter* Char, float Velocity, float DamageFactor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestroyableDeploySpikeWall_C", "HandleCollision");

	Params::BP_DestroyableDeploySpikeWall_C_HandleCollision Parms{};

	Parms.Char = Char;
	Parms.Velocity = Velocity;
	Parms.DamageFactor_0 = DamageFactor_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestroyableDeploySpikeWall.BP_DestroyableDeploySpikeWall_C.OnReplicatedHealthChanged
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DestroyableDeploySpikeWall_C::OnReplicatedHealthChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestroyableDeploySpikeWall_C", "OnReplicatedHealthChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestroyableDeploySpikeWall.BP_DestroyableDeploySpikeWall_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DestroyableDeploySpikeWall_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestroyableDeploySpikeWall_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

