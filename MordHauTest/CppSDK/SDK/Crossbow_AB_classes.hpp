#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Crossbow_AB

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Crossbow_AB.Crossbow_AB_C
// 0x01F0 (0x04B0 - 0x02C0)
class UCrossbow_AB_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x02F8(0x0048)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x0340(0x00C8)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x0408(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x0458(0x0050)()
	float                                         Loaded;                                            // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Crossbow_AB(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Crossbow_AB_C">();
	}
	static class UCrossbow_AB_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrossbow_AB_C>();
	}
};
static_assert(alignof(UCrossbow_AB_C) == 0x000010, "Wrong alignment on UCrossbow_AB_C");
static_assert(sizeof(UCrossbow_AB_C) == 0x0004B0, "Wrong size on UCrossbow_AB_C");
static_assert(offsetof(UCrossbow_AB_C, UberGraphFrame) == 0x0002C0, "Member 'UCrossbow_AB_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCrossbow_AB_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UCrossbow_AB_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UCrossbow_AB_C, AnimGraphNode_Slot) == 0x0002F8, "Member 'UCrossbow_AB_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UCrossbow_AB_C, AnimGraphNode_TwoWayBlend) == 0x000340, "Member 'UCrossbow_AB_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UCrossbow_AB_C, AnimGraphNode_SequenceEvaluator_1) == 0x000408, "Member 'UCrossbow_AB_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UCrossbow_AB_C, AnimGraphNode_SequenceEvaluator) == 0x000458, "Member 'UCrossbow_AB_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UCrossbow_AB_C, Loaded) == 0x0004A8, "Member 'UCrossbow_AB_C::Loaded' has a wrong offset!");

}

