#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MatchmakingScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MordhauOnlineSubsystem_structs.hpp"
#include "E_MatchmakingSearchState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Mordhau_structs.hpp"
#include "BP_MenuContentWidget_classes.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_MatchmakingScreen.BP_MatchmakingScreen_C
// 0x03E0 (0x0650 - 0x0270)
class UBP_MatchmakingScreen_C final : public UBP_MenuContentWidget_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UBP_GameModeEntry_C*                    BP_BrawlGameModeEntry;                             // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ButtonPrompt_C*                     BP_ButtonPrompt;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ButtonPrompt_C*                     BP_ButtonPrompt_0;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ButtonPrompt_C*                     BP_ButtonPrompt_1;                                 // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ButtonPrompt_C*                     BP_ButtonPrompt_2;                                 // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ButtonPrompt_C*                     BP_ButtonPrompt_3;                                 // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ButtonPrompt_C*                     BP_ButtonPrompt_344;                               // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ButtonPrompt_C*                     BP_ButtonPrompt_2847;                              // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_GameModeEntry_C*                    BP_DemonHordeGameModeEntry;                        // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_GameModeEntry_C*                    BP_DuelGameModeEntry;                              // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Leaderboards_C*                     BP_DuelLeaderboards;                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_GameModeEntry_C*                    BP_FrontlineGameModeEntry;                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_GameModeEntry_C*                    BP_HordeGameModeEntry;                             // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_GameModeEntry_C*                    BP_InvasionGameModeEntry;                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_OfficialRules_C*                    BP_OfficialRules;                                  // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_GameModeCategory_C*                 BP_QuickPlayCategory;                              // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_GameModeCategory_C*                 BP_RankedCategory;                                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_GameModeEntry_C*                    BP_TeamfightGameModeEntry;                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Leaderboards_C*                     BP_TeamfightLeaderboards;                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_0;                                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Rules;                                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ButtonText;                                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ButtonTextOfficialServ;                            // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               CasualModes;                                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxText*                          CasualRegionComboBox;                              // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMultiLineEditableTextBox*              DebugTextBox;                                      // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         DropdownGamepadControls;                           // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         DropdownGamepadControls_1;                         // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         GeneralCategories;                                 // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_8;                                           // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_222;                                         // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Checkbox_C*                         IsConsoleServer;                                   // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMultiLineEditableTextBox*              MultiLineEditableTextBox_0;                        // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_4;                                         // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               RankedModes;                                       // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxText*                          RankedRegionComboBox;                              // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Rules;                                             // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                SearchButton;                                      // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_9;                                         // 0x03B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_10;                                        // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_13;                                        // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_MatchmakingPartyText;                      // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_0;                                       // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_1;                                       // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_3;                                       // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Leaderboards;                       // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MainMenu_C*                         MainMenu;                                          // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSearching;                                      // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MordhauGameInstance_C*              GameInstance;                                      // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           SearchTimer;                                       // 0x0418(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FPlayFabPlayer                         PartyLeader;                                       // 0x0420(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         PartySize;                                         // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMatchmakingState                             PartyState;                                        // 0x0484(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPartyReady;                                      // 0x0485(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsJoining;                                         // 0x0486(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsRankedTab;                                       // 0x0487(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FDateTime                              TimeoutStartTime;                                  // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            Tickets;                                           // 0x0490(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         QueueNames;                                        // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 PartyGroupID;                                      // 0x04F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 MatchQueueName;                                    // 0x0500(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 MatchOwnerID;                                      // 0x0510(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UBP_InformationDialog_C*                SearchFailureDialog;                               // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCancellingSearch;                                 // 0x0528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCanTickSearch;                                    // 0x0529(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52A[0x2];                                      // 0x052A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumHandledQueues;                                  // 0x052C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         TicketQueueNames;                                  // 0x0530(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsRankedSearch;                                   // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EServerLocation>                       LocationPreference;                                // 0x0548(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         ServerIdx;                                         // 0x0558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MatchmakingSearchState                      SearchState;                                       // 0x055C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55D[0x3];                                      // 0x055D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         PartyMembers;                                      // 0x0560(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FPlayFabPlayerEntity>           PartyMemberEntities;                               // 0x0570(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bFailedToReserveSlots;                             // 0x0580(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCreatedTicket;                                    // 0x0581(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_582[0x6];                                      // 0x0582(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, struct FPlayFabMatchmakingMatch> Matches;                                           // 0x0588(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         MatchQueueNames;                                   // 0x05D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FPlayFabMatchmakingPlayer>      MatchMembers;                                      // 0x05E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bHasPendingMatches;                                // 0x05F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bNeedsWidgetsUpdate;                               // 0x05F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bEncounteredError;                                 // 0x05FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FB[0x1];                                      // 0x05FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimerValue;                                        // 0x05FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDidSelectRegion;                                  // 0x0600(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              BanEndTime;                                        // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         MemberIdx;                                         // 0x0610(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStartingSearch;                                   // 0x0614(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_615[0x3];                                      // 0x0615(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxMMR;                                            // 0x0618(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61C[0x4];                                      // 0x061C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         FailedQueues;                                      // 0x0620(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Message;                                           // 0x0630(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bServerBrowserIsConsoleServer;                     // 0x0648(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_MatchmakingScreen(int32 EntryPoint);
	void BndEvt__BP_ServerBrowser_IsConsoleServer_K2Node_ComponentBoundEvent_17_OnCheckStateChanged__DelegateSignature(bool bIsChecked);
	void OnStartMatchakingFromActivity(EActivityType EActivity);
	void OnOfficalRulesOpenFromShortcut();
	void Clicked_Ranked();
	void Clicked_QuickPlay();
	void On_Pressed_Search_Key();
	void BndEvt__RankedRegionComboBox_K2Node_ComponentBoundEvent_3_OnSelectionChangedEvent__DelegateSignature(const class FText& SelectedItem, ESelectInfo SelectionType);
	void BndEvt__Button_1_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void RestartSearch();
	void BndEvt__BP_TeamFightGameModeEntry_K2Node_ComponentBoundEvent_8_OnHover__DelegateSignature();
	void BndEvt__BP_DuelGameModeEntry_K2Node_ComponentBoundEvent_7_OnHover__DelegateSignature();
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature();
	void Switch_to_ranked_tab();
	void BndEvt__BP_GameModeCategory_0_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature();
	void BndEvt__BP_GameModeCategory_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature();
	void OnSearchFailureDialogOkClicked();
	void OnMatchmakingRegionsDetermined(EServerRegion CasualMatchmakingRegion, EServerRegion RankedMatchmakingRegion);
	void OnOkClicked();
	void OnPartyUpdated(const TArray<struct FPlayFabPlayer>& PartyMembers_0);
	void OnSelectionChanged(bool bIsSelected);
	void UpdatePartyValues();
	void BndEvt__RegionComboBox_K2Node_ComponentBoundEvent_1_OnSelectionChangedEvent__DelegateSignature(const class FText& SelectedItem, ESelectInfo SelectionType);
	void TickSearch();
	void StartSearchTimer();
	void CancelSearch();
	void StartSearch();
	void Construct();
	void UpdateWidgets();
	void BndEvt__SearchButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void OnSuccess_A776E9454B061B5288E2CFA61D35F10E();
	void OnFailure_A776E9454B061B5288E2CFA61D35F10E();
	void OnSuccess_F52C3F6641F7B816D62418B84AA964CB(const TArray<struct FPlayFabGameServer>& Servers);
	void OnFailure_F52C3F6641F7B816D62418B84AA964CB(const TArray<struct FPlayFabGameServer>& Servers);
	void OnSuccess_527F32434AB11E7ADC849FB48EB7AE48();
	void OnFull_527F32434AB11E7ADC849FB48EB7AE48();
	void OnFailure_527F32434AB11E7ADC849FB48EB7AE48();
	void OnSuccess_B742674A43952F3CD1897591AB8CAF21(const class FString& QueueName, const class FString& TicketId);
	void OnFailure_B742674A43952F3CD1897591AB8CAF21(const class FString& QueueName, const class FString& TicketId);
	void OnSuccess_E36938C940390430D770FA897A0E77CD(const class FString& QueueName);
	void OnFailure_E36938C940390430D770FA897A0E77CD(const class FString& QueueName);
	void OnSuccess_0698FD2E4159E23FE2230DA18E150DBD(const class FString& QueueName, const class FString& TicketId);
	void OnFailure_0698FD2E4159E23FE2230DA18E150DBD(const class FString& QueueName, const class FString& TicketId);
	void OnSuccess_850913F04E7E28DE6BBF3BB67BE5C4E5(const class FString& QueueName);
	void OnFailure_850913F04E7E28DE6BBF3BB67BE5C4E5(const class FString& QueueName);
	void OnSuccess_593B3DE445187D64F38A78AC7464E5BF(const struct FPlayFabMatchmakingMatch& Match);
	void OnFailure_593B3DE445187D64F38A78AC7464E5BF(const struct FPlayFabMatchmakingMatch& Match);
	void OnSuccess_769A86204547BF36B6EE2F887D997169(const class FString& QueueName, const class FString& TicketId, EPlayFabTicketStatus TicketStatus, const class FString& CancellationReason, const class FString& MatchId);
	void OnFailure_769A86204547BF36B6EE2F887D997169(const class FString& QueueName, const class FString& TicketId, EPlayFabTicketStatus TicketStatus, const class FString& CancellationReason, const class FString& MatchId);
	void OnSuccess_EAE6415A4E9D4278139810AFF2CA6E91(const class FString& QueueName);
	void OnFailure_EAE6415A4E9D4278139810AFF2CA6E91(const class FString& QueueName);
	void OnSuccess_803BB389473F1682ABB0D18EB08C27B6();
	void OnFailure_803BB389473F1682ABB0D18EB08C27B6();
	void OnSuccess_C9398F5545CC7EBA29C50D98595DDA52(const class FString& QueueName);
	void OnFailure_C9398F5545CC7EBA29C50D98595DDA52(const class FString& QueueName);
	void OnSuccess_B0A1AA9741161B5376ACF5B7683DAF0E(const struct FPlayFabPlayerEntity& PlayerEntity, int32 LeaveCount, const struct FDateTime& LeaveTime, const struct FDateTime& BanEndTime_0);
	void OnFailure_B0A1AA9741161B5376ACF5B7683DAF0E(const struct FPlayFabPlayerEntity& PlayerEntity, int32 LeaveCount, const struct FDateTime& LeaveTime, const struct FDateTime& BanEndTime_0);
	void OnSuccess_67F6983E4A4400B48FA2EA924013F6EF(const struct FPlayFabMatchmakingMatch& Match);
	void OnFailure_67F6983E4A4400B48FA2EA924013F6EF(const struct FPlayFabMatchmakingMatch& Match);
	void OnSuccess_8E9A20E64A29269662D6C4B2D5D232B2(const struct FPlayFabMatchmakingMatch& Match);
	void OnFailure_8E9A20E64A29269662D6C4B2D5D232B2(const struct FPlayFabMatchmakingMatch& Match);
	void OnSuccess_672628444615C28A9006F0AC1A1DFF46(const struct FPlayFabMatchmakingMatch& Match);
	void OnFailure_672628444615C28A9006F0AC1A1DFF46(const struct FPlayFabMatchmakingMatch& Match);
	void OnSuccess_672628444615C28A9006F0ACCA1EB912(const struct FPlayFabMatchmakingMatch& Match);
	void OnFailure_672628444615C28A9006F0ACCA1EB912(const struct FPlayFabMatchmakingMatch& Match);
	void OnSuccess_0F9B3B6544DF9CE6B1EFA7B4E638F24A(const struct FPlayFabMatchmakingMatch& Match);
	void OnFailure_0F9B3B6544DF9CE6B1EFA7B4E638F24A(const struct FPlayFabMatchmakingMatch& Match);
	void OnSuccess_8E9A20E64A29269662D6C4B29B196A96(const struct FPlayFabMatchmakingMatch& Match);
	void OnFailure_8E9A20E64A29269662D6C4B29B196A96(const struct FPlayFabMatchmakingMatch& Match);
	void OnSuccess_60F7531743547A48C86D09A814CDA395(const struct FPlayFabMatchmakingMatch& Match);
	void OnFailure_60F7531743547A48C86D09A814CDA395(const struct FPlayFabMatchmakingMatch& Match);
	void OnSuccess_344C14AC4FC53B61568784B01C6B576E(const class FString& QueueName);
	void OnFailure_344C14AC4FC53B61568784B01C6B576E(const class FString& QueueName);
	void OnSuccess_672628444615C28A9006F0AC56DE6ED4(const struct FPlayFabMatchmakingMatch& Match);
	void OnFailure_672628444615C28A9006F0AC56DE6ED4(const struct FPlayFabMatchmakingMatch& Match);
	void OnSuccess_672628444615C28A9006F0ACD500AEE3(const struct FPlayFabMatchmakingMatch& Match);
	void OnFailure_672628444615C28A9006F0ACD500AEE3(const struct FPlayFabMatchmakingMatch& Match);
	void CanPlayerSearch(bool* bCanSearch);
	void GetSelectedGameModes(TArray<class FString>* GameModes);
	void AddDebugMessage(const class FString& Message_0, bool bEnabled);
	class FText GetSearchFailureReason();
	void IsPlayerPartyLeader(bool* IsLeader);
	ESlateVisibility GetDebugTextBoxVisibility();
	void GetMatchmakingGameModes(TArray<class FString>* Return_Value);
	void SetMatchmakingGameModes(TArray<class FString>& Input);
	void GetPlayerCounts(const class FString& GameMode, TArray<int32>* _);
	void GetQueueNames(TArray<class FString>* _);
	void GetGameModeAndSlotCount(const class FString& QueueName, class FString* GameMode, int32* SlotCount);
	void Is_Match_Leader_in_Party(bool* IsInParty);
	ESlateVisibility GetSearchButtonVisibility();
	ESlateVisibility GetBackButtonVisibility();
	void GetQueuesToJoin(TArray<class FString>* QueueNames_0);
	void GetPartyMatchmakingTickts(TMap<class FString, class FString>* Tickets_);
	void CreatePartyMatch(const class FString& QueueName);
	ESlateVisibility Get_Rules_Visibility_0();
	ESlateVisibility GetVisibility_0();
	ESlateVisibility Get_DropdownGamepadControls_Visibility_0();
	ESlateVisibility Get_DropdownGamepadControls_1_Visibility_0();
	void CanJoinMatch(bool* bCanJoin);
	void OpenQuickPlay();
	ESlateVisibility Get_SizeBox_MatchmakingPartyText_Visibility_0();
	void SetMatchmakingToStartFromActivity(EActivityType StartActivity);
	void DeselectQuickPlayButtons();
	void GetServerRegionUtility(EServerRegion* ServerRegion);
	void StartActivityStatus(EActivityType ActivityType);
	void EndActivityStatus();
	void IsPCOrHasPCMemberInParty(bool* IsOrHasPCPlayer);
	void IsConsoleServerProperty(bool* IsConsoleServer_0);
	void HideShowISConsoleServerCheckbox();
	void ModifyQueueNameForConsole(bool IsConsoleServer_0, const class FString& InQueueName, class FString* QueueName);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MatchmakingScreen_C">();
	}
	static class UBP_MatchmakingScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MatchmakingScreen_C>();
	}
};
static_assert(alignof(UBP_MatchmakingScreen_C) == 0x000008, "Wrong alignment on UBP_MatchmakingScreen_C");
static_assert(sizeof(UBP_MatchmakingScreen_C) == 0x000650, "Wrong size on UBP_MatchmakingScreen_C");
static_assert(offsetof(UBP_MatchmakingScreen_C, UberGraphFrame) == 0x000270, "Member 'UBP_MatchmakingScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_BrawlGameModeEntry) == 0x000278, "Member 'UBP_MatchmakingScreen_C::BP_BrawlGameModeEntry' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_ButtonPrompt) == 0x000280, "Member 'UBP_MatchmakingScreen_C::BP_ButtonPrompt' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_ButtonPrompt_0) == 0x000288, "Member 'UBP_MatchmakingScreen_C::BP_ButtonPrompt_0' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_ButtonPrompt_1) == 0x000290, "Member 'UBP_MatchmakingScreen_C::BP_ButtonPrompt_1' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_ButtonPrompt_2) == 0x000298, "Member 'UBP_MatchmakingScreen_C::BP_ButtonPrompt_2' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_ButtonPrompt_3) == 0x0002A0, "Member 'UBP_MatchmakingScreen_C::BP_ButtonPrompt_3' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_ButtonPrompt_344) == 0x0002A8, "Member 'UBP_MatchmakingScreen_C::BP_ButtonPrompt_344' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_ButtonPrompt_2847) == 0x0002B0, "Member 'UBP_MatchmakingScreen_C::BP_ButtonPrompt_2847' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_DemonHordeGameModeEntry) == 0x0002B8, "Member 'UBP_MatchmakingScreen_C::BP_DemonHordeGameModeEntry' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_DuelGameModeEntry) == 0x0002C0, "Member 'UBP_MatchmakingScreen_C::BP_DuelGameModeEntry' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_DuelLeaderboards) == 0x0002C8, "Member 'UBP_MatchmakingScreen_C::BP_DuelLeaderboards' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_FrontlineGameModeEntry) == 0x0002D0, "Member 'UBP_MatchmakingScreen_C::BP_FrontlineGameModeEntry' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_HordeGameModeEntry) == 0x0002D8, "Member 'UBP_MatchmakingScreen_C::BP_HordeGameModeEntry' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_InvasionGameModeEntry) == 0x0002E0, "Member 'UBP_MatchmakingScreen_C::BP_InvasionGameModeEntry' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_OfficialRules) == 0x0002E8, "Member 'UBP_MatchmakingScreen_C::BP_OfficialRules' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_QuickPlayCategory) == 0x0002F0, "Member 'UBP_MatchmakingScreen_C::BP_QuickPlayCategory' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_RankedCategory) == 0x0002F8, "Member 'UBP_MatchmakingScreen_C::BP_RankedCategory' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_TeamfightGameModeEntry) == 0x000300, "Member 'UBP_MatchmakingScreen_C::BP_TeamfightGameModeEntry' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BP_TeamfightLeaderboards) == 0x000308, "Member 'UBP_MatchmakingScreen_C::BP_TeamfightLeaderboards' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, Button_0) == 0x000310, "Member 'UBP_MatchmakingScreen_C::Button_0' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, Button_Rules) == 0x000318, "Member 'UBP_MatchmakingScreen_C::Button_Rules' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, ButtonText) == 0x000320, "Member 'UBP_MatchmakingScreen_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, ButtonTextOfficialServ) == 0x000328, "Member 'UBP_MatchmakingScreen_C::ButtonTextOfficialServ' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, CasualModes) == 0x000330, "Member 'UBP_MatchmakingScreen_C::CasualModes' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, CasualRegionComboBox) == 0x000338, "Member 'UBP_MatchmakingScreen_C::CasualRegionComboBox' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, DebugTextBox) == 0x000340, "Member 'UBP_MatchmakingScreen_C::DebugTextBox' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, DropdownGamepadControls) == 0x000348, "Member 'UBP_MatchmakingScreen_C::DropdownGamepadControls' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, DropdownGamepadControls_1) == 0x000350, "Member 'UBP_MatchmakingScreen_C::DropdownGamepadControls_1' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, GeneralCategories) == 0x000358, "Member 'UBP_MatchmakingScreen_C::GeneralCategories' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, Image_0) == 0x000360, "Member 'UBP_MatchmakingScreen_C::Image_0' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, Image_2) == 0x000368, "Member 'UBP_MatchmakingScreen_C::Image_2' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, Image_8) == 0x000370, "Member 'UBP_MatchmakingScreen_C::Image_8' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, Image_222) == 0x000378, "Member 'UBP_MatchmakingScreen_C::Image_222' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, IsConsoleServer) == 0x000380, "Member 'UBP_MatchmakingScreen_C::IsConsoleServer' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, MultiLineEditableTextBox_0) == 0x000388, "Member 'UBP_MatchmakingScreen_C::MultiLineEditableTextBox_0' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, Overlay_4) == 0x000390, "Member 'UBP_MatchmakingScreen_C::Overlay_4' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, RankedModes) == 0x000398, "Member 'UBP_MatchmakingScreen_C::RankedModes' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, RankedRegionComboBox) == 0x0003A0, "Member 'UBP_MatchmakingScreen_C::RankedRegionComboBox' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, Rules) == 0x0003A8, "Member 'UBP_MatchmakingScreen_C::Rules' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, SearchButton) == 0x0003B0, "Member 'UBP_MatchmakingScreen_C::SearchButton' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, SizeBox_9) == 0x0003B8, "Member 'UBP_MatchmakingScreen_C::SizeBox_9' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, SizeBox_10) == 0x0003C0, "Member 'UBP_MatchmakingScreen_C::SizeBox_10' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, SizeBox_13) == 0x0003C8, "Member 'UBP_MatchmakingScreen_C::SizeBox_13' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, SizeBox_MatchmakingPartyText) == 0x0003D0, "Member 'UBP_MatchmakingScreen_C::SizeBox_MatchmakingPartyText' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, TextBlock_0) == 0x0003D8, "Member 'UBP_MatchmakingScreen_C::TextBlock_0' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, TextBlock_1) == 0x0003E0, "Member 'UBP_MatchmakingScreen_C::TextBlock_1' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, TextBlock_3) == 0x0003E8, "Member 'UBP_MatchmakingScreen_C::TextBlock_3' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, WidgetSwitcher_0) == 0x0003F0, "Member 'UBP_MatchmakingScreen_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, WidgetSwitcher_Leaderboards) == 0x0003F8, "Member 'UBP_MatchmakingScreen_C::WidgetSwitcher_Leaderboards' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, MainMenu) == 0x000400, "Member 'UBP_MatchmakingScreen_C::MainMenu' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, bIsSearching) == 0x000408, "Member 'UBP_MatchmakingScreen_C::bIsSearching' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, GameInstance) == 0x000410, "Member 'UBP_MatchmakingScreen_C::GameInstance' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, SearchTimer) == 0x000418, "Member 'UBP_MatchmakingScreen_C::SearchTimer' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, PartyLeader) == 0x000420, "Member 'UBP_MatchmakingScreen_C::PartyLeader' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, PartySize) == 0x000480, "Member 'UBP_MatchmakingScreen_C::PartySize' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, PartyState) == 0x000484, "Member 'UBP_MatchmakingScreen_C::PartyState' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, IsPartyReady) == 0x000485, "Member 'UBP_MatchmakingScreen_C::IsPartyReady' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, IsJoining) == 0x000486, "Member 'UBP_MatchmakingScreen_C::IsJoining' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, IsRankedTab) == 0x000487, "Member 'UBP_MatchmakingScreen_C::IsRankedTab' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, TimeoutStartTime) == 0x000488, "Member 'UBP_MatchmakingScreen_C::TimeoutStartTime' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, Tickets) == 0x000490, "Member 'UBP_MatchmakingScreen_C::Tickets' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, QueueNames) == 0x0004E0, "Member 'UBP_MatchmakingScreen_C::QueueNames' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, PartyGroupID) == 0x0004F0, "Member 'UBP_MatchmakingScreen_C::PartyGroupID' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, MatchQueueName) == 0x000500, "Member 'UBP_MatchmakingScreen_C::MatchQueueName' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, MatchOwnerID) == 0x000510, "Member 'UBP_MatchmakingScreen_C::MatchOwnerID' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, SearchFailureDialog) == 0x000520, "Member 'UBP_MatchmakingScreen_C::SearchFailureDialog' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, bCancellingSearch) == 0x000528, "Member 'UBP_MatchmakingScreen_C::bCancellingSearch' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, bCanTickSearch) == 0x000529, "Member 'UBP_MatchmakingScreen_C::bCanTickSearch' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, NumHandledQueues) == 0x00052C, "Member 'UBP_MatchmakingScreen_C::NumHandledQueues' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, TicketQueueNames) == 0x000530, "Member 'UBP_MatchmakingScreen_C::TicketQueueNames' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, bIsRankedSearch) == 0x000540, "Member 'UBP_MatchmakingScreen_C::bIsRankedSearch' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, LocationPreference) == 0x000548, "Member 'UBP_MatchmakingScreen_C::LocationPreference' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, ServerIdx) == 0x000558, "Member 'UBP_MatchmakingScreen_C::ServerIdx' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, SearchState) == 0x00055C, "Member 'UBP_MatchmakingScreen_C::SearchState' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, PartyMembers) == 0x000560, "Member 'UBP_MatchmakingScreen_C::PartyMembers' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, PartyMemberEntities) == 0x000570, "Member 'UBP_MatchmakingScreen_C::PartyMemberEntities' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, bFailedToReserveSlots) == 0x000580, "Member 'UBP_MatchmakingScreen_C::bFailedToReserveSlots' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, bCreatedTicket) == 0x000581, "Member 'UBP_MatchmakingScreen_C::bCreatedTicket' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, Matches) == 0x000588, "Member 'UBP_MatchmakingScreen_C::Matches' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, MatchQueueNames) == 0x0005D8, "Member 'UBP_MatchmakingScreen_C::MatchQueueNames' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, MatchMembers) == 0x0005E8, "Member 'UBP_MatchmakingScreen_C::MatchMembers' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, bHasPendingMatches) == 0x0005F8, "Member 'UBP_MatchmakingScreen_C::bHasPendingMatches' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, bNeedsWidgetsUpdate) == 0x0005F9, "Member 'UBP_MatchmakingScreen_C::bNeedsWidgetsUpdate' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, bEncounteredError) == 0x0005FA, "Member 'UBP_MatchmakingScreen_C::bEncounteredError' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, TimerValue) == 0x0005FC, "Member 'UBP_MatchmakingScreen_C::TimerValue' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, bDidSelectRegion) == 0x000600, "Member 'UBP_MatchmakingScreen_C::bDidSelectRegion' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, BanEndTime) == 0x000608, "Member 'UBP_MatchmakingScreen_C::BanEndTime' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, MemberIdx) == 0x000610, "Member 'UBP_MatchmakingScreen_C::MemberIdx' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, bStartingSearch) == 0x000614, "Member 'UBP_MatchmakingScreen_C::bStartingSearch' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, MaxMMR) == 0x000618, "Member 'UBP_MatchmakingScreen_C::MaxMMR' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, FailedQueues) == 0x000620, "Member 'UBP_MatchmakingScreen_C::FailedQueues' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, Message) == 0x000630, "Member 'UBP_MatchmakingScreen_C::Message' has a wrong offset!");
static_assert(offsetof(UBP_MatchmakingScreen_C, bServerBrowserIsConsoleServer) == 0x000648, "Member 'UBP_MatchmakingScreen_C::bServerBrowserIsConsoleServer' has a wrong offset!");

}

