#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Blunderbuss

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_Crossbow_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Blunderbuss.BP_Blunderbuss_C
// 0x0030 (0x0D70 - 0x0D40)
class ABP_Blunderbuss_C final : public ABP_Crossbow_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Blunderbuss_C;                   // 0x0D40(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	int32                                         LoopCount;                                         // 0x0D48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ProjectilesPerShot;                                // 0x0D4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Vertical_Recoil_Range;                             // 0x0D50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Horizontal_Recoil_Range;                           // 0x0D58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Spread_Angle_Range;                                // 0x0D60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Blunderbuss(int32 EntryPoint);
	void FireProjectile(const struct FVector& Origin, const struct FRotator& Orientation, class AController* OwningController, float ExpectedDelay);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Blunderbuss_C">();
	}
	static class ABP_Blunderbuss_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Blunderbuss_C>();
	}
};
static_assert(alignof(ABP_Blunderbuss_C) == 0x000010, "Wrong alignment on ABP_Blunderbuss_C");
static_assert(sizeof(ABP_Blunderbuss_C) == 0x000D70, "Wrong size on ABP_Blunderbuss_C");
static_assert(offsetof(ABP_Blunderbuss_C, UberGraphFrame_BP_Blunderbuss_C) == 0x000D40, "Member 'ABP_Blunderbuss_C::UberGraphFrame_BP_Blunderbuss_C' has a wrong offset!");
static_assert(offsetof(ABP_Blunderbuss_C, LoopCount) == 0x000D48, "Member 'ABP_Blunderbuss_C::LoopCount' has a wrong offset!");
static_assert(offsetof(ABP_Blunderbuss_C, ProjectilesPerShot) == 0x000D4C, "Member 'ABP_Blunderbuss_C::ProjectilesPerShot' has a wrong offset!");
static_assert(offsetof(ABP_Blunderbuss_C, Vertical_Recoil_Range) == 0x000D50, "Member 'ABP_Blunderbuss_C::Vertical_Recoil_Range' has a wrong offset!");
static_assert(offsetof(ABP_Blunderbuss_C, Horizontal_Recoil_Range) == 0x000D58, "Member 'ABP_Blunderbuss_C::Horizontal_Recoil_Range' has a wrong offset!");
static_assert(offsetof(ABP_Blunderbuss_C, Spread_Angle_Range) == 0x000D60, "Member 'ABP_Blunderbuss_C::Spread_Angle_Range' has a wrong offset!");

}

