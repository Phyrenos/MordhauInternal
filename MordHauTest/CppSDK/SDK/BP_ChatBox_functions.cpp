#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChatBox

#include "Basic.hpp"

#include "BP_ChatBox_classes.hpp"
#include "BP_ChatBox_parameters.hpp"


namespace SDK
{

// Function BP_ChatBox.BP_ChatBox_C.ExecuteUbergraph_BP_ChatBox
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ChatBox_C::ExecuteUbergraph_BP_ChatBox(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "ExecuteUbergraph_BP_ChatBox");

	Params::BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChatBox.BP_ChatBox_C.BndEvt__Button_K2Node_ComponentBoundEvent_2_OnButtonPressedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_ChatBox_C::BndEvt__Button_K2Node_ComponentBoundEvent_2_OnButtonPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "BndEvt__Button_K2Node_ComponentBoundEvent_2_OnButtonPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChatBox.BP_ChatBox_C.BndEvt__PauseChatCheckbox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bIsChecked                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ChatBox_C::BndEvt__PauseChatCheckbox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "BndEvt__PauseChatCheckbox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");

	Params::BP_ChatBox_C_BndEvt__PauseChatCheckbox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature Parms{};

	Parms.bIsChecked = bIsChecked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChatBox.BP_ChatBox_C.OnServerRestrictionInfoReceived
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FServerRestrictionInfo           ServerRestrictionInfo                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UBP_ChatBox_C::OnServerRestrictionInfoReceived(const struct FServerRestrictionInfo& ServerRestrictionInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "OnServerRestrictionInfoReceived");

	Params::BP_ChatBox_C_OnServerRestrictionInfoReceived Parms{};

	Parms.ServerRestrictionInfo = std::move(ServerRestrictionInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChatBox.BP_ChatBox_C.BndEvt__CheckBox_0_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bIsChecked                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ChatBox_C::BndEvt__CheckBox_0_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "BndEvt__CheckBox_0_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature");

	Params::BP_ChatBox_C_BndEvt__CheckBox_0_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature Parms{};

	Parms.bIsChecked = bIsChecked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChatBox.BP_ChatBox_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_ChatBox_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChatBox.BP_ChatBox_C.GoToViewModeCallback
// (BlueprintCallable, BlueprintEvent)

void UBP_ChatBox_C::GoToViewModeCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "GoToViewModeCallback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChatBox.BP_ChatBox_C.GoToViewMode
// (BlueprintCallable, BlueprintEvent)

void UBP_ChatBox_C::GoToViewMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "GoToViewMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChatBox.BP_ChatBox_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ChatBox_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "Tick");

	Params::BP_ChatBox_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChatBox.BP_ChatBox_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_ChatBox_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "OnMouseEnter");

	Params::BP_ChatBox_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChatBox.BP_ChatBox_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_ChatBox_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "OnMouseLeave");

	Params::BP_ChatBox_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChatBox.BP_ChatBox_C.BndEvt__TextArea_K2Node_ComponentBoundEvent_594_OnMultiLineEditableTextBoxChangedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_ChatBox_C::BndEvt__TextArea_K2Node_ComponentBoundEvent_594_OnMultiLineEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "BndEvt__TextArea_K2Node_ComponentBoundEvent_594_OnMultiLineEditableTextBoxChangedEvent__DelegateSignature");

	Params::BP_ChatBox_C_BndEvt__TextArea_K2Node_ComponentBoundEvent_594_OnMultiLineEditableTextBoxChangedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChatBox.BP_ChatBox_C.AddEntry
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FLinearColor                     NameColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Prefix                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FPlayFabPlayer                   Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// E_ChatUserTypes                         Chat_User_Type                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ChatBox_C::AddEntry(const class FString& Name_0, const class FText& Message, const struct FLinearColor& NameColor, const class FText& Prefix, const struct FPlayFabPlayer& Player, E_ChatUserTypes Chat_User_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "AddEntry");

	Params::BP_ChatBox_C_AddEntry Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Message = std::move(Message);
	Parms.NameColor = std::move(NameColor);
	Parms.Prefix = std::move(Prefix);
	Parms.Player = std::move(Player);
	Parms.Chat_User_Type = Chat_User_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChatBox.BP_ChatBox_C.OnPreviewKeyDown
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_ChatBox_C::OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "OnPreviewKeyDown");

	Params::BP_ChatBox_C_OnPreviewKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ChatBox.BP_ChatBox_C.GetInputContainerVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_ChatBox_C::GetInputContainerVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "GetInputContainerVisibility");

	Params::BP_ChatBox_C_GetInputContainerVisibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ChatBox.BP_ChatBox_C.GetViewModeVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_ChatBox_C::GetViewModeVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "GetViewModeVisibility");

	Params::BP_ChatBox_C_GetViewModeVisibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ChatBox.BP_ChatBox_C.GoToChatMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ChatBox_C::GoToChatMode(bool Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "GoToChatMode");

	Params::BP_ChatBox_C_GoToChatMode Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChatBox.BP_ChatBox_C.OnEnter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ChatBox_C::OnEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "OnEnter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChatBox.BP_ChatBox_C.OnMessageReceived
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class APlayerState*                     Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Prefix                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_ChatBox_C::OnMessageReceived(const class FText& Message, class APlayerState* Player, const class FText& Prefix)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "OnMessageReceived");

	Params::BP_ChatBox_C_OnMessageReceived Parms{};

	Parms.Message = std::move(Message);
	Parms.Player = Player;
	Parms.Prefix = std::move(Prefix);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChatBox.BP_ChatBox_C.OnEscape
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ChatBox_C::OnEscape()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "OnEscape");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChatBox.BP_ChatBox_C.GetChatBoxVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_ChatBox_C::GetChatBoxVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "GetChatBoxVisibility");

	Params::BP_ChatBox_C_GetChatBoxVisibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ChatBox.BP_ChatBox_C.GetEntriesVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_ChatBox_C::GetEntriesVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "GetEntriesVisibility");

	Params::BP_ChatBox_C_GetEntriesVisibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ChatBox.BP_ChatBox_C.AddEntriesEntry
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_ChatBoxEntry_C*               Entry                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ChatBox_C::AddEntriesEntry(class UBP_ChatBoxEntry_C* Entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "AddEntriesEntry");

	Params::BP_ChatBox_C_AddEntriesEntry Parms{};

	Parms.Entry = Entry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChatBox.BP_ChatBox_C.AddViewModeEntry
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_ChatBoxEntry_C*               Entry                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ChatBox_C::AddViewModeEntry(class UBP_ChatBoxEntry_C* Entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "AddViewModeEntry");

	Params::BP_ChatBox_C_AddViewModeEntry Parms{};

	Parms.Entry = Entry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChatBox.BP_ChatBox_C.GetText_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_ChatBox_C::GetText_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "GetText_0");

	Params::BP_ChatBox_C_GetText_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ChatBox.BP_ChatBox_C.ResetThreshold
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ChatBox_C::ResetThreshold()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "ResetThreshold");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChatBox.BP_ChatBox_C.GetVisibility_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_ChatBox_C::GetVisibility_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "GetVisibility_0");

	Params::BP_ChatBox_C_GetVisibility_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ChatBox.BP_ChatBox_C.MutePlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ChatMuteTypes                         MuteType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPlayFabPlayer                   Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_ChatBox_C::MutePlayer(E_ChatMuteTypes MuteType, const struct FPlayFabPlayer& Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "MutePlayer");

	Params::BP_ChatBox_C_MutePlayer Parms{};

	Parms.MuteType = MuteType;
	Parms.Player = std::move(Player);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChatBox.BP_ChatBox_C.UnmutePlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_ChatBox_C::UnmutePlayer(const struct FPlayFabPlayer& Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "UnmutePlayer");

	Params::BP_ChatBox_C_UnmutePlayer Parms{};

	Parms.Player = std::move(Player);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChatBox.BP_ChatBox_C.Get Keys From Value
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class UBP_ChatBoxEntry_C*, class FString>PreviousMessagesMap                                    (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// class FString                           Value__SteamID_                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UBP_ChatBoxEntry_C*>       Keys                                                   (Parm, OutParm, ContainsInstancedReference)

void UBP_ChatBox_C::Get_Keys_From_Value(const TMap<class UBP_ChatBoxEntry_C*, class FString>& PreviousMessagesMap, const class FString& Value__SteamID_, TArray<class UBP_ChatBoxEntry_C*>* Keys)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "Get Keys From Value");

	Params::BP_ChatBox_C_Get_Keys_From_Value Parms{};

	Parms.PreviousMessagesMap = std::move(PreviousMessagesMap);
	Parms.Value__SteamID_ = std::move(Value__SteamID_);

	UObject::ProcessEvent(Func, &Parms);

	if (Keys != nullptr)
		*Keys = std::move(Parms.Keys);
}


// Function BP_ChatBox.BP_ChatBox_C.AddPlayerToMutedMap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// E_ChatMuteTypes                         Mute_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ChatBox_C::AddPlayerToMutedMap(const struct FPlayFabPlayer& Player, E_ChatMuteTypes Mute_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "AddPlayerToMutedMap");

	Params::BP_ChatBox_C_AddPlayerToMutedMap Parms{};

	Parms.Player = std::move(Player);
	Parms.Mute_Type = Mute_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChatBox.BP_ChatBox_C.IsPlayerMuted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// E_ChatMuteTypes                         Mute_Type                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isMuted_0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ChatBox_C::IsPlayerMuted(const struct FPlayFabPlayer& Player, E_ChatMuteTypes* Mute_Type, bool* isMuted_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "IsPlayerMuted");

	Params::BP_ChatBox_C_IsPlayerMuted Parms{};

	Parms.Player = std::move(Player);

	UObject::ProcessEvent(Func, &Parms);

	if (Mute_Type != nullptr)
		*Mute_Type = Parms.Mute_Type;

	if (isMuted_0 != nullptr)
		*isMuted_0 = Parms.isMuted_0;
}


// Function BP_ChatBox.BP_ChatBox_C.RemovePlayerFromMutedMap
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// int32                                   Player_Index                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ChatBox_C::RemovePlayerFromMutedMap(const struct FPlayFabPlayer& Player, int32* Player_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "RemovePlayerFromMutedMap");

	Params::BP_ChatBox_C_RemovePlayerFromMutedMap Parms{};

	Parms.Player = std::move(Player);

	UObject::ProcessEvent(Func, &Parms);

	if (Player_Index != nullptr)
		*Player_Index = Parms.Player_Index;
}


// Function BP_ChatBox.BP_ChatBox_C.Repopulate Muted Player List
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ChatBox_C::Repopulate_Muted_Player_List()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "Repopulate Muted Player List");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChatBox.BP_ChatBox_C.GetVisibility_1
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_ChatBox_C::GetVisibility_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "GetVisibility_1");

	Params::BP_ChatBox_C_GetVisibility_1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ChatBox.BP_ChatBox_C.Get_TextArea_bIsEnabled_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_ChatBox_C::Get_TextArea_bIsEnabled_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "Get_TextArea_bIsEnabled_0");

	Params::BP_ChatBox_C_Get_TextArea_bIsEnabled_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ChatBox.BP_ChatBox_C.GetVisibility_2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_ChatBox_C::GetVisibility_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "GetVisibility_2");

	Params::BP_ChatBox_C_GetVisibility_2 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ChatBox.BP_ChatBox_C.GetVisibility_3
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_ChatBox_C::GetVisibility_3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "GetVisibility_3");

	Params::BP_ChatBox_C_GetVisibility_3 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ChatBox.BP_ChatBox_C.GetText_1
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_ChatBox_C::GetText_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "GetText_1");

	Params::BP_ChatBox_C_GetText_1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ChatBox.BP_ChatBox_C.OnRep_bIsChatPaused
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ChatBox_C::OnRep_bIsChatPaused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChatBox_C", "OnRep_bIsChatPaused");

	UObject::ProcessEvent(Func, nullptr);
}

}

