#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TeamSelect

#include "Basic.hpp"

#include "BP_TeamSelect_classes.hpp"
#include "BP_TeamSelect_parameters.hpp"


namespace SDK
{

// Function BP_TeamSelect.BP_TeamSelect_C.SelectTeam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TeamSelect_C::SelectTeam(int32 Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamSelect_C", "SelectTeam");

	Params::BP_TeamSelect_C_SelectTeam Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TeamSelect.BP_TeamSelect_C.Show
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_TeamSelect_C::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamSelect_C", "Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TeamSelect.BP_TeamSelect_C.GetGameModeName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (Parm, OutParm)

void UBP_TeamSelect_C::GetGameModeName(class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamSelect_C", "GetGameModeName");

	Params::BP_TeamSelect_C_GetGameModeName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function BP_TeamSelect.BP_TeamSelect_C.GetMapName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           NewParam                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_TeamSelect_C::GetMapName(class FString* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamSelect_C", "GetMapName");

	Params::BP_TeamSelect_C_GetMapName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function BP_TeamSelect.BP_TeamSelect_C.Hide
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_TeamSelect_C::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamSelect_C", "Hide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TeamSelect.BP_TeamSelect_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_TeamSelect_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamSelect_C", "OnKeyDown");

	Params::BP_TeamSelect_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

