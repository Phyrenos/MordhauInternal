#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Instrument

#include "Basic.hpp"

#include "BP_Instrument_classes.hpp"
#include "BP_Instrument_parameters.hpp"


namespace SDK
{

// Function BP_Instrument.BP_Instrument_C.ExecuteUbergraph_BP_Instrument
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Instrument_C::ExecuteUbergraph_BP_Instrument(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Instrument_C", "ExecuteUbergraph_BP_Instrument");

	Params::BP_Instrument_C_ExecuteUbergraph_BP_Instrument Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Instrument.BP_Instrument_C.EquipmentCommand
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Instrument_C::EquipmentCommand(int32 Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Instrument_C", "EquipmentCommand");

	Params::BP_Instrument_C_EquipmentCommand Parms{};

	Parms.Command = Command;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Instrument.BP_Instrument_C.ServerSetTone
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Tone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Instrument_C::ServerSetTone(uint8 Tone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Instrument_C", "ServerSetTone");

	Params::BP_Instrument_C_ServerSetTone Parms{};

	Parms.Tone = Tone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Instrument.BP_Instrument_C.RequestAttack
// (Event, Public, BlueprintEvent)
// Parameters:
// EAttackMove                             Move                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Instrument_C::RequestAttack(EAttackMove Move, float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Instrument_C", "RequestAttack");

	Params::BP_Instrument_C_RequestAttack Parms{};

	Parms.Move = Move;
	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Instrument.BP_Instrument_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Instrument_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Instrument_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Instrument.BP_Instrument_C.OnRep_ReplicatedTone
// (BlueprintCallable, BlueprintEvent)

void ABP_Instrument_C::OnRep_ReplicatedTone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Instrument_C", "OnRep_ReplicatedTone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Instrument.BP_Instrument_C.PlayTone
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Tone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Instrument_C::PlayTone(uint8 Tone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Instrument_C", "PlayTone");

	Params::BP_Instrument_C_PlayTone Parms{};

	Parms.Tone = Tone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Instrument.BP_Instrument_C.GetToneFromAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAttackMove                             Move                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Tone                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Instrument_C::GetToneFromAttack(EAttackMove Move, float Angle, uint8* Tone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Instrument_C", "GetToneFromAttack");

	Params::BP_Instrument_C_GetToneFromAttack Parms{};

	Parms.Move = Move;
	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);

	if (Tone != nullptr)
		*Tone = Parms.Tone;
}


// Function BP_Instrument.BP_Instrument_C.RequestBlock
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBlockType                              BlockType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAllowFTP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_Instrument_C::RequestBlock(EBlockType BlockType, bool bAllowFTP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Instrument_C", "RequestBlock");

	Params::BP_Instrument_C_RequestBlock Parms{};

	Parms.BlockType = BlockType;
	Parms.bAllowFTP = bAllowFTP;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Instrument.BP_Instrument_C.ServerSetToneAndPlay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Tone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Instrument_C::ServerSetToneAndPlay(uint8 Tone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Instrument_C", "ServerSetToneAndPlay");

	Params::BP_Instrument_C_ServerSetToneAndPlay Parms{};

	Parms.Tone = Tone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Instrument.BP_Instrument_C.CanPlay
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Instrument_C::CanPlay(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Instrument_C", "CanPlay");

	Params::BP_Instrument_C_CanPlay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}

}

