#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StatsPanel

#include "Basic.hpp"

#include "Mordhau_structs.hpp"


namespace SDK::Params
{

// Function BP_StatsPanel.BP_StatsPanel_C.Get Weapon Values
// 0x0338 (0x0338 - 0x0000)
struct BP_StatsPanel_C_Get_Weapon_Values final
{
public:
	EAttackMove                                   Attack_Move;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Windup;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Combo_Windup;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Release;                                           // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MissRecovery;                                      // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FeintCost;                                         // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MorphCost;                                         // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StaminaDrain;                                      // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MissStaminaCost;                                   // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WoodDamage;                                        // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StoneDamage;                                       // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanCombo;                                         // 0x002C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bStopOnHit;                                        // 0x002D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         T0_Head;                                           // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T0_Torso;                                          // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T0_Legs;                                           // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T1_Head;                                           // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T1Torso;                                           // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T1_Legs;                                           // 0x0044(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T2_Head;                                           // 0x0048(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T2_Torso;                                          // 0x004C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T2_Legs;                                           // 0x0050(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T3_Head;                                           // 0x0054(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T3_Torso;                                          // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T3_Legs;                                           // 0x005C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         X;                                                 // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y;                                                 // 0x0064(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Parry_Stamina_Negation;                            // 0x0068(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Block_Movement_Restriction;                        // 0x006C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Parry_Held;                                     // 0x006D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Hit_Knockback;                                     // 0x0070(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldFlinch;                                      // 0x0074(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttackInfo                            Attack_Info;                                       // 0x0078(0x0128)(ConstParm, Parm, OutParm)
	class AMordhauWeapon*                         K2Node_DynamicCast_AsMordhau_Weapon;               // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttackInfo                            CallFunc_GetBaseAttackInfo_ReturnValue;            // 0x01B0(0x0128)(ConstParm)
	float                                         CallFunc_Array_Get_Item;                           // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_2;                         // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_3;                         // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_4;                         // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_5;                         // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_6;                         // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_7;                         // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_8;                         // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_9;                         // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_10;                        // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_11;                        // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_7;             // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_8;             // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_StatsPanel_C_Get_Weapon_Values) == 0x000008, "Wrong alignment on BP_StatsPanel_C_Get_Weapon_Values");
static_assert(sizeof(BP_StatsPanel_C_Get_Weapon_Values) == 0x000338, "Wrong size on BP_StatsPanel_C_Get_Weapon_Values");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, Attack_Move) == 0x000000, "Member 'BP_StatsPanel_C_Get_Weapon_Values::Attack_Move' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, Windup) == 0x000004, "Member 'BP_StatsPanel_C_Get_Weapon_Values::Windup' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, Combo_Windup) == 0x000008, "Member 'BP_StatsPanel_C_Get_Weapon_Values::Combo_Windup' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, Release) == 0x00000C, "Member 'BP_StatsPanel_C_Get_Weapon_Values::Release' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, MissRecovery) == 0x000010, "Member 'BP_StatsPanel_C_Get_Weapon_Values::MissRecovery' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, FeintCost) == 0x000014, "Member 'BP_StatsPanel_C_Get_Weapon_Values::FeintCost' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, MorphCost) == 0x000018, "Member 'BP_StatsPanel_C_Get_Weapon_Values::MorphCost' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, StaminaDrain) == 0x00001C, "Member 'BP_StatsPanel_C_Get_Weapon_Values::StaminaDrain' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, MissStaminaCost) == 0x000020, "Member 'BP_StatsPanel_C_Get_Weapon_Values::MissStaminaCost' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, WoodDamage) == 0x000024, "Member 'BP_StatsPanel_C_Get_Weapon_Values::WoodDamage' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, StoneDamage) == 0x000028, "Member 'BP_StatsPanel_C_Get_Weapon_Values::StoneDamage' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, bCanCombo) == 0x00002C, "Member 'BP_StatsPanel_C_Get_Weapon_Values::bCanCombo' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, bStopOnHit) == 0x00002D, "Member 'BP_StatsPanel_C_Get_Weapon_Values::bStopOnHit' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, T0_Head) == 0x000030, "Member 'BP_StatsPanel_C_Get_Weapon_Values::T0_Head' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, T0_Torso) == 0x000034, "Member 'BP_StatsPanel_C_Get_Weapon_Values::T0_Torso' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, T0_Legs) == 0x000038, "Member 'BP_StatsPanel_C_Get_Weapon_Values::T0_Legs' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, T1_Head) == 0x00003C, "Member 'BP_StatsPanel_C_Get_Weapon_Values::T1_Head' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, T1Torso) == 0x000040, "Member 'BP_StatsPanel_C_Get_Weapon_Values::T1Torso' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, T1_Legs) == 0x000044, "Member 'BP_StatsPanel_C_Get_Weapon_Values::T1_Legs' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, T2_Head) == 0x000048, "Member 'BP_StatsPanel_C_Get_Weapon_Values::T2_Head' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, T2_Torso) == 0x00004C, "Member 'BP_StatsPanel_C_Get_Weapon_Values::T2_Torso' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, T2_Legs) == 0x000050, "Member 'BP_StatsPanel_C_Get_Weapon_Values::T2_Legs' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, T3_Head) == 0x000054, "Member 'BP_StatsPanel_C_Get_Weapon_Values::T3_Head' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, T3_Torso) == 0x000058, "Member 'BP_StatsPanel_C_Get_Weapon_Values::T3_Torso' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, T3_Legs) == 0x00005C, "Member 'BP_StatsPanel_C_Get_Weapon_Values::T3_Legs' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, X) == 0x000060, "Member 'BP_StatsPanel_C_Get_Weapon_Values::X' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, Y) == 0x000064, "Member 'BP_StatsPanel_C_Get_Weapon_Values::Y' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, Parry_Stamina_Negation) == 0x000068, "Member 'BP_StatsPanel_C_Get_Weapon_Values::Parry_Stamina_Negation' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, Block_Movement_Restriction) == 0x00006C, "Member 'BP_StatsPanel_C_Get_Weapon_Values::Block_Movement_Restriction' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, Is_Parry_Held) == 0x00006D, "Member 'BP_StatsPanel_C_Get_Weapon_Values::Is_Parry_Held' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, Hit_Knockback) == 0x000070, "Member 'BP_StatsPanel_C_Get_Weapon_Values::Hit_Knockback' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, ShouldFlinch) == 0x000074, "Member 'BP_StatsPanel_C_Get_Weapon_Values::ShouldFlinch' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, Attack_Info) == 0x000078, "Member 'BP_StatsPanel_C_Get_Weapon_Values::Attack_Info' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, K2Node_DynamicCast_AsMordhau_Weapon) == 0x0001A0, "Member 'BP_StatsPanel_C_Get_Weapon_Values::K2Node_DynamicCast_AsMordhau_Weapon' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, K2Node_DynamicCast_bSuccess) == 0x0001A8, "Member 'BP_StatsPanel_C_Get_Weapon_Values::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_GetBaseAttackInfo_ReturnValue) == 0x0001B0, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_GetBaseAttackInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Array_Get_Item) == 0x0002D8, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Array_Get_Item_1) == 0x0002DC, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Array_Get_Item_2) == 0x0002E0, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Array_Get_Item_3) == 0x0002E4, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Array_Get_Item_4) == 0x0002E8, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Array_Get_Item_5) == 0x0002EC, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Array_Get_Item_6) == 0x0002F0, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Array_Get_Item_7) == 0x0002F4, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Array_Get_Item_8) == 0x0002F8, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Array_Get_Item_9) == 0x0002FC, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Add_FloatFloat_ReturnValue) == 0x000300, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000304, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000308, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x00030C, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Array_Get_Item_10) == 0x000310, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Array_Get_Item_11) == 0x000314, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x000318, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x00031C, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x000320, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Add_FloatFloat_ReturnValue_7) == 0x000324, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Add_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_BreakVector2D_X) == 0x000328, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_BreakVector2D_Y) == 0x00032C, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Add_FloatFloat_ReturnValue_8) == 0x000330, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Add_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Weapon_Values, CallFunc_Not_PreBool_ReturnValue) == 0x000334, "Member 'BP_StatsPanel_C_Get_Weapon_Values::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_StatsPanel.BP_StatsPanel_C.Get Ranged Weapon Values
// 0x00D0 (0x00D0 - 0x0000)
struct BP_StatsPanel_C_Get_Ranged_Weapon_Values final
{
public:
	float                                         WoodDamage;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StoneDamage;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T0_Head;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T0_Torso;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T0_Legs;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T1_Head;                                           // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T1Torso;                                           // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T1_Legs;                                           // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T2_Head;                                           // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T2_Torso;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T2_Legs;                                           // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T3_Head;                                           // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T3_Torso;                                          // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T3_Legs;                                           // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Should_Flinch;                                     // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Reload_Time;                                       // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Auto_Reload_Time;                                  // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Max_Ammo;                                          // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Ranged_Draw_Time;                                  // 0x0048(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 Temp_float_Variable;                               // 0x0050(0x0010)(ReferenceParm)
	TArray<float>                                 Temp_float_Variable_1;                             // 0x0060(0x0010)(ReferenceParm)
	TArray<float>                                 Temp_float_Variable_2;                             // 0x0070(0x0010)(ReferenceParm)
	float                                         CallFunc_Array_Get_Item;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_2;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_3;                         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_4;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_5;                         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_6;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_7;                         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_8;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_9;                         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_10;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_11;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_7;             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatsPanel_C_Get_Ranged_Weapon_Values) == 0x000008, "Wrong alignment on BP_StatsPanel_C_Get_Ranged_Weapon_Values");
static_assert(sizeof(BP_StatsPanel_C_Get_Ranged_Weapon_Values) == 0x0000D0, "Wrong size on BP_StatsPanel_C_Get_Ranged_Weapon_Values");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, WoodDamage) == 0x000000, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::WoodDamage' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, StoneDamage) == 0x000004, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::StoneDamage' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, T0_Head) == 0x000008, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::T0_Head' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, T0_Torso) == 0x00000C, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::T0_Torso' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, T0_Legs) == 0x000010, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::T0_Legs' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, T1_Head) == 0x000014, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::T1_Head' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, T1Torso) == 0x000018, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::T1Torso' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, T1_Legs) == 0x00001C, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::T1_Legs' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, T2_Head) == 0x000020, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::T2_Head' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, T2_Torso) == 0x000024, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::T2_Torso' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, T2_Legs) == 0x000028, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::T2_Legs' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, T3_Head) == 0x00002C, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::T3_Head' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, T3_Torso) == 0x000030, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::T3_Torso' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, T3_Legs) == 0x000034, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::T3_Legs' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, Should_Flinch) == 0x000038, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::Should_Flinch' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, Reload_Time) == 0x00003C, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::Reload_Time' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, Auto_Reload_Time) == 0x000040, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::Auto_Reload_Time' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, Max_Ammo) == 0x000044, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::Max_Ammo' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, Ranged_Draw_Time) == 0x000048, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::Ranged_Draw_Time' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, Temp_float_Variable) == 0x000050, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, Temp_float_Variable_1) == 0x000060, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, Temp_float_Variable_2) == 0x000070, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Array_Get_Item_1) == 0x000084, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Array_Get_Item_2) == 0x000088, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Array_Get_Item_3) == 0x00008C, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Array_Get_Item_4) == 0x000090, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Array_Get_Item_5) == 0x000094, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Array_Get_Item_6) == 0x000098, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Array_Get_Item_7) == 0x00009C, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Array_Get_Item_8) == 0x0000A0, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Array_Get_Item_9) == 0x0000A4, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000AC, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000B0, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0000B4, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Array_Get_Item_10) == 0x0000B8, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Array_Get_Item_11) == 0x0000BC, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x0000C0, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x0000C4, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x0000C8, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Ranged_Weapon_Values, CallFunc_Add_FloatFloat_ReturnValue_7) == 0x0000CC, "Member 'BP_StatsPanel_C_Get_Ranged_Weapon_Values::CallFunc_Add_FloatFloat_ReturnValue_7' has a wrong offset!");

// Function BP_StatsPanel.BP_StatsPanel_C.Get Melee Attack Info
// 0x0278 (0x0278 - 0x0000)
struct BP_StatsPanel_C_Get_Melee_Attack_Info final
{
public:
	class AMordhauEquipment*                      Equipment_;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackMove                                   Move;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttackInfo                            Attack_Info;                                       // 0x0010(0x0128)(ConstParm, Parm, OutParm)
	class AMordhauWeapon*                         AsMordhau_Weapon;                                  // 0x0138(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauWeapon*                         K2Node_DynamicCast_AsMordhau_Weapon;               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttackInfo                            CallFunc_GetBaseAttackInfo_ReturnValue;            // 0x0150(0x0128)(ConstParm)
};
static_assert(alignof(BP_StatsPanel_C_Get_Melee_Attack_Info) == 0x000008, "Wrong alignment on BP_StatsPanel_C_Get_Melee_Attack_Info");
static_assert(sizeof(BP_StatsPanel_C_Get_Melee_Attack_Info) == 0x000278, "Wrong size on BP_StatsPanel_C_Get_Melee_Attack_Info");
static_assert(offsetof(BP_StatsPanel_C_Get_Melee_Attack_Info, Equipment_) == 0x000000, "Member 'BP_StatsPanel_C_Get_Melee_Attack_Info::Equipment_' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Melee_Attack_Info, Move) == 0x000008, "Member 'BP_StatsPanel_C_Get_Melee_Attack_Info::Move' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Melee_Attack_Info, Attack_Info) == 0x000010, "Member 'BP_StatsPanel_C_Get_Melee_Attack_Info::Attack_Info' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Melee_Attack_Info, AsMordhau_Weapon) == 0x000138, "Member 'BP_StatsPanel_C_Get_Melee_Attack_Info::AsMordhau_Weapon' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Melee_Attack_Info, K2Node_DynamicCast_AsMordhau_Weapon) == 0x000140, "Member 'BP_StatsPanel_C_Get_Melee_Attack_Info::K2Node_DynamicCast_AsMordhau_Weapon' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Melee_Attack_Info, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'BP_StatsPanel_C_Get_Melee_Attack_Info::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Melee_Attack_Info, CallFunc_GetBaseAttackInfo_ReturnValue) == 0x000150, "Member 'BP_StatsPanel_C_Get_Melee_Attack_Info::CallFunc_GetBaseAttackInfo_ReturnValue' has a wrong offset!");

// Function BP_StatsPanel.BP_StatsPanel_C.Get Average Damage
// 0x01B0 (0x01B0 - 0x0000)
struct BP_StatsPanel_C_Get_Average_Damage final
{
public:
	struct FAttackInfo                            Attack_Info;                                       // 0x0000(0x0128)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         ReturnValue;                                       // 0x0128(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_2;                         // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_3;                         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_4;                         // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_5;                         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_6;                         // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_7;                         // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_8;                         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_9;                         // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_10;                        // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_11;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_7;             // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_8;             // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_9;             // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_10;            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_11;            // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_12;            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_13;            // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_14;            // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_15;            // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_16;            // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_17;            // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_18;            // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatsPanel_C_Get_Average_Damage) == 0x000008, "Wrong alignment on BP_StatsPanel_C_Get_Average_Damage");
static_assert(sizeof(BP_StatsPanel_C_Get_Average_Damage) == 0x0001B0, "Wrong size on BP_StatsPanel_C_Get_Average_Damage");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, Attack_Info) == 0x000000, "Member 'BP_StatsPanel_C_Get_Average_Damage::Attack_Info' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, ReturnValue) == 0x000128, "Member 'BP_StatsPanel_C_Get_Average_Damage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Array_Get_Item) == 0x00012C, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Array_Get_Item_1) == 0x000130, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Array_Get_Item_2) == 0x000134, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Array_Get_Item_3) == 0x000138, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Array_Get_Item_4) == 0x00013C, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Array_Get_Item_5) == 0x000140, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue) == 0x000144, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Array_Get_Item_6) == 0x000148, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Array_Get_Item_7) == 0x00014C, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Array_Get_Item_8) == 0x000150, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Array_Get_Item_9) == 0x000154, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000158, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x00015C, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000160, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Array_Get_Item_10) == 0x000164, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Array_Get_Item_11) == 0x000168, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x00016C, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x000170, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x000174, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue_7) == 0x000178, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue_8) == 0x00017C, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue_9) == 0x000180, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue_10) == 0x000184, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue_11) == 0x000188, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue_12) == 0x00018C, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue_13) == 0x000190, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue_14) == 0x000194, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue_15) == 0x000198, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue_16) == 0x00019C, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue_17) == 0x0001A0, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Add_FloatFloat_ReturnValue_18) == 0x0001A4, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Add_FloatFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Damage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001A8, "Member 'BP_StatsPanel_C_Get_Average_Damage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_StatsPanel.BP_StatsPanel_C.Get Average Projectile Damage
// 0x00C8 (0x00C8 - 0x0000)
struct BP_StatsPanel_C_Get_Average_Projectile_Damage final
{
public:
	class UClass*                                 Attack_Info;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 Temp_float_Variable;                               // 0x0010(0x0010)(ReferenceParm)
	TArray<float>                                 Temp_float_Variable_1;                             // 0x0020(0x0010)(ReferenceParm)
	float                                         CallFunc_Array_Get_Item;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_2;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_3;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_4;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_5;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_6;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_7;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 Temp_float_Variable_2;                             // 0x0060(0x0010)(ReferenceParm)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_8;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_9;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_10;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_7;             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_8;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_11;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_9;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_10;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_11;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_12;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_13;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_14;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_15;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_16;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_17;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_18;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatsPanel_C_Get_Average_Projectile_Damage) == 0x000008, "Wrong alignment on BP_StatsPanel_C_Get_Average_Projectile_Damage");
static_assert(sizeof(BP_StatsPanel_C_Get_Average_Projectile_Damage) == 0x0000C8, "Wrong size on BP_StatsPanel_C_Get_Average_Projectile_Damage");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, Attack_Info) == 0x000000, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::Attack_Info' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, ReturnValue) == 0x000008, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, Temp_float_Variable) == 0x000010, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, Temp_float_Variable_1) == 0x000020, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Array_Get_Item_1) == 0x000034, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Array_Get_Item_2) == 0x000038, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Array_Get_Item_3) == 0x000040, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Array_Get_Item_4) == 0x000044, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Array_Get_Item_5) == 0x000048, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Array_Get_Item_6) == 0x00004C, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000050, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000054, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Array_Get_Item_7) == 0x000058, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, Temp_float_Variable_2) == 0x000060, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000070, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x000074, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Array_Get_Item_8) == 0x000078, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x00007C, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x000080, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Array_Get_Item_9) == 0x000084, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Array_Get_Item_10) == 0x000088, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue_7) == 0x00008C, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue_8) == 0x000090, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Array_Get_Item_11) == 0x000094, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue_9) == 0x000098, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue_10) == 0x00009C, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue_11) == 0x0000A0, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue_12) == 0x0000A4, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue_13) == 0x0000A8, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue_14) == 0x0000AC, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue_15) == 0x0000B0, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue_16) == 0x0000B4, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue_17) == 0x0000B8, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Add_FloatFloat_ReturnValue_18) == 0x0000BC, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Add_FloatFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Average_Projectile_Damage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000C0, "Member 'BP_StatsPanel_C_Get_Average_Projectile_Damage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_StatsPanel.BP_StatsPanel_C.Get Range Attack Info
// 0x0028 (0x0028 - 0x0000)
struct BP_StatsPanel_C_Get_Range_Attack_Info final
{
public:
	class AMordhauEquipment*                      Equipment_;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauWeapon*                         AsMordhau_Weapon;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ProjectileClass;                                   // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauWeapon*                         K2Node_DynamicCast_AsMordhau_Weapon;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_StatsPanel_C_Get_Range_Attack_Info) == 0x000008, "Wrong alignment on BP_StatsPanel_C_Get_Range_Attack_Info");
static_assert(sizeof(BP_StatsPanel_C_Get_Range_Attack_Info) == 0x000028, "Wrong size on BP_StatsPanel_C_Get_Range_Attack_Info");
static_assert(offsetof(BP_StatsPanel_C_Get_Range_Attack_Info, Equipment_) == 0x000000, "Member 'BP_StatsPanel_C_Get_Range_Attack_Info::Equipment_' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Range_Attack_Info, AsMordhau_Weapon) == 0x000008, "Member 'BP_StatsPanel_C_Get_Range_Attack_Info::AsMordhau_Weapon' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Range_Attack_Info, ProjectileClass) == 0x000010, "Member 'BP_StatsPanel_C_Get_Range_Attack_Info::ProjectileClass' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Range_Attack_Info, K2Node_DynamicCast_AsMordhau_Weapon) == 0x000018, "Member 'BP_StatsPanel_C_Get_Range_Attack_Info::K2Node_DynamicCast_AsMordhau_Weapon' has a wrong offset!");
static_assert(offsetof(BP_StatsPanel_C_Get_Range_Attack_Info, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_StatsPanel_C_Get_Range_Attack_Info::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

