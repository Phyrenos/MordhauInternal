#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MordhauCharacter

#include "Basic.hpp"

#include "Mordhau_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.ExecuteUbergraph_BP_MordhauCharacter
// 0x0540 (0x0540 - 0x0000)
struct BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0038(0x0018)(HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsUsingController_ReturnValue;         // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsUsingController_ReturnValue_1;       // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Angle_1;                              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            K2Node_Event_Type_1;                               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SubType_2;                            // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Bone_2;                               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Point_1;                              // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Source_1;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Agent_3;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauActor*                          K2Node_DynamicCast_AsMordhau_Actor;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAB_MordhauCharacterAnimation_C*        K2Node_DynamicCast_AsAB_Mordhau_Character_Animation; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAdvancedCharacter*                     K2Node_DynamicCast_AsAdvanced_Character;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLeg_ReturnValue;                        // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMordhauDamageType                            K2Node_Event_DamageType;                           // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SubType_1;                            // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x00CC(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 K2Node_Event_Agent_2;                              // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauWeapon*                         K2Node_DynamicCast_AsMordhau_Weapon;               // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnySimulatingPhysics_ReturnValue;       // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAllowedToAddForce_ReturnValue;          // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBoneDismembered_ReturnValue;            // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Bone_1;                               // 0x01EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASeparatedBodyPart*                     K2Node_Event_SeparatedPart;                        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Agent_1;                              // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnySimulatingPhysics_ReturnValue_1;     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0223(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Percent_ByteByte_ReturnValue;             // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBeenReallyRecentlyRendered_ReturnValue; // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x023B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAB_MordhauCharacterAnimation_C*        K2Node_DynamicCast_AsAB_Mordhau_Character_Animation_1; // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ComputeRagdollForce_Force;                // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Trip_ReturnValue;                         // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x028C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0294(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x02A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Knockback_ReturnValue;                    // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Angle;                                // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            K2Node_Event_Type;                                 // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SubType;                              // 0x02BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BE[0x2];                                      // 0x02BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Bone;                                 // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Point;                                // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Source;                               // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Agent;                                // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnySimulatingPhysics_ReturnValue_2;     // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBoneDismembered_ReturnValue_1;          // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x02EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EB[0x5];                                      // 0x02EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ComputeRagdollForce_Force_1;              // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnySimulatingPhysics_ReturnValue_3;     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D[0x3];                                      // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ProjectVectorOnToVector_ReturnValue;      // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetParentBone_ReturnValue;                // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0368(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue_1;            // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue_1;        // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2[0x2];                                      // 0x03A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_6;       // 0x03A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_CustomEvent_NewParam;                       // 0x03B0(0x000C)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerController*               K2Node_DynamicCast_AsMordhau_Player_Controller;    // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x03D8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40D[0x3];                                      // 0x040D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0410(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x042C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42D[0x3];                                      // 0x042D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0435(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0436(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_437[0x1];                                      // 0x0437(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x043D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x043E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43F[0x1];                                      // 0x043F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_445[0x3];                                      // 0x0445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauAIController*                   K2Node_DynamicCast_AsMordhau_AIController;         // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_462[0x6];                                      // 0x0462(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_BlockedBy;                            // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1; // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_472[0x2];                                      // 0x0472(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLastDismemberedBoneForceDir_ReturnValue; // 0x0474(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLastDismemberedBonePartial_ReturnValue; // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x3];                                      // 0x0481(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0484(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_491[0x3];                                      // 0x0491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0494(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A1[0x3];                                      // 0x04A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x04A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x04B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BD[0x3];                                      // 0x04BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x04CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_7;       // 0x04D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_8;       // 0x04E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauVehicleComponent*               CallFunc_GetLastUsedVehicle_ReturnValue;           // 0x04F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauSingleton*                      CallFunc_GetMordhauSingleton_ReturnValue;          // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWorld*                                 CallFunc_GetWorldOf_ReturnValue;                   // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauEquipment*                      CallFunc_SpawnEquipmentFromClass_ReturnValue;      // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AKickWeapon*                            K2Node_DynamicCast_AsKick_Weapon;                  // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauSingleton*                      CallFunc_GetMordhauSingleton_ReturnValue_1;        // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter) == 0x000008, "Wrong alignment on BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter");
static_assert(sizeof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter) == 0x000540, "Wrong size on BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, EntryPoint) == 0x000000, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_InputActionEvent_Key_1) == 0x000008, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_InputActionEvent_Key) == 0x000020, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, Temp_struct_Variable) == 0x000038, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000060, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, Temp_bool_Has_Been_Initd_Variable) == 0x000061, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, Temp_bool_IsClosed_Variable) == 0x000062, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_GetIsUsingController_ReturnValue) == 0x000063, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_GetIsUsingController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_GetIsUsingController_ReturnValue_1) == 0x000064, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_GetIsUsingController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_Angle_1) == 0x000068, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_Angle_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_Type_1) == 0x00006C, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_Type_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_SubType_2) == 0x00006D, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_SubType_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_Bone_2) == 0x000070, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_Bone_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_Point_1) == 0x000078, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_Point_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_Source_1) == 0x000088, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_Source_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_Agent_3) == 0x000090, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_Agent_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_DynamicCast_AsMordhau_Actor) == 0x000098, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_DynamicCast_AsMordhau_Actor' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_GetAnimInstance_ReturnValue) == 0x0000A8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_DynamicCast_AsAB_Mordhau_Character_Animation) == 0x0000B0, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_DynamicCast_AsAB_Mordhau_Character_Animation' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_DynamicCast_AsAdvanced_Character) == 0x0000C0, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_DynamicCast_AsAdvanced_Character' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_DynamicCast_bSuccess_2) == 0x0000C8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_IsLeg_ReturnValue) == 0x0000C9, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_IsLeg_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_DamageType) == 0x0000CA, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_SubType_1) == 0x0000CB, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_SubType_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_Hit) == 0x0000CC, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_Agent_2) == 0x000158, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_Agent_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_DynamicCast_AsMordhau_Weapon) == 0x000160, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_DynamicCast_AsMordhau_Weapon' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_DynamicCast_bSuccess_3) == 0x000168, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_IsAnySimulatingPhysics_ReturnValue) == 0x000169, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_IsAnySimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_IsAllowedToAddForce_ReturnValue) == 0x00016A, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_IsAllowedToAddForce_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BooleanAND_ReturnValue) == 0x00016B, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakHitResult_bBlockingHit) == 0x00016C, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakHitResult_bInitialOverlap) == 0x00016D, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakHitResult_Time) == 0x000170, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakHitResult_Distance) == 0x000174, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakHitResult_Location) == 0x000178, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakHitResult_ImpactPoint) == 0x000184, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakHitResult_Normal) == 0x000190, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakHitResult_ImpactNormal) == 0x00019C, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakHitResult_PhysMat) == 0x0001A8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakHitResult_HitActor) == 0x0001B0, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakHitResult_HitComponent) == 0x0001B8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakHitResult_HitBoneName) == 0x0001C0, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakHitResult_HitItem) == 0x0001C8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakHitResult_FaceIndex) == 0x0001CC, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakHitResult_TraceStart) == 0x0001D0, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakHitResult_TraceEnd) == 0x0001DC, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_IsBoneDismembered_ReturnValue) == 0x0001E8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_IsBoneDismembered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_Bone_1) == 0x0001EC, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_Bone_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_SeparatedPart) == 0x0001F8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_SeparatedPart' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_Agent_1) == 0x000200, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_Agent_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_GetActorRightVector_ReturnValue) == 0x000208, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000214, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_IsAnySimulatingPhysics_ReturnValue_1) == 0x000220, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_IsAnySimulatingPhysics_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000221, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x000222, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_MakeLiteralByte_ReturnValue) == 0x000223, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000224, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_MapRangeClamped_ReturnValue) == 0x000228, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00022C, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000230, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Percent_ByteByte_ReturnValue) == 0x000238, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Percent_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Less_ByteByte_ReturnValue) == 0x000239, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_HasBeenReallyRecentlyRendered_ReturnValue) == 0x00023A, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_HasBeenReallyRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Not_PreBool_ReturnValue_1) == 0x00023B, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000240, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_DynamicCast_AsAB_Mordhau_Character_Animation_1) == 0x000248, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_DynamicCast_AsAB_Mordhau_Character_Animation_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_DynamicCast_bSuccess_4) == 0x000250, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_ComputeRagdollForce_Force) == 0x000254, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_ComputeRagdollForce_Force' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BooleanOR_ReturnValue) == 0x000260, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000264, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BooleanOR_ReturnValue_1) == 0x000270, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BooleanOR_ReturnValue_2) == 0x000271, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000272, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000273, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Trip_ReturnValue) == 0x000274, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Trip_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_VSize_ReturnValue) == 0x000278, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00027C, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_GetVelocity_ReturnValue) == 0x000280, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x00028C, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Normal2D_ReturnValue) == 0x000294, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x00029C, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0002A8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Knockback_ReturnValue) == 0x0002B4, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Knockback_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_Angle) == 0x0002B8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_Angle' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_Type) == 0x0002BC, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_SubType) == 0x0002BD, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_SubType' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_Bone) == 0x0002C0, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_Bone' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_Point) == 0x0002C8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_Point' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_Source) == 0x0002D8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_Source' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_Agent) == 0x0002E0, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_Agent' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_IsAnySimulatingPhysics_ReturnValue_2) == 0x0002E8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_IsAnySimulatingPhysics_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_IsBoneDismembered_ReturnValue_1) == 0x0002E9, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_IsBoneDismembered_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Not_PreBool_ReturnValue_2) == 0x0002EA, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x0002F0, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_ComputeRagdollForce_Force_1) == 0x0002F8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_ComputeRagdollForce_Force_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_VSize_ReturnValue_1) == 0x000304, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakVector_X) == 0x000308, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakVector_Y) == 0x00030C, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakVector_Z) == 0x000310, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_FClamp_ReturnValue) == 0x000314, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_IsAnySimulatingPhysics_ReturnValue_3) == 0x000318, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_IsAnySimulatingPhysics_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_MakeVector_ReturnValue) == 0x00031C, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Dot_VectorVector_ReturnValue) == 0x000328, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_DegAcos_ReturnValue) == 0x00032C, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000330, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Less_FloatFloat_ReturnValue) == 0x00033C, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_ProjectVectorOnToVector_ReturnValue) == 0x000340, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_ProjectVectorOnToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00034C, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_GetParentBone_ReturnValue) == 0x000350, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_GetParentBone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000358, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000364, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_ClampVectorSize_ReturnValue) == 0x000368, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Not_PreBool_ReturnValue_3) == 0x000374, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000378, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_ClampVectorSize_ReturnValue_1) == 0x000384, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_ClampVectorSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_IsSimulatingPhysics_ReturnValue_1) == 0x000390, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_IsSimulatingPhysics_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x000394, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Not_PreBool_ReturnValue_4) == 0x0003A0, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BooleanOR_ReturnValue_3) == 0x0003A1, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Multiply_VectorFloat_ReturnValue_6) == 0x0003A4, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Multiply_VectorFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_CustomEvent_NewParam) == 0x0003B0, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_GetPlayerController_ReturnValue) == 0x0003C0, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_DynamicCast_AsMordhau_Player_Controller) == 0x0003C8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_DynamicCast_AsMordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_DynamicCast_bSuccess_5) == 0x0003D0, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x0003D8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000400, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x00040C, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000410, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00041C, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakVector_X_1) == 0x000420, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakVector_Y_1) == 0x000424, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakVector_Z_1) == 0x000428, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BooleanAND_ReturnValue_1) == 0x00042C, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Abs_ReturnValue) == 0x000430, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BooleanOR_ReturnValue_4) == 0x000434, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000435, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BooleanOR_ReturnValue_5) == 0x000436, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Abs_ReturnValue_1) == 0x000438, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BooleanOR_ReturnValue_6) == 0x00043C, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00043D, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BooleanOR_ReturnValue_7) == 0x00043E, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Abs_ReturnValue_2) == 0x000440, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000444, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_GetController_ReturnValue) == 0x000448, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BooleanOR_ReturnValue_8) == 0x000450, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_DynamicCast_AsMordhau_AIController) == 0x000458, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_DynamicCast_AsMordhau_AIController' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_DynamicCast_bSuccess_6) == 0x000460, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BooleanOR_ReturnValue_9) == 0x000461, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_Event_BlockedBy) == 0x000468, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_Event_BlockedBy' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, Temp_bool_Has_Been_Initd_Variable_1) == 0x000470, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1) == 0x000471, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_GetLastDismemberedBoneForceDir_ReturnValue) == 0x000474, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_GetLastDismemberedBoneForceDir_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_IsLastDismemberedBonePartial_ReturnValue) == 0x000480, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_IsLastDismemberedBonePartial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000484, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BooleanAND_ReturnValue_2) == 0x000490, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_NegateRotator_ReturnValue) == 0x000494, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BooleanAND_ReturnValue_3) == 0x0004A0, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_ComposeRotators_ReturnValue) == 0x0004A4, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_ComposeRotators_ReturnValue_1) == 0x0004B0, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BooleanOR_ReturnValue_10) == 0x0004BC, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakRotator_Roll) == 0x0004C0, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakRotator_Pitch) == 0x0004C4, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_BreakRotator_Yaw) == 0x0004C8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_MakeVector_ReturnValue_1) == 0x0004CC, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Multiply_VectorFloat_ReturnValue_7) == 0x0004D8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Multiply_VectorFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_Multiply_VectorFloat_ReturnValue_8) == 0x0004E4, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_Multiply_VectorFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, Temp_bool_IsClosed_Variable_1) == 0x0004F0, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_GetLastUsedVehicle_ReturnValue) == 0x0004F8, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_GetLastUsedVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_IsValid_ReturnValue) == 0x000500, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_GetMordhauSingleton_ReturnValue) == 0x000508, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_GetMordhauSingleton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_GetWorldOf_ReturnValue) == 0x000510, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_GetWorldOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_SpawnEquipmentFromClass_ReturnValue) == 0x000518, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_SpawnEquipmentFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_IsValid_ReturnValue_1) == 0x000520, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_DynamicCast_AsKick_Weapon) == 0x000528, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_DynamicCast_AsKick_Weapon' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, K2Node_DynamicCast_bSuccess_7) == 0x000530, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter, CallFunc_GetMordhauSingleton_ReturnValue_1) == 0x000538, "Member 'BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter::CallFunc_GetMordhauSingleton_ReturnValue_1' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.SprintingMoveBlockedBy
// 0x0008 (0x0008 - 0x0000)
struct BP_MordhauCharacter_C_SprintingMoveBlockedBy final
{
public:
	class AActor*                                 BlockedBy;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MordhauCharacter_C_SprintingMoveBlockedBy) == 0x000008, "Wrong alignment on BP_MordhauCharacter_C_SprintingMoveBlockedBy");
static_assert(sizeof(BP_MordhauCharacter_C_SprintingMoveBlockedBy) == 0x000008, "Wrong size on BP_MordhauCharacter_C_SprintingMoveBlockedBy");
static_assert(offsetof(BP_MordhauCharacter_C_SprintingMoveBlockedBy, BlockedBy) == 0x000000, "Member 'BP_MordhauCharacter_C_SprintingMoveBlockedBy::BlockedBy' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.ServerSetClimbLocation
// 0x000C (0x000C - 0x0000)
struct BP_MordhauCharacter_C_ServerSetClimbLocation final
{
public:
	struct FVector_NetQuantize                    NewParam;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MordhauCharacter_C_ServerSetClimbLocation) == 0x000004, "Wrong alignment on BP_MordhauCharacter_C_ServerSetClimbLocation");
static_assert(sizeof(BP_MordhauCharacter_C_ServerSetClimbLocation) == 0x00000C, "Wrong size on BP_MordhauCharacter_C_ServerSetClimbLocation");
static_assert(offsetof(BP_MordhauCharacter_C_ServerSetClimbLocation, NewParam) == 0x000000, "Member 'BP_MordhauCharacter_C_ServerSetClimbLocation::NewParam' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.ApplyRagdollForce
// 0x0030 (0x0030 - 0x0000)
struct BP_MordhauCharacter_C_ApplyRagdollForce final
{
public:
	float                                         Angle;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SubType;                                           // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   bone;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Agent;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MordhauCharacter_C_ApplyRagdollForce) == 0x000008, "Wrong alignment on BP_MordhauCharacter_C_ApplyRagdollForce");
static_assert(sizeof(BP_MordhauCharacter_C_ApplyRagdollForce) == 0x000030, "Wrong size on BP_MordhauCharacter_C_ApplyRagdollForce");
static_assert(offsetof(BP_MordhauCharacter_C_ApplyRagdollForce, Angle) == 0x000000, "Member 'BP_MordhauCharacter_C_ApplyRagdollForce::Angle' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ApplyRagdollForce, Type) == 0x000004, "Member 'BP_MordhauCharacter_C_ApplyRagdollForce::Type' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ApplyRagdollForce, SubType) == 0x000005, "Member 'BP_MordhauCharacter_C_ApplyRagdollForce::SubType' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ApplyRagdollForce, bone) == 0x000008, "Member 'BP_MordhauCharacter_C_ApplyRagdollForce::bone' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ApplyRagdollForce, Point) == 0x000010, "Member 'BP_MordhauCharacter_C_ApplyRagdollForce::Point' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ApplyRagdollForce, Source) == 0x000020, "Member 'BP_MordhauCharacter_C_ApplyRagdollForce::Source' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_ApplyRagdollForce, Agent) == 0x000028, "Member 'BP_MordhauCharacter_C_ApplyRagdollForce::Agent' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.OnPostDismember
// 0x0018 (0x0018 - 0x0000)
struct BP_MordhauCharacter_C_OnPostDismember final
{
public:
	class FName                                   bone;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASeparatedBodyPart*                     SeparatedPart;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Agent;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MordhauCharacter_C_OnPostDismember) == 0x000008, "Wrong alignment on BP_MordhauCharacter_C_OnPostDismember");
static_assert(sizeof(BP_MordhauCharacter_C_OnPostDismember) == 0x000018, "Wrong size on BP_MordhauCharacter_C_OnPostDismember");
static_assert(offsetof(BP_MordhauCharacter_C_OnPostDismember, bone) == 0x000000, "Member 'BP_MordhauCharacter_C_OnPostDismember::bone' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_OnPostDismember, SeparatedPart) == 0x000008, "Member 'BP_MordhauCharacter_C_OnPostDismember::SeparatedPart' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_OnPostDismember, Agent) == 0x000010, "Member 'BP_MordhauCharacter_C_OnPostDismember::Agent' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.OnCosmeticHit
// 0x0098 (0x0098 - 0x0000)
struct BP_MordhauCharacter_C_OnCosmeticHit final
{
public:
	EMordhauDamageType                            DamageType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SubType;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0004(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 Agent;                                             // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MordhauCharacter_C_OnCosmeticHit) == 0x000008, "Wrong alignment on BP_MordhauCharacter_C_OnCosmeticHit");
static_assert(sizeof(BP_MordhauCharacter_C_OnCosmeticHit) == 0x000098, "Wrong size on BP_MordhauCharacter_C_OnCosmeticHit");
static_assert(offsetof(BP_MordhauCharacter_C_OnCosmeticHit, DamageType) == 0x000000, "Member 'BP_MordhauCharacter_C_OnCosmeticHit::DamageType' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_OnCosmeticHit, SubType) == 0x000001, "Member 'BP_MordhauCharacter_C_OnCosmeticHit::SubType' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_OnCosmeticHit, Hit) == 0x000004, "Member 'BP_MordhauCharacter_C_OnCosmeticHit::Hit' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_OnCosmeticHit, Agent) == 0x000090, "Member 'BP_MordhauCharacter_C_OnCosmeticHit::Agent' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.OnDied
// 0x0030 (0x0030 - 0x0000)
struct BP_MordhauCharacter_C_OnDied final
{
public:
	float                                         Angle;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SubType;                                           // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   bone;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Agent;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MordhauCharacter_C_OnDied) == 0x000008, "Wrong alignment on BP_MordhauCharacter_C_OnDied");
static_assert(sizeof(BP_MordhauCharacter_C_OnDied) == 0x000030, "Wrong size on BP_MordhauCharacter_C_OnDied");
static_assert(offsetof(BP_MordhauCharacter_C_OnDied, Angle) == 0x000000, "Member 'BP_MordhauCharacter_C_OnDied::Angle' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_OnDied, Type) == 0x000004, "Member 'BP_MordhauCharacter_C_OnDied::Type' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_OnDied, SubType) == 0x000005, "Member 'BP_MordhauCharacter_C_OnDied::SubType' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_OnDied, bone) == 0x000008, "Member 'BP_MordhauCharacter_C_OnDied::bone' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_OnDied, Point) == 0x000010, "Member 'BP_MordhauCharacter_C_OnDied::Point' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_OnDied, Source) == 0x000020, "Member 'BP_MordhauCharacter_C_OnDied::Source' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_OnDied, Agent) == 0x000028, "Member 'BP_MordhauCharacter_C_OnDied::Agent' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.InpActEvt_Cycle Camera_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_MordhauCharacter_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_MordhauCharacter_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_MordhauCharacter_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_MordhauCharacter_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_MordhauCharacter_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_MordhauCharacter_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_MordhauCharacter_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.InpActEvt_Cycle Camera_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_MordhauCharacter_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_MordhauCharacter_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_MordhauCharacter_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_MordhauCharacter_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_MordhauCharacter_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_MordhauCharacter_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_MordhauCharacter_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.FindClimbSpot
// 0x07A0 (0x07A0 - 0x0000)
struct BP_MordhauCharacter_C_FindClimbSpot final
{
public:
	float                                         UpwardsCast;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Succeeded;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetSpot;                                        // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinHeightToClimb;                                  // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 FinalActorToCheck;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Stage3;                                            // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Stage2;                                            // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Stage1;                                            // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0070(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0080(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x0090(0x0010)(ConstParm, ReferenceParm)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauAIController*                   K2Node_DynamicCast_AsMordhau_AIController;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_3;                            // 0x00D8(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxJumpHeight_ReturnValue;             // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_4;                            // 0x0110(0x0010)(ConstParm, ReferenceParm)
	class AMordhauActor*                          K2Node_DynamicCast_AsMordhau_Actor;                // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_CapsuleTraceSingleByProfile_OutHit;       // 0x012C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleByProfile_ReturnValue;  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauCharacter*                      K2Node_DynamicCast_AsMordhau_Character;            // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseProgressActor_C*                K2Node_DynamicCast_AsBP_Base_Progress_Actor;       // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252[0x6];                                      // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AEnvironmentMovable*                    K2Node_DynamicCast_AsEnvironment_Movable;          // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetWalkableFloorZ_ReturnValue;         // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingleByProfile_OutHit_1;     // 0x02AC(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleByProfile_ReturnValue_1; // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x3];                                      // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_CapsuleTraceSingleByProfile_OutHit_2;     // 0x033C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleByProfile_ReturnValue_2; // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x03CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CB[0x1];                                      // 0x03CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x03D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x03EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x03F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0418(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0430(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x043C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44A[0x2];                                      // 0x044A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0454(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0460(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x046C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0478(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0498(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x04B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x04BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x04D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E2[0x6];                                      // 0x04E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanCharacterStepUp_ReturnValue;           // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F2[0x2];                                      // 0x04F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_3;                          // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_502[0x2];                                      // 0x0502(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_4;                          // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0520(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x052C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52D[0x3];                                      // 0x052D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0534(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x0535(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0536(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0537(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0538(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0544(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingleByProfile_OutHit_3;     // 0x055C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleByProfile_ReturnValue_3; // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x05EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x05F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x0604(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x0605(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_606[0x2];                                      // 0x0606(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x0610(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x061C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x0628(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x0634(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x0650(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x0664(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x0668(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x0674(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0680(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x068C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_4;            // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_691[0x3];                                      // 0x0691(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_CapsuleTraceSingleByProfile_OutHit_4;     // 0x0694(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleByProfile_ReturnValue_4; // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_4;            // 0x0721(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_4;         // 0x0722(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_723[0x1];                                      // 0x0723(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_4;                    // 0x0724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_4;                // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_4;                // 0x072C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_4;             // 0x0738(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_4;                  // 0x0744(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_4;            // 0x0750(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75C[0x4];                                      // 0x075C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_4;                 // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_4;                // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_4;            // 0x0770(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_4;             // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_4;                 // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_4;               // 0x0784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_4;              // 0x0788(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_4;                // 0x0794(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MordhauCharacter_C_FindClimbSpot) == 0x000008, "Wrong alignment on BP_MordhauCharacter_C_FindClimbSpot");
static_assert(sizeof(BP_MordhauCharacter_C_FindClimbSpot) == 0x0007A0, "Wrong size on BP_MordhauCharacter_C_FindClimbSpot");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, UpwardsCast) == 0x000000, "Member 'BP_MordhauCharacter_C_FindClimbSpot::UpwardsCast' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, Succeeded) == 0x000004, "Member 'BP_MordhauCharacter_C_FindClimbSpot::Succeeded' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, TargetSpot) == 0x000008, "Member 'BP_MordhauCharacter_C_FindClimbSpot::TargetSpot' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, MinHeightToClimb) == 0x000014, "Member 'BP_MordhauCharacter_C_FindClimbSpot::MinHeightToClimb' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, FinalActorToCheck) == 0x000018, "Member 'BP_MordhauCharacter_C_FindClimbSpot::FinalActorToCheck' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, Stage3) == 0x000020, "Member 'BP_MordhauCharacter_C_FindClimbSpot::Stage3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, Stage2) == 0x00002C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::Stage2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, Stage1) == 0x000038, "Member 'BP_MordhauCharacter_C_FindClimbSpot::Stage1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakVector_X) == 0x000048, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakVector_Y) == 0x00004C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakVector_Z) == 0x000050, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_MakeVector_ReturnValue) == 0x000054, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_MakeVector_ReturnValue_1) == 0x000060, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, Temp_object_Variable) == 0x000070, "Member 'BP_MordhauCharacter_C_FindClimbSpot::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, Temp_object_Variable_1) == 0x000080, "Member 'BP_MordhauCharacter_C_FindClimbSpot::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, Temp_object_Variable_2) == 0x000090, "Member 'BP_MordhauCharacter_C_FindClimbSpot::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_GetController_ReturnValue) == 0x0000A0, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, K2Node_DynamicCast_AsMordhau_AIController) == 0x0000A8, "Member 'BP_MordhauCharacter_C_FindClimbSpot::K2Node_DynamicCast_AsMordhau_AIController' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_MordhauCharacter_C_FindClimbSpot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000B4, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C0, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000CC, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, Temp_object_Variable_3) == 0x0000D8, "Member 'BP_MordhauCharacter_C_FindClimbSpot::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000E8, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000EC, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F0, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000FC, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000100, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_GetMaxJumpHeight_ReturnValue) == 0x000104, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_GetMaxJumpHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000108, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_FMax_ReturnValue) == 0x00010C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, Temp_object_Variable_4) == 0x000110, "Member 'BP_MordhauCharacter_C_FindClimbSpot::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, K2Node_DynamicCast_AsMordhau_Actor) == 0x000120, "Member 'BP_MordhauCharacter_C_FindClimbSpot::K2Node_DynamicCast_AsMordhau_Actor' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'BP_MordhauCharacter_C_FindClimbSpot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_CapsuleTraceSingleByProfile_OutHit) == 0x00012C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_CapsuleTraceSingleByProfile_OutHit' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_CapsuleTraceSingleByProfile_ReturnValue) == 0x0001B8, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_CapsuleTraceSingleByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Not_PreBool_ReturnValue) == 0x0001B9, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_bBlockingHit) == 0x0001BA, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001BB, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Time) == 0x0001BC, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Distance) == 0x0001C0, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Location) == 0x0001C4, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_ImpactPoint) == 0x0001D0, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Normal) == 0x0001DC, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_ImpactNormal) == 0x0001E8, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_PhysMat) == 0x0001F8, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitActor) == 0x000200, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitComponent) == 0x000208, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitBoneName) == 0x000210, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitItem) == 0x000218, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_FaceIndex) == 0x00021C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_TraceStart) == 0x000220, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_TraceEnd) == 0x00022C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, K2Node_DynamicCast_AsMordhau_Character) == 0x000238, "Member 'BP_MordhauCharacter_C_FindClimbSpot::K2Node_DynamicCast_AsMordhau_Character' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, K2Node_DynamicCast_bSuccess_2) == 0x000240, "Member 'BP_MordhauCharacter_C_FindClimbSpot::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, K2Node_DynamicCast_AsBP_Base_Progress_Actor) == 0x000248, "Member 'BP_MordhauCharacter_C_FindClimbSpot::K2Node_DynamicCast_AsBP_Base_Progress_Actor' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, K2Node_DynamicCast_bSuccess_3) == 0x000250, "Member 'BP_MordhauCharacter_C_FindClimbSpot::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_IsPlayerControlled_ReturnValue) == 0x000251, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, K2Node_DynamicCast_AsEnvironment_Movable) == 0x000258, "Member 'BP_MordhauCharacter_C_FindClimbSpot::K2Node_DynamicCast_AsEnvironment_Movable' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, K2Node_DynamicCast_bSuccess_4) == 0x000260, "Member 'BP_MordhauCharacter_C_FindClimbSpot::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_K2_GetWalkableFloorZ_ReturnValue) == 0x000264, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_K2_GetWalkableFloorZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000268, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakVector_X_1) == 0x000274, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakVector_Y_1) == 0x000278, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakVector_Z_1) == 0x00027C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000280, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Less_FloatFloat_ReturnValue) == 0x000284, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000288, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000294, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0002A0, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_CapsuleTraceSingleByProfile_OutHit_1) == 0x0002AC, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_CapsuleTraceSingleByProfile_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_CapsuleTraceSingleByProfile_ReturnValue_1) == 0x000338, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_CapsuleTraceSingleByProfile_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_CapsuleTraceSingleByProfile_OutHit_2) == 0x00033C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_CapsuleTraceSingleByProfile_OutHit_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_CapsuleTraceSingleByProfile_ReturnValue_2) == 0x0003C8, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_CapsuleTraceSingleByProfile_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0003C9, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0003CA, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Time_1) == 0x0003CC, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Distance_1) == 0x0003D0, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Location_1) == 0x0003D4, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0003E0, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Normal_1) == 0x0003EC, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0003F8, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_PhysMat_1) == 0x000408, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitActor_1) == 0x000410, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitComponent_1) == 0x000418, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitBoneName_1) == 0x000420, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitItem_1) == 0x000428, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_FaceIndex_1) == 0x00042C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_TraceStart_1) == 0x000430, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_TraceEnd_1) == 0x00043C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000448, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000449, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Time_2) == 0x00044C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Distance_2) == 0x000450, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Location_2) == 0x000454, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000460, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Normal_2) == 0x00046C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000478, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_PhysMat_2) == 0x000488, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitActor_2) == 0x000490, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitComponent_2) == 0x000498, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitBoneName_2) == 0x0004A0, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitItem_2) == 0x0004A8, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_FaceIndex_2) == 0x0004AC, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_TraceStart_2) == 0x0004B0, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_TraceEnd_2) == 0x0004BC, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakVector_X_2) == 0x0004C8, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakVector_Y_2) == 0x0004CC, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakVector_Z_2) == 0x0004D0, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_GetAttachParent_ReturnValue) == 0x0004D8, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0004E0, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_IsValid_ReturnValue) == 0x0004E1, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_GetOwner_ReturnValue) == 0x0004E8, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_CanCharacterStepUp_ReturnValue) == 0x0004F0, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_CanCharacterStepUp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Not_PreBool_ReturnValue_1) == 0x0004F1, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakVector_X_3) == 0x0004F4, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakVector_Y_3) == 0x0004F8, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakVector_Z_3) == 0x0004FC, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BooleanOR_ReturnValue) == 0x000500, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000501, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakVector_X_4) == 0x000504, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakVector_Y_4) == 0x000508, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakVector_Z_4) == 0x00050C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakVector_X_5) == 0x000510, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakVector_Y_5) == 0x000514, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakVector_Z_5) == 0x000518, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00051C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000520, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00052C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_VSize_ReturnValue) == 0x000530, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BooleanOR_ReturnValue_1) == 0x000534, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x000535, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BooleanOR_ReturnValue_2) == 0x000536, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BooleanOR_ReturnValue_3) == 0x000537, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000538, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000544, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000550, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_CapsuleTraceSingleByProfile_OutHit_3) == 0x00055C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_CapsuleTraceSingleByProfile_OutHit_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_CapsuleTraceSingleByProfile_ReturnValue_3) == 0x0005E8, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_CapsuleTraceSingleByProfile_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0005EC, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Add_VectorVector_ReturnValue_6) == 0x0005F8, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_bBlockingHit_3) == 0x000604, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x000605, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Time_3) == 0x000608, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Distance_3) == 0x00060C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Location_3) == 0x000610, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_ImpactPoint_3) == 0x00061C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Normal_3) == 0x000628, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_ImpactNormal_3) == 0x000634, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_PhysMat_3) == 0x000640, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitActor_3) == 0x000648, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitComponent_3) == 0x000650, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitBoneName_3) == 0x000658, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitItem_3) == 0x000660, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_FaceIndex_3) == 0x000664, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_TraceStart_3) == 0x000668, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_TraceEnd_3) == 0x000674, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000680, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_VSize_ReturnValue_1) == 0x00068C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_Less_FloatFloat_ReturnValue_4) == 0x000690, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_Less_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_CapsuleTraceSingleByProfile_OutHit_4) == 0x000694, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_CapsuleTraceSingleByProfile_OutHit_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_CapsuleTraceSingleByProfile_ReturnValue_4) == 0x000720, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_CapsuleTraceSingleByProfile_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_bBlockingHit_4) == 0x000721, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_bBlockingHit_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_bInitialOverlap_4) == 0x000722, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_bInitialOverlap_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Time_4) == 0x000724, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Time_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Distance_4) == 0x000728, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Distance_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Location_4) == 0x00072C, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Location_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_ImpactPoint_4) == 0x000738, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_ImpactPoint_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_Normal_4) == 0x000744, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_Normal_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_ImpactNormal_4) == 0x000750, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_ImpactNormal_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_PhysMat_4) == 0x000760, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_PhysMat_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitActor_4) == 0x000768, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitActor_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitComponent_4) == 0x000770, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitComponent_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitBoneName_4) == 0x000778, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitBoneName_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_HitItem_4) == 0x000780, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_HitItem_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_FaceIndex_4) == 0x000784, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_FaceIndex_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_TraceStart_4) == 0x000788, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_TraceStart_4' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_FindClimbSpot, CallFunc_BreakHitResult_TraceEnd_4) == 0x000794, "Member 'BP_MordhauCharacter_C_FindClimbSpot::CallFunc_BreakHitResult_TraceEnd_4' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.AttemptClimb
// 0x0200 (0x0200 - 0x0000)
struct BP_MordhauCharacter_C_AttemptClimb final
{
public:
	bool                                          Succeeded;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSlowClimb;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindClimbSpot_Succeeded;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_FindClimbSpot_TargetSpot;                 // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_MakeStruct_Vector_NetQuantize;              // 0x0068(0x000C)(NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauMotion*                         CallFunc_GetMotion_ReturnValue;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClimbingMotion*                        K2Node_DynamicCast_AsClimbing_Motion;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttackMotion*                          K2Node_DynamicCast_AsAttack_Motion;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParryMotion*                           K2Node_DynamicCast_AsParry_Motion;                 // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00B8(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_CapsuleTraceSingleByProfile_OutHit;       // 0x00C8(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleByProfile_ReturnValue;  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0157(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindClimbSpot_Succeeded_1;                // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_FindClimbSpot_TargetSpot_1;               // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MordhauCharacter_C_AttemptClimb) == 0x000008, "Wrong alignment on BP_MordhauCharacter_C_AttemptClimb");
static_assert(sizeof(BP_MordhauCharacter_C_AttemptClimb) == 0x000200, "Wrong size on BP_MordhauCharacter_C_AttemptClimb");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, Succeeded) == 0x000000, "Member 'BP_MordhauCharacter_C_AttemptClimb::Succeeded' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, IsSlowClimb) == 0x000001, "Member 'BP_MordhauCharacter_C_AttemptClimb::IsSlowClimb' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_GetVelocity_ReturnValue) == 0x000004, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakVector_X) == 0x00001C, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakVector_Y) == 0x000020, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakVector_Z) == 0x000024, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_Less_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakVector_X_1) == 0x00004C, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakVector_Y_1) == 0x000050, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakVector_Z_1) == 0x000054, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_FindClimbSpot_Succeeded) == 0x000058, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_FindClimbSpot_Succeeded' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_FindClimbSpot_TargetSpot) == 0x00005C, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_FindClimbSpot_TargetSpot' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, K2Node_MakeStruct_Vector_NetQuantize) == 0x000068, "Member 'BP_MordhauCharacter_C_AttemptClimb::K2Node_MakeStruct_Vector_NetQuantize' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_GetMotion_ReturnValue) == 0x000078, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_GetMotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, K2Node_DynamicCast_AsClimbing_Motion) == 0x000088, "Member 'BP_MordhauCharacter_C_AttemptClimb::K2Node_DynamicCast_AsClimbing_Motion' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_MordhauCharacter_C_AttemptClimb::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, K2Node_DynamicCast_AsAttack_Motion) == 0x000098, "Member 'BP_MordhauCharacter_C_AttemptClimb::K2Node_DynamicCast_AsAttack_Motion' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'BP_MordhauCharacter_C_AttemptClimb::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, K2Node_DynamicCast_AsParry_Motion) == 0x0000A8, "Member 'BP_MordhauCharacter_C_AttemptClimb::K2Node_DynamicCast_AsParry_Motion' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'BP_MordhauCharacter_C_AttemptClimb::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B1, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, Temp_object_Variable) == 0x0000B8, "Member 'BP_MordhauCharacter_C_AttemptClimb::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_CapsuleTraceSingleByProfile_OutHit) == 0x0000C8, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_CapsuleTraceSingleByProfile_OutHit' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_CapsuleTraceSingleByProfile_ReturnValue) == 0x000154, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_CapsuleTraceSingleByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BooleanOR_ReturnValue) == 0x000155, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakHitResult_bBlockingHit) == 0x000156, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakHitResult_bInitialOverlap) == 0x000157, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakHitResult_Time) == 0x000158, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakHitResult_Distance) == 0x00015C, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakHitResult_Location) == 0x000160, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakHitResult_ImpactPoint) == 0x00016C, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakHitResult_Normal) == 0x000178, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakHitResult_ImpactNormal) == 0x000184, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakHitResult_PhysMat) == 0x000190, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakHitResult_HitActor) == 0x000198, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakHitResult_HitComponent) == 0x0001A0, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakHitResult_HitBoneName) == 0x0001A8, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakHitResult_HitItem) == 0x0001B0, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakHitResult_FaceIndex) == 0x0001B4, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakHitResult_TraceStart) == 0x0001B8, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakHitResult_TraceEnd) == 0x0001C4, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001D0, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_FindClimbSpot_Succeeded_1) == 0x0001DC, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_FindClimbSpot_Succeeded_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_FindClimbSpot_TargetSpot_1) == 0x0001E0, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_FindClimbSpot_TargetSpot_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakVector_X_2) == 0x0001EC, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakVector_Y_2) == 0x0001F0, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_BreakVector_Z_2) == 0x0001F4, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AttemptClimb, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001F8, "Member 'BP_MordhauCharacter_C_AttemptClimb::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.CalculateLedgeOffsetAndNormal
// 0x01D0 (0x01D0 - 0x0000)
struct BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal final
{
public:
	class UClimbingMotion*                        ClimbingMotion;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutOffset;                                         // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutNormal;                                         // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingleByProfile_OutHit;       // 0x006C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleByProfile_ReturnValue;  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FB[0x1];                                       // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal) == 0x000008, "Wrong alignment on BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal");
static_assert(sizeof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal) == 0x0001D0, "Wrong size on BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, ClimbingMotion) == 0x000000, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::ClimbingMotion' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, OutOffset) == 0x000008, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::OutOffset' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, OutNormal) == 0x000014, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::OutNormal' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, Temp_object_Variable) == 0x000020, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_GetActorForwardVector_ReturnValue) == 0x000030, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00003C, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000048, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_Add_VectorVector_ReturnValue) == 0x000054, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000060, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_CapsuleTraceSingleByProfile_OutHit) == 0x00006C, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_CapsuleTraceSingleByProfile_OutHit' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_CapsuleTraceSingleByProfile_ReturnValue) == 0x0000F8, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_CapsuleTraceSingleByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F9, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000FA, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakHitResult_Location) == 0x000104, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakHitResult_ImpactPoint) == 0x000110, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakHitResult_Normal) == 0x00011C, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakHitResult_ImpactNormal) == 0x000128, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakHitResult_PhysMat) == 0x000138, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakHitResult_HitActor) == 0x000140, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakHitResult_HitComponent) == 0x000148, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakHitResult_HitBoneName) == 0x000150, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakHitResult_HitItem) == 0x000158, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakHitResult_FaceIndex) == 0x00015C, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakHitResult_TraceStart) == 0x000160, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakHitResult_TraceEnd) == 0x00016C, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000178, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000184, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakVector_X) == 0x000190, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakVector_Y) == 0x000194, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakVector_Z) == 0x000198, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakVector_X_1) == 0x00019C, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakVector_Y_1) == 0x0001A0, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_BreakVector_Z_1) == 0x0001A4, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_MakeVector_ReturnValue) == 0x0001A8, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_MakeVector_ReturnValue_1) == 0x0001B4, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal, CallFunc_Normal_ReturnValue) == 0x0001C0, "Member 'BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.TryClimbing
// 0x0028 (0x0028 - 0x0000)
struct BP_MordhauCharacter_C_TryClimbing final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAirborne_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanJump_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AttemptClimb_Succeeded;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MordhauCharacter_C_TryClimbing) == 0x000004, "Wrong alignment on BP_MordhauCharacter_C_TryClimbing");
static_assert(sizeof(BP_MordhauCharacter_C_TryClimbing) == 0x000028, "Wrong size on BP_MordhauCharacter_C_TryClimbing");
static_assert(offsetof(BP_MordhauCharacter_C_TryClimbing, ReturnValue) == 0x000000, "Member 'BP_MordhauCharacter_C_TryClimbing::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_TryClimbing, CallFunc_GetVelocity_ReturnValue) == 0x000004, "Member 'BP_MordhauCharacter_C_TryClimbing::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_TryClimbing, CallFunc_IsAirborne_ReturnValue) == 0x000010, "Member 'BP_MordhauCharacter_C_TryClimbing::CallFunc_IsAirborne_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_TryClimbing, CallFunc_BreakVector_X) == 0x000014, "Member 'BP_MordhauCharacter_C_TryClimbing::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_TryClimbing, CallFunc_BreakVector_Y) == 0x000018, "Member 'BP_MordhauCharacter_C_TryClimbing::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_TryClimbing, CallFunc_BreakVector_Z) == 0x00001C, "Member 'BP_MordhauCharacter_C_TryClimbing::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_TryClimbing, CallFunc_CanJump_ReturnValue) == 0x000020, "Member 'BP_MordhauCharacter_C_TryClimbing::CallFunc_CanJump_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_TryClimbing, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000021, "Member 'BP_MordhauCharacter_C_TryClimbing::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_TryClimbing, CallFunc_AttemptClimb_Succeeded) == 0x000022, "Member 'BP_MordhauCharacter_C_TryClimbing::CallFunc_AttemptClimb_Succeeded' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_TryClimbing, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'BP_MordhauCharacter_C_TryClimbing::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_TryClimbing, CallFunc_BooleanOR_ReturnValue) == 0x000024, "Member 'BP_MordhauCharacter_C_TryClimbing::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.AddRagdollImpulse
// 0x0038 (0x0038 - 0x0000)
struct BP_MordhauCharacter_C_AddRagdollImpulse final
{
public:
	struct FVector                                Impulse;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   bone;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBoneMass_ReturnValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MordhauCharacter_C_AddRagdollImpulse) == 0x000004, "Wrong alignment on BP_MordhauCharacter_C_AddRagdollImpulse");
static_assert(sizeof(BP_MordhauCharacter_C_AddRagdollImpulse) == 0x000038, "Wrong size on BP_MordhauCharacter_C_AddRagdollImpulse");
static_assert(offsetof(BP_MordhauCharacter_C_AddRagdollImpulse, Impulse) == 0x000000, "Member 'BP_MordhauCharacter_C_AddRagdollImpulse::Impulse' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AddRagdollImpulse, Location) == 0x00000C, "Member 'BP_MordhauCharacter_C_AddRagdollImpulse::Location' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AddRagdollImpulse, bone) == 0x000018, "Member 'BP_MordhauCharacter_C_AddRagdollImpulse::bone' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AddRagdollImpulse, CallFunc_GetBoneMass_ReturnValue) == 0x000020, "Member 'BP_MordhauCharacter_C_AddRagdollImpulse::CallFunc_GetBoneMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AddRagdollImpulse, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_MordhauCharacter_C_AddRagdollImpulse::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AddRagdollImpulse, CallFunc_FMax_ReturnValue) == 0x000028, "Member 'BP_MordhauCharacter_C_AddRagdollImpulse::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_AddRagdollImpulse, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00002C, "Member 'BP_MordhauCharacter_C_AddRagdollImpulse::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.GetOutOfBoundsText
// 0x0020 (0x0020 - 0x0000)
struct BP_MordhauCharacter_C_GetOutOfBoundsText final
{
public:
	class FText                                   Header;                                            // 0x0000(0x0018)(Parm, OutParm)
	bool                                          CallFunc_IsInEnemyTeamArea_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MordhauCharacter_C_GetOutOfBoundsText) == 0x000008, "Wrong alignment on BP_MordhauCharacter_C_GetOutOfBoundsText");
static_assert(sizeof(BP_MordhauCharacter_C_GetOutOfBoundsText) == 0x000020, "Wrong size on BP_MordhauCharacter_C_GetOutOfBoundsText");
static_assert(offsetof(BP_MordhauCharacter_C_GetOutOfBoundsText, Header) == 0x000000, "Member 'BP_MordhauCharacter_C_GetOutOfBoundsText::Header' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GetOutOfBoundsText, CallFunc_IsInEnemyTeamArea_ReturnValue) == 0x000018, "Member 'BP_MordhauCharacter_C_GetOutOfBoundsText::CallFunc_IsInEnemyTeamArea_ReturnValue' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.GetOutOfBoundsSubtext
// 0x0088 (0x0088 - 0x0000)
struct BP_MordhauCharacter_C_GetOutOfBoundsSubtext final
{
public:
	class FText                                   Subtext;                                           // 0x0000(0x0018)(Parm, OutParm)
	float                                         CallFunc_GetOutOfBoundsTimeUntilDeath_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
};
static_assert(alignof(BP_MordhauCharacter_C_GetOutOfBoundsSubtext) == 0x000008, "Wrong alignment on BP_MordhauCharacter_C_GetOutOfBoundsSubtext");
static_assert(sizeof(BP_MordhauCharacter_C_GetOutOfBoundsSubtext) == 0x000088, "Wrong size on BP_MordhauCharacter_C_GetOutOfBoundsSubtext");
static_assert(offsetof(BP_MordhauCharacter_C_GetOutOfBoundsSubtext, Subtext) == 0x000000, "Member 'BP_MordhauCharacter_C_GetOutOfBoundsSubtext::Subtext' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GetOutOfBoundsSubtext, CallFunc_GetOutOfBoundsTimeUntilDeath_ReturnValue) == 0x000018, "Member 'BP_MordhauCharacter_C_GetOutOfBoundsSubtext::CallFunc_GetOutOfBoundsTimeUntilDeath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GetOutOfBoundsSubtext, CallFunc_FCeil_ReturnValue) == 0x00001C, "Member 'BP_MordhauCharacter_C_GetOutOfBoundsSubtext::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GetOutOfBoundsSubtext, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_MordhauCharacter_C_GetOutOfBoundsSubtext::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GetOutOfBoundsSubtext, K2Node_MakeArray_Array) == 0x000060, "Member 'BP_MordhauCharacter_C_GetOutOfBoundsSubtext::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GetOutOfBoundsSubtext, CallFunc_Format_ReturnValue) == 0x000070, "Member 'BP_MordhauCharacter_C_GetOutOfBoundsSubtext::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.SpawnBloodPoolUnderneath
// 0x0198 (0x0198 - 0x0000)
struct BP_MordhauCharacter_C_SpawnBloodPoolUnderneath final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowBlood_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0050(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UDecalComponent*                        CallFunc_SpawnBloodDecalAtLocation_ReturnValue;    // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath) == 0x000008, "Wrong alignment on BP_MordhauCharacter_C_SpawnBloodPoolUnderneath");
static_assert(sizeof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath) == 0x000198, "Wrong size on BP_MordhauCharacter_C_SpawnBloodPoolUnderneath");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_ShouldShowBlood_ReturnValue) == 0x00000C, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_ShouldShowBlood_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, Temp_object_Variable) == 0x000010, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_GetSocketLocation_ReturnValue) == 0x000030, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00003C, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00004C, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000050, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0000DC, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x0000E0, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000E4, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_BreakHitResult_bBlockingHit) == 0x0000E8, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000E9, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_BreakHitResult_Time) == 0x0000EC, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_BreakHitResult_Distance) == 0x0000F0, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_BreakHitResult_Location) == 0x0000F4, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_BreakHitResult_ImpactPoint) == 0x000100, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_BreakHitResult_Normal) == 0x00010C, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_BreakHitResult_ImpactNormal) == 0x000118, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_BreakHitResult_PhysMat) == 0x000128, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_BreakHitResult_HitActor) == 0x000130, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_BreakHitResult_HitComponent) == 0x000138, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_BreakHitResult_HitBoneName) == 0x000140, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_BreakHitResult_HitItem) == 0x000148, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_BreakHitResult_FaceIndex) == 0x00014C, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_BreakHitResult_TraceStart) == 0x000150, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_BreakHitResult_TraceEnd) == 0x00015C, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000168, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_MakeRotFromX_ReturnValue) == 0x000174, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_SpawnBloodDecalAtLocation_ReturnValue) == 0x000180, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_SpawnBloodDecalAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_IsValid_ReturnValue) == 0x000188, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_SpawnBloodPoolUnderneath, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000190, "Member 'BP_MordhauCharacter_C_SpawnBloodPoolUnderneath::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.IsAnUpgrade
// 0x0010 (0x0010 - 0x0000)
struct BP_MordhauCharacter_C_IsAnUpgrade final
{
public:
	class ABP_WearablePickup_C*                   Wearable;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MordhauCharacter_C_IsAnUpgrade) == 0x000008, "Wrong alignment on BP_MordhauCharacter_C_IsAnUpgrade");
static_assert(sizeof(BP_MordhauCharacter_C_IsAnUpgrade) == 0x000010, "Wrong size on BP_MordhauCharacter_C_IsAnUpgrade");
static_assert(offsetof(BP_MordhauCharacter_C_IsAnUpgrade, Wearable) == 0x000000, "Member 'BP_MordhauCharacter_C_IsAnUpgrade::Wearable' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_IsAnUpgrade, Return) == 0x000008, "Member 'BP_MordhauCharacter_C_IsAnUpgrade::Return' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.OnBeforeReceiveWearablePickup
// 0x0008 (0x0008 - 0x0000)
struct BP_MordhauCharacter_C_OnBeforeReceiveWearablePickup final
{
public:
	class ABP_WearablePickup_C*                   WearablePickup;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MordhauCharacter_C_OnBeforeReceiveWearablePickup) == 0x000008, "Wrong alignment on BP_MordhauCharacter_C_OnBeforeReceiveWearablePickup");
static_assert(sizeof(BP_MordhauCharacter_C_OnBeforeReceiveWearablePickup) == 0x000008, "Wrong size on BP_MordhauCharacter_C_OnBeforeReceiveWearablePickup");
static_assert(offsetof(BP_MordhauCharacter_C_OnBeforeReceiveWearablePickup, WearablePickup) == 0x000000, "Member 'BP_MordhauCharacter_C_OnBeforeReceiveWearablePickup::WearablePickup' has a wrong offset!");

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.GiveFists
// 0x0090 (0x0090 - 0x0000)
struct BP_MordhauCharacter_C_GiveFists final
{
public:
	class UClass*                                 DesiredFists;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FoundIdx;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauWeapon*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PickUpToSlot_ReturnValue;                 // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasPerk_ReturnValue;                      // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauEquipment*                      CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauEquipment*                      CallFunc_DropEquipment_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MordhauCharacter_C_GiveFists) == 0x000010, "Wrong alignment on BP_MordhauCharacter_C_GiveFists");
static_assert(sizeof(BP_MordhauCharacter_C_GiveFists) == 0x000090, "Wrong size on BP_MordhauCharacter_C_GiveFists");
static_assert(offsetof(BP_MordhauCharacter_C_GiveFists, DesiredFists) == 0x000000, "Member 'BP_MordhauCharacter_C_GiveFists::DesiredFists' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GiveFists, FoundIdx) == 0x000008, "Member 'BP_MordhauCharacter_C_GiveFists::FoundIdx' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GiveFists, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_MordhauCharacter_C_GiveFists::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GiveFists, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BP_MordhauCharacter_C_GiveFists::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GiveFists, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_MordhauCharacter_C_GiveFists::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GiveFists, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'BP_MordhauCharacter_C_GiveFists::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GiveFists, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'BP_MordhauCharacter_C_GiveFists::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GiveFists, CallFunc_MakeLiteralByte_ReturnValue) == 0x00005C, "Member 'BP_MordhauCharacter_C_GiveFists::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GiveFists, CallFunc_Conv_IntToByte_ReturnValue) == 0x00005D, "Member 'BP_MordhauCharacter_C_GiveFists::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GiveFists, CallFunc_PickUpToSlot_ReturnValue) == 0x00005E, "Member 'BP_MordhauCharacter_C_GiveFists::CallFunc_PickUpToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GiveFists, CallFunc_HasPerk_ReturnValue) == 0x00005F, "Member 'BP_MordhauCharacter_C_GiveFists::CallFunc_HasPerk_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GiveFists, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_MordhauCharacter_C_GiveFists::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GiveFists, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_MordhauCharacter_C_GiveFists::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GiveFists, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_MordhauCharacter_C_GiveFists::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GiveFists, CallFunc_DropEquipment_ReturnValue) == 0x000070, "Member 'BP_MordhauCharacter_C_GiveFists::CallFunc_DropEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GiveFists, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BP_MordhauCharacter_C_GiveFists::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GiveFists, CallFunc_GetObjectClass_ReturnValue) == 0x000080, "Member 'BP_MordhauCharacter_C_GiveFists::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MordhauCharacter_C_GiveFists, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000088, "Member 'BP_MordhauCharacter_C_GiveFists::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

}

