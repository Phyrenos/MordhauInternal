#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DemonHordePlayerController

#include "Basic.hpp"

#include "BP_DemonHordePlayerController_classes.hpp"
#include "BP_DemonHordePlayerController_parameters.hpp"


namespace SDK
{

// Function BP_DemonHordePlayerController.BP_DemonHordePlayerController_C.ExecuteUbergraph_BP_DemonHordePlayerController
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordePlayerController_C::ExecuteUbergraph_BP_DemonHordePlayerController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordePlayerController_C", "ExecuteUbergraph_BP_DemonHordePlayerController");

	Params::BP_DemonHordePlayerController_C_ExecuteUbergraph_BP_DemonHordePlayerController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordePlayerController.BP_DemonHordePlayerController_C.AdminGiveSpecialWeapon
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordePlayerController_C::AdminGiveSpecialWeapon(int32 Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordePlayerController_C", "AdminGiveSpecialWeapon");

	Params::BP_DemonHordePlayerController_C_AdminGiveSpecialWeapon Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordePlayerController.BP_DemonHordePlayerController_C.AdminBlessCurrentWeapon
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_DemonHordePlayerController_C::AdminBlessCurrentWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordePlayerController_C", "AdminBlessCurrentWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordePlayerController.BP_DemonHordePlayerController_C.ReceivePossess
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            PossessedPawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordePlayerController_C::ReceivePossess(class APawn* PossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordePlayerController_C", "ReceivePossess");

	Params::BP_DemonHordePlayerController_C_ReceivePossess Parms{};

	Parms.PossessedPawn = PossessedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordePlayerController.BP_DemonHordePlayerController_C.RequestGetDifficultyClient
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_DemonHordePlayerController_C::RequestGetDifficultyClient(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordePlayerController_C", "RequestGetDifficultyClient");

	Params::BP_DemonHordePlayerController_C_RequestGetDifficultyClient Parms{};

	Parms.String = std::move(String);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordePlayerController.BP_DemonHordePlayerController_C.RequestGetDifficulty
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_DemonHordePlayerController_C::RequestGetDifficulty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordePlayerController_C", "RequestGetDifficulty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordePlayerController.BP_DemonHordePlayerController_C.GetDifficulty
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Params_0                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_DemonHordePlayerController_C::GetDifficulty(const TArray<class FString>& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordePlayerController_C", "GetDifficulty");

	Params::BP_DemonHordePlayerController_C_GetDifficulty Parms{};

	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordePlayerController.BP_DemonHordePlayerController_C.RequestGetPresitgeClient
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_DemonHordePlayerController_C::RequestGetPresitgeClient(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordePlayerController_C", "RequestGetPresitgeClient");

	Params::BP_DemonHordePlayerController_C_RequestGetPresitgeClient Parms{};

	Parms.String = std::move(String);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordePlayerController.BP_DemonHordePlayerController_C.RequestGetPrestige
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_DemonHordePlayerController_C::RequestGetPrestige()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordePlayerController_C", "RequestGetPrestige");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordePlayerController.BP_DemonHordePlayerController_C.GetPrestige
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Params_0                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_DemonHordePlayerController_C::GetPrestige(const TArray<class FString>& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordePlayerController_C", "GetPrestige");

	Params::BP_DemonHordePlayerController_C_GetPrestige Parms{};

	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordePlayerController.BP_DemonHordePlayerController_C.RequestSetPrestige
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DifficultyMod                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordePlayerController_C::RequestSetPrestige(float DifficultyMod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordePlayerController_C", "RequestSetPrestige");

	Params::BP_DemonHordePlayerController_C_RequestSetPrestige Parms{};

	Parms.DifficultyMod = DifficultyMod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordePlayerController.BP_DemonHordePlayerController_C.SetPrestige
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Params_0                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_DemonHordePlayerController_C::SetPrestige(const TArray<class FString>& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordePlayerController_C", "SetPrestige");

	Params::BP_DemonHordePlayerController_C_SetPrestige Parms{};

	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordePlayerController.BP_DemonHordePlayerController_C.ObjectiveSkillPointServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_DemonHordePlayerController_C::ObjectiveSkillPointServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordePlayerController_C", "ObjectiveSkillPointServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordePlayerController.BP_DemonHordePlayerController_C.ClientReceiveScoreBP
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EScoreFeedReason                        Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   ReasonParam                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ScoreAmount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AMordhauPlayerState*              AssociatedPlayer                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordePlayerController_C::ClientReceiveScoreBP(EScoreFeedReason Reason, uint8 ReasonParam, float ScoreAmount, class AMordhauPlayerState* AssociatedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordePlayerController_C", "ClientReceiveScoreBP");

	Params::BP_DemonHordePlayerController_C_ClientReceiveScoreBP Parms{};

	Parms.Reason = Reason;
	Parms.ReasonParam = ReasonParam;
	Parms.ScoreAmount = ScoreAmount;
	Parms.AssociatedPlayer = AssociatedPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordePlayerController.BP_DemonHordePlayerController_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordePlayerController_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordePlayerController_C", "ReceiveTick");

	Params::BP_DemonHordePlayerController_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordePlayerController.BP_DemonHordePlayerController_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DemonHordePlayerController_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordePlayerController_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

