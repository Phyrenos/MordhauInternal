#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FriendsListViewEntry

#include "Basic.hpp"

#include "BP_FriendsListViewEntry_classes.hpp"
#include "BP_FriendsListViewEntry_parameters.hpp"


namespace SDK
{

// Function BP_FriendsListViewEntry.BP_FriendsListViewEntry_C.ExecuteUbergraph_BP_FriendsListViewEntry
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FriendsListViewEntry_C::ExecuteUbergraph_BP_FriendsListViewEntry(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FriendsListViewEntry_C", "ExecuteUbergraph_BP_FriendsListViewEntry");

	Params::BP_FriendsListViewEntry_C_ExecuteUbergraph_BP_FriendsListViewEntry Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FriendsListViewEntry.BP_FriendsListViewEntry_C.BP_OnItemSelectionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FriendsListViewEntry_C::BP_OnItemSelectionChanged(bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FriendsListViewEntry_C", "BP_OnItemSelectionChanged");

	Params::BP_FriendsListViewEntry_C_BP_OnItemSelectionChanged Parms{};

	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FriendsListViewEntry.BP_FriendsListViewEntry_C.BP_OnEntryReleased
// (Event, Protected, BlueprintEvent)

void UBP_FriendsListViewEntry_C::BP_OnEntryReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FriendsListViewEntry_C", "BP_OnEntryReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FriendsListViewEntry.BP_FriendsListViewEntry_C.OnListItemObjectSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UObject*                          ListItemObject                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FriendsListViewEntry_C::OnListItemObjectSet(class UObject* ListItemObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FriendsListViewEntry_C", "OnListItemObjectSet");

	Params::BP_FriendsListViewEntry_C_OnListItemObjectSet Parms{};

	Parms.ListItemObject = ListItemObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FriendsListViewEntry.BP_FriendsListViewEntry_C.OptionSelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Option                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_FriendsListViewEntry_C::OptionSelected(const class FString& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FriendsListViewEntry_C", "OptionSelected");

	Params::BP_FriendsListViewEntry_C_OptionSelected Parms{};

	Parms.Option = std::move(Option);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FriendsListViewEntry.BP_FriendsListViewEntry_C.CreateWrapper
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FString, class FText>        InOptions                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_FriendsListViewEntry_C::CreateWrapper(const TMap<class FString, class FText>& InOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FriendsListViewEntry_C", "CreateWrapper");

	Params::BP_FriendsListViewEntry_C_CreateWrapper Parms{};

	Parms.InOptions = std::move(InOptions);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FriendsListViewEntry.BP_FriendsListViewEntry_C.BndEvt__BP_FriendsListEntry_ContextMenuButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_FriendsListViewEntry_C::BndEvt__BP_FriendsListEntry_ContextMenuButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FriendsListViewEntry_C", "BndEvt__BP_FriendsListEntry_ContextMenuButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FriendsListViewEntry.BP_FriendsListViewEntry_C.CreateWrapper_Complex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FString, class FText>        InOptions                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// TArray<class UTexture2D*>               Icons                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FLinearColor>             Colors                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             Title                                                  (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_FriendsListViewEntry_C::CreateWrapper_Complex(const TMap<class FString, class FText>& InOptions, const TArray<class UTexture2D*>& Icons, const TArray<struct FLinearColor>& Colors, const class FText& Title)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FriendsListViewEntry_C", "CreateWrapper_Complex");

	Params::BP_FriendsListViewEntry_C_CreateWrapper_Complex Parms{};

	Parms.InOptions = std::move(InOptions);
	Parms.Icons = std::move(Icons);
	Parms.Colors = std::move(Colors);
	Parms.Title = std::move(Title);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FriendsListViewEntry.BP_FriendsListViewEntry_C.BP_OnItemExpansionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsExpanded                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FriendsListViewEntry_C::BP_OnItemExpansionChanged(bool bIsExpanded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FriendsListViewEntry_C", "BP_OnItemExpansionChanged");

	Params::BP_FriendsListViewEntry_C_BP_OnItemExpansionChanged Parms{};

	Parms.bIsExpanded = bIsExpanded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FriendsListViewEntry.BP_FriendsListViewEntry_C.Update
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayFabPlayer                   Player_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// E_FriendsListEntryType                  Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FriendsListViewEntry_C::Update(const struct FPlayFabPlayer& Player_0, E_FriendsListEntryType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FriendsListViewEntry_C", "Update");

	Params::BP_FriendsListViewEntry_C_Update Parms{};

	Parms.Player_0 = std::move(Player_0);
	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FriendsListViewEntry.BP_FriendsListViewEntry_C.InvokeContextMenu
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_FriendsListViewEntry_C::InvokeContextMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FriendsListViewEntry_C", "InvokeContextMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FriendsListViewEntry.BP_FriendsListViewEntry_C.OnContextMenuSelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_FriendsListViewEntry_C::OnContextMenuSelected(const class FString& Selection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FriendsListViewEntry_C", "OnContextMenuSelected");

	Params::BP_FriendsListViewEntry_C_OnContextMenuSelected Parms{};

	Parms.Selection = std::move(Selection);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FriendsListViewEntry.BP_FriendsListViewEntry_C.ResetEntry
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_FriendsListViewEntry_C::ResetEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FriendsListViewEntry_C", "ResetEntry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FriendsListViewEntry.BP_FriendsListViewEntry_C.DistanceFromTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        TargetPoint                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FriendsListViewEntry_C::DistanceFromTarget(const struct FVector2D& TargetPoint, float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FriendsListViewEntry_C", "DistanceFromTarget");

	Params::BP_FriendsListViewEntry_C_DistanceFromTarget Parms{};

	Parms.TargetPoint = std::move(TargetPoint);

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BP_FriendsListViewEntry.BP_FriendsListViewEntry_C.DisableContextTooltipsIfConsole
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_FriendsListViewEntry_C::DisableContextTooltipsIfConsole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FriendsListViewEntry_C", "DisableContextTooltipsIfConsole");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FriendsListViewEntry.BP_FriendsListViewEntry_C.GetContextTitle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ContextTitle                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_FriendsListViewEntry_C::GetContextTitle(int32 ID, class FString* ContextTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FriendsListViewEntry_C", "GetContextTitle");

	Params::BP_FriendsListViewEntry_C_GetContextTitle Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);

	if (ContextTitle != nullptr)
		*ContextTitle = std::move(Parms.ContextTitle);
}


// Function BP_FriendsListViewEntry.BP_FriendsListViewEntry_C.FindSelectionID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FriendsListViewEntry_C::FindSelectionID(const class FString& Selection, int32* ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FriendsListViewEntry_C", "FindSelectionID");

	Params::BP_FriendsListViewEntry_C_FindSelectionID Parms{};

	Parms.Selection = std::move(Selection);

	UObject::ProcessEvent(Func, &Parms);

	if (ID != nullptr)
		*ID = Parms.ID;
}


// Function BP_FriendsListViewEntry.BP_FriendsListViewEntry_C.InitializeOptions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FString, class FText>        OptionsMap                                             (Parm, OutParm)

void UBP_FriendsListViewEntry_C::InitializeOptions(TMap<class FString, class FText>* OptionsMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FriendsListViewEntry_C", "InitializeOptions");

	Params::BP_FriendsListViewEntry_C_InitializeOptions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OptionsMap != nullptr)
		*OptionsMap = std::move(Parms.OptionsMap);
}

}

