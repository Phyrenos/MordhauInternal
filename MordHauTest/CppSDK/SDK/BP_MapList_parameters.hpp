#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapList

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_MapList.BP_MapList_C.ExecuteUbergraph_BP_MapList
// 0x0120 (0x0120 - 0x0000)
struct BP_MapList_C_ExecuteUbergraph_BP_MapList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0040(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00B0(0x0070)(ConstParm)
};
static_assert(alignof(BP_MapList_C_ExecuteUbergraph_BP_MapList) == 0x000008, "Wrong alignment on BP_MapList_C_ExecuteUbergraph_BP_MapList");
static_assert(sizeof(BP_MapList_C_ExecuteUbergraph_BP_MapList) == 0x000120, "Wrong size on BP_MapList_C_ExecuteUbergraph_BP_MapList");
static_assert(offsetof(BP_MapList_C_ExecuteUbergraph_BP_MapList, EntryPoint) == 0x000000, "Member 'BP_MapList_C_ExecuteUbergraph_BP_MapList::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MapList_C_ExecuteUbergraph_BP_MapList, K2Node_Event_MyGeometry) == 0x000004, "Member 'BP_MapList_C_ExecuteUbergraph_BP_MapList::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MapList_C_ExecuteUbergraph_BP_MapList, K2Node_Event_MouseEvent_1) == 0x000040, "Member 'BP_MapList_C_ExecuteUbergraph_BP_MapList::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(BP_MapList_C_ExecuteUbergraph_BP_MapList, K2Node_Event_MouseEvent) == 0x0000B0, "Member 'BP_MapList_C_ExecuteUbergraph_BP_MapList::K2Node_Event_MouseEvent' has a wrong offset!");

// Function BP_MapList.BP_MapList_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct BP_MapList_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_MapList_C_OnMouseLeave) == 0x000008, "Wrong alignment on BP_MapList_C_OnMouseLeave");
static_assert(sizeof(BP_MapList_C_OnMouseLeave) == 0x000070, "Wrong size on BP_MapList_C_OnMouseLeave");
static_assert(offsetof(BP_MapList_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'BP_MapList_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function BP_MapList.BP_MapList_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct BP_MapList_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_MapList_C_OnMouseEnter) == 0x000008, "Wrong alignment on BP_MapList_C_OnMouseEnter");
static_assert(sizeof(BP_MapList_C_OnMouseEnter) == 0x0000A8, "Wrong size on BP_MapList_C_OnMouseEnter");
static_assert(offsetof(BP_MapList_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'BP_MapList_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MapList_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'BP_MapList_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function BP_MapList.BP_MapList_C.AddEntry
// 0x0048 (0x0048 - 0x0000)
struct BP_MapList_C_AddEntry final
{
public:
	class FString                                 GameModeMapName;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UGameModeMetadata*                      GameModeMetadata;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMapMetadata*                           MapMetadata;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UBP_MapEntryLocalPlay_C* Entry)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MapEntryLocalPlay_C*                CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UWrapBoxSlot*                           CallFunc_AddChildToWrapBox_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapList_C_AddEntry) == 0x000008, "Wrong alignment on BP_MapList_C_AddEntry");
static_assert(sizeof(BP_MapList_C_AddEntry) == 0x000048, "Wrong size on BP_MapList_C_AddEntry");
static_assert(offsetof(BP_MapList_C_AddEntry, GameModeMapName) == 0x000000, "Member 'BP_MapList_C_AddEntry::GameModeMapName' has a wrong offset!");
static_assert(offsetof(BP_MapList_C_AddEntry, GameModeMetadata) == 0x000010, "Member 'BP_MapList_C_AddEntry::GameModeMetadata' has a wrong offset!");
static_assert(offsetof(BP_MapList_C_AddEntry, MapMetadata) == 0x000018, "Member 'BP_MapList_C_AddEntry::MapMetadata' has a wrong offset!");
static_assert(offsetof(BP_MapList_C_AddEntry, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_MapList_C_AddEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MapList_C_AddEntry, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'BP_MapList_C_AddEntry::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapList_C_AddEntry, CallFunc_Create_ReturnValue) == 0x000038, "Member 'BP_MapList_C_AddEntry::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapList_C_AddEntry, CallFunc_AddChildToWrapBox_ReturnValue) == 0x000040, "Member 'BP_MapList_C_AddEntry::CallFunc_AddChildToWrapBox_ReturnValue' has a wrong offset!");

// Function BP_MapList.BP_MapList_C.OnEntrySelected
// 0x0010 (0x0010 - 0x0000)
struct BP_MapList_C_OnEntrySelected final
{
public:
	class UBP_MapEntryLocalPlay_C*                Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapList_C_OnEntrySelected) == 0x000008, "Wrong alignment on BP_MapList_C_OnEntrySelected");
static_assert(sizeof(BP_MapList_C_OnEntrySelected) == 0x000010, "Wrong size on BP_MapList_C_OnEntrySelected");
static_assert(offsetof(BP_MapList_C_OnEntrySelected, Entry) == 0x000000, "Member 'BP_MapList_C_OnEntrySelected::Entry' has a wrong offset!");
static_assert(offsetof(BP_MapList_C_OnEntrySelected, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_MapList_C_OnEntrySelected::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MapList.BP_MapList_C.SelectFirstEntry
// 0x0020 (0x0020 - 0x0000)
struct BP_MapList_C_SelectFirstEntry final
{
public:
	bool                                          CallFunc_HasAnyChildren_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MapEntry_C*                         K2Node_DynamicCast_AsBP_Map_Entry;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapList_C_SelectFirstEntry) == 0x000008, "Wrong alignment on BP_MapList_C_SelectFirstEntry");
static_assert(sizeof(BP_MapList_C_SelectFirstEntry) == 0x000020, "Wrong size on BP_MapList_C_SelectFirstEntry");
static_assert(offsetof(BP_MapList_C_SelectFirstEntry, CallFunc_HasAnyChildren_ReturnValue) == 0x000000, "Member 'BP_MapList_C_SelectFirstEntry::CallFunc_HasAnyChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapList_C_SelectFirstEntry, CallFunc_GetChildAt_ReturnValue) == 0x000008, "Member 'BP_MapList_C_SelectFirstEntry::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapList_C_SelectFirstEntry, K2Node_DynamicCast_AsBP_Map_Entry) == 0x000010, "Member 'BP_MapList_C_SelectFirstEntry::K2Node_DynamicCast_AsBP_Map_Entry' has a wrong offset!");
static_assert(offsetof(BP_MapList_C_SelectFirstEntry, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MapList_C_SelectFirstEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MapList.BP_MapList_C.GetSelectedEntry
// 0x0008 (0x0008 - 0x0000)
struct BP_MapList_C_GetSelectedEntry final
{
public:
	class UBP_MapEntryLocalPlay_C*                SelectedEntry_0;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapList_C_GetSelectedEntry) == 0x000008, "Wrong alignment on BP_MapList_C_GetSelectedEntry");
static_assert(sizeof(BP_MapList_C_GetSelectedEntry) == 0x000008, "Wrong size on BP_MapList_C_GetSelectedEntry");
static_assert(offsetof(BP_MapList_C_GetSelectedEntry, SelectedEntry_0) == 0x000000, "Member 'BP_MapList_C_GetSelectedEntry::SelectedEntry_0' has a wrong offset!");

}

