#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SelectionMenu

#include "Basic.hpp"

#include "E_SelectionMenuLayoutTypes_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_SelectionMenu.BP_SelectionMenu_C
// 0x00A8 (0x0308 - 0x0260)
class UBP_SelectionMenu_C : public UUserWidget
{
public:
	TMulticastInlineDelegate<void()>              Back_Button_Clicked;                               // 0x0260(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   Header_Text;                                       // 0x0270(0x0018)(Edit, BlueprintVisible)
	TArray<class UBP_CustomizationItemEntry_C*>   Entries;                                           // 0x0288(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMulticastInlineDelegate<void(E_SelectionMenuLayoutTypes New_Layout_Type)> Set_Layout_Type;                                   // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class UBP_CustomizationItemEntry_C*>   Filtered_Entries;                                  // 0x02A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UBP_SelectionLayout_C*                  Active_Layout;                                     // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CustomizationItemEntry_C*           Selected_Entry;                                    // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              Set_Active;                                        // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   Name_Filter;                                       // 0x02D8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	E_SelectionMenuLayoutTypes                    Layout_Type;                                       // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Breadcrumb;                                        // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)

public:
	void Add_Entry(class UBP_CustomizationItemEntry_C* Entry, bool Add_to_Entries_Array);
	void Clear_Child_Entries(bool Clear_Entries_Array, bool Clear_Filtered_Entries_Array);
	void UpdateEntries();
	void SortByCost(class UObject* ObjA, class UObject* ObjB, bool* Ret_Val);
	void SortBySelected(class UObject* ObjA, class UObject* ObjB, bool* Ret_Val);
	void SortByName(class UObject* ObjA, class UObject* ObjB, bool* Ret_Val);
	void SortById(class UObject* ObjA, class UObject* ObjB, bool* Ret_Val);
	void Filter_and_Sort_Entries_by_Function_Delegate(const TDelegate<void(class UObject* Obj, bool* RetVal)>& Filter_FuncDel, const TDelegate<void(class UObject* ObjA, class UObject* ObjB, bool* RetVal)>& Sort_FuncDel, bool isAscending, bool Filter_Recursively, bool Skip_Sorting);
	void FilterByName(class UObject* ObjA, bool* Ret_Val);
	void Remove_Entry(class UBP_CustomizationItemEntry_C* Entry);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SelectionMenu_C">();
	}
	static class UBP_SelectionMenu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SelectionMenu_C>();
	}
};
static_assert(alignof(UBP_SelectionMenu_C) == 0x000008, "Wrong alignment on UBP_SelectionMenu_C");
static_assert(sizeof(UBP_SelectionMenu_C) == 0x000308, "Wrong size on UBP_SelectionMenu_C");
static_assert(offsetof(UBP_SelectionMenu_C, Back_Button_Clicked) == 0x000260, "Member 'UBP_SelectionMenu_C::Back_Button_Clicked' has a wrong offset!");
static_assert(offsetof(UBP_SelectionMenu_C, Header_Text) == 0x000270, "Member 'UBP_SelectionMenu_C::Header_Text' has a wrong offset!");
static_assert(offsetof(UBP_SelectionMenu_C, Entries) == 0x000288, "Member 'UBP_SelectionMenu_C::Entries' has a wrong offset!");
static_assert(offsetof(UBP_SelectionMenu_C, Set_Layout_Type) == 0x000298, "Member 'UBP_SelectionMenu_C::Set_Layout_Type' has a wrong offset!");
static_assert(offsetof(UBP_SelectionMenu_C, Filtered_Entries) == 0x0002A8, "Member 'UBP_SelectionMenu_C::Filtered_Entries' has a wrong offset!");
static_assert(offsetof(UBP_SelectionMenu_C, Active_Layout) == 0x0002B8, "Member 'UBP_SelectionMenu_C::Active_Layout' has a wrong offset!");
static_assert(offsetof(UBP_SelectionMenu_C, Selected_Entry) == 0x0002C0, "Member 'UBP_SelectionMenu_C::Selected_Entry' has a wrong offset!");
static_assert(offsetof(UBP_SelectionMenu_C, Set_Active) == 0x0002C8, "Member 'UBP_SelectionMenu_C::Set_Active' has a wrong offset!");
static_assert(offsetof(UBP_SelectionMenu_C, Name_Filter) == 0x0002D8, "Member 'UBP_SelectionMenu_C::Name_Filter' has a wrong offset!");
static_assert(offsetof(UBP_SelectionMenu_C, Layout_Type) == 0x0002F0, "Member 'UBP_SelectionMenu_C::Layout_Type' has a wrong offset!");
static_assert(offsetof(UBP_SelectionMenu_C, Breadcrumb) == 0x0002F8, "Member 'UBP_SelectionMenu_C::Breadcrumb' has a wrong offset!");

}

