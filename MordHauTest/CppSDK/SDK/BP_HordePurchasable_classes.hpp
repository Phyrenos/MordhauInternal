#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordePurchasable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MordhauActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HordePurchasable.BP_HordePurchasable_C
// 0x0060 (0x0440 - 0x03E0)
class ABP_HordePurchasable_C : public ABP_MordhauActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ULODSkeletalMeshComponent*              LODSkeletalMesh;                                   // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Cost;                                              // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAvailable;                                       // 0x03FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 PurchasableClass;                                  // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Initialized;                                       // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauWidgetComponent*                Widget;                                            // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAmmoRestock;                                     // 0x0418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsValid;                                           // 0x0419(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41A[0x6];                                      // 0x041A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Name_0;                                            // 0x0420(0x0018)(Edit, BlueprintVisible)
	int32                                         AmmoRestockAmount;                                 // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_HordePurchasable(int32 EntryPoint);
	void OnInteractionStart(class AMordhauCharacter* Character);
	void ReceiveBeginPlay();
	void SetAvailability(bool NewAvailable);
	void SpawnItem(class ABP_BattleRoyaleCharacter_C* ForCharacter);
	void InitializeDisplay();
	void UpdateVisuals();

	bool CanInteract(class AMordhauCharacter* Character) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HordePurchasable_C">();
	}
	static class ABP_HordePurchasable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HordePurchasable_C>();
	}
};
static_assert(alignof(ABP_HordePurchasable_C) == 0x000010, "Wrong alignment on ABP_HordePurchasable_C");
static_assert(sizeof(ABP_HordePurchasable_C) == 0x000440, "Wrong size on ABP_HordePurchasable_C");
static_assert(offsetof(ABP_HordePurchasable_C, UberGraphFrame) == 0x0003E0, "Member 'ABP_HordePurchasable_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HordePurchasable_C, StaticMesh) == 0x0003E8, "Member 'ABP_HordePurchasable_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_HordePurchasable_C, LODSkeletalMesh) == 0x0003F0, "Member 'ABP_HordePurchasable_C::LODSkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_HordePurchasable_C, Cost) == 0x0003F8, "Member 'ABP_HordePurchasable_C::Cost' has a wrong offset!");
static_assert(offsetof(ABP_HordePurchasable_C, IsAvailable) == 0x0003FC, "Member 'ABP_HordePurchasable_C::IsAvailable' has a wrong offset!");
static_assert(offsetof(ABP_HordePurchasable_C, PurchasableClass) == 0x000400, "Member 'ABP_HordePurchasable_C::PurchasableClass' has a wrong offset!");
static_assert(offsetof(ABP_HordePurchasable_C, Initialized) == 0x000408, "Member 'ABP_HordePurchasable_C::Initialized' has a wrong offset!");
static_assert(offsetof(ABP_HordePurchasable_C, Widget) == 0x000410, "Member 'ABP_HordePurchasable_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_HordePurchasable_C, IsAmmoRestock) == 0x000418, "Member 'ABP_HordePurchasable_C::IsAmmoRestock' has a wrong offset!");
static_assert(offsetof(ABP_HordePurchasable_C, IsValid) == 0x000419, "Member 'ABP_HordePurchasable_C::IsValid' has a wrong offset!");
static_assert(offsetof(ABP_HordePurchasable_C, Name_0) == 0x000420, "Member 'ABP_HordePurchasable_C::Name_0' has a wrong offset!");
static_assert(offsetof(ABP_HordePurchasable_C, AmmoRestockAmount) == 0x000438, "Member 'ABP_HordePurchasable_C::AmmoRestockAmount' has a wrong offset!");

}

