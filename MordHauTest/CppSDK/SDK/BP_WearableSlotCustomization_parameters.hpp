#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WearableSlotCustomization

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Mordhau_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.ExecuteUbergraph_BP_WearableSlotCustomization
// 0x0040 (0x0040 - 0x0000)
struct BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CustomizationItemEntry_C*           K2Node_ComponentBoundEvent_Entry;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWearableSlot                                 Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CustomizationItemEntry_C*           K2Node_ComponentBoundEvent_Entry_1;                // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization) == 0x000008, "Wrong alignment on BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization");
static_assert(sizeof(BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization) == 0x000040, "Wrong size on BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization");
static_assert(offsetof(BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization, EntryPoint) == 0x000000, "Member 'BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization, K2Node_ComponentBoundEvent_Entry) == 0x000008, "Member 'BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization::K2Node_ComponentBoundEvent_Entry' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization, Temp_byte_Variable) == 0x000010, "Member 'BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization, Temp_object_Variable) == 0x000018, "Member 'BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization, Temp_object_Variable_1) == 0x000020, "Member 'BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization, K2Node_Event_IsDesignTime) == 0x000028, "Member 'BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization, K2Node_ComponentBoundEvent_Entry_1) == 0x000030, "Member 'BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization::K2Node_ComponentBoundEvent_Entry_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization, K2Node_Select_Default) == 0x000038, "Member 'BP_WearableSlotCustomization_C_ExecuteUbergraph_BP_WearableSlotCustomization::K2Node_Select_Default' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.BndEvt__BP_WearableSlotCustomization_BP_WearableItemEntry_K2Node_ComponentBoundEvent_4_OnHover__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_WearableSlotCustomization_C_BndEvt__BP_WearableSlotCustomization_BP_WearableItemEntry_K2Node_ComponentBoundEvent_4_OnHover__DelegateSignature final
{
public:
	class UBP_CustomizationItemEntry_C*           Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSlotCustomization_C_BndEvt__BP_WearableSlotCustomization_BP_WearableItemEntry_K2Node_ComponentBoundEvent_4_OnHover__DelegateSignature) == 0x000008, "Wrong alignment on BP_WearableSlotCustomization_C_BndEvt__BP_WearableSlotCustomization_BP_WearableItemEntry_K2Node_ComponentBoundEvent_4_OnHover__DelegateSignature");
static_assert(sizeof(BP_WearableSlotCustomization_C_BndEvt__BP_WearableSlotCustomization_BP_WearableItemEntry_K2Node_ComponentBoundEvent_4_OnHover__DelegateSignature) == 0x000008, "Wrong size on BP_WearableSlotCustomization_C_BndEvt__BP_WearableSlotCustomization_BP_WearableItemEntry_K2Node_ComponentBoundEvent_4_OnHover__DelegateSignature");
static_assert(offsetof(BP_WearableSlotCustomization_C_BndEvt__BP_WearableSlotCustomization_BP_WearableItemEntry_K2Node_ComponentBoundEvent_4_OnHover__DelegateSignature, Entry) == 0x000000, "Member 'BP_WearableSlotCustomization_C_BndEvt__BP_WearableSlotCustomization_BP_WearableItemEntry_K2Node_ComponentBoundEvent_4_OnHover__DelegateSignature::Entry' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.BndEvt__BP_WearableSlotCustomization_BP_WearableItemEntry_K2Node_ComponentBoundEvent_2_OnClick__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_WearableSlotCustomization_C_BndEvt__BP_WearableSlotCustomization_BP_WearableItemEntry_K2Node_ComponentBoundEvent_2_OnClick__DelegateSignature final
{
public:
	class UBP_CustomizationItemEntry_C*           Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSlotCustomization_C_BndEvt__BP_WearableSlotCustomization_BP_WearableItemEntry_K2Node_ComponentBoundEvent_2_OnClick__DelegateSignature) == 0x000008, "Wrong alignment on BP_WearableSlotCustomization_C_BndEvt__BP_WearableSlotCustomization_BP_WearableItemEntry_K2Node_ComponentBoundEvent_2_OnClick__DelegateSignature");
static_assert(sizeof(BP_WearableSlotCustomization_C_BndEvt__BP_WearableSlotCustomization_BP_WearableItemEntry_K2Node_ComponentBoundEvent_2_OnClick__DelegateSignature) == 0x000008, "Wrong size on BP_WearableSlotCustomization_C_BndEvt__BP_WearableSlotCustomization_BP_WearableItemEntry_K2Node_ComponentBoundEvent_2_OnClick__DelegateSignature");
static_assert(offsetof(BP_WearableSlotCustomization_C_BndEvt__BP_WearableSlotCustomization_BP_WearableItemEntry_K2Node_ComponentBoundEvent_2_OnClick__DelegateSignature, Entry) == 0x000000, "Member 'BP_WearableSlotCustomization_C_BndEvt__BP_WearableSlotCustomization_BP_WearableItemEntry_K2Node_ComponentBoundEvent_2_OnClick__DelegateSignature::Entry' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_WearableSlotCustomization_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearableSlotCustomization_C_PreConstruct) == 0x000001, "Wrong alignment on BP_WearableSlotCustomization_C_PreConstruct");
static_assert(sizeof(BP_WearableSlotCustomization_C_PreConstruct) == 0x000001, "Wrong size on BP_WearableSlotCustomization_C_PreConstruct");
static_assert(offsetof(BP_WearableSlotCustomization_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_WearableSlotCustomization_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.GetValues
// 0x0188 (0x0188 - 0x0000)
struct BP_WearableSlotCustomization_C_GetValues final
{
public:
	class FText                                   WearableName_0;                                    // 0x0000(0x0018)(Parm, OutParm)
	uint8                                         WearableColor1Index;                               // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         WearableColor2Index;                               // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pattern;                                           // 0x001A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PatternLength;                                     // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         WearableColors1;                                   // 0x0020(0x0010)(Parm, OutParm)
	TArray<class UClass*>                         WearableColors2;                                   // 0x0030(0x0010)(Parm, OutParm)
	bool                                          HasColor1_0;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasColor2_0;                                       // 0x0041(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         ArmorClass;                                        // 0x0042(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Cost_0;                                            // 0x0044(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemDefID;                                         // 0x0048(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemRarity                                   ItemRarity;                                        // 0x004C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 WearableClass;                                     // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Item_Icon;                                         // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Local_Wearable_Class;                              // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundColor2;                                       // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FoundColor1;                                       // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPatternInfo>                   Temp_struct_Variable;                              // 0x0070(0x0010)(ReferenceParm)
	TArray<uint8>                                 Temp_byte_Variable;                                // 0x0080(0x0010)(ReferenceParm)
	uint8                                         CallFunc_Array_Get_Item;                           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Array_Get_Item_1;                         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauSingleton*                      CallFunc_GetMordhauSingleton_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMordhauColorItemTable                 CallFunc_Array_Get_Item_2;                         // 0x00A8(0x0028)()
	struct FMordhauColorItemTable                 CallFunc_Array_Get_Item_3;                         // 0x00D0(0x0028)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPatternInfo>                   Temp_struct_Variable_1;                            // 0x0100(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWearableCustomization                 CallFunc_Array_Get_Item_4;                         // 0x0120(0x0040)()
	TSubclassOf<class UMordhauWearable>           CallFunc_GetWearableClass_ReturnValue;             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Array_Get_Item_5;                         // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPatternInfo                           CallFunc_Array_Get_Item_6;                         // 0x0170(0x0010)(NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Array_Get_Item_7;                         // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSlotCustomization_C_GetValues) == 0x000008, "Wrong alignment on BP_WearableSlotCustomization_C_GetValues");
static_assert(sizeof(BP_WearableSlotCustomization_C_GetValues) == 0x000188, "Wrong size on BP_WearableSlotCustomization_C_GetValues");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, WearableName_0) == 0x000000, "Member 'BP_WearableSlotCustomization_C_GetValues::WearableName_0' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, WearableColor1Index) == 0x000018, "Member 'BP_WearableSlotCustomization_C_GetValues::WearableColor1Index' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, WearableColor2Index) == 0x000019, "Member 'BP_WearableSlotCustomization_C_GetValues::WearableColor2Index' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, Pattern) == 0x00001A, "Member 'BP_WearableSlotCustomization_C_GetValues::Pattern' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, PatternLength) == 0x00001C, "Member 'BP_WearableSlotCustomization_C_GetValues::PatternLength' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, WearableColors1) == 0x000020, "Member 'BP_WearableSlotCustomization_C_GetValues::WearableColors1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, WearableColors2) == 0x000030, "Member 'BP_WearableSlotCustomization_C_GetValues::WearableColors2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, HasColor1_0) == 0x000040, "Member 'BP_WearableSlotCustomization_C_GetValues::HasColor1_0' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, HasColor2_0) == 0x000041, "Member 'BP_WearableSlotCustomization_C_GetValues::HasColor2_0' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, ArmorClass) == 0x000042, "Member 'BP_WearableSlotCustomization_C_GetValues::ArmorClass' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, Cost_0) == 0x000044, "Member 'BP_WearableSlotCustomization_C_GetValues::Cost_0' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, ItemDefID) == 0x000048, "Member 'BP_WearableSlotCustomization_C_GetValues::ItemDefID' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, ItemRarity) == 0x00004C, "Member 'BP_WearableSlotCustomization_C_GetValues::ItemRarity' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, WearableClass) == 0x000050, "Member 'BP_WearableSlotCustomization_C_GetValues::WearableClass' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, Item_Icon) == 0x000058, "Member 'BP_WearableSlotCustomization_C_GetValues::Item_Icon' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, Local_Wearable_Class) == 0x000060, "Member 'BP_WearableSlotCustomization_C_GetValues::Local_Wearable_Class' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, FoundColor2) == 0x000068, "Member 'BP_WearableSlotCustomization_C_GetValues::FoundColor2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, FoundColor1) == 0x000069, "Member 'BP_WearableSlotCustomization_C_GetValues::FoundColor1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, Temp_struct_Variable) == 0x000070, "Member 'BP_WearableSlotCustomization_C_GetValues::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, Temp_byte_Variable) == 0x000080, "Member 'BP_WearableSlotCustomization_C_GetValues::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000094, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00009C, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_GetMordhauSingleton_ReturnValue) == 0x0000A0, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_GetMordhauSingleton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_Array_Get_Item_2) == 0x0000A8, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_Array_Get_Item_3) == 0x0000D0, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_IsValidClass_ReturnValue) == 0x0000F9, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, Temp_struct_Variable_1) == 0x000100, "Member 'BP_WearableSlotCustomization_C_GetValues::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_IsValid_ReturnValue_1) == 0x000110, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_Array_Length_ReturnValue) == 0x000114, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000118, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_Array_Get_Item_4) == 0x000120, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_GetWearableClass_ReturnValue) == 0x000160, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_GetWearableClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x000168, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_Array_Get_Item_5) == 0x00016C, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_Array_Get_Item_6) == 0x000170, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000180, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetValues, CallFunc_Array_Get_Item_7) == 0x000181, "Member 'BP_WearableSlotCustomization_C_GetValues::CallFunc_Array_Get_Item_7' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.RebuildWidget
// 0x03D0 (0x03D0 - 0x0000)
struct BP_WearableSlotCustomization_C_RebuildWidget final
{
public:
	TArray<class UClass*>                         WearableClasses;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	class FText                                   TextToAdd;                                         // 0x0010(0x0018)(Edit, BlueprintVisible)
	class UClass*                                 Temp_class_Variable;                               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_3;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_4;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_5;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWearableSlot                                 Temp_byte_Variable;                                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_8;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_9;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_10;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_11;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_6;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_7;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWearableSlot                                 Temp_byte_Variable_1;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EWearableSlot, struct FWearableCustomization> Temp_byte_Variable_2;                              // 0x0100(0x0050)()
	class UClass*                                 CallFunc_Array_Get_Item_2;                         // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EWearableSlot, struct FWearableCustomization> Temp_byte_Variable_3;                              // 0x0158(0x0050)()
	TArray<TSubclassOf<class UMordhauWearable>>   CallFunc_GetWearableClasses_ReturnValue;           // 0x01A8(0x0010)(ReferenceParm)
	struct FWearableCustomization                 CallFunc_Map_Find_Value;                           // 0x01B8(0x0040)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UMordhauWearable>>   CallFunc_GetWearableClasses_ReturnValue_1;         // 0x0200(0x0010)(ReferenceParm)
	struct FWearableCustomization                 CallFunc_Map_Find_Value_1;                         // 0x0210(0x0040)()
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_3;                         // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSubclassOf<class UMordhauWearable>>   CallFunc_GetWearableClasses_ReturnValue_2;         // 0x0260(0x0010)(ReferenceParm)
	class UClass*                                 CallFunc_Array_Get_Item_4;                         // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EWearableSlot, struct FWearableCustomization> Temp_byte_Variable_4;                              // 0x0278(0x0050)()
	struct FWearableCustomization                 CallFunc_Map_Find_Value_2;                         // 0x02C8(0x0040)()
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_5;                         // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default_1;                           // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B[0x1];                                      // 0x033B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetValues_WearableName;                   // 0x0348(0x0018)()
	uint8                                         CallFunc_GetValues_WearableColor1Index;            // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValues_WearableColor2Index;            // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValues_Pattern;                        // 0x0362(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363[0x1];                                      // 0x0363(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetValues_PatternLength;                  // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         CallFunc_GetValues_WearableColors1;                // 0x0368(0x0010)(ReferenceParm)
	TArray<class UClass*>                         CallFunc_GetValues_WearableColors2;                // 0x0378(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetValues_HasColor1;                      // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetValues_HasColor2;                      // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValues_ArmorClass;                     // 0x038A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38B[0x1];                                      // 0x038B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetValues_Cost;                           // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetValues_ItemDefID;                      // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemRarity                                   CallFunc_GetValues_ItemRarity;                     // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395[0x3];                                      // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetValues_WearableClass;                  // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetValues_Item_Icon;                      // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA[0x6];                                      // 0x03AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_3;                           // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearableSlotCustomization_C_RebuildWidget) == 0x000008, "Wrong alignment on BP_WearableSlotCustomization_C_RebuildWidget");
static_assert(sizeof(BP_WearableSlotCustomization_C_RebuildWidget) == 0x0003D0, "Wrong size on BP_WearableSlotCustomization_C_RebuildWidget");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, WearableClasses) == 0x000000, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::WearableClasses' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, TextToAdd) == 0x000010, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::TextToAdd' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_class_Variable) == 0x000028, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_class_Variable_1) == 0x000030, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_class_Variable_2) == 0x000038, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_class_Variable_3) == 0x000040, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_class_Variable_4) == 0x000048, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_class_Variable_5) == 0x000050, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_class_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_bool_Variable) == 0x000058, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_byte_Variable) == 0x000059, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_object_Variable) == 0x000060, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_object_Variable_1) == 0x000068, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_object_Variable_2) == 0x000070, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_object_Variable_3) == 0x000078, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_object_Variable_4) == 0x000080, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_object_Variable_5) == 0x000088, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_object_Variable_6) == 0x000090, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_object_Variable_7) == 0x000098, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_object_Variable_8) == 0x0000A0, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_object_Variable_9) == 0x0000A8, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_object_Variable_10) == 0x0000B0, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_bool_Variable_1) == 0x0000B8, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_object_Variable_11) == 0x0000C0, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_class_Variable_6) == 0x0000C8, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_class_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_class_Variable_7) == 0x0000D0, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_class_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_byte_Variable_1) == 0x0000D8, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000E0, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000F8, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_byte_Variable_2) == 0x000100, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_Array_Get_Item_2) == 0x000150, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_byte_Variable_3) == 0x000158, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_GetWearableClasses_ReturnValue) == 0x0001A8, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_GetWearableClasses_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_Map_Find_Value) == 0x0001B8, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_Map_Find_ReturnValue) == 0x0001F8, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_GetWearableClasses_ReturnValue_1) == 0x000200, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_GetWearableClasses_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_Map_Find_Value_1) == 0x000210, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_Map_Find_ReturnValue_1) == 0x000250, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_Array_Get_Item_3) == 0x000258, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_GetWearableClasses_ReturnValue_2) == 0x000260, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_GetWearableClasses_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_Array_Get_Item_4) == 0x000270, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, Temp_byte_Variable_4) == 0x000278, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_Map_Find_Value_2) == 0x0002C8, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_Map_Find_ReturnValue_2) == 0x000308, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, K2Node_Select_Default) == 0x000310, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000318, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_Array_Get_Item_5) == 0x000320, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000328, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, K2Node_Select_Default_1) == 0x000330, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000338, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_BooleanOR_ReturnValue) == 0x000339, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_BooleanOR_ReturnValue_1) == 0x00033A, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00033C, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, K2Node_SwitchEnum_CmpSuccess) == 0x000340, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000341, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_GetValues_WearableName) == 0x000348, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_GetValues_WearableName' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_GetValues_WearableColor1Index) == 0x000360, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_GetValues_WearableColor1Index' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_GetValues_WearableColor2Index) == 0x000361, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_GetValues_WearableColor2Index' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_GetValues_Pattern) == 0x000362, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_GetValues_Pattern' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_GetValues_PatternLength) == 0x000364, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_GetValues_PatternLength' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_GetValues_WearableColors1) == 0x000368, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_GetValues_WearableColors1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_GetValues_WearableColors2) == 0x000378, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_GetValues_WearableColors2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_GetValues_HasColor1) == 0x000388, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_GetValues_HasColor1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_GetValues_HasColor2) == 0x000389, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_GetValues_HasColor2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_GetValues_ArmorClass) == 0x00038A, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_GetValues_ArmorClass' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_GetValues_Cost) == 0x00038C, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_GetValues_Cost' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_GetValues_ItemDefID) == 0x000390, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_GetValues_ItemDefID' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_GetValues_ItemRarity) == 0x000394, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_GetValues_ItemRarity' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_GetValues_WearableClass) == 0x000398, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_GetValues_WearableClass' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_GetValues_Item_Icon) == 0x0003A0, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_GetValues_Item_Icon' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0003A8, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_BooleanAND_ReturnValue) == 0x0003A9, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, K2Node_Select_Default_2) == 0x0003B0, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_IsValid_ReturnValue) == 0x0003B8, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, K2Node_Select_Default_3) == 0x0003C0, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_RebuildWidget, CallFunc_Greater_IntInt_ReturnValue) == 0x0003C8, "Member 'BP_WearableSlotCustomization_C_RebuildWidget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.Get_MainSlotText_Visibility_0
// 0x0001 (0x0001 - 0x0000)
struct BP_WearableSlotCustomization_C_Get_MainSlotText_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSlotCustomization_C_Get_MainSlotText_Visibility_0) == 0x000001, "Wrong alignment on BP_WearableSlotCustomization_C_Get_MainSlotText_Visibility_0");
static_assert(sizeof(BP_WearableSlotCustomization_C_Get_MainSlotText_Visibility_0) == 0x000001, "Wrong size on BP_WearableSlotCustomization_C_Get_MainSlotText_Visibility_0");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_MainSlotText_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_WearableSlotCustomization_C_Get_MainSlotText_Visibility_0::ReturnValue' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.Get_SubSlotText_Visibility_0
// 0x0006 (0x0006 - 0x0000)
struct BP_WearableSlotCustomization_C_Get_SubSlotText_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearableSlotCustomization_C_Get_SubSlotText_Visibility_0) == 0x000001, "Wrong alignment on BP_WearableSlotCustomization_C_Get_SubSlotText_Visibility_0");
static_assert(sizeof(BP_WearableSlotCustomization_C_Get_SubSlotText_Visibility_0) == 0x000006, "Wrong size on BP_WearableSlotCustomization_C_Get_SubSlotText_Visibility_0");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_SubSlotText_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_WearableSlotCustomization_C_Get_SubSlotText_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_SubSlotText_Visibility_0, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_WearableSlotCustomization_C_Get_SubSlotText_Visibility_0::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_SubSlotText_Visibility_0, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BP_WearableSlotCustomization_C_Get_SubSlotText_Visibility_0::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_SubSlotText_Visibility_0, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000003, "Member 'BP_WearableSlotCustomization_C_Get_SubSlotText_Visibility_0::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_SubSlotText_Visibility_0, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'BP_WearableSlotCustomization_C_Get_SubSlotText_Visibility_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_SubSlotText_Visibility_0, CallFunc_BooleanOR_ReturnValue_1) == 0x000005, "Member 'BP_WearableSlotCustomization_C_Get_SubSlotText_Visibility_0::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.Get_armorTier_ToolTipText
// 0x00F8 (0x00F8 - 0x0000)
struct BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_GetValues_WearableName;                   // 0x0018(0x0018)()
	uint8                                         CallFunc_GetValues_WearableColor1Index;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValues_WearableColor2Index;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValues_Pattern;                        // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetValues_PatternLength;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         CallFunc_GetValues_WearableColors1;                // 0x0038(0x0010)(ReferenceParm)
	TArray<class UClass*>                         CallFunc_GetValues_WearableColors2;                // 0x0048(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetValues_HasColor1;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetValues_HasColor2;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValues_ArmorClass;                     // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetValues_Cost;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetValues_ItemDefID;                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemRarity                                   CallFunc_GetValues_ItemRarity;                     // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetValues_WearableClass;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetValues_Item_Icon;                      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0078(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0018)()
};
static_assert(alignof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText) == 0x000008, "Wrong alignment on BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText");
static_assert(sizeof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText) == 0x0000F8, "Wrong size on BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, ReturnValue) == 0x000000, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, CallFunc_GetValues_WearableName) == 0x000018, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::CallFunc_GetValues_WearableName' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, CallFunc_GetValues_WearableColor1Index) == 0x000030, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::CallFunc_GetValues_WearableColor1Index' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, CallFunc_GetValues_WearableColor2Index) == 0x000031, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::CallFunc_GetValues_WearableColor2Index' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, CallFunc_GetValues_Pattern) == 0x000032, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::CallFunc_GetValues_Pattern' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, CallFunc_GetValues_PatternLength) == 0x000034, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::CallFunc_GetValues_PatternLength' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, CallFunc_GetValues_WearableColors1) == 0x000038, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::CallFunc_GetValues_WearableColors1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, CallFunc_GetValues_WearableColors2) == 0x000048, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::CallFunc_GetValues_WearableColors2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, CallFunc_GetValues_HasColor1) == 0x000058, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::CallFunc_GetValues_HasColor1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, CallFunc_GetValues_HasColor2) == 0x000059, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::CallFunc_GetValues_HasColor2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, CallFunc_GetValues_ArmorClass) == 0x00005A, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::CallFunc_GetValues_ArmorClass' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, CallFunc_GetValues_Cost) == 0x00005C, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::CallFunc_GetValues_Cost' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, CallFunc_GetValues_ItemDefID) == 0x000060, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::CallFunc_GetValues_ItemDefID' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, CallFunc_GetValues_ItemRarity) == 0x000064, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::CallFunc_GetValues_ItemRarity' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, CallFunc_GetValues_WearableClass) == 0x000068, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::CallFunc_GetValues_WearableClass' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, CallFunc_GetValues_Item_Icon) == 0x000070, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::CallFunc_GetValues_Item_Icon' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, CallFunc_Conv_IntToText_ReturnValue) == 0x000078, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, K2Node_MakeArray_Array) == 0x0000D0, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'BP_WearableSlotCustomization_C_Get_armorTier_ToolTipText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.Get_TextBlock_26_Text_0
// 0x0098 (0x0098 - 0x0000)
struct BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_GetValues_WearableName;                   // 0x0018(0x0018)()
	uint8                                         CallFunc_GetValues_WearableColor1Index;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValues_WearableColor2Index;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValues_Pattern;                        // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetValues_PatternLength;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         CallFunc_GetValues_WearableColors1;                // 0x0038(0x0010)(ReferenceParm)
	TArray<class UClass*>                         CallFunc_GetValues_WearableColors2;                // 0x0048(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetValues_HasColor1;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetValues_HasColor2;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValues_ArmorClass;                     // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetValues_Cost;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetValues_ItemDefID;                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemRarity                                   CallFunc_GetValues_ItemRarity;                     // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetValues_WearableClass;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetValues_Item_Icon;                      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0078(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0) == 0x000008, "Wrong alignment on BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0");
static_assert(sizeof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0) == 0x000098, "Wrong size on BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0, ReturnValue) == 0x000000, "Member 'BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0, CallFunc_GetValues_WearableName) == 0x000018, "Member 'BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0::CallFunc_GetValues_WearableName' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0, CallFunc_GetValues_WearableColor1Index) == 0x000030, "Member 'BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0::CallFunc_GetValues_WearableColor1Index' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0, CallFunc_GetValues_WearableColor2Index) == 0x000031, "Member 'BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0::CallFunc_GetValues_WearableColor2Index' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0, CallFunc_GetValues_Pattern) == 0x000032, "Member 'BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0::CallFunc_GetValues_Pattern' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0, CallFunc_GetValues_PatternLength) == 0x000034, "Member 'BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0::CallFunc_GetValues_PatternLength' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0, CallFunc_GetValues_WearableColors1) == 0x000038, "Member 'BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0::CallFunc_GetValues_WearableColors1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0, CallFunc_GetValues_WearableColors2) == 0x000048, "Member 'BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0::CallFunc_GetValues_WearableColors2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0, CallFunc_GetValues_HasColor1) == 0x000058, "Member 'BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0::CallFunc_GetValues_HasColor1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0, CallFunc_GetValues_HasColor2) == 0x000059, "Member 'BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0::CallFunc_GetValues_HasColor2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0, CallFunc_GetValues_ArmorClass) == 0x00005A, "Member 'BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0::CallFunc_GetValues_ArmorClass' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0, CallFunc_GetValues_Cost) == 0x00005C, "Member 'BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0::CallFunc_GetValues_Cost' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0, CallFunc_GetValues_ItemDefID) == 0x000060, "Member 'BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0::CallFunc_GetValues_ItemDefID' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0, CallFunc_GetValues_ItemRarity) == 0x000064, "Member 'BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0::CallFunc_GetValues_ItemRarity' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0, CallFunc_GetValues_WearableClass) == 0x000068, "Member 'BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0::CallFunc_GetValues_WearableClass' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0, CallFunc_GetValues_Item_Icon) == 0x000070, "Member 'BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0::CallFunc_GetValues_Item_Icon' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000078, "Member 'BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000090, "Member 'BP_WearableSlotCustomization_C_Get_TextBlock_26_Text_0::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.GetVisibility_0
// 0x0001 (0x0001 - 0x0000)
struct BP_WearableSlotCustomization_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSlotCustomization_C_GetVisibility_0) == 0x000001, "Wrong alignment on BP_WearableSlotCustomization_C_GetVisibility_0");
static_assert(sizeof(BP_WearableSlotCustomization_C_GetVisibility_0) == 0x000001, "Wrong size on BP_WearableSlotCustomization_C_GetVisibility_0");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_WearableSlotCustomization_C_GetVisibility_0::ReturnValue' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.GetVisibility_1
// 0x0002 (0x0002 - 0x0000)
struct BP_WearableSlotCustomization_C_GetVisibility_1 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearableSlotCustomization_C_GetVisibility_1) == 0x000001, "Wrong alignment on BP_WearableSlotCustomization_C_GetVisibility_1");
static_assert(sizeof(BP_WearableSlotCustomization_C_GetVisibility_1) == 0x000002, "Wrong size on BP_WearableSlotCustomization_C_GetVisibility_1");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_1, ReturnValue) == 0x000000, "Member 'BP_WearableSlotCustomization_C_GetVisibility_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_1, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_WearableSlotCustomization_C_GetVisibility_1::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.Get_MainSlotText_Text_0
// 0x0140 (0x0140 - 0x0000)
struct BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	EWearableSlot                                 Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0050(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0110(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0128(0x0018)()
};
static_assert(alignof(BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0) == 0x000008, "Wrong alignment on BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0");
static_assert(sizeof(BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0) == 0x000140, "Wrong size on BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0, ReturnValue) == 0x000000, "Member 'BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0, Temp_byte_Variable) == 0x000018, "Member 'BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0, Temp_text_Variable) == 0x000020, "Member 'BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0, Temp_text_Variable_1) == 0x000038, "Member 'BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0, Temp_text_Variable_2) == 0x000050, "Member 'BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0, Temp_text_Variable_3) == 0x000068, "Member 'BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0, Temp_text_Variable_4) == 0x000080, "Member 'BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0, Temp_text_Variable_5) == 0x000098, "Member 'BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0, Temp_text_Variable_6) == 0x0000B0, "Member 'BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0, Temp_text_Variable_7) == 0x0000C8, "Member 'BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0, Temp_text_Variable_8) == 0x0000E0, "Member 'BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0, Temp_text_Variable_9) == 0x0000F8, "Member 'BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0, Temp_text_Variable_10) == 0x000110, "Member 'BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0, K2Node_Select_Default) == 0x000128, "Member 'BP_WearableSlotCustomization_C_Get_MainSlotText_Text_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.GetVisibility_2
// 0x000E (0x000E - 0x0000)
struct BP_WearableSlotCustomization_C_GetVisibility_2 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWearableSlot                                 Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSlotCustomization_C_GetVisibility_2) == 0x000001, "Wrong alignment on BP_WearableSlotCustomization_C_GetVisibility_2");
static_assert(sizeof(BP_WearableSlotCustomization_C_GetVisibility_2) == 0x00000E, "Wrong size on BP_WearableSlotCustomization_C_GetVisibility_2");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_2, ReturnValue) == 0x000000, "Member 'BP_WearableSlotCustomization_C_GetVisibility_2::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_2, Temp_byte_Variable) == 0x000001, "Member 'BP_WearableSlotCustomization_C_GetVisibility_2::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_2, Temp_byte_Variable_1) == 0x000002, "Member 'BP_WearableSlotCustomization_C_GetVisibility_2::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_2, Temp_byte_Variable_2) == 0x000003, "Member 'BP_WearableSlotCustomization_C_GetVisibility_2::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_2, Temp_byte_Variable_3) == 0x000004, "Member 'BP_WearableSlotCustomization_C_GetVisibility_2::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_2, Temp_byte_Variable_4) == 0x000005, "Member 'BP_WearableSlotCustomization_C_GetVisibility_2::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_2, Temp_byte_Variable_5) == 0x000006, "Member 'BP_WearableSlotCustomization_C_GetVisibility_2::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_2, Temp_byte_Variable_6) == 0x000007, "Member 'BP_WearableSlotCustomization_C_GetVisibility_2::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_2, Temp_byte_Variable_7) == 0x000008, "Member 'BP_WearableSlotCustomization_C_GetVisibility_2::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_2, Temp_byte_Variable_8) == 0x000009, "Member 'BP_WearableSlotCustomization_C_GetVisibility_2::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_2, Temp_byte_Variable_9) == 0x00000A, "Member 'BP_WearableSlotCustomization_C_GetVisibility_2::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_2, Temp_byte_Variable_10) == 0x00000B, "Member 'BP_WearableSlotCustomization_C_GetVisibility_2::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_2, Temp_byte_Variable_11) == 0x00000C, "Member 'BP_WearableSlotCustomization_C_GetVisibility_2::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_2, K2Node_Select_Default) == 0x00000D, "Member 'BP_WearableSlotCustomization_C_GetVisibility_2::K2Node_Select_Default' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.Get Colors
// 0x0100 (0x0100 - 0x0000)
struct BP_WearableSlotCustomization_C_Get_Colors final
{
public:
	int32                                         Color_Slot;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         Color_Table;                                       // 0x0008(0x0010)(Parm, OutParm)
	class UClass*                                 Color;                                             // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Color_Index;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 Temp_byte_Variable;                                // 0x0028(0x0010)(ReferenceParm)
	TArray<struct FPatternInfo>                   Temp_struct_Variable;                              // 0x0038(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauSingleton*                      CallFunc_GetMordhauSingleton_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UMordhauWearable>           CallFunc_GetWearableClass_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FWearableCustomization                 CallFunc_Array_Get_Item;                           // 0x0068(0x0040)()
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Array_Get_Item_1;                         // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Array_Get_Item_2;                         // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMordhauColorItemTable                 CallFunc_Array_Get_Item_3;                         // 0x00B8(0x0028)()
	struct FPatternInfo                           CallFunc_Array_Get_Item_4;                         // 0x00E0(0x0010)(NoDestructor)
	class UClass*                                 CallFunc_Array_Get_Item_5;                         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearableSlotCustomization_C_Get_Colors) == 0x000008, "Wrong alignment on BP_WearableSlotCustomization_C_Get_Colors");
static_assert(sizeof(BP_WearableSlotCustomization_C_Get_Colors) == 0x000100, "Wrong size on BP_WearableSlotCustomization_C_Get_Colors");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, Color_Slot) == 0x000000, "Member 'BP_WearableSlotCustomization_C_Get_Colors::Color_Slot' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, Color_Table) == 0x000008, "Member 'BP_WearableSlotCustomization_C_Get_Colors::Color_Table' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, Color) == 0x000018, "Member 'BP_WearableSlotCustomization_C_Get_Colors::Color' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, Color_Index) == 0x000020, "Member 'BP_WearableSlotCustomization_C_Get_Colors::Color_Index' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, Temp_byte_Variable) == 0x000028, "Member 'BP_WearableSlotCustomization_C_Get_Colors::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, Temp_struct_Variable) == 0x000038, "Member 'BP_WearableSlotCustomization_C_Get_Colors::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, Temp_int_Variable) == 0x000048, "Member 'BP_WearableSlotCustomization_C_Get_Colors::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, CallFunc_GetMordhauSingleton_ReturnValue) == 0x000050, "Member 'BP_WearableSlotCustomization_C_Get_Colors::CallFunc_GetMordhauSingleton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_WearableSlotCustomization_C_Get_Colors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'BP_WearableSlotCustomization_C_Get_Colors::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00005C, "Member 'BP_WearableSlotCustomization_C_Get_Colors::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, CallFunc_GetWearableClass_ReturnValue) == 0x000060, "Member 'BP_WearableSlotCustomization_C_Get_Colors::CallFunc_GetWearableClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_WearableSlotCustomization_C_Get_Colors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x0000A8, "Member 'BP_WearableSlotCustomization_C_Get_Colors::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, CallFunc_Array_Get_Item_1) == 0x0000AC, "Member 'BP_WearableSlotCustomization_C_Get_Colors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, CallFunc_Array_Get_Item_2) == 0x0000AD, "Member 'BP_WearableSlotCustomization_C_Get_Colors::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x0000B0, "Member 'BP_WearableSlotCustomization_C_Get_Colors::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x0000B4, "Member 'BP_WearableSlotCustomization_C_Get_Colors::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, CallFunc_Array_Get_Item_3) == 0x0000B8, "Member 'BP_WearableSlotCustomization_C_Get_Colors::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, CallFunc_Array_Get_Item_4) == 0x0000E0, "Member 'BP_WearableSlotCustomization_C_Get_Colors::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, CallFunc_Array_Get_Item_5) == 0x0000F0, "Member 'BP_WearableSlotCustomization_C_Get_Colors::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Colors, K2Node_Select_Default) == 0x0000F8, "Member 'BP_WearableSlotCustomization_C_Get_Colors::K2Node_Select_Default' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.Get_Overlay_Text_Visibility_0
// 0x0001 (0x0001 - 0x0000)
struct BP_WearableSlotCustomization_C_Get_Overlay_Text_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSlotCustomization_C_Get_Overlay_Text_Visibility_0) == 0x000001, "Wrong alignment on BP_WearableSlotCustomization_C_Get_Overlay_Text_Visibility_0");
static_assert(sizeof(BP_WearableSlotCustomization_C_Get_Overlay_Text_Visibility_0) == 0x000001, "Wrong size on BP_WearableSlotCustomization_C_Get_Overlay_Text_Visibility_0");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_Overlay_Text_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_WearableSlotCustomization_C_Get_Overlay_Text_Visibility_0::ReturnValue' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.GetVisibility_4
// 0x000E (0x000E - 0x0000)
struct BP_WearableSlotCustomization_C_GetVisibility_4 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWearableSlot                                 Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSlotCustomization_C_GetVisibility_4) == 0x000001, "Wrong alignment on BP_WearableSlotCustomization_C_GetVisibility_4");
static_assert(sizeof(BP_WearableSlotCustomization_C_GetVisibility_4) == 0x00000E, "Wrong size on BP_WearableSlotCustomization_C_GetVisibility_4");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_4, ReturnValue) == 0x000000, "Member 'BP_WearableSlotCustomization_C_GetVisibility_4::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_4, Temp_byte_Variable) == 0x000001, "Member 'BP_WearableSlotCustomization_C_GetVisibility_4::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_4, Temp_byte_Variable_1) == 0x000002, "Member 'BP_WearableSlotCustomization_C_GetVisibility_4::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_4, Temp_byte_Variable_2) == 0x000003, "Member 'BP_WearableSlotCustomization_C_GetVisibility_4::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_4, Temp_byte_Variable_3) == 0x000004, "Member 'BP_WearableSlotCustomization_C_GetVisibility_4::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_4, Temp_byte_Variable_4) == 0x000005, "Member 'BP_WearableSlotCustomization_C_GetVisibility_4::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_4, Temp_byte_Variable_5) == 0x000006, "Member 'BP_WearableSlotCustomization_C_GetVisibility_4::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_4, Temp_byte_Variable_6) == 0x000007, "Member 'BP_WearableSlotCustomization_C_GetVisibility_4::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_4, Temp_byte_Variable_7) == 0x000008, "Member 'BP_WearableSlotCustomization_C_GetVisibility_4::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_4, Temp_byte_Variable_8) == 0x000009, "Member 'BP_WearableSlotCustomization_C_GetVisibility_4::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_4, Temp_byte_Variable_9) == 0x00000A, "Member 'BP_WearableSlotCustomization_C_GetVisibility_4::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_4, Temp_byte_Variable_10) == 0x00000B, "Member 'BP_WearableSlotCustomization_C_GetVisibility_4::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_4, Temp_byte_Variable_11) == 0x00000C, "Member 'BP_WearableSlotCustomization_C_GetVisibility_4::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetVisibility_4, K2Node_Select_Default) == 0x00000D, "Member 'BP_WearableSlotCustomization_C_GetVisibility_4::K2Node_Select_Default' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.Get_GradientOverlay_Visibility_0
// 0x0006 (0x0006 - 0x0000)
struct BP_WearableSlotCustomization_C_Get_GradientOverlay_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSlotCustomization_C_Get_GradientOverlay_Visibility_0) == 0x000001, "Wrong alignment on BP_WearableSlotCustomization_C_Get_GradientOverlay_Visibility_0");
static_assert(sizeof(BP_WearableSlotCustomization_C_Get_GradientOverlay_Visibility_0) == 0x000006, "Wrong size on BP_WearableSlotCustomization_C_Get_GradientOverlay_Visibility_0");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_GradientOverlay_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_WearableSlotCustomization_C_Get_GradientOverlay_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_GradientOverlay_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_WearableSlotCustomization_C_Get_GradientOverlay_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_GradientOverlay_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_WearableSlotCustomization_C_Get_GradientOverlay_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_GradientOverlay_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_WearableSlotCustomization_C_Get_GradientOverlay_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_GradientOverlay_Visibility_0, CallFunc_IsHovered_ReturnValue) == 0x000004, "Member 'BP_WearableSlotCustomization_C_Get_GradientOverlay_Visibility_0::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_Get_GradientOverlay_Visibility_0, K2Node_Select_Default) == 0x000005, "Member 'BP_WearableSlotCustomization_C_Get_GradientOverlay_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.GetToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct BP_WearableSlotCustomization_C_GetToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearableSlotCustomization_C_GetToolTipWidget_0) == 0x000008, "Wrong alignment on BP_WearableSlotCustomization_C_GetToolTipWidget_0");
static_assert(sizeof(BP_WearableSlotCustomization_C_GetToolTipWidget_0) == 0x000010, "Wrong size on BP_WearableSlotCustomization_C_GetToolTipWidget_0");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetToolTipWidget_0, ReturnValue) == 0x000000, "Member 'BP_WearableSlotCustomization_C_GetToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetToolTipWidget_0, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_WearableSlotCustomization_C_GetToolTipWidget_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_WearableSlotCustomization.BP_WearableSlotCustomization_C.GetbIsEnabled_0
// 0x0002 (0x0002 - 0x0000)
struct BP_WearableSlotCustomization_C_GetbIsEnabled_0 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearableSlotCustomization_C_GetbIsEnabled_0) == 0x000001, "Wrong alignment on BP_WearableSlotCustomization_C_GetbIsEnabled_0");
static_assert(sizeof(BP_WearableSlotCustomization_C_GetbIsEnabled_0) == 0x000002, "Wrong size on BP_WearableSlotCustomization_C_GetbIsEnabled_0");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetbIsEnabled_0, ReturnValue) == 0x000000, "Member 'BP_WearableSlotCustomization_C_GetbIsEnabled_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSlotCustomization_C_GetbIsEnabled_0, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_WearableSlotCustomization_C_GetbIsEnabled_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

