#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrontlineHeroDestroyable

#include "Basic.hpp"

#include "BP_FrontlineDestroyable_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FrontlineHeroDestroyable.BP_FrontlineHeroDestroyable_C
// 0x0040 (0x0560 - 0x0520)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_FrontlineHeroDestroyable_C : public ABP_FrontlineDestroyable_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_FrontlineHeroDestroyable_C;      // 0x0520(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         BestDamageIdx;                                     // 0x0530(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          DeathAnimation;                                    // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayedDeathAnimation;                              // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          DamageAnimation;                                   // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         ThresholdToPlayDamageAnimation;                    // 0x0550(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AnimTimeEnd;                                       // 0x0554(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FrontlineHeroDestroyable(int32 EntryPoint);
	void UpdateAnimInstance();
	void OnReplicatedHealthChanged();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FrontlineHeroDestroyable_C">();
	}
	static class ABP_FrontlineHeroDestroyable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FrontlineHeroDestroyable_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_FrontlineHeroDestroyable_C) == 0x000010, "Wrong alignment on ABP_FrontlineHeroDestroyable_C");
static_assert(sizeof(ABP_FrontlineHeroDestroyable_C) == 0x000560, "Wrong size on ABP_FrontlineHeroDestroyable_C");
static_assert(offsetof(ABP_FrontlineHeroDestroyable_C, UberGraphFrame_BP_FrontlineHeroDestroyable_C) == 0x000520, "Member 'ABP_FrontlineHeroDestroyable_C::UberGraphFrame_BP_FrontlineHeroDestroyable_C' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineHeroDestroyable_C, SkeletalMesh) == 0x000528, "Member 'ABP_FrontlineHeroDestroyable_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineHeroDestroyable_C, BestDamageIdx) == 0x000530, "Member 'ABP_FrontlineHeroDestroyable_C::BestDamageIdx' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineHeroDestroyable_C, DeathAnimation) == 0x000538, "Member 'ABP_FrontlineHeroDestroyable_C::DeathAnimation' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineHeroDestroyable_C, PlayedDeathAnimation) == 0x000540, "Member 'ABP_FrontlineHeroDestroyable_C::PlayedDeathAnimation' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineHeroDestroyable_C, DamageAnimation) == 0x000548, "Member 'ABP_FrontlineHeroDestroyable_C::DamageAnimation' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineHeroDestroyable_C, ThresholdToPlayDamageAnimation) == 0x000550, "Member 'ABP_FrontlineHeroDestroyable_C::ThresholdToPlayDamageAnimation' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineHeroDestroyable_C, AnimTimeEnd) == 0x000554, "Member 'ABP_FrontlineHeroDestroyable_C::AnimTimeEnd' has a wrong offset!");

}

