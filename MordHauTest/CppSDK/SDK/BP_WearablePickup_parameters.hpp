#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WearablePickup

#include "Basic.hpp"

#include "Mordhau_structs.hpp"


namespace SDK::Params
{

// Function BP_WearablePickup.BP_WearablePickup_C.ExecuteUbergraph_BP_WearablePickup
// 0x0028 (0x0028 - 0x0000)
struct BP_WearablePickup_C_ExecuteUbergraph_BP_WearablePickup final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_Event_Character;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauGameMode_C*                  K2Node_DynamicCast_AsBP_Mordhau_Game_Mode;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearablePickup_C_ExecuteUbergraph_BP_WearablePickup) == 0x000008, "Wrong alignment on BP_WearablePickup_C_ExecuteUbergraph_BP_WearablePickup");
static_assert(sizeof(BP_WearablePickup_C_ExecuteUbergraph_BP_WearablePickup) == 0x000028, "Wrong size on BP_WearablePickup_C_ExecuteUbergraph_BP_WearablePickup");
static_assert(offsetof(BP_WearablePickup_C_ExecuteUbergraph_BP_WearablePickup, EntryPoint) == 0x000000, "Member 'BP_WearablePickup_C_ExecuteUbergraph_BP_WearablePickup::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_ExecuteUbergraph_BP_WearablePickup, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_WearablePickup_C_ExecuteUbergraph_BP_WearablePickup::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_ExecuteUbergraph_BP_WearablePickup, K2Node_Event_Character) == 0x000008, "Member 'BP_WearablePickup_C_ExecuteUbergraph_BP_WearablePickup::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_ExecuteUbergraph_BP_WearablePickup, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'BP_WearablePickup_C_ExecuteUbergraph_BP_WearablePickup::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_ExecuteUbergraph_BP_WearablePickup, K2Node_DynamicCast_AsBP_Mordhau_Game_Mode) == 0x000018, "Member 'BP_WearablePickup_C_ExecuteUbergraph_BP_WearablePickup::K2Node_DynamicCast_AsBP_Mordhau_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_ExecuteUbergraph_BP_WearablePickup, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_WearablePickup_C_ExecuteUbergraph_BP_WearablePickup::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_WearablePickup.BP_WearablePickup_C.OnInteractionStart
// 0x0008 (0x0008 - 0x0000)
struct BP_WearablePickup_C_OnInteractionStart final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearablePickup_C_OnInteractionStart) == 0x000008, "Wrong alignment on BP_WearablePickup_C_OnInteractionStart");
static_assert(sizeof(BP_WearablePickup_C_OnInteractionStart) == 0x000008, "Wrong size on BP_WearablePickup_C_OnInteractionStart");
static_assert(offsetof(BP_WearablePickup_C_OnInteractionStart, Character) == 0x000000, "Member 'BP_WearablePickup_C_OnInteractionStart::Character' has a wrong offset!");

// Function BP_WearablePickup.BP_WearablePickup_C.AssignToCharacter
// 0x0300 (0x0300 - 0x0000)
struct BP_WearablePickup_C_AssignToCharacter final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomizationReplicationActor*         CustomizatonReplicationActor;                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EWearableSlot, struct FWearableCustomization> WearablesToUse;                                    // 0x0010(0x0050)(Edit, BlueprintVisible)
	TArray<struct FWearableCustomization>         NewWearables;                                      // 0x0060(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetControllerIncludingVehicle_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauCharacter_C*                 K2Node_DynamicCast_AsBP_Mordhau_Character;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerController*               K2Node_DynamicCast_AsMordhau_Player_Controller;    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterProfile                      K2Node_Select_Default;                             // 0x00A0(0x00B8)(ConstParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EWearableSlot>                         CallFunc_Map_Keys_Keys;                            // 0x0168(0x0010)(ReferenceParm)
	EWearableSlot                                 CallFunc_Array_Get_Item;                           // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWearableCustomization                 CallFunc_Map_Find_Value;                           // 0x0180(0x0040)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EWearableSlot, struct FWearableCustomization> CallFunc_GetDefaultTierCustomizationForSlot_OutMap; // 0x01D0(0x0050)()
	bool                                          CallFunc_GetDefaultTierCustomizationForSlot_ReturnValue; // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterGearCustomization            K2Node_MakeStruct_CharacterGearCustomization;      // 0x0228(0x0020)()
	struct FCharacterProfile                      K2Node_MakeStruct_CharacterProfile;                // 0x0248(0x00B8)(UObjectWrapper)
};
static_assert(alignof(BP_WearablePickup_C_AssignToCharacter) == 0x000008, "Wrong alignment on BP_WearablePickup_C_AssignToCharacter");
static_assert(sizeof(BP_WearablePickup_C_AssignToCharacter) == 0x000300, "Wrong size on BP_WearablePickup_C_AssignToCharacter");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, Character) == 0x000000, "Member 'BP_WearablePickup_C_AssignToCharacter::Character' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, CustomizatonReplicationActor) == 0x000008, "Member 'BP_WearablePickup_C_AssignToCharacter::CustomizatonReplicationActor' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, WearablesToUse) == 0x000010, "Member 'BP_WearablePickup_C_AssignToCharacter::WearablesToUse' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, NewWearables) == 0x000060, "Member 'BP_WearablePickup_C_AssignToCharacter::NewWearables' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, Temp_bool_Variable) == 0x000070, "Member 'BP_WearablePickup_C_AssignToCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'BP_WearablePickup_C_AssignToCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, CallFunc_GetControllerIncludingVehicle_ReturnValue) == 0x000078, "Member 'BP_WearablePickup_C_AssignToCharacter::CallFunc_GetControllerIncludingVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, K2Node_DynamicCast_AsBP_Mordhau_Character) == 0x000080, "Member 'BP_WearablePickup_C_AssignToCharacter::K2Node_DynamicCast_AsBP_Mordhau_Character' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_WearablePickup_C_AssignToCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, K2Node_DynamicCast_AsMordhau_Player_Controller) == 0x000090, "Member 'BP_WearablePickup_C_AssignToCharacter::K2Node_DynamicCast_AsMordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BP_WearablePickup_C_AssignToCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, K2Node_Select_Default) == 0x0000A0, "Member 'BP_WearablePickup_C_AssignToCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, Temp_int_Array_Index_Variable) == 0x000158, "Member 'BP_WearablePickup_C_AssignToCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, Temp_int_Loop_Counter_Variable) == 0x00015C, "Member 'BP_WearablePickup_C_AssignToCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x000160, "Member 'BP_WearablePickup_C_AssignToCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, CallFunc_Map_Keys_Keys) == 0x000168, "Member 'BP_WearablePickup_C_AssignToCharacter::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, CallFunc_Array_Get_Item) == 0x000178, "Member 'BP_WearablePickup_C_AssignToCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, CallFunc_Conv_IntToByte_ReturnValue) == 0x000179, "Member 'BP_WearablePickup_C_AssignToCharacter::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00017C, "Member 'BP_WearablePickup_C_AssignToCharacter::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, CallFunc_Map_Find_Value) == 0x000180, "Member 'BP_WearablePickup_C_AssignToCharacter::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, CallFunc_Map_Find_ReturnValue) == 0x0001C0, "Member 'BP_WearablePickup_C_AssignToCharacter::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, CallFunc_Array_Length_ReturnValue) == 0x0001C4, "Member 'BP_WearablePickup_C_AssignToCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x0001C8, "Member 'BP_WearablePickup_C_AssignToCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, CallFunc_GetDefaultTierCustomizationForSlot_OutMap) == 0x0001D0, "Member 'BP_WearablePickup_C_AssignToCharacter::CallFunc_GetDefaultTierCustomizationForSlot_OutMap' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, CallFunc_GetDefaultTierCustomizationForSlot_ReturnValue) == 0x000220, "Member 'BP_WearablePickup_C_AssignToCharacter::CallFunc_GetDefaultTierCustomizationForSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, K2Node_MakeStruct_CharacterGearCustomization) == 0x000228, "Member 'BP_WearablePickup_C_AssignToCharacter::K2Node_MakeStruct_CharacterGearCustomization' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_AssignToCharacter, K2Node_MakeStruct_CharacterProfile) == 0x000248, "Member 'BP_WearablePickup_C_AssignToCharacter::K2Node_MakeStruct_CharacterProfile' has a wrong offset!");

// Function BP_WearablePickup.BP_WearablePickup_C.Equip
// 0x0018 (0x0018 - 0x0000)
struct BP_WearablePickup_C_Equip final
{
public:
	class AMordhauCharacter*                      Char;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomizationReplicationActor*         CallFunc_GetCustomizationReplicationActor_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearablePickup_C_Equip) == 0x000008, "Wrong alignment on BP_WearablePickup_C_Equip");
static_assert(sizeof(BP_WearablePickup_C_Equip) == 0x000018, "Wrong size on BP_WearablePickup_C_Equip");
static_assert(offsetof(BP_WearablePickup_C_Equip, Char) == 0x000000, "Member 'BP_WearablePickup_C_Equip::Char' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_Equip, CallFunc_GetCustomizationReplicationActor_ReturnValue) == 0x000008, "Member 'BP_WearablePickup_C_Equip::CallFunc_GetCustomizationReplicationActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_Equip, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'BP_WearablePickup_C_Equip::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function BP_WearablePickup.BP_WearablePickup_C.EquipIfUpgrade
// 0x0010 (0x0010 - 0x0000)
struct BP_WearablePickup_C_EquipIfUpgrade final
{
public:
	class AMordhauCharacter*                      Char;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnUpgrade_Value;                        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearablePickup_C_EquipIfUpgrade) == 0x000008, "Wrong alignment on BP_WearablePickup_C_EquipIfUpgrade");
static_assert(sizeof(BP_WearablePickup_C_EquipIfUpgrade) == 0x000010, "Wrong size on BP_WearablePickup_C_EquipIfUpgrade");
static_assert(offsetof(BP_WearablePickup_C_EquipIfUpgrade, Char) == 0x000000, "Member 'BP_WearablePickup_C_EquipIfUpgrade::Char' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_EquipIfUpgrade, CallFunc_IsAnUpgrade_Value) == 0x000008, "Member 'BP_WearablePickup_C_EquipIfUpgrade::CallFunc_IsAnUpgrade_Value' has a wrong offset!");

// Function BP_WearablePickup.BP_WearablePickup_C.IsAnUpgrade
// 0x0020 (0x0020 - 0x0000)
struct BP_WearablePickup_C_IsAnUpgrade final
{
public:
	class AMordhauCharacter*                      Char;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MordhauCharacter_C*                 K2Node_DynamicCast_AsBP_Mordhau_Character;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnUpgrade_Return;                       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearablePickup_C_IsAnUpgrade) == 0x000008, "Wrong alignment on BP_WearablePickup_C_IsAnUpgrade");
static_assert(sizeof(BP_WearablePickup_C_IsAnUpgrade) == 0x000020, "Wrong size on BP_WearablePickup_C_IsAnUpgrade");
static_assert(offsetof(BP_WearablePickup_C_IsAnUpgrade, Char) == 0x000000, "Member 'BP_WearablePickup_C_IsAnUpgrade::Char' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_IsAnUpgrade, Value) == 0x000008, "Member 'BP_WearablePickup_C_IsAnUpgrade::Value' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_IsAnUpgrade, K2Node_DynamicCast_AsBP_Mordhau_Character) == 0x000010, "Member 'BP_WearablePickup_C_IsAnUpgrade::K2Node_DynamicCast_AsBP_Mordhau_Character' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_IsAnUpgrade, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_WearablePickup_C_IsAnUpgrade::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WearablePickup_C_IsAnUpgrade, CallFunc_IsAnUpgrade_Return) == 0x000019, "Member 'BP_WearablePickup_C_IsAnUpgrade::CallFunc_IsAnUpgrade_Return' has a wrong offset!");

}

