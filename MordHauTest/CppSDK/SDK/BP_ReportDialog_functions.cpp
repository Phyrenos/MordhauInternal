#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ReportDialog

#include "Basic.hpp"

#include "BP_ReportDialog_classes.hpp"
#include "BP_ReportDialog_parameters.hpp"


namespace SDK
{

// Function BP_ReportDialog.BP_ReportDialog_C.ExecuteUbergraph_BP_ReportDialog
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ReportDialog_C::ExecuteUbergraph_BP_ReportDialog(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "ExecuteUbergraph_BP_ReportDialog");

	Params::BP_ReportDialog_C_ExecuteUbergraph_BP_ReportDialog Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReportDialog.BP_ReportDialog_C.BndEvt__BP_ReportDialog_BP_ReportDialogGriefing_K2Node_ComponentBoundEvent_3_OnSelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UBP_ReportDialogChoiceEntry_C*    ReportChoiceEntry                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ReportDialog_C::BndEvt__BP_ReportDialog_BP_ReportDialogGriefing_K2Node_ComponentBoundEvent_3_OnSelected__DelegateSignature(class UBP_ReportDialogChoiceEntry_C* ReportChoiceEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "BndEvt__BP_ReportDialog_BP_ReportDialogGriefing_K2Node_ComponentBoundEvent_3_OnSelected__DelegateSignature");

	Params::BP_ReportDialog_C_BndEvt__BP_ReportDialog_BP_ReportDialogGriefing_K2Node_ComponentBoundEvent_3_OnSelected__DelegateSignature Parms{};

	Parms.ReportChoiceEntry = ReportChoiceEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReportDialog.BP_ReportDialog_C.BndEvt__BP_ReportDialog_BP_ReportHarassment_K2Node_ComponentBoundEvent_2_OnSelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UBP_ReportDialogChoiceEntry_C*    ReportChoiceEntry                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ReportDialog_C::BndEvt__BP_ReportDialog_BP_ReportHarassment_K2Node_ComponentBoundEvent_2_OnSelected__DelegateSignature(class UBP_ReportDialogChoiceEntry_C* ReportChoiceEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "BndEvt__BP_ReportDialog_BP_ReportHarassment_K2Node_ComponentBoundEvent_2_OnSelected__DelegateSignature");

	Params::BP_ReportDialog_C_BndEvt__BP_ReportDialog_BP_ReportHarassment_K2Node_ComponentBoundEvent_2_OnSelected__DelegateSignature Parms{};

	Parms.ReportChoiceEntry = ReportChoiceEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReportDialog.BP_ReportDialog_C.BndEvt__BP_ReportDialog_BP_ReportDialogOffensiveLanguage_K2Node_ComponentBoundEvent_1_OnSelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UBP_ReportDialogChoiceEntry_C*    ReportChoiceEntry                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ReportDialog_C::BndEvt__BP_ReportDialog_BP_ReportDialogOffensiveLanguage_K2Node_ComponentBoundEvent_1_OnSelected__DelegateSignature(class UBP_ReportDialogChoiceEntry_C* ReportChoiceEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "BndEvt__BP_ReportDialog_BP_ReportDialogOffensiveLanguage_K2Node_ComponentBoundEvent_1_OnSelected__DelegateSignature");

	Params::BP_ReportDialog_C_BndEvt__BP_ReportDialog_BP_ReportDialogOffensiveLanguage_K2Node_ComponentBoundEvent_1_OnSelected__DelegateSignature Parms{};

	Parms.ReportChoiceEntry = ReportChoiceEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReportDialog.BP_ReportDialog_C.BndEvt__BP_ReportDialog_BP_ReportDialogCheating_K2Node_ComponentBoundEvent_0_OnSelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UBP_ReportDialogChoiceEntry_C*    ReportChoiceEntry                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ReportDialog_C::BndEvt__BP_ReportDialog_BP_ReportDialogCheating_K2Node_ComponentBoundEvent_0_OnSelected__DelegateSignature(class UBP_ReportDialogChoiceEntry_C* ReportChoiceEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "BndEvt__BP_ReportDialog_BP_ReportDialogCheating_K2Node_ComponentBoundEvent_0_OnSelected__DelegateSignature");

	Params::BP_ReportDialog_C_BndEvt__BP_ReportDialog_BP_ReportDialogCheating_K2Node_ComponentBoundEvent_0_OnSelected__DelegateSignature Parms{};

	Parms.ReportChoiceEntry = ReportChoiceEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReportDialog.BP_ReportDialog_C.Hide
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_ReportDialog_C::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "Hide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReportDialog.BP_ReportDialog_C.Show
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_ReportDialog_C::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReportDialog.BP_ReportDialog_C.BndEvt__BP_TwoButtonDialog_K2Node_ComponentBoundEvent_187_RightButtonClicked__DelegateSignature
// (BlueprintEvent)

void UBP_ReportDialog_C::BndEvt__BP_TwoButtonDialog_K2Node_ComponentBoundEvent_187_RightButtonClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "BndEvt__BP_TwoButtonDialog_K2Node_ComponentBoundEvent_187_RightButtonClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReportDialog.BP_ReportDialog_C.BndEvt__BP_TwoButtonDialog_K2Node_ComponentBoundEvent_183_LeftButtonClicked__DelegateSignature
// (BlueprintEvent)

void UBP_ReportDialog_C::BndEvt__BP_TwoButtonDialog_K2Node_ComponentBoundEvent_183_LeftButtonClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "BndEvt__BP_TwoButtonDialog_K2Node_ComponentBoundEvent_183_LeftButtonClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReportDialog.BP_ReportDialog_C.SetLeftButtonText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_ReportDialog_C::SetLeftButtonText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "SetLeftButtonText");

	Params::BP_ReportDialog_C_SetLeftButtonText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReportDialog.BP_ReportDialog_C.SetRightButtonText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_ReportDialog_C::SetRightButtonText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "SetRightButtonText");

	Params::BP_ReportDialog_C_SetRightButtonText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReportDialog.BP_ReportDialog_C.SetTitleText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Title                                                  (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_ReportDialog_C::SetTitleText(const class FText& Title)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "SetTitleText");

	Params::BP_ReportDialog_C_SetTitleText Parms{};

	Parms.Title = std::move(Title);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReportDialog.BP_ReportDialog_C.GetChoiceText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_ReportDialog_C::GetChoiceText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "GetChoiceText");

	Params::BP_ReportDialog_C_GetChoiceText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ReportDialog.BP_ReportDialog_C.SetWaitingMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsWaitingMode                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ReportDialog_C::SetWaitingMode(bool IsWaitingMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "SetWaitingMode");

	Params::BP_ReportDialog_C_SetWaitingMode Parms{};

	Parms.IsWaitingMode = IsWaitingMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReportDialog.BP_ReportDialog_C.SetContent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      ContentWidget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ReportDialog_C::SetContent(class UUserWidget* ContentWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "SetContent");

	Params::BP_ReportDialog_C_SetContent Parms{};

	Parms.ContentWidget = ContentWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReportDialog.BP_ReportDialog_C.OnSelectNewChoice
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_ReportDialogChoiceEntry_C*    NewReportChoice                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ReportDialog_C::OnSelectNewChoice(class UBP_ReportDialogChoiceEntry_C* NewReportChoice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "OnSelectNewChoice");

	Params::BP_ReportDialog_C_OnSelectNewChoice Parms{};

	Parms.NewReportChoice = NewReportChoice;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReportDialog.BP_ReportDialog_C.SelectNext
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ReportDialog_C::SelectNext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "SelectNext");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReportDialog.BP_ReportDialog_C.SelectPrev
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ReportDialog_C::SelectPrev()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "SelectPrev");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReportDialog.BP_ReportDialog_C.OnPreviewKeyDown
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_ReportDialog_C::OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "OnPreviewKeyDown");

	Params::BP_ReportDialog_C_OnPreviewKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ReportDialog.BP_ReportDialog_C.GetSelectedReportType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerReportType                       ReportType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ReportDialog_C::GetSelectedReportType(EPlayerReportType* ReportType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "GetSelectedReportType");

	Params::BP_ReportDialog_C_GetSelectedReportType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ReportType != nullptr)
		*ReportType = Parms.ReportType;
}


// Function BP_ReportDialog.BP_ReportDialog_C.Update Player Info
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayFabPlayer                   Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_ReportDialog_C::Update_Player_Info(const struct FPlayFabPlayer& Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReportDialog_C", "Update Player Info");

	Params::BP_ReportDialog_C_Update_Player_Info Parms{};

	Parms.Player = std::move(Player);

	UObject::ProcessEvent(Func, &Parms);
}

}

