#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChatBox

#include "Basic.hpp"

#include "E_ChatMuteTypes_structs.hpp"
#include "Mordhau_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_ChatMessage_structs.hpp"
#include "Engine_structs.hpp"
#include "E_ChatUserTypes_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "MordhauOnlineSubsystem_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_ChatBox.BP_ChatBox_C.ExecuteUbergraph_BP_ChatBox
// 0x0460 (0x0460 - 0x0000)
struct BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0018(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasKeyboardFocus_ReturnValue;             // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0058(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0040)(HasGetValueTypeHash)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x00D0(0x0070)(ConstParm)
	struct FGeometry                              K2Node_Event_MyGeometry_1;                         // 0x0140(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0178(0x0070)(ConstParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x01F0(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22E[0x2];                                      // 0x022E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0230(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0238(0x0040)(HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0280(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0290(0x0018)()
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowChatBox_ReturnValue;            // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x02BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked_1;           // 0x02BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BF[0x1];                                      // 0x02BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue_1; // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue_2; // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetProfanityFilter_ReturnValue;           // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauPlayerController_C*          K2Node_DynamicCast_AsBP_Mordhau_Player_Controller; // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FServerRestrictionInfo                 K2Node_CustomEvent_ServerRestrictionInfo;          // 0x02F4(0x0010)(ConstParm, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0305(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_306[0x2];                                      // 0x0306(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauSingleton*                      CallFunc_GetMordhauSingleton_ReturnValue;          // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerController*               K2Node_DynamicCast_AsMordhau_Player_Controller;    // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0330(0x0018)()
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue_1;         // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FServerRestrictionInfo& ServerRestrictionInfo)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0350(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0368(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x03A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x03B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x03D0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0410(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0428(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_442[0x2];                                      // 0x0442(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x0452(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_453[0x1];                                      // 0x0453(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x3];                                      // 0x0459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox) == 0x000008, "Wrong alignment on BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox");
static_assert(sizeof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox) == 0x000460, "Wrong size on BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, EntryPoint) == 0x000000, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, Temp_bool_Variable) == 0x000014, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, Temp_byte_Variable) == 0x000015, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, Temp_byte_Variable_1) == 0x000016, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_ComponentBoundEvent_Text) == 0x000018, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Conv_TextToString_ReturnValue) == 0x000030, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Len_ReturnValue) == 0x000040, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_HasKeyboardFocus_ReturnValue) == 0x000045, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_HasKeyboardFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Not_PreBool_ReturnValue) == 0x000046, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_GetSubstring_ReturnValue) == 0x000048, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Conv_StringToText_ReturnValue) == 0x000058, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Greater_IntInt_ReturnValue) == 0x000070, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000078, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Len_ReturnValue_1) == 0x000088, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_Event_MouseEvent_1) == 0x0000D0, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_Event_MyGeometry_1) == 0x000140, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_Event_MyGeometry_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_Event_MouseEvent) == 0x000178, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_GetPlayerController_ReturnValue) == 0x0001E8, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_Event_MyGeometry) == 0x0001F0, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_Event_InDeltaTime) == 0x000228, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Not_PreBool_ReturnValue_1) == 0x00022C, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_BooleanAND_ReturnValue) == 0x00022D, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000230, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_MakeStruct_FormatArgumentData_1) == 0x000238, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_PlayAnimation_ReturnValue) == 0x000278, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_MakeArray_Array) == 0x000280, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Format_ReturnValue) == 0x000290, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x0002A8, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x0002B0, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0002B8, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_ShouldShowChatBox_ReturnValue) == 0x0002BC, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_ShouldShowChatBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0002BD, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_ComponentBoundEvent_bIsChecked_1) == 0x0002BE, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_ComponentBoundEvent_bIsChecked_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_GetMordhauGameUserSettings_ReturnValue_1) == 0x0002C0, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_GetMordhauGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Conv_BoolToInt_ReturnValue) == 0x0002C8, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_GetMordhauGameUserSettings_ReturnValue_2) == 0x0002D0, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_GetMordhauGameUserSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_GetProfanityFilter_ReturnValue) == 0x0002D8, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_GetProfanityFilter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0002DC, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_GetPlayerController_ReturnValue_1) == 0x0002E0, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_DynamicCast_AsBP_Mordhau_Player_Controller) == 0x0002E8, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_DynamicCast_AsBP_Mordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_DynamicCast_bSuccess) == 0x0002F0, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_CustomEvent_ServerRestrictionInfo) == 0x0002F4, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_CustomEvent_ServerRestrictionInfo' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_ComponentBoundEvent_bIsChecked) == 0x000304, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_Select_Default) == 0x000305, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_GetMordhauSingleton_ReturnValue) == 0x000308, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_GetMordhauSingleton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_GetPlayerController_ReturnValue_2) == 0x000310, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Array_Length_ReturnValue) == 0x000318, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_DynamicCast_AsMordhau_Player_Controller) == 0x000320, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_DynamicCast_AsMordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_DynamicCast_bSuccess_1) == 0x000328, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_MakeLiteralText_ReturnValue) == 0x000330, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_GetRealTimeSeconds_ReturnValue_1) == 0x000348, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_GetRealTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_FTrunc_ReturnValue) == 0x00034C, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_CreateDelegate_OutputDelegate_1) == 0x000350, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Subtract_IntInt_ReturnValue) == 0x000360, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_MakeStruct_FormatArgumentData_2) == 0x000368, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_MakeArray_Array_1) == 0x0003A8, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Format_ReturnValue_1) == 0x0003B8, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_MakeStruct_FormatArgumentData_3) == 0x0003D0, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, K2Node_MakeArray_Array_2) == 0x000410, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000420, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Format_ReturnValue_2) == 0x000428, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000440, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000441, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, Temp_int_Array_Index_Variable) == 0x000444, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Array_Get_Item) == 0x000448, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Conv_IntToByte_ReturnValue) == 0x000450, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000451, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x000452, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, Temp_int_Loop_Counter_Variable) == 0x000454, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Less_IntInt_ReturnValue) == 0x000458, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox, CallFunc_Add_IntInt_ReturnValue) == 0x00045C, "Member 'BP_ChatBox_C_ExecuteUbergraph_BP_ChatBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.BndEvt__PauseChatCheckbox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_ChatBox_C_BndEvt__PauseChatCheckbox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChatBox_C_BndEvt__PauseChatCheckbox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on BP_ChatBox_C_BndEvt__PauseChatCheckbox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(BP_ChatBox_C_BndEvt__PauseChatCheckbox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on BP_ChatBox_C_BndEvt__PauseChatCheckbox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(BP_ChatBox_C_BndEvt__PauseChatCheckbox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'BP_ChatBox_C_BndEvt__PauseChatCheckbox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.OnServerRestrictionInfoReceived
// 0x0010 (0x0010 - 0x0000)
struct BP_ChatBox_C_OnServerRestrictionInfoReceived final
{
public:
	struct FServerRestrictionInfo                 ServerRestrictionInfo;                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_ChatBox_C_OnServerRestrictionInfoReceived) == 0x000004, "Wrong alignment on BP_ChatBox_C_OnServerRestrictionInfoReceived");
static_assert(sizeof(BP_ChatBox_C_OnServerRestrictionInfoReceived) == 0x000010, "Wrong size on BP_ChatBox_C_OnServerRestrictionInfoReceived");
static_assert(offsetof(BP_ChatBox_C_OnServerRestrictionInfoReceived, ServerRestrictionInfo) == 0x000000, "Member 'BP_ChatBox_C_OnServerRestrictionInfoReceived::ServerRestrictionInfo' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.BndEvt__CheckBox_0_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_ChatBox_C_BndEvt__CheckBox_0_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChatBox_C_BndEvt__CheckBox_0_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on BP_ChatBox_C_BndEvt__CheckBox_0_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(BP_ChatBox_C_BndEvt__CheckBox_0_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on BP_ChatBox_C_BndEvt__CheckBox_0_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(BP_ChatBox_C_BndEvt__CheckBox_0_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'BP_ChatBox_C_BndEvt__CheckBox_0_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_ChatBox_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChatBox_C_Tick) == 0x000004, "Wrong alignment on BP_ChatBox_C_Tick");
static_assert(sizeof(BP_ChatBox_C_Tick) == 0x00003C, "Wrong size on BP_ChatBox_C_Tick");
static_assert(offsetof(BP_ChatBox_C_Tick, MyGeometry) == 0x000000, "Member 'BP_ChatBox_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_ChatBox_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct BP_ChatBox_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ChatBox_C_OnMouseEnter) == 0x000008, "Wrong alignment on BP_ChatBox_C_OnMouseEnter");
static_assert(sizeof(BP_ChatBox_C_OnMouseEnter) == 0x0000A8, "Wrong size on BP_ChatBox_C_OnMouseEnter");
static_assert(offsetof(BP_ChatBox_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'BP_ChatBox_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'BP_ChatBox_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct BP_ChatBox_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ChatBox_C_OnMouseLeave) == 0x000008, "Wrong alignment on BP_ChatBox_C_OnMouseLeave");
static_assert(sizeof(BP_ChatBox_C_OnMouseLeave) == 0x000070, "Wrong size on BP_ChatBox_C_OnMouseLeave");
static_assert(offsetof(BP_ChatBox_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'BP_ChatBox_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.BndEvt__TextArea_K2Node_ComponentBoundEvent_594_OnMultiLineEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_ChatBox_C_BndEvt__TextArea_K2Node_ComponentBoundEvent_594_OnMultiLineEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ChatBox_C_BndEvt__TextArea_K2Node_ComponentBoundEvent_594_OnMultiLineEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_ChatBox_C_BndEvt__TextArea_K2Node_ComponentBoundEvent_594_OnMultiLineEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(BP_ChatBox_C_BndEvt__TextArea_K2Node_ComponentBoundEvent_594_OnMultiLineEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on BP_ChatBox_C_BndEvt__TextArea_K2Node_ComponentBoundEvent_594_OnMultiLineEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(BP_ChatBox_C_BndEvt__TextArea_K2Node_ComponentBoundEvent_594_OnMultiLineEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'BP_ChatBox_C_BndEvt__TextArea_K2Node_ComponentBoundEvent_594_OnMultiLineEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.AddEntry
// 0x00D0 (0x00D0 - 0x0000)
struct BP_ChatBox_C_AddEntry final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Message;                                           // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FLinearColor                           NameColor;                                         // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Prefix;                                            // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FPlayFabPlayer                         Player;                                            // 0x0050(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	E_ChatUserTypes                               Chat_User_Type;                                    // 0x00B0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ChatBoxEntry_C*                     CallFunc_Create_ReturnValue;                       // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UBP_ChatBoxEntry_C*                     CallFunc_Create_ReturnValue_1;                     // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChatBox_C_AddEntry) == 0x000008, "Wrong alignment on BP_ChatBox_C_AddEntry");
static_assert(sizeof(BP_ChatBox_C_AddEntry) == 0x0000D0, "Wrong size on BP_ChatBox_C_AddEntry");
static_assert(offsetof(BP_ChatBox_C_AddEntry, Name_0) == 0x000000, "Member 'BP_ChatBox_C_AddEntry::Name_0' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntry, Message) == 0x000010, "Member 'BP_ChatBox_C_AddEntry::Message' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntry, NameColor) == 0x000028, "Member 'BP_ChatBox_C_AddEntry::NameColor' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntry, Prefix) == 0x000038, "Member 'BP_ChatBox_C_AddEntry::Prefix' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntry, Player) == 0x000050, "Member 'BP_ChatBox_C_AddEntry::Player' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntry, Chat_User_Type) == 0x0000B0, "Member 'BP_ChatBox_C_AddEntry::Chat_User_Type' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntry, CallFunc_GetPlayerController_ReturnValue) == 0x0000B8, "Member 'BP_ChatBox_C_AddEntry::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntry, CallFunc_Create_ReturnValue) == 0x0000C0, "Member 'BP_ChatBox_C_AddEntry::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntry, CallFunc_Create_ReturnValue_1) == 0x0000C8, "Member 'BP_ChatBox_C_AddEntry::CallFunc_Create_ReturnValue_1' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.OnPreviewKeyDown
// 0x02B8 (0x02B8 - 0x0000)
struct BP_ChatBox_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0128(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0200(0x00B8)()
};
static_assert(alignof(BP_ChatBox_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on BP_ChatBox_C_OnPreviewKeyDown");
static_assert(sizeof(BP_ChatBox_C_OnPreviewKeyDown) == 0x0002B8, "Wrong size on BP_ChatBox_C_OnPreviewKeyDown");
static_assert(offsetof(BP_ChatBox_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'BP_ChatBox_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'BP_ChatBox_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnPreviewKeyDown, ReturnValue) == 0x000070, "Member 'BP_ChatBox_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnPreviewKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000128, "Member 'BP_ChatBox_C_OnPreviewKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E0, "Member 'BP_ChatBox_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0001F8, "Member 'BP_ChatBox_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x0001F9, "Member 'BP_ChatBox_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue) == 0x000200, "Member 'BP_ChatBox_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.GetInputContainerVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_ChatBox_C_GetInputContainerVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChatBox_C_GetInputContainerVisibility) == 0x000001, "Wrong alignment on BP_ChatBox_C_GetInputContainerVisibility");
static_assert(sizeof(BP_ChatBox_C_GetInputContainerVisibility) == 0x000001, "Wrong size on BP_ChatBox_C_GetInputContainerVisibility");
static_assert(offsetof(BP_ChatBox_C_GetInputContainerVisibility, ReturnValue) == 0x000000, "Member 'BP_ChatBox_C_GetInputContainerVisibility::ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.GetViewModeVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_ChatBox_C_GetViewModeVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChatBox_C_GetViewModeVisibility) == 0x000001, "Wrong alignment on BP_ChatBox_C_GetViewModeVisibility");
static_assert(sizeof(BP_ChatBox_C_GetViewModeVisibility) == 0x000001, "Wrong size on BP_ChatBox_C_GetViewModeVisibility");
static_assert(offsetof(BP_ChatBox_C_GetViewModeVisibility, ReturnValue) == 0x000000, "Member 'BP_ChatBox_C_GetViewModeVisibility::ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.GoToChatMode
// 0x0028 (0x0028 - 0x0000)
struct BP_ChatBox_C_GoToChatMode final
{
public:
	bool                                          Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauPlayerController_C*          K2Node_DynamicCast_AsBP_Mordhau_Player_Controller; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChatBox_C_GoToChatMode) == 0x000008, "Wrong alignment on BP_ChatBox_C_GoToChatMode");
static_assert(sizeof(BP_ChatBox_C_GoToChatMode) == 0x000028, "Wrong size on BP_ChatBox_C_GoToChatMode");
static_assert(offsetof(BP_ChatBox_C_GoToChatMode, Team) == 0x000000, "Member 'BP_ChatBox_C_GoToChatMode::Team' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GoToChatMode, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_ChatBox_C_GoToChatMode::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GoToChatMode, K2Node_DynamicCast_AsBP_Mordhau_Player_Controller) == 0x000010, "Member 'BP_ChatBox_C_GoToChatMode::K2Node_DynamicCast_AsBP_Mordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GoToChatMode, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ChatBox_C_GoToChatMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GoToChatMode, CallFunc_GetPlayerController_ReturnValue_1) == 0x000020, "Member 'BP_ChatBox_C_GoToChatMode::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.OnEnter
// 0x0220 (0x0220 - 0x0000)
struct BP_ChatBox_C_OnEnter final
{
public:
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextTrimPrecedingAndTrailing_ReturnValue; // 0x0028(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_2;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C7[0x1];                                       // 0x00C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue_1;         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerController*               K2Node_DynamicCast_AsMordhau_Player_Controller;    // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAdmin_ReturnValue;                      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauHUD*                            CallFunc_GetMordhauHUD_ReturnValue;                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauHUD_C*                       K2Node_DynamicCast_AsBP_Mordhau_HUD;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue_2;         // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue_1;                    // 0x0128(0x0018)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_TextTrimPrecedingAndTrailing_ReturnValue_1; // 0x0148(0x0018)()
	class ABP_MordhauPlayerController_C*          K2Node_DynamicCast_AsBP_Mordhau_Player_Controller; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue_3;                        // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18A[0x2];                                      // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue_2;                    // 0x0190(0x0018)()
	class FText                                   CallFunc_TextTrimPrecedingAndTrailing_ReturnValue_2; // 0x01A8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_4;                        // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01F0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChatBox_C_OnEnter) == 0x000008, "Wrong alignment on BP_ChatBox_C_OnEnter");
static_assert(sizeof(BP_ChatBox_C_OnEnter) == 0x000220, "Wrong size on BP_ChatBox_C_OnEnter");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000000, "Member 'BP_ChatBox_C_OnEnter::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_ChatBox_C_OnEnter::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'BP_ChatBox_C_OnEnter::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_TextTrimPrecedingAndTrailing_ReturnValue) == 0x000028, "Member 'BP_ChatBox_C_OnEnter::CallFunc_TextTrimPrecedingAndTrailing_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Conv_TextToString_ReturnValue) == 0x000040, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Len_ReturnValue) == 0x000050, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00006C, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_PlayAnimation_ReturnValue) == 0x000070, "Member 'BP_ChatBox_C_OnEnter::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Len_ReturnValue_1) == 0x000078, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Max_ReturnValue) == 0x00007C, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Len_ReturnValue_2) == 0x000080, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Len_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Divide_IntInt_ReturnValue) == 0x000084, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000088, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Max_ReturnValue_1) == 0x00008C, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_ChatBox_C_OnEnter::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Multiply_IntInt_ReturnValue) == 0x000098, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00009C, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_BooleanAND_ReturnValue) == 0x0000A0, "Member 'BP_ChatBox_C_OnEnter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000A1, "Member 'BP_ChatBox_C_OnEnter::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000A4, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x0000AC, "Member 'BP_ChatBox_C_OnEnter::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000B0, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_FTrunc_ReturnValue) == 0x0000B4, "Member 'BP_ChatBox_C_OnEnter::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_FTrunc_ReturnValue_1) == 0x0000B8, "Member 'BP_ChatBox_C_OnEnter::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x0000BC, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000C0, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000C4, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000C5, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Not_PreBool_ReturnValue) == 0x0000C6, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_GetRealTimeSeconds_ReturnValue_1) == 0x0000C8, "Member 'BP_ChatBox_C_OnEnter::CallFunc_GetRealTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_BooleanOR_ReturnValue) == 0x0000CC, "Member 'BP_ChatBox_C_OnEnter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000D0, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_FTrunc_ReturnValue_2) == 0x0000D4, "Member 'BP_ChatBox_C_OnEnter::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000D8, "Member 'BP_ChatBox_C_OnEnter::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E0, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, K2Node_DynamicCast_AsMordhau_Player_Controller) == 0x0000E8, "Member 'BP_ChatBox_C_OnEnter::K2Node_DynamicCast_AsMordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_ChatBox_C_OnEnter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_IsAdmin_ReturnValue) == 0x0000F1, "Member 'BP_ChatBox_C_OnEnter::CallFunc_IsAdmin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_GetMordhauHUD_ReturnValue) == 0x000100, "Member 'BP_ChatBox_C_OnEnter::CallFunc_GetMordhauHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, K2Node_DynamicCast_AsBP_Mordhau_HUD) == 0x000108, "Member 'BP_ChatBox_C_OnEnter::K2Node_DynamicCast_AsBP_Mordhau_HUD' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, K2Node_DynamicCast_bSuccess_1) == 0x000110, "Member 'BP_ChatBox_C_OnEnter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_GetPlayerController_ReturnValue) == 0x000118, "Member 'BP_ChatBox_C_OnEnter::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_GetRealTimeSeconds_ReturnValue_2) == 0x000120, "Member 'BP_ChatBox_C_OnEnter::CallFunc_GetRealTimeSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_GetText_ReturnValue_1) == 0x000128, "Member 'BP_ChatBox_C_OnEnter::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_GetPlayerController_ReturnValue_1) == 0x000140, "Member 'BP_ChatBox_C_OnEnter::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_TextTrimPrecedingAndTrailing_ReturnValue_1) == 0x000148, "Member 'BP_ChatBox_C_OnEnter::CallFunc_TextTrimPrecedingAndTrailing_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, K2Node_DynamicCast_AsBP_Mordhau_Player_Controller) == 0x000160, "Member 'BP_ChatBox_C_OnEnter::K2Node_DynamicCast_AsBP_Mordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, K2Node_DynamicCast_bSuccess_2) == 0x000168, "Member 'BP_ChatBox_C_OnEnter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000170, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000180, "Member 'BP_ChatBox_C_OnEnter::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Len_ReturnValue_3) == 0x000184, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Len_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000188, "Member 'BP_ChatBox_C_OnEnter::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Not_PreBool_ReturnValue_1) == 0x000189, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, Temp_int_Variable) == 0x00018C, "Member 'BP_ChatBox_C_OnEnter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_GetText_ReturnValue_2) == 0x000190, "Member 'BP_ChatBox_C_OnEnter::CallFunc_GetText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_TextTrimPrecedingAndTrailing_ReturnValue_2) == 0x0001A8, "Member 'BP_ChatBox_C_OnEnter::CallFunc_TextTrimPrecedingAndTrailing_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0001C0, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Len_ReturnValue_4) == 0x0001D0, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Len_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_GetSubstring_ReturnValue) == 0x0001D8, "Member 'BP_ChatBox_C_OnEnter::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0001E8, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Conv_StringToText_ReturnValue) == 0x0001F0, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Conv_TextToString_ReturnValue_3) == 0x000208, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000218, "Member 'BP_ChatBox_C_OnEnter::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEnter, CallFunc_BooleanAND_ReturnValue_1) == 0x000219, "Member 'BP_ChatBox_C_OnEnter::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.OnMessageReceived
// 0x02E0 (0x02E0 - 0x0000)
struct BP_ChatBox_C_OnMessageReceived final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class APlayerState*                           Player;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Prefix;                                            // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	E_ChatUserTypes                               ChatUserType;                                      // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BannedWordFound;                                   // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TempNewString;                                     // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ProfaneWordFound;                                  // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           NameColor;                                         // 0x0054(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ChatMessage                         K2Node_MakeStruct_S_ChatMessage;                   // 0x0068(0x0038)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerState*                    K2Node_DynamicCast_AsMordhau_Player_State;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FPlayFabPlayer                         CallFunc_GetPlayFabPlayer_ReturnValue;             // 0x00E0(0x0060)(ConstParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_ChatMuteTypes                               CallFunc_IsPlayerMuted_Mute_Type;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerMuted_isMuted;                    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x2];                                      // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x0174(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0188(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A3[0x5];                                      // 0x01A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x01A8(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue_1;        // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x01C8(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue_2;        // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E2[0x6];                                      // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01F0(0x0018)()
	class AMordhauPlayerState*                    K2Node_DynamicCast_AsMordhau_Player_State_1;       // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_212[0x2];                                      // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChecked_ReturnValue;                    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x2];                                      // 0x0232(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A[0x6];                                      // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue_1;         // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item_2;                         // 0x0290(0x0018)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauGameState_C*                 K2Node_DynamicCast_AsBP_Mordhau_Game_State;        // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetChatColor_Color;                       // 0x02CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChatBox_C_OnMessageReceived) == 0x000008, "Wrong alignment on BP_ChatBox_C_OnMessageReceived");
static_assert(sizeof(BP_ChatBox_C_OnMessageReceived) == 0x0002E0, "Wrong size on BP_ChatBox_C_OnMessageReceived");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, Message) == 0x000000, "Member 'BP_ChatBox_C_OnMessageReceived::Message' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, Player) == 0x000018, "Member 'BP_ChatBox_C_OnMessageReceived::Player' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, Prefix) == 0x000020, "Member 'BP_ChatBox_C_OnMessageReceived::Prefix' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, ChatUserType) == 0x000038, "Member 'BP_ChatBox_C_OnMessageReceived::ChatUserType' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, BannedWordFound) == 0x000039, "Member 'BP_ChatBox_C_OnMessageReceived::BannedWordFound' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, TempNewString) == 0x000040, "Member 'BP_ChatBox_C_OnMessageReceived::TempNewString' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, ProfaneWordFound) == 0x000050, "Member 'BP_ChatBox_C_OnMessageReceived::ProfaneWordFound' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, NameColor) == 0x000054, "Member 'BP_ChatBox_C_OnMessageReceived::NameColor' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_ChatBox_C_OnMessageReceived::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, K2Node_MakeStruct_S_ChatMessage) == 0x000068, "Member 'BP_ChatBox_C_OnMessageReceived::K2Node_MakeStruct_S_ChatMessage' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Conv_TextToString_ReturnValue) == 0x0000A8, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, K2Node_DynamicCast_AsMordhau_Player_State) == 0x0000C0, "Member 'BP_ChatBox_C_OnMessageReceived::K2Node_DynamicCast_AsMordhau_Player_State' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_ChatBox_C_OnMessageReceived::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_GetPlayerName_ReturnValue) == 0x0000D0, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_GetPlayFabPlayer_ReturnValue) == 0x0000E0, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_GetPlayFabPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000140, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_IsPlayerMuted_Mute_Type) == 0x000150, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_IsPlayerMuted_Mute_Type' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_IsPlayerMuted_isMuted) == 0x000151, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_IsPlayerMuted_isMuted' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000158, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, K2Node_SwitchEnum_CmpSuccess) == 0x000168, "Member 'BP_ChatBox_C_OnMessageReceived::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, Temp_bool_True_if_break_was_hit_Variable) == 0x000169, "Member 'BP_ChatBox_C_OnMessageReceived::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, Temp_int_Array_Index_Variable) == 0x00016C, "Member 'BP_ChatBox_C_OnMessageReceived::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Not_PreBool_ReturnValue) == 0x000170, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000171, "Member 'BP_ChatBox_C_OnMessageReceived::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_IsConsolePlatform_ReturnValue) == 0x000172, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Not_PreBool_ReturnValue_1) == 0x000173, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Map_Find_Value) == 0x000174, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Map_Find_ReturnValue) == 0x000184, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_MakeLiteralText_ReturnValue) == 0x000188, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_EqualEqual_TextText_ReturnValue) == 0x0001A0, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001A1, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001A2, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_MakeLiteralText_ReturnValue_1) == 0x0001A8, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_EqualEqual_TextText_ReturnValue_1) == 0x0001C0, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_EqualEqual_TextText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Array_Add_ReturnValue) == 0x0001C4, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_MakeLiteralText_ReturnValue_2) == 0x0001C8, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_BooleanOR_ReturnValue) == 0x0001E0, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_EqualEqual_TextText_ReturnValue_2) == 0x0001E1, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_EqualEqual_TextText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_GetPlayerController_ReturnValue) == 0x0001E8, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Conv_StringToText_ReturnValue) == 0x0001F0, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, K2Node_DynamicCast_AsMordhau_Player_State_1) == 0x000208, "Member 'BP_ChatBox_C_OnMessageReceived::K2Node_DynamicCast_AsMordhau_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, K2Node_DynamicCast_bSuccess_1) == 0x000210, "Member 'BP_ChatBox_C_OnMessageReceived::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000211, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, Temp_int_Array_Index_Variable_1) == 0x000214, "Member 'BP_ChatBox_C_OnMessageReceived::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x000218, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Array_Get_Item) == 0x000220, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_IsChecked_ReturnValue) == 0x000230, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_IsChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Contains_ReturnValue) == 0x000231, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Array_Length_ReturnValue) == 0x000234, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Less_IntInt_ReturnValue) == 0x000238, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_BooleanAND_ReturnValue) == 0x000239, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Array_Get_Item_1) == 0x000240, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Array_Length_ReturnValue_1) == 0x000250, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Replace_ReturnValue) == 0x000258, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Replace_ReturnValue_1) == 0x000268, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Contains_ReturnValue_1) == 0x000278, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_GetRealTimeSeconds_ReturnValue_1) == 0x00027C, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_GetRealTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Array_Length_ReturnValue_2) == 0x000280, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Subtract_IntInt_ReturnValue) == 0x000284, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000288, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Array_Get_Item_2) == 0x000290, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_GetGameState_ReturnValue) == 0x0002A8, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, K2Node_DynamicCast_AsBP_Mordhau_Game_State) == 0x0002B0, "Member 'BP_ChatBox_C_OnMessageReceived::K2Node_DynamicCast_AsBP_Mordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, K2Node_DynamicCast_bSuccess_2) == 0x0002B8, "Member 'BP_ChatBox_C_OnMessageReceived::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, Temp_int_Loop_Counter_Variable_1) == 0x0002BC, "Member 'BP_ChatBox_C_OnMessageReceived::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002C0, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002C4, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_BooleanAND_ReturnValue_1) == 0x0002C8, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnMessageReceived, CallFunc_GetChatColor_Color) == 0x0002CC, "Member 'BP_ChatBox_C_OnMessageReceived::CallFunc_GetChatColor_Color' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.OnEscape
// 0x0020 (0x0020 - 0x0000)
struct BP_ChatBox_C_OnEscape final
{
public:
	class AMordhauHUD*                            CallFunc_GetMordhauHUD_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauHUD_C*                       K2Node_DynamicCast_AsBP_Mordhau_HUD;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChatBox_C_OnEscape) == 0x000008, "Wrong alignment on BP_ChatBox_C_OnEscape");
static_assert(sizeof(BP_ChatBox_C_OnEscape) == 0x000020, "Wrong size on BP_ChatBox_C_OnEscape");
static_assert(offsetof(BP_ChatBox_C_OnEscape, CallFunc_GetMordhauHUD_ReturnValue) == 0x000000, "Member 'BP_ChatBox_C_OnEscape::CallFunc_GetMordhauHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEscape, K2Node_DynamicCast_AsBP_Mordhau_HUD) == 0x000008, "Member 'BP_ChatBox_C_OnEscape::K2Node_DynamicCast_AsBP_Mordhau_HUD' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEscape, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_ChatBox_C_OnEscape::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEscape, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_ChatBox_C_OnEscape::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnEscape, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BP_ChatBox_C_OnEscape::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.GetChatBoxVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_ChatBox_C_GetChatBoxVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChatBox_C_GetChatBoxVisibility) == 0x000001, "Wrong alignment on BP_ChatBox_C_GetChatBoxVisibility");
static_assert(sizeof(BP_ChatBox_C_GetChatBoxVisibility) == 0x000001, "Wrong size on BP_ChatBox_C_GetChatBoxVisibility");
static_assert(offsetof(BP_ChatBox_C_GetChatBoxVisibility, ReturnValue) == 0x000000, "Member 'BP_ChatBox_C_GetChatBoxVisibility::ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.GetEntriesVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_ChatBox_C_GetEntriesVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChatBox_C_GetEntriesVisibility) == 0x000001, "Wrong alignment on BP_ChatBox_C_GetEntriesVisibility");
static_assert(sizeof(BP_ChatBox_C_GetEntriesVisibility) == 0x000001, "Wrong size on BP_ChatBox_C_GetEntriesVisibility");
static_assert(offsetof(BP_ChatBox_C_GetEntriesVisibility, ReturnValue) == 0x000000, "Member 'BP_ChatBox_C_GetEntriesVisibility::ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.AddEntriesEntry
// 0x0048 (0x0048 - 0x0000)
struct BP_ChatBox_C_AddEntriesEntry final
{
public:
	class UBP_ChatBoxEntry_C*                     Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ChatBoxEntry_C*                     CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ChatBoxEntry_C*                     CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChatBox_C_AddEntriesEntry) == 0x000008, "Wrong alignment on BP_ChatBox_C_AddEntriesEntry");
static_assert(sizeof(BP_ChatBox_C_AddEntriesEntry) == 0x000048, "Wrong size on BP_ChatBox_C_AddEntriesEntry");
static_assert(offsetof(BP_ChatBox_C_AddEntriesEntry, Entry) == 0x000000, "Member 'BP_ChatBox_C_AddEntriesEntry::Entry' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntriesEntry, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_ChatBox_C_AddEntriesEntry::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntriesEntry, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_ChatBox_C_AddEntriesEntry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntriesEntry, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'BP_ChatBox_C_AddEntriesEntry::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntriesEntry, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_ChatBox_C_AddEntriesEntry::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntriesEntry, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'BP_ChatBox_C_AddEntriesEntry::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntriesEntry, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'BP_ChatBox_C_AddEntriesEntry::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntriesEntry, CallFunc_Array_RemoveItem_ReturnValue) == 0x00002C, "Member 'BP_ChatBox_C_AddEntriesEntry::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntriesEntry, CallFunc_AddChild_ReturnValue) == 0x000030, "Member 'BP_ChatBox_C_AddEntriesEntry::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntriesEntry, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_ChatBox_C_AddEntriesEntry::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntriesEntry, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_ChatBox_C_AddEntriesEntry::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntriesEntry, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'BP_ChatBox_C_AddEntriesEntry::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddEntriesEntry, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_ChatBox_C_AddEntriesEntry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.AddViewModeEntry
// 0x0090 (0x0090 - 0x0000)
struct BP_ChatBox_C_AddViewModeEntry final
{
public:
	class UBP_ChatBoxEntry_C*                     Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ChatBoxEntry_C*                     CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ChatBoxEntry_C*                     CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ChatBoxEntry_C*                     CallFunc_Array_Get_Item_2;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChatBox_C_AddViewModeEntry) == 0x000008, "Wrong alignment on BP_ChatBox_C_AddViewModeEntry");
static_assert(sizeof(BP_ChatBox_C_AddViewModeEntry) == 0x000090, "Wrong size on BP_ChatBox_C_AddViewModeEntry");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, Entry) == 0x000000, "Member 'BP_ChatBox_C_AddViewModeEntry::Entry' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, Temp_int_Variable) == 0x000008, "Member 'BP_ChatBox_C_AddViewModeEntry::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, Temp_int_Variable_1) == 0x000010, "Member 'BP_ChatBox_C_AddViewModeEntry::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_Array_Length_ReturnValue_2) == 0x000038, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_AddChild_ReturnValue) == 0x000040, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_AddChild_ReturnValue_1) == 0x000060, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_Array_Length_ReturnValue_3) == 0x000068, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_Array_Get_Item_2) == 0x000070, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000078, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_Array_RemoveItem_ReturnValue) == 0x00007C, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_Array_Length_ReturnValue_4) == 0x000080, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_Array_Add_ReturnValue) == 0x000084, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddViewModeEntry, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000088, "Member 'BP_ChatBox_C_AddViewModeEntry::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.GetText_0
// 0x0018 (0x0018 - 0x0000)
struct BP_ChatBox_C_GetText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_ChatBox_C_GetText_0) == 0x000008, "Wrong alignment on BP_ChatBox_C_GetText_0");
static_assert(sizeof(BP_ChatBox_C_GetText_0) == 0x000018, "Wrong size on BP_ChatBox_C_GetText_0");
static_assert(offsetof(BP_ChatBox_C_GetText_0, ReturnValue) == 0x000000, "Member 'BP_ChatBox_C_GetText_0::ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.GetVisibility_0
// 0x000C (0x000C - 0x0000)
struct BP_ChatBox_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChatBox_C_GetVisibility_0) == 0x000004, "Wrong alignment on BP_ChatBox_C_GetVisibility_0");
static_assert(sizeof(BP_ChatBox_C_GetVisibility_0) == 0x00000C, "Wrong size on BP_ChatBox_C_GetVisibility_0");
static_assert(offsetof(BP_ChatBox_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_ChatBox_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetVisibility_0, CallFunc_GetChildrenCount_ReturnValue) == 0x000004, "Member 'BP_ChatBox_C_GetVisibility_0::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetVisibility_0, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_ChatBox_C_GetVisibility_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.MutePlayer
// 0x0168 (0x0168 - 0x0000)
struct BP_ChatBox_C_MutePlayer final
{
public:
	E_ChatMuteTypes                               MuteType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayFabPlayer                         Player;                                            // 0x0008(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	E_ChatMuteTypes                               CallFunc_IsPlayerMuted_Mute_Type;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerMuted_isMuted;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayFabPlayer                         CallFunc_GetPlayFabPlayer_ReturnValue;             // 0x0078(0x0060)(HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x00D8(0x0018)(ConstParm)
	bool                                          CallFunc_NotEqual_PlayFabPlayer_ReturnValue;       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ChatBoxEntry_C*                     CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ChatBoxEntry_C*                     CallFunc_Array_Get_Item_1;                         // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Equal_PlayFabPlayer_ReturnValue;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0118(0x0018)(ConstParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MutedPlayerEntry_C*                 CallFunc_Create_ReturnValue;                       // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MutedPlayerEntry_C*                 CallFunc_Create_ReturnValue_1;                     // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChatBox_C_MutePlayer) == 0x000008, "Wrong alignment on BP_ChatBox_C_MutePlayer");
static_assert(sizeof(BP_ChatBox_C_MutePlayer) == 0x000168, "Wrong size on BP_ChatBox_C_MutePlayer");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, MuteType) == 0x000000, "Member 'BP_ChatBox_C_MutePlayer::MuteType' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, Player) == 0x000008, "Member 'BP_ChatBox_C_MutePlayer::Player' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, CallFunc_IsPlayerMuted_Mute_Type) == 0x000068, "Member 'BP_ChatBox_C_MutePlayer::CallFunc_IsPlayerMuted_Mute_Type' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, CallFunc_IsPlayerMuted_isMuted) == 0x000069, "Member 'BP_ChatBox_C_MutePlayer::CallFunc_IsPlayerMuted_isMuted' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, K2Node_SwitchEnum_CmpSuccess) == 0x00006A, "Member 'BP_ChatBox_C_MutePlayer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'BP_ChatBox_C_MutePlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BP_ChatBox_C_MutePlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_ChatBox_C_MutePlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, CallFunc_GetPlayFabPlayer_ReturnValue) == 0x000078, "Member 'BP_ChatBox_C_MutePlayer::CallFunc_GetPlayFabPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, Temp_text_Variable) == 0x0000D8, "Member 'BP_ChatBox_C_MutePlayer::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, CallFunc_NotEqual_PlayFabPlayer_ReturnValue) == 0x0000F0, "Member 'BP_ChatBox_C_MutePlayer::CallFunc_NotEqual_PlayFabPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'BP_ChatBox_C_MutePlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'BP_ChatBox_C_MutePlayer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, CallFunc_Equal_PlayFabPlayer_ReturnValue) == 0x000108, "Member 'BP_ChatBox_C_MutePlayer::CallFunc_Equal_PlayFabPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, CallFunc_Array_Length_ReturnValue) == 0x00010C, "Member 'BP_ChatBox_C_MutePlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'BP_ChatBox_C_MutePlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, Temp_text_Variable_1) == 0x000118, "Member 'BP_ChatBox_C_MutePlayer::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, CallFunc_GetPlayerController_ReturnValue) == 0x000130, "Member 'BP_ChatBox_C_MutePlayer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000138, "Member 'BP_ChatBox_C_MutePlayer::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, CallFunc_Create_ReturnValue) == 0x000140, "Member 'BP_ChatBox_C_MutePlayer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, CallFunc_Not_PreBool_ReturnValue) == 0x000148, "Member 'BP_ChatBox_C_MutePlayer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, CallFunc_BooleanOR_ReturnValue) == 0x000149, "Member 'BP_ChatBox_C_MutePlayer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, CallFunc_AddChild_ReturnValue) == 0x000150, "Member 'BP_ChatBox_C_MutePlayer::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, CallFunc_Create_ReturnValue_1) == 0x000158, "Member 'BP_ChatBox_C_MutePlayer::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_MutePlayer, CallFunc_AddChild_ReturnValue_1) == 0x000160, "Member 'BP_ChatBox_C_MutePlayer::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.UnmutePlayer
// 0x00D8 (0x00D8 - 0x0000)
struct BP_ChatBox_C_UnmutePlayer final
{
public:
	struct FPlayFabPlayer                         Player;                                            // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FPlayFabPlayer                         CallFunc_GetPlayFabPlayer_ReturnValue;             // 0x0060(0x0060)(HasGetValueTypeHash)
	int32                                         CallFunc_RemovePlayerFromMutedMap_Player_Index;    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_PlayFabPlayer_ReturnValue;       // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ChatMuteTypes                               CallFunc_IsPlayerMuted_Mute_Type;                  // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerMuted_isMuted;                    // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C7[0x1];                                       // 0x00C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChildAt_ReturnValue;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChatBox_C_UnmutePlayer) == 0x000008, "Wrong alignment on BP_ChatBox_C_UnmutePlayer");
static_assert(sizeof(BP_ChatBox_C_UnmutePlayer) == 0x0000D8, "Wrong size on BP_ChatBox_C_UnmutePlayer");
static_assert(offsetof(BP_ChatBox_C_UnmutePlayer, Player) == 0x000000, "Member 'BP_ChatBox_C_UnmutePlayer::Player' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_UnmutePlayer, CallFunc_GetPlayFabPlayer_ReturnValue) == 0x000060, "Member 'BP_ChatBox_C_UnmutePlayer::CallFunc_GetPlayFabPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_UnmutePlayer, CallFunc_RemovePlayerFromMutedMap_Player_Index) == 0x0000C0, "Member 'BP_ChatBox_C_UnmutePlayer::CallFunc_RemovePlayerFromMutedMap_Player_Index' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_UnmutePlayer, CallFunc_NotEqual_PlayFabPlayer_ReturnValue) == 0x0000C4, "Member 'BP_ChatBox_C_UnmutePlayer::CallFunc_NotEqual_PlayFabPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_UnmutePlayer, CallFunc_IsPlayerMuted_Mute_Type) == 0x0000C5, "Member 'BP_ChatBox_C_UnmutePlayer::CallFunc_IsPlayerMuted_Mute_Type' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_UnmutePlayer, CallFunc_IsPlayerMuted_isMuted) == 0x0000C6, "Member 'BP_ChatBox_C_UnmutePlayer::CallFunc_IsPlayerMuted_isMuted' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_UnmutePlayer, CallFunc_GetPlayerController_ReturnValue) == 0x0000C8, "Member 'BP_ChatBox_C_UnmutePlayer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_UnmutePlayer, CallFunc_RemoveChildAt_ReturnValue) == 0x0000D0, "Member 'BP_ChatBox_C_UnmutePlayer::CallFunc_RemoveChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_UnmutePlayer, CallFunc_IsLocalPlayerController_ReturnValue) == 0x0000D1, "Member 'BP_ChatBox_C_UnmutePlayer::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_UnmutePlayer, CallFunc_Not_PreBool_ReturnValue) == 0x0000D2, "Member 'BP_ChatBox_C_UnmutePlayer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_UnmutePlayer, CallFunc_BooleanOR_ReturnValue) == 0x0000D3, "Member 'BP_ChatBox_C_UnmutePlayer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.Get Keys From Value
// 0x00E0 (0x00E0 - 0x0000)
struct BP_ChatBox_C_Get_Keys_From_Value final
{
public:
	TMap<class UBP_ChatBoxEntry_C*, class FString> PreviousMessagesMap;                               // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	class FString                                 Value__SteamID_;                                   // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class UBP_ChatBoxEntry_C*>             Keys;                                              // 0x0060(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UBP_ChatBoxEntry_C*>             All_keys_with_same_value;                          // 0x0070(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UBP_ChatBoxEntry_C*>             CallFunc_Map_Keys_Keys;                            // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class FString>                         CallFunc_Map_Values_Values;                        // 0x0090(0x0010)(ReferenceParm)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x1];                                       // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ChatBoxEntry_C*                     CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChatBox_C_Get_Keys_From_Value) == 0x000008, "Wrong alignment on BP_ChatBox_C_Get_Keys_From_Value");
static_assert(sizeof(BP_ChatBox_C_Get_Keys_From_Value) == 0x0000E0, "Wrong size on BP_ChatBox_C_Get_Keys_From_Value");
static_assert(offsetof(BP_ChatBox_C_Get_Keys_From_Value, PreviousMessagesMap) == 0x000000, "Member 'BP_ChatBox_C_Get_Keys_From_Value::PreviousMessagesMap' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Get_Keys_From_Value, Value__SteamID_) == 0x000050, "Member 'BP_ChatBox_C_Get_Keys_From_Value::Value__SteamID_' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Get_Keys_From_Value, Keys) == 0x000060, "Member 'BP_ChatBox_C_Get_Keys_From_Value::Keys' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Get_Keys_From_Value, All_keys_with_same_value) == 0x000070, "Member 'BP_ChatBox_C_Get_Keys_From_Value::All_keys_with_same_value' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Get_Keys_From_Value, CallFunc_Map_Keys_Keys) == 0x000080, "Member 'BP_ChatBox_C_Get_Keys_From_Value::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Get_Keys_From_Value, CallFunc_Map_Values_Values) == 0x000090, "Member 'BP_ChatBox_C_Get_Keys_From_Value::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Get_Keys_From_Value, Temp_bool_True_if_break_was_hit_Variable) == 0x0000A0, "Member 'BP_ChatBox_C_Get_Keys_From_Value::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Get_Keys_From_Value, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'BP_ChatBox_C_Get_Keys_From_Value::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Get_Keys_From_Value, CallFunc_Not_PreBool_ReturnValue) == 0x0000A8, "Member 'BP_ChatBox_C_Get_Keys_From_Value::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Get_Keys_From_Value, Temp_int_Array_Index_Variable) == 0x0000AC, "Member 'BP_ChatBox_C_Get_Keys_From_Value::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Get_Keys_From_Value, Temp_int_Loop_Counter_Variable) == 0x0000B0, "Member 'BP_ChatBox_C_Get_Keys_From_Value::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Get_Keys_From_Value, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_ChatBox_C_Get_Keys_From_Value::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Get_Keys_From_Value, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000C8, "Member 'BP_ChatBox_C_Get_Keys_From_Value::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Get_Keys_From_Value, CallFunc_Less_IntInt_ReturnValue) == 0x0000C9, "Member 'BP_ChatBox_C_Get_Keys_From_Value::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Get_Keys_From_Value, CallFunc_BooleanAND_ReturnValue) == 0x0000CA, "Member 'BP_ChatBox_C_Get_Keys_From_Value::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Get_Keys_From_Value, CallFunc_Add_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_ChatBox_C_Get_Keys_From_Value::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Get_Keys_From_Value, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'BP_ChatBox_C_Get_Keys_From_Value::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Get_Keys_From_Value, CallFunc_Array_Add_ReturnValue) == 0x0000D8, "Member 'BP_ChatBox_C_Get_Keys_From_Value::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.AddPlayerToMutedMap
// 0x0080 (0x0080 - 0x0000)
struct BP_ChatBox_C_AddPlayerToMutedMap final
{
public:
	struct FPlayFabPlayer                         Player;                                            // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	E_ChatMuteTypes                               Mute_Type;                                         // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauSingleton*                      CallFunc_GetMordhauSingleton_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MordhauSingleton_C*                 K2Node_DynamicCast_AsBP_Mordhau_Singleton;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ChatMuteTypes                               CallFunc_Map_Find_Value;                           // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChatBox_C_AddPlayerToMutedMap) == 0x000008, "Wrong alignment on BP_ChatBox_C_AddPlayerToMutedMap");
static_assert(sizeof(BP_ChatBox_C_AddPlayerToMutedMap) == 0x000080, "Wrong size on BP_ChatBox_C_AddPlayerToMutedMap");
static_assert(offsetof(BP_ChatBox_C_AddPlayerToMutedMap, Player) == 0x000000, "Member 'BP_ChatBox_C_AddPlayerToMutedMap::Player' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddPlayerToMutedMap, Mute_Type) == 0x000060, "Member 'BP_ChatBox_C_AddPlayerToMutedMap::Mute_Type' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddPlayerToMutedMap, CallFunc_GetMordhauSingleton_ReturnValue) == 0x000068, "Member 'BP_ChatBox_C_AddPlayerToMutedMap::CallFunc_GetMordhauSingleton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddPlayerToMutedMap, K2Node_DynamicCast_AsBP_Mordhau_Singleton) == 0x000070, "Member 'BP_ChatBox_C_AddPlayerToMutedMap::K2Node_DynamicCast_AsBP_Mordhau_Singleton' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddPlayerToMutedMap, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_ChatBox_C_AddPlayerToMutedMap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddPlayerToMutedMap, CallFunc_Map_Find_Value) == 0x000079, "Member 'BP_ChatBox_C_AddPlayerToMutedMap::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_AddPlayerToMutedMap, CallFunc_Map_Find_ReturnValue) == 0x00007A, "Member 'BP_ChatBox_C_AddPlayerToMutedMap::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.IsPlayerMuted
// 0x0080 (0x0080 - 0x0000)
struct BP_ChatBox_C_IsPlayerMuted final
{
public:
	struct FPlayFabPlayer                         Player;                                            // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	E_ChatMuteTypes                               Mute_Type;                                         // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isMuted_0;                                         // 0x0061(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauSingleton*                      CallFunc_GetMordhauSingleton_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MordhauSingleton_C*                 K2Node_DynamicCast_AsBP_Mordhau_Singleton;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ChatMuteTypes                               CallFunc_Map_Find_Value;                           // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChatBox_C_IsPlayerMuted) == 0x000008, "Wrong alignment on BP_ChatBox_C_IsPlayerMuted");
static_assert(sizeof(BP_ChatBox_C_IsPlayerMuted) == 0x000080, "Wrong size on BP_ChatBox_C_IsPlayerMuted");
static_assert(offsetof(BP_ChatBox_C_IsPlayerMuted, Player) == 0x000000, "Member 'BP_ChatBox_C_IsPlayerMuted::Player' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_IsPlayerMuted, Mute_Type) == 0x000060, "Member 'BP_ChatBox_C_IsPlayerMuted::Mute_Type' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_IsPlayerMuted, isMuted_0) == 0x000061, "Member 'BP_ChatBox_C_IsPlayerMuted::isMuted_0' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_IsPlayerMuted, CallFunc_GetMordhauSingleton_ReturnValue) == 0x000068, "Member 'BP_ChatBox_C_IsPlayerMuted::CallFunc_GetMordhauSingleton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_IsPlayerMuted, K2Node_DynamicCast_AsBP_Mordhau_Singleton) == 0x000070, "Member 'BP_ChatBox_C_IsPlayerMuted::K2Node_DynamicCast_AsBP_Mordhau_Singleton' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_IsPlayerMuted, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_ChatBox_C_IsPlayerMuted::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_IsPlayerMuted, CallFunc_Map_Find_Value) == 0x000079, "Member 'BP_ChatBox_C_IsPlayerMuted::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_IsPlayerMuted, CallFunc_Map_Find_ReturnValue) == 0x00007A, "Member 'BP_ChatBox_C_IsPlayerMuted::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.RemovePlayerFromMutedMap
// 0x00A0 (0x00A0 - 0x0000)
struct BP_ChatBox_C_RemovePlayerFromMutedMap final
{
public:
	struct FPlayFabPlayer                         Player;                                            // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Player_Index;                                      // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauSingleton*                      CallFunc_GetMordhauSingleton_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MordhauSingleton_C*                 K2Node_DynamicCast_AsBP_Mordhau_Singleton;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPlayFabPlayer>                 CallFunc_Map_Keys_Keys;                            // 0x0080(0x0010)(ReferenceParm)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ChatMuteTypes                               CallFunc_Map_Find_Value;                           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChatBox_C_RemovePlayerFromMutedMap) == 0x000008, "Wrong alignment on BP_ChatBox_C_RemovePlayerFromMutedMap");
static_assert(sizeof(BP_ChatBox_C_RemovePlayerFromMutedMap) == 0x0000A0, "Wrong size on BP_ChatBox_C_RemovePlayerFromMutedMap");
static_assert(offsetof(BP_ChatBox_C_RemovePlayerFromMutedMap, Player) == 0x000000, "Member 'BP_ChatBox_C_RemovePlayerFromMutedMap::Player' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_RemovePlayerFromMutedMap, Player_Index) == 0x000060, "Member 'BP_ChatBox_C_RemovePlayerFromMutedMap::Player_Index' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_RemovePlayerFromMutedMap, CallFunc_GetMordhauSingleton_ReturnValue) == 0x000068, "Member 'BP_ChatBox_C_RemovePlayerFromMutedMap::CallFunc_GetMordhauSingleton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_RemovePlayerFromMutedMap, K2Node_DynamicCast_AsBP_Mordhau_Singleton) == 0x000070, "Member 'BP_ChatBox_C_RemovePlayerFromMutedMap::K2Node_DynamicCast_AsBP_Mordhau_Singleton' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_RemovePlayerFromMutedMap, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_ChatBox_C_RemovePlayerFromMutedMap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_RemovePlayerFromMutedMap, CallFunc_Map_Keys_Keys) == 0x000080, "Member 'BP_ChatBox_C_RemovePlayerFromMutedMap::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_RemovePlayerFromMutedMap, CallFunc_Map_Remove_ReturnValue) == 0x000090, "Member 'BP_ChatBox_C_RemovePlayerFromMutedMap::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_RemovePlayerFromMutedMap, CallFunc_Array_Find_ReturnValue) == 0x000094, "Member 'BP_ChatBox_C_RemovePlayerFromMutedMap::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_RemovePlayerFromMutedMap, CallFunc_Map_Find_Value) == 0x000098, "Member 'BP_ChatBox_C_RemovePlayerFromMutedMap::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_RemovePlayerFromMutedMap, CallFunc_Map_Find_ReturnValue) == 0x000099, "Member 'BP_ChatBox_C_RemovePlayerFromMutedMap::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.Repopulate Muted Player List
// 0x0110 (0x0110 - 0x0000)
struct BP_ChatBox_C_Repopulate_Muted_Player_List final
{
public:
	class FText                                   Temp_text_Variable;                                // 0x0000(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0018(0x0018)()
	class UBP_MutedPlayerEntry_C*                 CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ChatMuteTypes                               Temp_byte_Variable;                                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauSingleton*                      CallFunc_GetMordhauSingleton_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MordhauSingleton_C*                 K2Node_DynamicCast_AsBP_Mordhau_Singleton;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<E_ChatMuteTypes>                       CallFunc_Map_Values_Values;                        // 0x0068(0x0010)(ReferenceParm)
	TArray<struct FPlayFabPlayer>                 CallFunc_Map_Keys_Keys;                            // 0x0078(0x0010)(ReferenceParm)
	E_ChatMuteTypes                               CallFunc_Array_Get_Item;                           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayFabPlayer                         CallFunc_Array_Get_Item_1;                         // 0x0090(0x0060)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x00F0(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChatBox_C_Repopulate_Muted_Player_List) == 0x000008, "Wrong alignment on BP_ChatBox_C_Repopulate_Muted_Player_List");
static_assert(sizeof(BP_ChatBox_C_Repopulate_Muted_Player_List) == 0x000110, "Wrong size on BP_ChatBox_C_Repopulate_Muted_Player_List");
static_assert(offsetof(BP_ChatBox_C_Repopulate_Muted_Player_List, Temp_text_Variable) == 0x000000, "Member 'BP_ChatBox_C_Repopulate_Muted_Player_List::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Repopulate_Muted_Player_List, Temp_text_Variable_1) == 0x000018, "Member 'BP_ChatBox_C_Repopulate_Muted_Player_List::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Repopulate_Muted_Player_List, CallFunc_Create_ReturnValue) == 0x000030, "Member 'BP_ChatBox_C_Repopulate_Muted_Player_List::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Repopulate_Muted_Player_List, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_ChatBox_C_Repopulate_Muted_Player_List::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Repopulate_Muted_Player_List, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_ChatBox_C_Repopulate_Muted_Player_List::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Repopulate_Muted_Player_List, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_ChatBox_C_Repopulate_Muted_Player_List::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Repopulate_Muted_Player_List, Temp_byte_Variable) == 0x000044, "Member 'BP_ChatBox_C_Repopulate_Muted_Player_List::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Repopulate_Muted_Player_List, CallFunc_GetMordhauSingleton_ReturnValue) == 0x000048, "Member 'BP_ChatBox_C_Repopulate_Muted_Player_List::CallFunc_GetMordhauSingleton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Repopulate_Muted_Player_List, K2Node_DynamicCast_AsBP_Mordhau_Singleton) == 0x000050, "Member 'BP_ChatBox_C_Repopulate_Muted_Player_List::K2Node_DynamicCast_AsBP_Mordhau_Singleton' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Repopulate_Muted_Player_List, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_ChatBox_C_Repopulate_Muted_Player_List::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Repopulate_Muted_Player_List, CallFunc_AddChild_ReturnValue) == 0x000060, "Member 'BP_ChatBox_C_Repopulate_Muted_Player_List::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Repopulate_Muted_Player_List, CallFunc_Map_Values_Values) == 0x000068, "Member 'BP_ChatBox_C_Repopulate_Muted_Player_List::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Repopulate_Muted_Player_List, CallFunc_Map_Keys_Keys) == 0x000078, "Member 'BP_ChatBox_C_Repopulate_Muted_Player_List::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Repopulate_Muted_Player_List, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_ChatBox_C_Repopulate_Muted_Player_List::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Repopulate_Muted_Player_List, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'BP_ChatBox_C_Repopulate_Muted_Player_List::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Repopulate_Muted_Player_List, K2Node_Select_Default) == 0x0000F0, "Member 'BP_ChatBox_C_Repopulate_Muted_Player_List::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Repopulate_Muted_Player_List, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'BP_ChatBox_C_Repopulate_Muted_Player_List::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Repopulate_Muted_Player_List, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'BP_ChatBox_C_Repopulate_Muted_Player_List::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.GetVisibility_1
// 0x0002 (0x0002 - 0x0000)
struct BP_ChatBox_C_GetVisibility_1 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChatBox_C_GetVisibility_1) == 0x000001, "Wrong alignment on BP_ChatBox_C_GetVisibility_1");
static_assert(sizeof(BP_ChatBox_C_GetVisibility_1) == 0x000002, "Wrong size on BP_ChatBox_C_GetVisibility_1");
static_assert(offsetof(BP_ChatBox_C_GetVisibility_1, ReturnValue) == 0x000000, "Member 'BP_ChatBox_C_GetVisibility_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetVisibility_1, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_ChatBox_C_GetVisibility_1::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.Get_TextArea_bIsEnabled_0
// 0x0002 (0x0002 - 0x0000)
struct BP_ChatBox_C_Get_TextArea_bIsEnabled_0 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChatBox_C_Get_TextArea_bIsEnabled_0) == 0x000001, "Wrong alignment on BP_ChatBox_C_Get_TextArea_bIsEnabled_0");
static_assert(sizeof(BP_ChatBox_C_Get_TextArea_bIsEnabled_0) == 0x000002, "Wrong size on BP_ChatBox_C_Get_TextArea_bIsEnabled_0");
static_assert(offsetof(BP_ChatBox_C_Get_TextArea_bIsEnabled_0, ReturnValue) == 0x000000, "Member 'BP_ChatBox_C_Get_TextArea_bIsEnabled_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_Get_TextArea_bIsEnabled_0, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_ChatBox_C_Get_TextArea_bIsEnabled_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.GetVisibility_2
// 0x0005 (0x0005 - 0x0000)
struct BP_ChatBox_C_GetVisibility_2 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChatBox_C_GetVisibility_2) == 0x000001, "Wrong alignment on BP_ChatBox_C_GetVisibility_2");
static_assert(sizeof(BP_ChatBox_C_GetVisibility_2) == 0x000005, "Wrong size on BP_ChatBox_C_GetVisibility_2");
static_assert(offsetof(BP_ChatBox_C_GetVisibility_2, ReturnValue) == 0x000000, "Member 'BP_ChatBox_C_GetVisibility_2::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetVisibility_2, Temp_bool_Variable) == 0x000001, "Member 'BP_ChatBox_C_GetVisibility_2::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetVisibility_2, Temp_byte_Variable) == 0x000002, "Member 'BP_ChatBox_C_GetVisibility_2::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetVisibility_2, Temp_byte_Variable_1) == 0x000003, "Member 'BP_ChatBox_C_GetVisibility_2::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetVisibility_2, K2Node_Select_Default) == 0x000004, "Member 'BP_ChatBox_C_GetVisibility_2::K2Node_Select_Default' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.GetVisibility_3
// 0x0005 (0x0005 - 0x0000)
struct BP_ChatBox_C_GetVisibility_3 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChatBox_C_GetVisibility_3) == 0x000001, "Wrong alignment on BP_ChatBox_C_GetVisibility_3");
static_assert(sizeof(BP_ChatBox_C_GetVisibility_3) == 0x000005, "Wrong size on BP_ChatBox_C_GetVisibility_3");
static_assert(offsetof(BP_ChatBox_C_GetVisibility_3, ReturnValue) == 0x000000, "Member 'BP_ChatBox_C_GetVisibility_3::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetVisibility_3, Temp_bool_Variable) == 0x000001, "Member 'BP_ChatBox_C_GetVisibility_3::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetVisibility_3, Temp_byte_Variable) == 0x000002, "Member 'BP_ChatBox_C_GetVisibility_3::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetVisibility_3, Temp_byte_Variable_1) == 0x000003, "Member 'BP_ChatBox_C_GetVisibility_3::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetVisibility_3, K2Node_Select_Default) == 0x000004, "Member 'BP_ChatBox_C_GetVisibility_3::K2Node_Select_Default' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.GetText_1
// 0x0120 (0x0120 - 0x0000)
struct BP_ChatBox_C_GetText_1 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00B8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0108(0x0018)()
};
static_assert(alignof(BP_ChatBox_C_GetText_1) == 0x000008, "Wrong alignment on BP_ChatBox_C_GetText_1");
static_assert(sizeof(BP_ChatBox_C_GetText_1) == 0x000120, "Wrong size on BP_ChatBox_C_GetText_1");
static_assert(offsetof(BP_ChatBox_C_GetText_1, ReturnValue) == 0x000000, "Member 'BP_ChatBox_C_GetText_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetText_1, CallFunc_MakeTimespan_ReturnValue) == 0x000018, "Member 'BP_ChatBox_C_GetText_1::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetText_1, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_ChatBox_C_GetText_1::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetText_1, CallFunc_BreakTimespan_Days) == 0x000024, "Member 'BP_ChatBox_C_GetText_1::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetText_1, CallFunc_BreakTimespan_Hours) == 0x000028, "Member 'BP_ChatBox_C_GetText_1::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetText_1, CallFunc_BreakTimespan_Minutes) == 0x00002C, "Member 'BP_ChatBox_C_GetText_1::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetText_1, CallFunc_BreakTimespan_Seconds) == 0x000030, "Member 'BP_ChatBox_C_GetText_1::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetText_1, CallFunc_BreakTimespan_Milliseconds) == 0x000034, "Member 'BP_ChatBox_C_GetText_1::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetText_1, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_ChatBox_C_GetText_1::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetText_1, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'BP_ChatBox_C_GetText_1::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetText_1, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000B8, "Member 'BP_ChatBox_C_GetText_1::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetText_1, K2Node_MakeArray_Array) == 0x0000F8, "Member 'BP_ChatBox_C_GetText_1::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_GetText_1, CallFunc_Format_ReturnValue) == 0x000108, "Member 'BP_ChatBox_C_GetText_1::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_ChatBox.BP_ChatBox_C.OnRep_bIsChatPaused
// 0x0050 (0x0050 - 0x0000)
struct BP_ChatBox_C_OnRep_bIsChatPaused final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ChatMessage                         CallFunc_Array_Get_Item;                           // 0x0010(0x0038)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChatBox_C_OnRep_bIsChatPaused) == 0x000008, "Wrong alignment on BP_ChatBox_C_OnRep_bIsChatPaused");
static_assert(sizeof(BP_ChatBox_C_OnRep_bIsChatPaused) == 0x000050, "Wrong size on BP_ChatBox_C_OnRep_bIsChatPaused");
static_assert(offsetof(BP_ChatBox_C_OnRep_bIsChatPaused, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_ChatBox_C_OnRep_bIsChatPaused::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnRep_bIsChatPaused, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ChatBox_C_OnRep_bIsChatPaused::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnRep_bIsChatPaused, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ChatBox_C_OnRep_bIsChatPaused::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnRep_bIsChatPaused, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_ChatBox_C_OnRep_bIsChatPaused::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnRep_bIsChatPaused, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_ChatBox_C_OnRep_bIsChatPaused::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChatBox_C_OnRep_bIsChatPaused, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_ChatBox_C_OnRep_bIsChatPaused::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

