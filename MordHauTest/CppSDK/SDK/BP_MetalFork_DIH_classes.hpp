#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MetalFork_DIH

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_structs.hpp"
#include "BP_MetalFork_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MetalFork_DIH.BP_MetalFork_DIH_C
// 0x0280 (0x1F20 - 0x1CA0)
class ABP_MetalFork_DIH_C final : public ABP_MetalFork_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1C98(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UCapsuleComponent*                      Capsule;                                           // 0x1CA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Particle;                                          // 0x1CA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        AttachPoint;                                       // 0x1CB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          HasAttachedChar;                                   // 0x1CB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CB9[0x7];                                     // 0x1CB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttackInfo                            BaseStrikeAttack;                                  // 0x1CC0(0x0128)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FAttackInfo                            BaseStabAttack;                                    // 0x1DE8(0x0128)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          UpdateAttachedStats;                               // 0x1F10(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void ExecuteUbergraph_BP_MetalFork_DIH(int32 EntryPoint);
	void BndEvt__BP_MetalFork_DIH_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void UpdateAttachedCharMulti(bool HasAttachedChar_0);
	void UpdateAttachedCharServer(bool HasAttachedChar_0);
	void ReceiveTick(float DeltaSeconds);
	void OnUsedToKillOther(class AAdvancedCharacter* Character, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MetalFork_DIH_C">();
	}
	static class ABP_MetalFork_DIH_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MetalFork_DIH_C>();
	}
};
static_assert(alignof(ABP_MetalFork_DIH_C) == 0x000010, "Wrong alignment on ABP_MetalFork_DIH_C");
static_assert(sizeof(ABP_MetalFork_DIH_C) == 0x001F20, "Wrong size on ABP_MetalFork_DIH_C");
static_assert(offsetof(ABP_MetalFork_DIH_C, UberGraphFrame) == 0x001C98, "Member 'ABP_MetalFork_DIH_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MetalFork_DIH_C, Capsule) == 0x001CA0, "Member 'ABP_MetalFork_DIH_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_MetalFork_DIH_C, Particle) == 0x001CA8, "Member 'ABP_MetalFork_DIH_C::Particle' has a wrong offset!");
static_assert(offsetof(ABP_MetalFork_DIH_C, AttachPoint) == 0x001CB0, "Member 'ABP_MetalFork_DIH_C::AttachPoint' has a wrong offset!");
static_assert(offsetof(ABP_MetalFork_DIH_C, HasAttachedChar) == 0x001CB8, "Member 'ABP_MetalFork_DIH_C::HasAttachedChar' has a wrong offset!");
static_assert(offsetof(ABP_MetalFork_DIH_C, BaseStrikeAttack) == 0x001CC0, "Member 'ABP_MetalFork_DIH_C::BaseStrikeAttack' has a wrong offset!");
static_assert(offsetof(ABP_MetalFork_DIH_C, BaseStabAttack) == 0x001DE8, "Member 'ABP_MetalFork_DIH_C::BaseStabAttack' has a wrong offset!");
static_assert(offsetof(ABP_MetalFork_DIH_C, UpdateAttachedStats) == 0x001F10, "Member 'ABP_MetalFork_DIH_C::UpdateAttachedStats' has a wrong offset!");

}

