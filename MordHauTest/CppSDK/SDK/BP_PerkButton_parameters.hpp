#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PerkButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_PerkButton.BP_PerkButton_C.ExecuteUbergraph_BP_PerkButton
// 0x0040 (0x0040 - 0x0000)
struct BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPerk_ReturnValue;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ComputePointsLeft_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ComputePointsLeft_ReturnValue_1;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PerkTooltip_C*                      K2Node_DynamicCast_AsBP_Perk_Tooltip;              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton) == 0x000008, "Wrong alignment on BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton");
static_assert(sizeof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton) == 0x000040, "Wrong size on BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton");
static_assert(offsetof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton, EntryPoint) == 0x000000, "Member 'BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton, Temp_bool_Variable) == 0x000004, "Member 'BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton, Temp_bool_Variable_1) == 0x000005, "Member 'BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton, CallFunc_IsValid_ReturnValue) == 0x000006, "Member 'BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton, CallFunc_IsValid_ReturnValue_1) == 0x000008, "Member 'BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton, CallFunc_Conv_IntToByte_ReturnValue) == 0x00001C, "Member 'BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton, CallFunc_HasPerk_ReturnValue) == 0x00001D, "Member 'BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton::CallFunc_HasPerk_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton, CallFunc_ComputePointsLeft_ReturnValue) == 0x000020, "Member 'BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton::CallFunc_ComputePointsLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton, CallFunc_IsValid_ReturnValue_2) == 0x000026, "Member 'BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton, CallFunc_ComputePointsLeft_ReturnValue_1) == 0x000028, "Member 'BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton::CallFunc_ComputePointsLeft_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton, K2Node_Select_Default) == 0x00002D, "Member 'BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton, K2Node_DynamicCast_AsBP_Perk_Tooltip) == 0x000030, "Member 'BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton::K2Node_DynamicCast_AsBP_Perk_Tooltip' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_PerkButton_C_ExecuteUbergraph_BP_PerkButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PerkButton.BP_PerkButton_C.GetToolTipText_0
// 0x0018 (0x0018 - 0x0000)
struct BP_PerkButton_C_GetToolTipText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_PerkButton_C_GetToolTipText_0) == 0x000008, "Wrong alignment on BP_PerkButton_C_GetToolTipText_0");
static_assert(sizeof(BP_PerkButton_C_GetToolTipText_0) == 0x000018, "Wrong size on BP_PerkButton_C_GetToolTipText_0");
static_assert(offsetof(BP_PerkButton_C_GetToolTipText_0, ReturnValue) == 0x000000, "Member 'BP_PerkButton_C_GetToolTipText_0::ReturnValue' has a wrong offset!");

// Function BP_PerkButton.BP_PerkButton_C.GetColorAndOpacity_0
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PerkButton_C_GetColorAndOpacity_0 final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0088(0x0028)()
};
static_assert(alignof(BP_PerkButton_C_GetColorAndOpacity_0) == 0x000008, "Wrong alignment on BP_PerkButton_C_GetColorAndOpacity_0");
static_assert(sizeof(BP_PerkButton_C_GetColorAndOpacity_0) == 0x0000B0, "Wrong size on BP_PerkButton_C_GetColorAndOpacity_0");
static_assert(offsetof(BP_PerkButton_C_GetColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'BP_PerkButton_C_GetColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetColorAndOpacity_0, Temp_bool_Variable) == 0x000028, "Member 'BP_PerkButton_C_GetColorAndOpacity_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetColorAndOpacity_0, Temp_struct_Variable) == 0x00002C, "Member 'BP_PerkButton_C_GetColorAndOpacity_0::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetColorAndOpacity_0, Temp_struct_Variable_1) == 0x00003C, "Member 'BP_PerkButton_C_GetColorAndOpacity_0::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetColorAndOpacity_0, Temp_bool_Variable_1) == 0x00004C, "Member 'BP_PerkButton_C_GetColorAndOpacity_0::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetColorAndOpacity_0, Temp_struct_Variable_2) == 0x000050, "Member 'BP_PerkButton_C_GetColorAndOpacity_0::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetColorAndOpacity_0, CallFunc_IsHovered_ReturnValue) == 0x000060, "Member 'BP_PerkButton_C_GetColorAndOpacity_0::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetColorAndOpacity_0, K2Node_Select_Default) == 0x000064, "Member 'BP_PerkButton_C_GetColorAndOpacity_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetColorAndOpacity_0, K2Node_Select_Default_1) == 0x000074, "Member 'BP_PerkButton_C_GetColorAndOpacity_0::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetColorAndOpacity_0, K2Node_MakeStruct_SlateColor) == 0x000088, "Member 'BP_PerkButton_C_GetColorAndOpacity_0::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function BP_PerkButton.BP_PerkButton_C.Get_CurrentPoints_Text_0
// 0x0030 (0x0030 - 0x0000)
struct BP_PerkButton_C_Get_CurrentPoints_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
};
static_assert(alignof(BP_PerkButton_C_Get_CurrentPoints_Text_0) == 0x000008, "Wrong alignment on BP_PerkButton_C_Get_CurrentPoints_Text_0");
static_assert(sizeof(BP_PerkButton_C_Get_CurrentPoints_Text_0) == 0x000030, "Wrong size on BP_PerkButton_C_Get_CurrentPoints_Text_0");
static_assert(offsetof(BP_PerkButton_C_Get_CurrentPoints_Text_0, ReturnValue) == 0x000000, "Member 'BP_PerkButton_C_Get_CurrentPoints_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_Get_CurrentPoints_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'BP_PerkButton_C_Get_CurrentPoints_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function BP_PerkButton.BP_PerkButton_C.Get_CurrentPoints_ColorAndOpacity_0
// 0x0078 (0x0078 - 0x0000)
struct BP_PerkButton_C_Get_CurrentPoints_ColorAndOpacity_0 final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0050(0x0028)()
};
static_assert(alignof(BP_PerkButton_C_Get_CurrentPoints_ColorAndOpacity_0) == 0x000008, "Wrong alignment on BP_PerkButton_C_Get_CurrentPoints_ColorAndOpacity_0");
static_assert(sizeof(BP_PerkButton_C_Get_CurrentPoints_ColorAndOpacity_0) == 0x000078, "Wrong size on BP_PerkButton_C_Get_CurrentPoints_ColorAndOpacity_0");
static_assert(offsetof(BP_PerkButton_C_Get_CurrentPoints_ColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'BP_PerkButton_C_Get_CurrentPoints_ColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_Get_CurrentPoints_ColorAndOpacity_0, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'BP_PerkButton_C_Get_CurrentPoints_ColorAndOpacity_0::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_Get_CurrentPoints_ColorAndOpacity_0, K2Node_MakeStruct_SlateColor_1) == 0x000050, "Member 'BP_PerkButton_C_Get_CurrentPoints_ColorAndOpacity_0::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function BP_PerkButton.BP_PerkButton_C.GetbIsEnabled_0
// 0x000C (0x000C - 0x0000)
struct BP_PerkButton_C_GetbIsEnabled_0 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ComputePointsLeft_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PerkButton_C_GetbIsEnabled_0) == 0x000004, "Wrong alignment on BP_PerkButton_C_GetbIsEnabled_0");
static_assert(sizeof(BP_PerkButton_C_GetbIsEnabled_0) == 0x00000C, "Wrong size on BP_PerkButton_C_GetbIsEnabled_0");
static_assert(offsetof(BP_PerkButton_C_GetbIsEnabled_0, ReturnValue) == 0x000000, "Member 'BP_PerkButton_C_GetbIsEnabled_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetbIsEnabled_0, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_PerkButton_C_GetbIsEnabled_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetbIsEnabled_0, CallFunc_ComputePointsLeft_ReturnValue) == 0x000004, "Member 'BP_PerkButton_C_GetbIsEnabled_0::CallFunc_ComputePointsLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetbIsEnabled_0, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_PerkButton_C_GetbIsEnabled_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetbIsEnabled_0, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'BP_PerkButton_C_GetbIsEnabled_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetbIsEnabled_0, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000A, "Member 'BP_PerkButton_C_GetbIsEnabled_0::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function BP_PerkButton.BP_PerkButton_C.Update Perk Button
// 0x0005 (0x0005 - 0x0000)
struct BP_PerkButton_C_Update_Perk_Button final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PerkButton_C_Update_Perk_Button) == 0x000001, "Wrong alignment on BP_PerkButton_C_Update_Perk_Button");
static_assert(sizeof(BP_PerkButton_C_Update_Perk_Button) == 0x000005, "Wrong size on BP_PerkButton_C_Update_Perk_Button");
static_assert(offsetof(BP_PerkButton_C_Update_Perk_Button, Temp_bool_Variable) == 0x000000, "Member 'BP_PerkButton_C_Update_Perk_Button::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_Update_Perk_Button, Temp_byte_Variable) == 0x000001, "Member 'BP_PerkButton_C_Update_Perk_Button::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_Update_Perk_Button, Temp_byte_Variable_1) == 0x000002, "Member 'BP_PerkButton_C_Update_Perk_Button::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_Update_Perk_Button, K2Node_Select_Default) == 0x000003, "Member 'BP_PerkButton_C_Update_Perk_Button::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_Update_Perk_Button, CallFunc_IsValidClass_ReturnValue) == 0x000004, "Member 'BP_PerkButton_C_Update_Perk_Button::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_PerkButton.BP_PerkButton_C.GetVisibility_0_0
// 0x0005 (0x0005 - 0x0000)
struct BP_PerkButton_C_GetVisibility_0_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PerkButton_C_GetVisibility_0_0) == 0x000001, "Wrong alignment on BP_PerkButton_C_GetVisibility_0_0");
static_assert(sizeof(BP_PerkButton_C_GetVisibility_0_0) == 0x000005, "Wrong size on BP_PerkButton_C_GetVisibility_0_0");
static_assert(offsetof(BP_PerkButton_C_GetVisibility_0_0, ReturnValue) == 0x000000, "Member 'BP_PerkButton_C_GetVisibility_0_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetVisibility_0_0, Temp_bool_Variable) == 0x000001, "Member 'BP_PerkButton_C_GetVisibility_0_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetVisibility_0_0, Temp_byte_Variable) == 0x000002, "Member 'BP_PerkButton_C_GetVisibility_0_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetVisibility_0_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_PerkButton_C_GetVisibility_0_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetVisibility_0_0, K2Node_Select_Default) == 0x000004, "Member 'BP_PerkButton_C_GetVisibility_0_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_PerkButton.BP_PerkButton_C.GetToolTipWidget_0
// 0x0018 (0x0018 - 0x0000)
struct BP_PerkButton_C_GetToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PerkTooltip_C*                      K2Node_DynamicCast_AsBP_Perk_Tooltip;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PerkButton_C_GetToolTipWidget_0) == 0x000008, "Wrong alignment on BP_PerkButton_C_GetToolTipWidget_0");
static_assert(sizeof(BP_PerkButton_C_GetToolTipWidget_0) == 0x000018, "Wrong size on BP_PerkButton_C_GetToolTipWidget_0");
static_assert(offsetof(BP_PerkButton_C_GetToolTipWidget_0, ReturnValue) == 0x000000, "Member 'BP_PerkButton_C_GetToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetToolTipWidget_0, K2Node_DynamicCast_AsBP_Perk_Tooltip) == 0x000008, "Member 'BP_PerkButton_C_GetToolTipWidget_0::K2Node_DynamicCast_AsBP_Perk_Tooltip' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetToolTipWidget_0, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_PerkButton_C_GetToolTipWidget_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PerkButton.BP_PerkButton_C.Update Perk Tooltip
// 0x0010 (0x0010 - 0x0000)
struct BP_PerkButton_C_Update_Perk_Tooltip final
{
public:
	class UBP_PerkTooltip_C*                      Perk_Tooltip;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PerkButton_C_Update_Perk_Tooltip) == 0x000008, "Wrong alignment on BP_PerkButton_C_Update_Perk_Tooltip");
static_assert(sizeof(BP_PerkButton_C_Update_Perk_Tooltip) == 0x000010, "Wrong size on BP_PerkButton_C_Update_Perk_Tooltip");
static_assert(offsetof(BP_PerkButton_C_Update_Perk_Tooltip, Perk_Tooltip) == 0x000000, "Member 'BP_PerkButton_C_Update_Perk_Tooltip::Perk_Tooltip' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_Update_Perk_Tooltip, Temp_bool_Variable) == 0x000008, "Member 'BP_PerkButton_C_Update_Perk_Tooltip::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_Update_Perk_Tooltip, Temp_bool_Variable_1) == 0x000009, "Member 'BP_PerkButton_C_Update_Perk_Tooltip::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_Update_Perk_Tooltip, K2Node_Select_Default) == 0x00000A, "Member 'BP_PerkButton_C_Update_Perk_Tooltip::K2Node_Select_Default' has a wrong offset!");

// Function BP_PerkButton.BP_PerkButton_C.GetColorAndOpacity_1
// 0x00A0 (0x00A0 - 0x0000)
struct BP_PerkButton_C_GetColorAndOpacity_1 final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0050(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0078(0x0028)()
};
static_assert(alignof(BP_PerkButton_C_GetColorAndOpacity_1) == 0x000008, "Wrong alignment on BP_PerkButton_C_GetColorAndOpacity_1");
static_assert(sizeof(BP_PerkButton_C_GetColorAndOpacity_1) == 0x0000A0, "Wrong size on BP_PerkButton_C_GetColorAndOpacity_1");
static_assert(offsetof(BP_PerkButton_C_GetColorAndOpacity_1, ReturnValue) == 0x000000, "Member 'BP_PerkButton_C_GetColorAndOpacity_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetColorAndOpacity_1, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'BP_PerkButton_C_GetColorAndOpacity_1::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetColorAndOpacity_1, K2Node_MakeStruct_SlateColor_1) == 0x000050, "Member 'BP_PerkButton_C_GetColorAndOpacity_1::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_GetColorAndOpacity_1, K2Node_MakeStruct_SlateColor_2) == 0x000078, "Member 'BP_PerkButton_C_GetColorAndOpacity_1::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");

// Function BP_PerkButton.BP_PerkButton_C.Get_Image_10_ColorAndOpacity_0
// 0x006C (0x006C - 0x0000)
struct BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0) == 0x000004, "Wrong alignment on BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0");
static_assert(sizeof(BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0) == 0x00006C, "Wrong size on BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0");
static_assert(offsetof(BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0, Temp_bool_Variable) == 0x000010, "Member 'BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0, Temp_struct_Variable) == 0x000014, "Member 'BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0, Temp_struct_Variable_1) == 0x000024, "Member 'BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0, Temp_bool_Variable_1) == 0x000034, "Member 'BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0, Temp_struct_Variable_2) == 0x000038, "Member 'BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0, CallFunc_IsHovered_ReturnValue) == 0x000048, "Member 'BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0, K2Node_Select_Default) == 0x00004C, "Member 'BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0, K2Node_Select_Default_1) == 0x00005C, "Member 'BP_PerkButton_C_Get_Image_10_ColorAndOpacity_0::K2Node_Select_Default_1' has a wrong offset!");

}

