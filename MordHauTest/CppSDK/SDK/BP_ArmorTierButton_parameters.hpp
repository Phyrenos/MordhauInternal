#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ArmorTierButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ArmorTierButton.BP_ArmorTierButton_C.ExecuteUbergraph_BP_ArmorTierButton
// 0x0014 (0x0014 - 0x0000)
struct BP_ArmorTierButton_C_ExecuteUbergraph_BP_ArmorTierButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_ArmorTierButton_C_ExecuteUbergraph_BP_ArmorTierButton) == 0x000004, "Wrong alignment on BP_ArmorTierButton_C_ExecuteUbergraph_BP_ArmorTierButton");
static_assert(sizeof(BP_ArmorTierButton_C_ExecuteUbergraph_BP_ArmorTierButton) == 0x000014, "Wrong size on BP_ArmorTierButton_C_ExecuteUbergraph_BP_ArmorTierButton");
static_assert(offsetof(BP_ArmorTierButton_C_ExecuteUbergraph_BP_ArmorTierButton, EntryPoint) == 0x000000, "Member 'BP_ArmorTierButton_C_ExecuteUbergraph_BP_ArmorTierButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierButton_C_ExecuteUbergraph_BP_ArmorTierButton, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_ArmorTierButton_C_ExecuteUbergraph_BP_ArmorTierButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_ArmorTierButton.BP_ArmorTierButton_C.Update
// 0x0128 (0x0128 - 0x0000)
struct BP_ArmorTierButton_C_Update final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Temp_byte_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0070(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0088(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00B0(0x0028)()
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x00E8(0x0028)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0110(0x0018)()
};
static_assert(alignof(BP_ArmorTierButton_C_Update) == 0x000008, "Wrong alignment on BP_ArmorTierButton_C_Update");
static_assert(sizeof(BP_ArmorTierButton_C_Update) == 0x000128, "Wrong size on BP_ArmorTierButton_C_Update");
static_assert(offsetof(BP_ArmorTierButton_C_Update, Temp_bool_Variable) == 0x000000, "Member 'BP_ArmorTierButton_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierButton_C_Update, Temp_struct_Variable) == 0x000004, "Member 'BP_ArmorTierButton_C_Update::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierButton_C_Update, Temp_struct_Variable_1) == 0x000014, "Member 'BP_ArmorTierButton_C_Update::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierButton_C_Update, Temp_bool_Variable_1) == 0x000024, "Member 'BP_ArmorTierButton_C_Update::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierButton_C_Update, Temp_byte_Variable) == 0x000025, "Member 'BP_ArmorTierButton_C_Update::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierButton_C_Update, Temp_text_Variable) == 0x000028, "Member 'BP_ArmorTierButton_C_Update::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierButton_C_Update, Temp_text_Variable_1) == 0x000040, "Member 'BP_ArmorTierButton_C_Update::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierButton_C_Update, Temp_text_Variable_2) == 0x000058, "Member 'BP_ArmorTierButton_C_Update::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierButton_C_Update, Temp_text_Variable_3) == 0x000070, "Member 'BP_ArmorTierButton_C_Update::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierButton_C_Update, K2Node_MakeStruct_SlateColor) == 0x000088, "Member 'BP_ArmorTierButton_C_Update::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierButton_C_Update, K2Node_MakeStruct_SlateColor_1) == 0x0000B0, "Member 'BP_ArmorTierButton_C_Update::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierButton_C_Update, K2Node_Select_Default) == 0x0000D8, "Member 'BP_ArmorTierButton_C_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierButton_C_Update, K2Node_Select_Default_1) == 0x0000E8, "Member 'BP_ArmorTierButton_C_Update::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierButton_C_Update, K2Node_Select_Default_2) == 0x000110, "Member 'BP_ArmorTierButton_C_Update::K2Node_Select_Default_2' has a wrong offset!");

}

