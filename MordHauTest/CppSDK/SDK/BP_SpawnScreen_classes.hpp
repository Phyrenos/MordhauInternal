#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpawnScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_BaseSpawnScreen_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_SpawnScreen.BP_SpawnScreen_C
// 0x0050 (0x02B8 - 0x0268)
class UBP_SpawnScreen_C : public UBP_BaseSpawnScreen_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	TArray<class UBP_SpawnScreenPoint_C*>         SpawnScreenPoint;                                  // 0x0270(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UBP_SpawnScreenIcon_C*>          SpawnScreenIcons;                                  // 0x0280(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMulticastInlineDelegate<void(class UBP_SpawnScreenPoint_C* Selected_Screen_Point)> Updated_Spawn_Point_Widgets;                       // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UBP_SpawnScreenPoint_C*                 SelectedScreenPoint;                               // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              Open_Loadout_Selection;                            // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_BP_SpawnScreen(int32 EntryPoint);
	void Hide();
	void Show();
	void UpdateSpawnPointWidgets();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void UpdateSpawnScreenIcons(class UCanvasPanel* Canvas_Panel);
	void SetColor(class UImage* Image, const TArray<struct FLinearColor>& Team_Color_Array, uint8 Team, class APlayerState* PlayerState);
	class FText GetText_0();
	void SelectNextSpawnPoint(bool bReverse);
	void GetSelectedSpawnPoint(int32* Index_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SpawnScreen_C">();
	}
	static class UBP_SpawnScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SpawnScreen_C>();
	}
};
static_assert(alignof(UBP_SpawnScreen_C) == 0x000008, "Wrong alignment on UBP_SpawnScreen_C");
static_assert(sizeof(UBP_SpawnScreen_C) == 0x0002B8, "Wrong size on UBP_SpawnScreen_C");
static_assert(offsetof(UBP_SpawnScreen_C, UberGraphFrame) == 0x000268, "Member 'UBP_SpawnScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_SpawnScreen_C, SpawnScreenPoint) == 0x000270, "Member 'UBP_SpawnScreen_C::SpawnScreenPoint' has a wrong offset!");
static_assert(offsetof(UBP_SpawnScreen_C, SpawnScreenIcons) == 0x000280, "Member 'UBP_SpawnScreen_C::SpawnScreenIcons' has a wrong offset!");
static_assert(offsetof(UBP_SpawnScreen_C, Updated_Spawn_Point_Widgets) == 0x000290, "Member 'UBP_SpawnScreen_C::Updated_Spawn_Point_Widgets' has a wrong offset!");
static_assert(offsetof(UBP_SpawnScreen_C, SelectedScreenPoint) == 0x0002A0, "Member 'UBP_SpawnScreen_C::SelectedScreenPoint' has a wrong offset!");
static_assert(offsetof(UBP_SpawnScreen_C, Open_Loadout_Selection) == 0x0002A8, "Member 'UBP_SpawnScreen_C::Open_Loadout_Selection' has a wrong offset!");

}

