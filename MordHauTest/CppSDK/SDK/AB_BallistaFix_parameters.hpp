#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_BallistaFix

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AB_BallistaFix.AB_BallistaFix_C.ExecuteUbergraph_AB_BallistaFix
// 0x00B0 (0x00B0 - 0x0000)
struct AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Ballista_C*                         K2Node_DynamicCast_AsBP_Ballista;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetDriver_ReturnValue;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertWeaponStateToBallistaState_BallistaState; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_Constant_ReturnValue;           // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_1;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Ballista_C*                         K2Node_DynamicCast_AsBP_Ballista_1;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix) == 0x000008, "Wrong alignment on AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix");
static_assert(sizeof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix) == 0x0000B0, "Wrong size on AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, EntryPoint) == 0x000000, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000005, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000006, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000007, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_MakeRotator_ReturnValue) == 0x000014, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_MakeRotator_ReturnValue_1) == 0x000020, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, K2Node_Event_DeltaTimeX) == 0x00002C, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000030, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000038, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_MakeRotator_ReturnValue_2) == 0x000040, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, K2Node_DynamicCast_AsBP_Ballista) == 0x000050, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::K2Node_DynamicCast_AsBP_Ballista' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00005C, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_BreakRotator_Roll) == 0x000068, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_BreakRotator_Pitch) == 0x00006C, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_BreakRotator_Yaw) == 0x000070, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_GetDriver_ReturnValue) == 0x000078, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_GetDriver_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000084, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_ConvertWeaponStateToBallistaState_BallistaState) == 0x000088, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_ConvertWeaponStateToBallistaState_BallistaState' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_FInterpTo_Constant_ReturnValue) == 0x00008C, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_FInterpTo_ReturnValue) == 0x000090, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_Lerp_ReturnValue) == 0x000094, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_TryGetPawnOwner_ReturnValue_1) == 0x000098, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_TryGetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, K2Node_DynamicCast_AsBP_Ballista_1) == 0x0000A0, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::K2Node_DynamicCast_AsBP_Ballista_1' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0000A9, "Member 'AB_BallistaFix_C_ExecuteUbergraph_AB_BallistaFix::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");

// Function AB_BallistaFix.AB_BallistaFix_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AB_BallistaFix_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_BallistaFix_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AB_BallistaFix_C_BlueprintUpdateAnimation");
static_assert(sizeof(AB_BallistaFix_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AB_BallistaFix_C_BlueprintUpdateAnimation");
static_assert(offsetof(AB_BallistaFix_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AB_BallistaFix_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AB_BallistaFix.AB_BallistaFix_C.ConvertWeaponStateToBallistaState
// 0x000C (0x000C - 0x0000)
struct AB_BallistaFix_C_ConvertWeaponStateToBallistaState final
{
public:
	int32                                         WeaponState;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BallistaState;                                     // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_BallistaFix_C_ConvertWeaponStateToBallistaState) == 0x000004, "Wrong alignment on AB_BallistaFix_C_ConvertWeaponStateToBallistaState");
static_assert(sizeof(AB_BallistaFix_C_ConvertWeaponStateToBallistaState) == 0x00000C, "Wrong size on AB_BallistaFix_C_ConvertWeaponStateToBallistaState");
static_assert(offsetof(AB_BallistaFix_C_ConvertWeaponStateToBallistaState, WeaponState) == 0x000000, "Member 'AB_BallistaFix_C_ConvertWeaponStateToBallistaState::WeaponState' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ConvertWeaponStateToBallistaState, BallistaState) == 0x000004, "Member 'AB_BallistaFix_C_ConvertWeaponStateToBallistaState::BallistaState' has a wrong offset!");
static_assert(offsetof(AB_BallistaFix_C_ConvertWeaponStateToBallistaState, K2Node_SwitchInteger_CmpSuccess) == 0x000008, "Member 'AB_BallistaFix_C_ConvertWeaponStateToBallistaState::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function AB_BallistaFix.AB_BallistaFix_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AB_BallistaFix_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BallistaFix_C_AnimGraph) == 0x000008, "Wrong alignment on AB_BallistaFix_C_AnimGraph");
static_assert(sizeof(AB_BallistaFix_C_AnimGraph) == 0x000010, "Wrong size on AB_BallistaFix_C_AnimGraph");
static_assert(offsetof(AB_BallistaFix_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AB_BallistaFix_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

