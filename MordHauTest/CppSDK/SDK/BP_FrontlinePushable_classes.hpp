#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrontlinePushable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_SplinePushableActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FrontlinePushable.BP_FrontlinePushable_C
// 0x0040 (0x04E0 - 0x04A0)
class ABP_FrontlinePushable_C : public ABP_SplinePushableActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_FrontlinePushable_C;             // 0x04A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UDecalComponent*                        AreaDecal;                                         // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UMordhauWidgetComponent*                MordhauWidget;                                     // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_CapturePoint_C*                     CapturePoint;                                      // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ObjectiveWeight;                                   // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               PushIcon;                                          // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Widget_Height_Indicator;                      // 0x04D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D1[0x3];                                      // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Widget_Height_Tolerance;                           // 0x04D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                DefendIcon;                                        // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FrontlinePushable(int32 EntryPoint);
	void OnInitialProgressReplication();
	void ReceiveBeginPlay();
	void OnAnyObjectiveProgressChanged();
	void PushableArrivedAtDestination();
	void OnUpdateUIWidgets();
	void OnEnemyGainedPrerequisites();
	void OnEnemyLostPrerequisites();
	void OnInitialize(class ABP_CapturePoint_C* Point);
	void OnProgressUpdated(float OldProgress);
	void Initialize(class ABP_CapturePoint_C* CapturePoint_0);
	void EnemyGainedPrerequisites();
	void EnemyLostPrerequisites();
	void UpdateUIWidgets();
	void IsCompleted(bool* Completed);
	void IsInObjectiveArea(const struct FVector& Location, bool* InArea);

	void GetObjectiveProgress(float* Progress_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FrontlinePushable_C">();
	}
	static class ABP_FrontlinePushable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FrontlinePushable_C>();
	}
};
static_assert(alignof(ABP_FrontlinePushable_C) == 0x000010, "Wrong alignment on ABP_FrontlinePushable_C");
static_assert(sizeof(ABP_FrontlinePushable_C) == 0x0004E0, "Wrong size on ABP_FrontlinePushable_C");
static_assert(offsetof(ABP_FrontlinePushable_C, UberGraphFrame_BP_FrontlinePushable_C) == 0x0004A0, "Member 'ABP_FrontlinePushable_C::UberGraphFrame_BP_FrontlinePushable_C' has a wrong offset!");
static_assert(offsetof(ABP_FrontlinePushable_C, AreaDecal) == 0x0004A8, "Member 'ABP_FrontlinePushable_C::AreaDecal' has a wrong offset!");
static_assert(offsetof(ABP_FrontlinePushable_C, MordhauWidget) == 0x0004B0, "Member 'ABP_FrontlinePushable_C::MordhauWidget' has a wrong offset!");
static_assert(offsetof(ABP_FrontlinePushable_C, CapturePoint) == 0x0004B8, "Member 'ABP_FrontlinePushable_C::CapturePoint' has a wrong offset!");
static_assert(offsetof(ABP_FrontlinePushable_C, ObjectiveWeight) == 0x0004C0, "Member 'ABP_FrontlinePushable_C::ObjectiveWeight' has a wrong offset!");
static_assert(offsetof(ABP_FrontlinePushable_C, PushIcon) == 0x0004C8, "Member 'ABP_FrontlinePushable_C::PushIcon' has a wrong offset!");
static_assert(offsetof(ABP_FrontlinePushable_C, Show_Widget_Height_Indicator) == 0x0004D0, "Member 'ABP_FrontlinePushable_C::Show_Widget_Height_Indicator' has a wrong offset!");
static_assert(offsetof(ABP_FrontlinePushable_C, Widget_Height_Tolerance) == 0x0004D4, "Member 'ABP_FrontlinePushable_C::Widget_Height_Tolerance' has a wrong offset!");
static_assert(offsetof(ABP_FrontlinePushable_C, DefendIcon) == 0x0004D8, "Member 'ABP_FrontlinePushable_C::DefendIcon' has a wrong offset!");

}

