#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpawnScreenPoint

#include "Basic.hpp"

#include "BP_SpawnScreenPoint_classes.hpp"
#include "BP_SpawnScreenPoint_parameters.hpp"


namespace SDK
{

// Function BP_SpawnScreenPoint.BP_SpawnScreenPoint_C.ExecuteUbergraph_BP_SpawnScreenPoint
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SpawnScreenPoint_C::ExecuteUbergraph_BP_SpawnScreenPoint(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreenPoint_C", "ExecuteUbergraph_BP_SpawnScreenPoint");

	Params::BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpawnScreenPoint.BP_SpawnScreenPoint_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_SpawnScreenPoint_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreenPoint_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnScreenPoint.BP_SpawnScreenPoint_C.Select
// (BlueprintCallable, BlueprintEvent)

void UBP_SpawnScreenPoint_C::Select()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreenPoint_C", "Select");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnScreenPoint.BP_SpawnScreenPoint_C.BndEvt__Button_0_K2Node_ComponentBoundEvent_49_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_SpawnScreenPoint_C::BndEvt__Button_0_K2Node_ComponentBoundEvent_49_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreenPoint_C", "BndEvt__Button_0_K2Node_ComponentBoundEvent_49_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnScreenPoint.BP_SpawnScreenPoint_C.BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_SpawnScreenPoint_C::BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreenPoint_C", "BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnScreenPoint.BP_SpawnScreenPoint_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_CapturePoint_C*               InCapturePoint                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_DeployableSpawn_C*            InDeployableSpawn                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_SpawnScreen_C*                SpawnScreen_Ref                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SpawnScreenPoint_C::Initialize(class ABP_CapturePoint_C* InCapturePoint, class ABP_DeployableSpawn_C* InDeployableSpawn, class UBP_SpawnScreen_C* SpawnScreen_Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreenPoint_C", "Initialize");

	Params::BP_SpawnScreenPoint_C_Initialize Parms{};

	Parms.InCapturePoint = InCapturePoint;
	Parms.InDeployableSpawn = InDeployableSpawn;
	Parms.SpawnScreen_Ref = SpawnScreen_Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpawnScreenPoint.BP_SpawnScreenPoint_C.Update
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SpawnScreenPoint_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreenPoint_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnScreenPoint.BP_SpawnScreenPoint_C.SetSelected
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SpawnScreenPoint_C::SetSelected(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreenPoint_C", "SetSelected");

	Params::BP_SpawnScreenPoint_C_SetSelected Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpawnScreenPoint.BP_SpawnScreenPoint_C.UpdateScreenPosition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SpawnScreenPoint_C::UpdateScreenPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreenPoint_C", "UpdateScreenPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnScreenPoint.BP_SpawnScreenPoint_C.Detect and handle overlapping points
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SpawnScreenPoint_C::Detect_and_handle_overlapping_points()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreenPoint_C", "Detect and handle overlapping points");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnScreenPoint.BP_SpawnScreenPoint_C.Set Desired Position
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          WorldLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SpawnScreenPoint_C::Set_Desired_Position(const struct FVector& WorldLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreenPoint_C", "Set Desired Position");

	Params::BP_SpawnScreenPoint_C_Set_Desired_Position Parms{};

	Parms.WorldLocation = std::move(WorldLocation);

	UObject::ProcessEvent(Func, &Parms);
}

}

