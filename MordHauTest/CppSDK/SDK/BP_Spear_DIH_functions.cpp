#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Spear_DIH

#include "Basic.hpp"

#include "BP_Spear_DIH_classes.hpp"
#include "BP_Spear_DIH_parameters.hpp"


namespace SDK
{

// Function BP_Spear_DIH.BP_Spear_DIH_C.ExecuteUbergraph_BP_Spear_DIH
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Spear_DIH_C::ExecuteUbergraph_BP_Spear_DIH(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spear_DIH_C", "ExecuteUbergraph_BP_Spear_DIH");

	Params::BP_Spear_DIH_C_ExecuteUbergraph_BP_Spear_DIH Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Spear_DIH.BP_Spear_DIH_C.ImpactParticleMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsCharacter                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Spear_DIH_C::ImpactParticleMulti(const struct FVector& Location, bool IsCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spear_DIH_C", "ImpactParticleMulti");

	Params::BP_Spear_DIH_C_ImpactParticleMulti Parms{};

	Parms.Location = std::move(Location);
	Parms.IsCharacter = IsCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Spear_DIH.BP_Spear_DIH_C.BeamEffectMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Length_0                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TrailStart                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TrailEnd                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Impact                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Spear_DIH_C::BeamEffectMulti(const float Length_0, const struct FVector& TrailStart, const struct FVector& TrailEnd, const struct FVector& Impact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spear_DIH_C", "BeamEffectMulti");

	Params::BP_Spear_DIH_C_BeamEffectMulti Parms{};

	Parms.Length_0 = Length_0;
	Parms.TrailStart = std::move(TrailStart);
	Parms.TrailEnd = std::move(TrailEnd);
	Parms.Impact = std::move(Impact);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Spear_DIH.BP_Spear_DIH_C.OnAttackStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// EAttackMove                             Move                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Spear_DIH_C::OnAttackStarted(EAttackMove Move, float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spear_DIH_C", "OnAttackStarted");

	Params::BP_Spear_DIH_C_OnAttackStarted Parms{};

	Parms.Move = Move;
	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Spear_DIH.BP_Spear_DIH_C.StabRelease
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EAttackMove                             Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAttackType                             Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Spear_DIH_C::StabRelease(EAttackMove Direction, float Angle, EAttackType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spear_DIH_C", "StabRelease");

	Params::BP_Spear_DIH_C_StabRelease Parms{};

	Parms.Direction = Direction;
	Parms.Angle = Angle;
	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Spear_DIH.BP_Spear_DIH_C.OnEquipped
// (Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Spear_DIH_C::OnEquipped(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spear_DIH_C", "OnEquipped");

	Params::BP_Spear_DIH_C_OnEquipped Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}

}

