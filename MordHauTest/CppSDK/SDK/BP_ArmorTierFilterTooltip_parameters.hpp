#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ArmorTierFilterTooltip

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_ArmorTierFilterTooltip.BP_ArmorTierFilterTooltip_C.Update Tooltip
// 0x00B8 (0x00B8 - 0x0000)
struct BP_ArmorTierFilterTooltip_C_Update_Tooltip final
{
public:
	uint8                                         Armor_Class;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanAfford;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHasSelectedItem;                                  // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Description;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bIsUnavailableAsPeasant;                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemCost;                                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauEquipment*                      Current_Equipment;                                 // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_ByteByte_ReturnValue;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_6;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0088(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x00A0(0x0018)()
};
static_assert(alignof(BP_ArmorTierFilterTooltip_C_Update_Tooltip) == 0x000008, "Wrong alignment on BP_ArmorTierFilterTooltip_C_Update_Tooltip");
static_assert(sizeof(BP_ArmorTierFilterTooltip_C_Update_Tooltip) == 0x0000B8, "Wrong size on BP_ArmorTierFilterTooltip_C_Update_Tooltip");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, Armor_Class) == 0x000000, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::Armor_Class' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, bCanAfford) == 0x000001, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::bCanAfford' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, bHasSelectedItem) == 0x000002, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::bHasSelectedItem' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, Description) == 0x000008, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::Description' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, bIsUnavailableAsPeasant) == 0x000020, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::bIsUnavailableAsPeasant' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, ItemCost) == 0x000024, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::ItemCost' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, Current_Equipment) == 0x000028, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::Current_Equipment' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, Temp_bool_Variable) == 0x000030, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, CallFunc_LessEqual_ByteByte_ReturnValue) == 0x000031, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::CallFunc_LessEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, Temp_byte_Variable) == 0x000032, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, Temp_byte_Variable_1) == 0x000033, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, Temp_bool_Variable_1) == 0x000034, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, K2Node_Select_Default) == 0x000035, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, Temp_byte_Variable_2) == 0x000036, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, Temp_byte_Variable_3) == 0x000037, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, Temp_bool_Variable_2) == 0x000038, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, K2Node_Select_Default_1) == 0x000039, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, Temp_byte_Variable_4) == 0x00003A, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, Temp_byte_Variable_5) == 0x00003B, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, Temp_byte_Variable_6) == 0x00003C, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, K2Node_Select_Default_2) == 0x00003D, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, Temp_text_Variable) == 0x000040, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, Temp_text_Variable_1) == 0x000058, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, Temp_text_Variable_2) == 0x000070, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, Temp_text_Variable_3) == 0x000088, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ArmorTierFilterTooltip_C_Update_Tooltip, K2Node_Select_Default_3) == 0x0000A0, "Member 'BP_ArmorTierFilterTooltip_C_Update_Tooltip::K2Node_Select_Default_3' has a wrong offset!");

}

