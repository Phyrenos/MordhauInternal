#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HolyHandGrenade

#include "Basic.hpp"

#include "BP_ThrowableEquipment_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HolyHandGrenade.BP_HolyHandGrenade_C
// 0x0010 (0x0D50 - 0x0D40)
class ABP_HolyHandGrenade_C final : public ABP_ThrowableEquipment_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_HolyHandGrenade_C;               // 0x0D40(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UPointLightComponent*                   PointLight;                                        // 0x0D48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_HolyHandGrenade(int32 EntryPoint);
	void CreateAndFireProjectile(float Accuracy, class UClass* Projectile);
	void FireProjectile(const struct FVector& Origin, const struct FRotator& Orientation, class AController* OwningController, float ExpectedDelay);
	void OnAmmoChanged();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HolyHandGrenade_C">();
	}
	static class ABP_HolyHandGrenade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HolyHandGrenade_C>();
	}
};
static_assert(alignof(ABP_HolyHandGrenade_C) == 0x000010, "Wrong alignment on ABP_HolyHandGrenade_C");
static_assert(sizeof(ABP_HolyHandGrenade_C) == 0x000D50, "Wrong size on ABP_HolyHandGrenade_C");
static_assert(offsetof(ABP_HolyHandGrenade_C, UberGraphFrame_BP_HolyHandGrenade_C) == 0x000D40, "Member 'ABP_HolyHandGrenade_C::UberGraphFrame_BP_HolyHandGrenade_C' has a wrong offset!");
static_assert(offsetof(ABP_HolyHandGrenade_C, PointLight) == 0x000D48, "Member 'ABP_HolyHandGrenade_C::PointLight' has a wrong offset!");

}

