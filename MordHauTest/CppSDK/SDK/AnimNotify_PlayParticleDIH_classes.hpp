#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimNotify_PlayParticleDIH

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AnimNotify_PlayParticleDIH.AnimNotify_PlayParticleDIH_C
// 0x0088 (0x00C0 - 0x0038)
class UAnimNotify_PlayParticleDIH_C final : public UAnimNotify
{
public:
	class UParticleSystem*                        Default_Particle_System;                           // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMap<class FName, class UParticleSystem*>     Particle_System_Override;                          // 0x0040(0x0050)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FVector                                Location_Offset;                                   // 0x0090(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FRotator                               Rotation_Offset;                                   // 0x009C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	struct FVector                                Scale;                                             // 0x00A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Attached;                                          // 0x00B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Socket_Name;                                       // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	bool Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation) const;
	class FString GetNotifyName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimNotify_PlayParticleDIH_C">();
	}
	static class UAnimNotify_PlayParticleDIH_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_PlayParticleDIH_C>();
	}
};
static_assert(alignof(UAnimNotify_PlayParticleDIH_C) == 0x000008, "Wrong alignment on UAnimNotify_PlayParticleDIH_C");
static_assert(sizeof(UAnimNotify_PlayParticleDIH_C) == 0x0000C0, "Wrong size on UAnimNotify_PlayParticleDIH_C");
static_assert(offsetof(UAnimNotify_PlayParticleDIH_C, Default_Particle_System) == 0x000038, "Member 'UAnimNotify_PlayParticleDIH_C::Default_Particle_System' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayParticleDIH_C, Particle_System_Override) == 0x000040, "Member 'UAnimNotify_PlayParticleDIH_C::Particle_System_Override' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayParticleDIH_C, Location_Offset) == 0x000090, "Member 'UAnimNotify_PlayParticleDIH_C::Location_Offset' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayParticleDIH_C, Rotation_Offset) == 0x00009C, "Member 'UAnimNotify_PlayParticleDIH_C::Rotation_Offset' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayParticleDIH_C, Scale) == 0x0000A8, "Member 'UAnimNotify_PlayParticleDIH_C::Scale' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayParticleDIH_C, Attached) == 0x0000B4, "Member 'UAnimNotify_PlayParticleDIH_C::Attached' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayParticleDIH_C, Socket_Name) == 0x0000B8, "Member 'UAnimNotify_PlayParticleDIH_C::Socket_Name' has a wrong offset!");

}

