#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrontlineKillObjective

#include "Basic.hpp"

#include "BP_FrontlineKillObjective_classes.hpp"
#include "BP_FrontlineKillObjective_parameters.hpp"


namespace SDK
{

// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.ExecuteUbergraph_BP_FrontlineKillObjective
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrontlineKillObjective_C::ExecuteUbergraph_BP_FrontlineKillObjective(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "ExecuteUbergraph_BP_FrontlineKillObjective");

	Params::BP_FrontlineKillObjective_C_ExecuteUbergraph_BP_FrontlineKillObjective Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_FrontlineKillObjective_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.MoveBlockedBySlow
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Impact                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_FrontlineKillObjective_C::MoveBlockedBySlow(const struct FHitResult& Impact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "MoveBlockedBySlow");

	Params::BP_FrontlineKillObjective_C_MoveBlockedBySlow Parms{};

	Parms.Impact = std::move(Impact);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.OnAnyObjectiveProgressChanged
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FrontlineKillObjective_C::OnAnyObjectiveProgressChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "OnAnyObjectiveProgressChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.BPLODTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrontlineKillObjective_C::BPLODTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "BPLODTick");

	Params::BP_FrontlineKillObjective_C_BPLODTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.OnHealthChanged
// (Event, Public, BlueprintEvent)

void ABP_FrontlineKillObjective_C::OnHealthChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "OnHealthChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.OnUpdateUIWidgets
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FrontlineKillObjective_C::OnUpdateUIWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "OnUpdateUIWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.OnInitialize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_CapturePoint_C*               Point_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrontlineKillObjective_C::OnInitialize(class ABP_CapturePoint_C* Point_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "OnInitialize");

	Params::BP_FrontlineKillObjective_C_OnInitialize Parms{};

	Parms.Point_0 = Point_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.ReceiveAnyDamage
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrontlineKillObjective_C::ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "ReceiveAnyDamage");

	Params::BP_FrontlineKillObjective_C_ReceiveAnyDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.OnEnemyLostPrerequisites
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FrontlineKillObjective_C::OnEnemyLostPrerequisites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "OnEnemyLostPrerequisites");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.OnEnemyGainedPrerequisites
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FrontlineKillObjective_C::OnEnemyGainedPrerequisites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "OnEnemyGainedPrerequisites");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.SpawnOurEquipment
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FrontlineKillObjective_C::SpawnOurEquipment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "SpawnOurEquipment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.UpdateUIWidgets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FrontlineKillObjective_C::UpdateUIWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "UpdateUIWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.NotifyCandidateForPossession
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FrontlineKillObjective_C::NotifyCandidateForPossession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "NotifyCandidateForPossession");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.IsCandidateValidForPossession
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_FrontlinePlayerController_C*  Candidate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_FrontlineKillObjective_C::IsCandidateValidForPossession(class ABP_FrontlinePlayerController_C* Candidate, bool* Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "IsCandidateValidForPossession");

	Params::BP_FrontlineKillObjective_C_IsCandidateValidForPossession Parms{};

	Parms.Candidate = Candidate;

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.CompileCandidatesList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FrontlineKillObjective_C::CompileCandidatesList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "CompileCandidatesList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.AwardScorePointsIfApplicable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrontlineKillObjective_C::AwardScorePointsIfApplicable(class AController* Instigator_0, int32 Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "AwardScorePointsIfApplicable");

	Params::BP_FrontlineKillObjective_C_AwardScorePointsIfApplicable Parms{};

	Parms.Instigator_0 = Instigator_0;
	Parms.Points = Points;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.IsCompleted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Completed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_FrontlineKillObjective_C::IsCompleted(bool* Completed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "IsCompleted");

	Params::BP_FrontlineKillObjective_C_IsCompleted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Completed != nullptr)
		*Completed = Parms.Completed;
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.IsInObjectiveArea
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InArea                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_FrontlineKillObjective_C::IsInObjectiveArea(const struct FVector& Location, bool* InArea)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "IsInObjectiveArea");

	Params::BP_FrontlineKillObjective_C_IsInObjectiveArea Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (InArea != nullptr)
		*InArea = Parms.InArea;
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.OnDied
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMordhauDamageType                      Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   SubType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Point_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Agent                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrontlineKillObjective_C::OnDied(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point_0, class AActor* Source, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "OnDied");

	Params::BP_FrontlineKillObjective_C_OnDied Parms{};

	Parms.Angle = Angle;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.bone = bone;
	Parms.Point_0 = std::move(Point_0);
	Parms.Source = Source;
	Parms.Agent = Agent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_FrontlineKillObjective_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_FrontlineKillObjective_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontlineKillObjective.BP_FrontlineKillObjective_C.GetObjectiveProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Progress                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrontlineKillObjective_C::GetObjectiveProgress(float* Progress) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontlineKillObjective_C", "GetObjectiveProgress");

	Params::BP_FrontlineKillObjective_C_GetObjectiveProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Progress != nullptr)
		*Progress = Parms.Progress;
}

}

