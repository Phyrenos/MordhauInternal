#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ListItemEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ListItemEntry.BP_ListItemEntry_C.ExecuteUbergraph_BP_ListItemEntry
// 0x0024 (0x0024 - 0x0000)
struct BP_ListItemEntry_C_ExecuteUbergraph_BP_ListItemEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_ListItemEntry_C_ExecuteUbergraph_BP_ListItemEntry) == 0x000004, "Wrong alignment on BP_ListItemEntry_C_ExecuteUbergraph_BP_ListItemEntry");
static_assert(sizeof(BP_ListItemEntry_C_ExecuteUbergraph_BP_ListItemEntry) == 0x000024, "Wrong size on BP_ListItemEntry_C_ExecuteUbergraph_BP_ListItemEntry");
static_assert(offsetof(BP_ListItemEntry_C_ExecuteUbergraph_BP_ListItemEntry, EntryPoint) == 0x000000, "Member 'BP_ListItemEntry_C_ExecuteUbergraph_BP_ListItemEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_ExecuteUbergraph_BP_ListItemEntry, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_ListItemEntry_C_ExecuteUbergraph_BP_ListItemEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_ExecuteUbergraph_BP_ListItemEntry, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_ListItemEntry_C_ExecuteUbergraph_BP_ListItemEntry::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_ListItemEntry.BP_ListItemEntry_C.Get_Image_9_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct BP_ListItemEntry_C_Get_Image_9_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ListItemEntry_C_Get_Image_9_Visibility_0) == 0x000001, "Wrong alignment on BP_ListItemEntry_C_Get_Image_9_Visibility_0");
static_assert(sizeof(BP_ListItemEntry_C_Get_Image_9_Visibility_0) == 0x000005, "Wrong size on BP_ListItemEntry_C_Get_Image_9_Visibility_0");
static_assert(offsetof(BP_ListItemEntry_C_Get_Image_9_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_ListItemEntry_C_Get_Image_9_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Get_Image_9_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_ListItemEntry_C_Get_Image_9_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Get_Image_9_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_ListItemEntry_C_Get_Image_9_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Get_Image_9_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_ListItemEntry_C_Get_Image_9_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Get_Image_9_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'BP_ListItemEntry_C_Get_Image_9_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_ListItemEntry.BP_ListItemEntry_C.Get_Image_Gradient_ColorAndOpacity_0
// 0x0034 (0x0034 - 0x0000)
struct BP_ListItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ListItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0) == 0x000004, "Wrong alignment on BP_ListItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0");
static_assert(sizeof(BP_ListItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0) == 0x000034, "Wrong size on BP_ListItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0");
static_assert(offsetof(BP_ListItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'BP_ListItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0, CallFunc_IsHovered_ReturnValue) == 0x000010, "Member 'BP_ListItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0, CallFunc_SelectColor_ReturnValue) == 0x000014, "Member 'BP_ListItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0, CallFunc_SelectColor_ReturnValue_1) == 0x000024, "Member 'BP_ListItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");

// Function BP_ListItemEntry.BP_ListItemEntry_C.Get_HorizontalBox_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct BP_ListItemEntry_C_Get_HorizontalBox_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ListItemEntry_C_Get_HorizontalBox_Visibility_0) == 0x000001, "Wrong alignment on BP_ListItemEntry_C_Get_HorizontalBox_Visibility_0");
static_assert(sizeof(BP_ListItemEntry_C_Get_HorizontalBox_Visibility_0) == 0x000005, "Wrong size on BP_ListItemEntry_C_Get_HorizontalBox_Visibility_0");
static_assert(offsetof(BP_ListItemEntry_C_Get_HorizontalBox_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_ListItemEntry_C_Get_HorizontalBox_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Get_HorizontalBox_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_ListItemEntry_C_Get_HorizontalBox_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Get_HorizontalBox_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_ListItemEntry_C_Get_HorizontalBox_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Get_HorizontalBox_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_ListItemEntry_C_Get_HorizontalBox_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Get_HorizontalBox_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'BP_ListItemEntry_C_Get_HorizontalBox_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_ListItemEntry.BP_ListItemEntry_C.Initialize Item Entry
// 0x0068 (0x0068 - 0x0000)
struct BP_ListItemEntry_C_Initialize_Item_Entry final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayFabID_ReturnValue;                 // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMordhauInventory*                      CallFunc_GetMordhauInventory_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasItem_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	class FText                                   CallFunc_GetUnlockTooltipText_TooltipText;         // 0x0048(0x0018)()
	int32                                         CallFunc_GetGoldAndRankUnlockRequirement_Gold;     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGoldAndRankUnlockRequirement_Rank;     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ListItemEntry_C_Initialize_Item_Entry) == 0x000008, "Wrong alignment on BP_ListItemEntry_C_Initialize_Item_Entry");
static_assert(sizeof(BP_ListItemEntry_C_Initialize_Item_Entry) == 0x000068, "Wrong size on BP_ListItemEntry_C_Initialize_Item_Entry");
static_assert(offsetof(BP_ListItemEntry_C_Initialize_Item_Entry, Temp_bool_Variable) == 0x000000, "Member 'BP_ListItemEntry_C_Initialize_Item_Entry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Initialize_Item_Entry, Temp_object_Variable) == 0x000008, "Member 'BP_ListItemEntry_C_Initialize_Item_Entry::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Initialize_Item_Entry, CallFunc_GetPlayFabID_ReturnValue) == 0x000010, "Member 'BP_ListItemEntry_C_Initialize_Item_Entry::CallFunc_GetPlayFabID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Initialize_Item_Entry, CallFunc_GetMordhauInventory_ReturnValue) == 0x000020, "Member 'BP_ListItemEntry_C_Initialize_Item_Entry::CallFunc_GetMordhauInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Initialize_Item_Entry, CallFunc_HasItem_ReturnValue) == 0x000028, "Member 'BP_ListItemEntry_C_Initialize_Item_Entry::CallFunc_HasItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Initialize_Item_Entry, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_ListItemEntry_C_Initialize_Item_Entry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Initialize_Item_Entry, K2Node_Select_Default) == 0x000030, "Member 'BP_ListItemEntry_C_Initialize_Item_Entry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Initialize_Item_Entry, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_ListItemEntry_C_Initialize_Item_Entry::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Initialize_Item_Entry, CallFunc_GetUnlockTooltipText_TooltipText) == 0x000048, "Member 'BP_ListItemEntry_C_Initialize_Item_Entry::CallFunc_GetUnlockTooltipText_TooltipText' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Initialize_Item_Entry, CallFunc_GetGoldAndRankUnlockRequirement_Gold) == 0x000060, "Member 'BP_ListItemEntry_C_Initialize_Item_Entry::CallFunc_GetGoldAndRankUnlockRequirement_Gold' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Initialize_Item_Entry, CallFunc_GetGoldAndRankUnlockRequirement_Rank) == 0x000064, "Member 'BP_ListItemEntry_C_Initialize_Item_Entry::CallFunc_GetGoldAndRankUnlockRequirement_Rank' has a wrong offset!");

// Function BP_ListItemEntry.BP_ListItemEntry_C.Get_SizeBox_Rank_Visibility_0
// 0x0006 (0x0006 - 0x0000)
struct BP_ListItemEntry_C_Get_SizeBox_Rank_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ListItemEntry_C_Get_SizeBox_Rank_Visibility_0) == 0x000001, "Wrong alignment on BP_ListItemEntry_C_Get_SizeBox_Rank_Visibility_0");
static_assert(sizeof(BP_ListItemEntry_C_Get_SizeBox_Rank_Visibility_0) == 0x000006, "Wrong size on BP_ListItemEntry_C_Get_SizeBox_Rank_Visibility_0");
static_assert(offsetof(BP_ListItemEntry_C_Get_SizeBox_Rank_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_ListItemEntry_C_Get_SizeBox_Rank_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Get_SizeBox_Rank_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_ListItemEntry_C_Get_SizeBox_Rank_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Get_SizeBox_Rank_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_ListItemEntry_C_Get_SizeBox_Rank_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Get_SizeBox_Rank_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_ListItemEntry_C_Get_SizeBox_Rank_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Get_SizeBox_Rank_Visibility_0, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_ListItemEntry_C_Get_SizeBox_Rank_Visibility_0::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_Get_SizeBox_Rank_Visibility_0, K2Node_Select_Default) == 0x000005, "Member 'BP_ListItemEntry_C_Get_SizeBox_Rank_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_ListItemEntry.BP_ListItemEntry_C.GetVisibility_0
// 0x0006 (0x0006 - 0x0000)
struct BP_ListItemEntry_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ListItemEntry_C_GetVisibility_0) == 0x000001, "Wrong alignment on BP_ListItemEntry_C_GetVisibility_0");
static_assert(sizeof(BP_ListItemEntry_C_GetVisibility_0) == 0x000006, "Wrong size on BP_ListItemEntry_C_GetVisibility_0");
static_assert(offsetof(BP_ListItemEntry_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_ListItemEntry_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_ListItemEntry_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_ListItemEntry_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_ListItemEntry_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_GetVisibility_0, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_ListItemEntry_C_GetVisibility_0::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_GetVisibility_0, K2Node_Select_Default) == 0x000005, "Member 'BP_ListItemEntry_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_ListItemEntry.BP_ListItemEntry_C.VisibleIfDLC
// 0x0006 (0x0006 - 0x0000)
struct BP_ListItemEntry_C_VisibleIfDLC final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ListItemEntry_C_VisibleIfDLC) == 0x000001, "Wrong alignment on BP_ListItemEntry_C_VisibleIfDLC");
static_assert(sizeof(BP_ListItemEntry_C_VisibleIfDLC) == 0x000006, "Wrong size on BP_ListItemEntry_C_VisibleIfDLC");
static_assert(offsetof(BP_ListItemEntry_C_VisibleIfDLC, ReturnValue) == 0x000000, "Member 'BP_ListItemEntry_C_VisibleIfDLC::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_VisibleIfDLC, Temp_bool_Variable) == 0x000001, "Member 'BP_ListItemEntry_C_VisibleIfDLC::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_VisibleIfDLC, Temp_byte_Variable) == 0x000002, "Member 'BP_ListItemEntry_C_VisibleIfDLC::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_VisibleIfDLC, Temp_byte_Variable_1) == 0x000003, "Member 'BP_ListItemEntry_C_VisibleIfDLC::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_VisibleIfDLC, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'BP_ListItemEntry_C_VisibleIfDLC::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ListItemEntry_C_VisibleIfDLC, K2Node_Select_Default) == 0x000005, "Member 'BP_ListItemEntry_C_VisibleIfDLC::K2Node_Select_Default' has a wrong offset!");

}

