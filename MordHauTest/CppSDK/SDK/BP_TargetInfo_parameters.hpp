#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TargetInfo

#include "Basic.hpp"

#include "MordhauOnlineSubsystem_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_TargetInfo.BP_TargetInfo_C.ExecuteUbergraph_BP_TargetInfo
// 0x0010 (0x0010 - 0x0000)
struct BP_TargetInfo_C_ExecuteUbergraph_BP_TargetInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TargetInfo_C_ExecuteUbergraph_BP_TargetInfo) == 0x000008, "Wrong alignment on BP_TargetInfo_C_ExecuteUbergraph_BP_TargetInfo");
static_assert(sizeof(BP_TargetInfo_C_ExecuteUbergraph_BP_TargetInfo) == 0x000010, "Wrong size on BP_TargetInfo_C_ExecuteUbergraph_BP_TargetInfo");
static_assert(offsetof(BP_TargetInfo_C_ExecuteUbergraph_BP_TargetInfo, EntryPoint) == 0x000000, "Member 'BP_TargetInfo_C_ExecuteUbergraph_BP_TargetInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_ExecuteUbergraph_BP_TargetInfo, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'BP_TargetInfo_C_ExecuteUbergraph_BP_TargetInfo::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function BP_TargetInfo.BP_TargetInfo_C.CheckForTarget
// 0x0600 (0x0600 - 0x0000)
struct BP_TargetInfo_C_CheckForTarget final
{
public:
	class AMordhauPlayerState*                    FoundPlayerState;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         IgnoreArray;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FVector                                CastDir;                                           // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CastSrc;                                           // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerState*                    K2Node_DynamicCast_AsMordhau_Player_State;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRank_ReturnValue;                      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetLastPossessedMordhauCharacter_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsDead_ReturnValue;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpectatorPawn*                         CallFunc_GetSpectatorPawn_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauSpectator*                      K2Node_DynamicCast_AsMordhau_Spectator;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWatchingOwnDeath_ReturnValue;           // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetViewTargetCharacter_ReturnValue;       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerState*                    CallFunc_GetPlayerStateFromActor_PlayerState;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauCameraManager*                  K2Node_DynamicCast_AsMordhau_Camera_Manager;       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MordhauGameState_C*                 K2Node_DynamicCast_AsBP_Mordhau_Game_State;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTargetBP_ReturnValue;              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item;                           // 0x0144(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0168(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0190(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x021E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21F[0x1];                                      // 0x021F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerState*                    CallFunc_GetPlayerStateFromTarget_State;           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AVehicleBase*                           K2Node_DynamicCast_AsVehicle_Base;                 // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauVehicle*                        K2Node_DynamicCast_AsMordhau_Vehicle;              // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStatValue_ReturnValue;                 // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x02D8(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0320(0x0010)(ReferenceParm)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0338(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0350(0x0040)(HasGetValueTypeHash)
	class ABP_DestroyableActor_C*                 K2Node_DynamicCast_AsBP_Destroyable_Actor;         // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x03A0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x03E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x03F0(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40A[0x2];                                      // 0x040A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue;             // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0410(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0458(0x0010)(ReferenceParm)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0470(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0488(0x0040)(HasGetValueTypeHash)
	class UBP_BuildableComponent_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x04C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue_1;              // 0x04D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x04E8(0x0018)()
	class FString                                 CallFunc_GetPlayerName_ReturnValue_2;              // 0x0500(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0510(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0550(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x0568(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0578(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x05B8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x05D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x05E0(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TargetInfo_C_CheckForTarget) == 0x000008, "Wrong alignment on BP_TargetInfo_C_CheckForTarget");
static_assert(sizeof(BP_TargetInfo_C_CheckForTarget) == 0x000600, "Wrong size on BP_TargetInfo_C_CheckForTarget");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, FoundPlayerState) == 0x000000, "Member 'BP_TargetInfo_C_CheckForTarget::FoundPlayerState' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, IgnoreArray) == 0x000008, "Member 'BP_TargetInfo_C_CheckForTarget::IgnoreArray' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CastDir) == 0x000018, "Member 'BP_TargetInfo_C_CheckForTarget::CastDir' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CastSrc) == 0x000024, "Member 'BP_TargetInfo_C_CheckForTarget::CastSrc' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_DynamicCast_AsMordhau_Player_State) == 0x000048, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_DynamicCast_AsMordhau_Player_State' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_GetRank_ReturnValue) == 0x000054, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_GetRank_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_GetPlayerName_ReturnValue) == 0x000058, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_IsValid_ReturnValue_2) == 0x000080, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_GetLastPossessedMordhauCharacter_ReturnValue) == 0x000088, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_GetLastPossessedMordhauCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_GetIsDead_ReturnValue) == 0x000090, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_GetIsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000094, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000098, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000A0, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_IsValid_ReturnValue_3) == 0x0000A8, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_K2_GetPawn_ReturnValue) == 0x0000B0, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_IsValid_ReturnValue_4) == 0x0000B8, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_GetSpectatorPawn_ReturnValue) == 0x0000C0, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_GetSpectatorPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_DynamicCast_AsMordhau_Spectator) == 0x0000C8, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_DynamicCast_AsMordhau_Spectator' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_IsWatchingOwnDeath_ReturnValue) == 0x0000D1, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_IsWatchingOwnDeath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000D2, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_GetViewTargetCharacter_ReturnValue) == 0x0000D8, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_GetViewTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_IsValid_ReturnValue_5) == 0x0000E0, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_GetPlayerStateFromActor_PlayerState) == 0x0000E8, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_GetPlayerStateFromActor_PlayerState' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Array_Add_ReturnValue) == 0x0000F0, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Array_Add_ReturnValue_1) == 0x0000F4, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0000F8, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_GetGameState_ReturnValue) == 0x000100, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_DynamicCast_AsMordhau_Camera_Manager) == 0x000108, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_DynamicCast_AsMordhau_Camera_Manager' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_DynamicCast_bSuccess_2) == 0x000110, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_DynamicCast_AsBP_Mordhau_Game_State) == 0x000118, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_DynamicCast_AsBP_Mordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_DynamicCast_bSuccess_3) == 0x000120, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_GetViewTargetBP_ReturnValue) == 0x000128, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_GetViewTargetBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_IsValid_ReturnValue_6) == 0x000130, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_BooleanAND_ReturnValue) == 0x000131, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Array_Add_ReturnValue_2) == 0x000134, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_GetActorForwardVector_ReturnValue) == 0x000138, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Array_Get_Item) == 0x000144, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000154, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000158, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_MakeArray_Array) == 0x000168, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000178, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Add_VectorVector_ReturnValue) == 0x000184, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000190, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x00021C, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_BreakHitResult_bBlockingHit) == 0x00021D, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_BreakHitResult_bInitialOverlap) == 0x00021E, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_BreakHitResult_Time) == 0x000220, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_BreakHitResult_Distance) == 0x000224, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_BreakHitResult_Location) == 0x000228, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_BreakHitResult_ImpactPoint) == 0x000234, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_BreakHitResult_Normal) == 0x000240, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_BreakHitResult_ImpactNormal) == 0x00024C, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_BreakHitResult_PhysMat) == 0x000258, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_BreakHitResult_HitActor) == 0x000260, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_BreakHitResult_HitComponent) == 0x000268, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_BreakHitResult_HitBoneName) == 0x000270, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_BreakHitResult_HitItem) == 0x000278, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_BreakHitResult_FaceIndex) == 0x00027C, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_BreakHitResult_TraceStart) == 0x000280, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_BreakHitResult_TraceEnd) == 0x00028C, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_GetPlayerStateFromTarget_State) == 0x000298, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_GetPlayerStateFromTarget_State' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_IsValid_ReturnValue_7) == 0x0002A0, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_DynamicCast_AsVehicle_Base) == 0x0002A8, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_DynamicCast_AsVehicle_Base' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_DynamicCast_bSuccess_4) == 0x0002B0, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_DynamicCast_AsMordhau_Vehicle) == 0x0002B8, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_DynamicCast_AsMordhau_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_DynamicCast_bSuccess_5) == 0x0002C0, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x0002C4, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0002C8, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_GetStatValue_ReturnValue) == 0x0002CC, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_GetStatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0002D0, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_MakeStruct_FormatArgumentData) == 0x0002D8, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_MapRangeClamped_ReturnValue) == 0x000318, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_MakeArray_Array_1) == 0x000320, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_FTrunc_ReturnValue) == 0x000330, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Format_ReturnValue) == 0x000338, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_MakeStruct_FormatArgumentData_1) == 0x000350, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_DynamicCast_AsBP_Destroyable_Actor) == 0x000390, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_DynamicCast_AsBP_Destroyable_Actor' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_DynamicCast_bSuccess_6) == 0x000398, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_MakeStruct_FormatArgumentData_2) == 0x0003A0, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_MakeArray_Array_2) == 0x0003E0, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Format_ReturnValue_1) == 0x0003F0, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000408, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_BooleanAND_ReturnValue_1) == 0x000409, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Conv_ByteToFloat_ReturnValue) == 0x00040C, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Conv_ByteToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_MakeStruct_FormatArgumentData_3) == 0x000410, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000450, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_MakeArray_Array_3) == 0x000458, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_FTrunc_ReturnValue_1) == 0x000468, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Format_ReturnValue_2) == 0x000470, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_MakeStruct_FormatArgumentData_4) == 0x000488, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_GetComponentByClass_ReturnValue) == 0x0004C8, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_IsValid_ReturnValue_8) == 0x0004D0, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_GetPlayerName_ReturnValue_1) == 0x0004D8, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_GetPlayerName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0004E8, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_GetPlayerName_ReturnValue_2) == 0x000500, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_GetPlayerName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_MakeStruct_FormatArgumentData_5) == 0x000510, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000550, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_MakeArray_Array_4) == 0x000568, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_MakeStruct_FormatArgumentData_6) == 0x000578, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Format_ReturnValue_3) == 0x0005B8, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, K2Node_MakeArray_Array_5) == 0x0005D0, "Member 'BP_TargetInfo_C_CheckForTarget::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_Format_ReturnValue_4) == 0x0005E0, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_CheckForTarget, CallFunc_IsValid_ReturnValue_9) == 0x0005F8, "Member 'BP_TargetInfo_C_CheckForTarget::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");

// Function BP_TargetInfo.BP_TargetInfo_C.Get_HeadText_Visibility
// 0x0004 (0x0004 - 0x0000)
struct BP_TargetInfo_C_Get_HeadText_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TargetInfo_C_Get_HeadText_Visibility) == 0x000001, "Wrong alignment on BP_TargetInfo_C_Get_HeadText_Visibility");
static_assert(sizeof(BP_TargetInfo_C_Get_HeadText_Visibility) == 0x000004, "Wrong size on BP_TargetInfo_C_Get_HeadText_Visibility");
static_assert(offsetof(BP_TargetInfo_C_Get_HeadText_Visibility, ReturnValue) == 0x000000, "Member 'BP_TargetInfo_C_Get_HeadText_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_HeadText_Visibility, CallFunc_TextIsEmpty_ReturnValue) == 0x000001, "Member 'BP_TargetInfo_C_Get_HeadText_Visibility::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_HeadText_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_TargetInfo_C_Get_HeadText_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_HeadText_Visibility, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_TargetInfo_C_Get_HeadText_Visibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_TargetInfo.BP_TargetInfo_C.Get_TargetNameText_Visibility_0
// 0x0002 (0x0002 - 0x0000)
struct BP_TargetInfo_C_Get_TargetNameText_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TargetInfo_C_Get_TargetNameText_Visibility_0) == 0x000001, "Wrong alignment on BP_TargetInfo_C_Get_TargetNameText_Visibility_0");
static_assert(sizeof(BP_TargetInfo_C_Get_TargetNameText_Visibility_0) == 0x000002, "Wrong size on BP_TargetInfo_C_Get_TargetNameText_Visibility_0");
static_assert(offsetof(BP_TargetInfo_C_Get_TargetNameText_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_TargetInfo_C_Get_TargetNameText_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_TargetNameText_Visibility_0, CallFunc_TextIsEmpty_ReturnValue) == 0x000001, "Member 'BP_TargetInfo_C_Get_TargetNameText_Visibility_0::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function BP_TargetInfo.BP_TargetInfo_C.Get_HeadText_Text_0
// 0x00C0 (0x00C0 - 0x0000)
struct BP_TargetInfo_C_Get_HeadText_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)(UObjectWrapper)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0040(0x0028)(UObjectWrapper)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0068(0x0028)(UObjectWrapper)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauGameState_C*                 K2Node_DynamicCast_AsBP_Mordhau_Game_State;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerState*                    K2Node_DynamicCast_AsMordhau_Player_State;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TargetInfo_C_Get_HeadText_Text_0) == 0x000008, "Wrong alignment on BP_TargetInfo_C_Get_HeadText_Text_0");
static_assert(sizeof(BP_TargetInfo_C_Get_HeadText_Text_0) == 0x0000C0, "Wrong size on BP_TargetInfo_C_Get_HeadText_Text_0");
static_assert(offsetof(BP_TargetInfo_C_Get_HeadText_Text_0, ReturnValue) == 0x000000, "Member 'BP_TargetInfo_C_Get_HeadText_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_HeadText_Text_0, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'BP_TargetInfo_C_Get_HeadText_Text_0::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_HeadText_Text_0, K2Node_MakeStruct_SlateColor_1) == 0x000040, "Member 'BP_TargetInfo_C_Get_HeadText_Text_0::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_HeadText_Text_0, K2Node_MakeStruct_SlateColor_2) == 0x000068, "Member 'BP_TargetInfo_C_Get_HeadText_Text_0::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_HeadText_Text_0, CallFunc_GetGameState_ReturnValue) == 0x000090, "Member 'BP_TargetInfo_C_Get_HeadText_Text_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_HeadText_Text_0, CallFunc_GetPlayerController_ReturnValue) == 0x000098, "Member 'BP_TargetInfo_C_Get_HeadText_Text_0::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_HeadText_Text_0, K2Node_DynamicCast_AsBP_Mordhau_Game_State) == 0x0000A0, "Member 'BP_TargetInfo_C_Get_HeadText_Text_0::K2Node_DynamicCast_AsBP_Mordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_HeadText_Text_0, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_TargetInfo_C_Get_HeadText_Text_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_HeadText_Text_0, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'BP_TargetInfo_C_Get_HeadText_Text_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_HeadText_Text_0, K2Node_DynamicCast_AsMordhau_Player_State) == 0x0000B0, "Member 'BP_TargetInfo_C_Get_HeadText_Text_0::K2Node_DynamicCast_AsMordhau_Player_State' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_HeadText_Text_0, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'BP_TargetInfo_C_Get_HeadText_Text_0::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_HeadText_Text_0, CallFunc_TextIsEmpty_ReturnValue) == 0x0000B9, "Member 'BP_TargetInfo_C_Get_HeadText_Text_0::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_HeadText_Text_0, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000BA, "Member 'BP_TargetInfo_C_Get_HeadText_Text_0::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_HeadText_Text_0, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000BB, "Member 'BP_TargetInfo_C_Get_HeadText_Text_0::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_TargetInfo.BP_TargetInfo_C.GetPlayerStateFromTarget
// 0x0060 (0x0060 - 0x0000)
struct BP_TargetInfo_C_GetPlayerStateFromTarget final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerState*                    State;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           FoundState;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVehicleBase*                           K2Node_DynamicCast_AsVehicle_Base;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_DynamicCast_AsMordhau_Character;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauVehicle*                        K2Node_DynamicCast_AsMordhau_Vehicle;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawnOwner_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerState*                    K2Node_DynamicCast_AsMordhau_Player_State;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TargetInfo_C_GetPlayerStateFromTarget) == 0x000008, "Wrong alignment on BP_TargetInfo_C_GetPlayerStateFromTarget");
static_assert(sizeof(BP_TargetInfo_C_GetPlayerStateFromTarget) == 0x000060, "Wrong size on BP_TargetInfo_C_GetPlayerStateFromTarget");
static_assert(offsetof(BP_TargetInfo_C_GetPlayerStateFromTarget, Target) == 0x000000, "Member 'BP_TargetInfo_C_GetPlayerStateFromTarget::Target' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetPlayerStateFromTarget, State) == 0x000008, "Member 'BP_TargetInfo_C_GetPlayerStateFromTarget::State' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetPlayerStateFromTarget, FoundState) == 0x000010, "Member 'BP_TargetInfo_C_GetPlayerStateFromTarget::FoundState' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetPlayerStateFromTarget, K2Node_DynamicCast_AsVehicle_Base) == 0x000018, "Member 'BP_TargetInfo_C_GetPlayerStateFromTarget::K2Node_DynamicCast_AsVehicle_Base' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetPlayerStateFromTarget, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_TargetInfo_C_GetPlayerStateFromTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetPlayerStateFromTarget, K2Node_DynamicCast_AsMordhau_Character) == 0x000028, "Member 'BP_TargetInfo_C_GetPlayerStateFromTarget::K2Node_DynamicCast_AsMordhau_Character' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetPlayerStateFromTarget, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_TargetInfo_C_GetPlayerStateFromTarget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetPlayerStateFromTarget, K2Node_DynamicCast_AsMordhau_Vehicle) == 0x000038, "Member 'BP_TargetInfo_C_GetPlayerStateFromTarget::K2Node_DynamicCast_AsMordhau_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetPlayerStateFromTarget, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'BP_TargetInfo_C_GetPlayerStateFromTarget::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetPlayerStateFromTarget, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_TargetInfo_C_GetPlayerStateFromTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetPlayerStateFromTarget, CallFunc_GetPawnOwner_ReturnValue) == 0x000048, "Member 'BP_TargetInfo_C_GetPlayerStateFromTarget::CallFunc_GetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetPlayerStateFromTarget, K2Node_DynamicCast_AsMordhau_Player_State) == 0x000050, "Member 'BP_TargetInfo_C_GetPlayerStateFromTarget::K2Node_DynamicCast_AsMordhau_Player_State' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetPlayerStateFromTarget, K2Node_DynamicCast_bSuccess_3) == 0x000058, "Member 'BP_TargetInfo_C_GetPlayerStateFromTarget::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function BP_TargetInfo.BP_TargetInfo_C.GetVisibility_0
// 0x0018 (0x0018 - 0x0000)
struct BP_TargetInfo_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowTargetInfo_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TargetInfo_C_GetVisibility_0) == 0x000008, "Wrong alignment on BP_TargetInfo_C_GetVisibility_0");
static_assert(sizeof(BP_TargetInfo_C_GetVisibility_0) == 0x000018, "Wrong size on BP_TargetInfo_C_GetVisibility_0");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_TargetInfo_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_0, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000008, "Member 'BP_TargetInfo_C_GetVisibility_0::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_0, CallFunc_ShouldShowTargetInfo_ReturnValue) == 0x000010, "Member 'BP_TargetInfo_C_GetVisibility_0::CallFunc_ShouldShowTargetInfo_ReturnValue' has a wrong offset!");

// Function BP_TargetInfo.BP_TargetInfo_C.Get_TextBlock_0_Visibility_0
// 0x0006 (0x0006 - 0x0000)
struct BP_TargetInfo_C_Get_TextBlock_0_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TargetInfo_C_Get_TextBlock_0_Visibility_0) == 0x000001, "Wrong alignment on BP_TargetInfo_C_Get_TextBlock_0_Visibility_0");
static_assert(sizeof(BP_TargetInfo_C_Get_TextBlock_0_Visibility_0) == 0x000006, "Wrong size on BP_TargetInfo_C_Get_TextBlock_0_Visibility_0");
static_assert(offsetof(BP_TargetInfo_C_Get_TextBlock_0_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_TargetInfo_C_Get_TextBlock_0_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_TextBlock_0_Visibility_0, CallFunc_IsConsolePlatform_ReturnValue) == 0x000001, "Member 'BP_TargetInfo_C_Get_TextBlock_0_Visibility_0::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_TextBlock_0_Visibility_0, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_TargetInfo_C_Get_TextBlock_0_Visibility_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_TextBlock_0_Visibility_0, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'BP_TargetInfo_C_Get_TextBlock_0_Visibility_0::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_TextBlock_0_Visibility_0, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BP_TargetInfo_C_Get_TextBlock_0_Visibility_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_TextBlock_0_Visibility_0, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'BP_TargetInfo_C_Get_TextBlock_0_Visibility_0::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_TargetInfo.BP_TargetInfo_C.Get_TextBlock_0_Text_0
// 0x0080 (0x0080 - 0x0000)
struct BP_TargetInfo_C_Get_TextBlock_0_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0018(0x0018)()
	class FText                                   CallFunc_FormatText_ReturnValue;                   // 0x0030(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0050(0x0018)()
	class FText                                   CallFunc_FormatText_ReturnValue_1;                 // 0x0068(0x0018)()
};
static_assert(alignof(BP_TargetInfo_C_Get_TextBlock_0_Text_0) == 0x000008, "Wrong alignment on BP_TargetInfo_C_Get_TextBlock_0_Text_0");
static_assert(sizeof(BP_TargetInfo_C_Get_TextBlock_0_Text_0) == 0x000080, "Wrong size on BP_TargetInfo_C_Get_TextBlock_0_Text_0");
static_assert(offsetof(BP_TargetInfo_C_Get_TextBlock_0_Text_0, ReturnValue) == 0x000000, "Member 'BP_TargetInfo_C_Get_TextBlock_0_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_TextBlock_0_Text_0, CallFunc_MakeLiteralText_ReturnValue) == 0x000018, "Member 'BP_TargetInfo_C_Get_TextBlock_0_Text_0::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_TextBlock_0_Text_0, CallFunc_FormatText_ReturnValue) == 0x000030, "Member 'BP_TargetInfo_C_Get_TextBlock_0_Text_0::CallFunc_FormatText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_TextBlock_0_Text_0, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_TargetInfo_C_Get_TextBlock_0_Text_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_TextBlock_0_Text_0, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000050, "Member 'BP_TargetInfo_C_Get_TextBlock_0_Text_0::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Get_TextBlock_0_Text_0, CallFunc_FormatText_ReturnValue_1) == 0x000068, "Member 'BP_TargetInfo_C_Get_TextBlock_0_Text_0::CallFunc_FormatText_ReturnValue_1' has a wrong offset!");

// Function BP_TargetInfo.BP_TargetInfo_C.GetPercent_0
// 0x0010 (0x0010 - 0x0000)
struct BP_TargetInfo_C_GetPercent_0 final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TargetInfo_C_GetPercent_0) == 0x000004, "Wrong alignment on BP_TargetInfo_C_GetPercent_0");
static_assert(sizeof(BP_TargetInfo_C_GetPercent_0) == 0x000010, "Wrong size on BP_TargetInfo_C_GetPercent_0");
static_assert(offsetof(BP_TargetInfo_C_GetPercent_0, ReturnValue) == 0x000000, "Member 'BP_TargetInfo_C_GetPercent_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetPercent_0, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'BP_TargetInfo_C_GetPercent_0::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetPercent_0, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_TargetInfo_C_GetPercent_0::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetPercent_0, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'BP_TargetInfo_C_GetPercent_0::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_TargetInfo.BP_TargetInfo_C.GetVisibility_1
// 0x0038 (0x0038 - 0x0000)
struct BP_TargetInfo_C_GetVisibility_1 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauGameState_C*                 K2Node_DynamicCast_AsBP_Mordhau_Game_State;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerState*                    K2Node_DynamicCast_AsMordhau_Player_State;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TargetInfo_C_GetVisibility_1) == 0x000008, "Wrong alignment on BP_TargetInfo_C_GetVisibility_1");
static_assert(sizeof(BP_TargetInfo_C_GetVisibility_1) == 0x000038, "Wrong size on BP_TargetInfo_C_GetVisibility_1");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_1, ReturnValue) == 0x000000, "Member 'BP_TargetInfo_C_GetVisibility_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_1, Temp_bool_Variable) == 0x000001, "Member 'BP_TargetInfo_C_GetVisibility_1::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_1, Temp_byte_Variable) == 0x000002, "Member 'BP_TargetInfo_C_GetVisibility_1::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_1, Temp_byte_Variable_1) == 0x000003, "Member 'BP_TargetInfo_C_GetVisibility_1::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_1, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_TargetInfo_C_GetVisibility_1::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_1, K2Node_DynamicCast_AsBP_Mordhau_Game_State) == 0x000010, "Member 'BP_TargetInfo_C_GetVisibility_1::K2Node_DynamicCast_AsBP_Mordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_1, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_TargetInfo_C_GetVisibility_1::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_1, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_TargetInfo_C_GetVisibility_1::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_1, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'BP_TargetInfo_C_GetVisibility_1::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_1, K2Node_DynamicCast_AsMordhau_Player_State) == 0x000028, "Member 'BP_TargetInfo_C_GetVisibility_1::K2Node_DynamicCast_AsMordhau_Player_State' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_1, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_TargetInfo_C_GetVisibility_1::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_1, CallFunc_TextIsEmpty_ReturnValue) == 0x000031, "Member 'BP_TargetInfo_C_GetVisibility_1::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_1, CallFunc_BooleanOR_ReturnValue) == 0x000032, "Member 'BP_TargetInfo_C_GetVisibility_1::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_1, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000033, "Member 'BP_TargetInfo_C_GetVisibility_1::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_1, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'BP_TargetInfo_C_GetVisibility_1::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_1, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'BP_TargetInfo_C_GetVisibility_1::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_1, K2Node_Select_Default) == 0x000036, "Member 'BP_TargetInfo_C_GetVisibility_1::K2Node_Select_Default' has a wrong offset!");

// Function BP_TargetInfo.BP_TargetInfo_C.GetPercent_1
// 0x0010 (0x0010 - 0x0000)
struct BP_TargetInfo_C_GetPercent_1 final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TargetInfo_C_GetPercent_1) == 0x000004, "Wrong alignment on BP_TargetInfo_C_GetPercent_1");
static_assert(sizeof(BP_TargetInfo_C_GetPercent_1) == 0x000010, "Wrong size on BP_TargetInfo_C_GetPercent_1");
static_assert(offsetof(BP_TargetInfo_C_GetPercent_1, ReturnValue) == 0x000000, "Member 'BP_TargetInfo_C_GetPercent_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetPercent_1, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'BP_TargetInfo_C_GetPercent_1::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetPercent_1, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_TargetInfo_C_GetPercent_1::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetPercent_1, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'BP_TargetInfo_C_GetPercent_1::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_TargetInfo.BP_TargetInfo_C.Get_Overlay_RankIndicator_Visibility_0
// 0x0001 (0x0001 - 0x0000)
struct BP_TargetInfo_C_Get_Overlay_RankIndicator_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TargetInfo_C_Get_Overlay_RankIndicator_Visibility_0) == 0x000001, "Wrong alignment on BP_TargetInfo_C_Get_Overlay_RankIndicator_Visibility_0");
static_assert(sizeof(BP_TargetInfo_C_Get_Overlay_RankIndicator_Visibility_0) == 0x000001, "Wrong size on BP_TargetInfo_C_Get_Overlay_RankIndicator_Visibility_0");
static_assert(offsetof(BP_TargetInfo_C_Get_Overlay_RankIndicator_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_TargetInfo_C_Get_Overlay_RankIndicator_Visibility_0::ReturnValue' has a wrong offset!");

// Function BP_TargetInfo.BP_TargetInfo_C.GetVisibility_2
// 0x0005 (0x0005 - 0x0000)
struct BP_TargetInfo_C_GetVisibility_2 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TargetInfo_C_GetVisibility_2) == 0x000001, "Wrong alignment on BP_TargetInfo_C_GetVisibility_2");
static_assert(sizeof(BP_TargetInfo_C_GetVisibility_2) == 0x000005, "Wrong size on BP_TargetInfo_C_GetVisibility_2");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_2, ReturnValue) == 0x000000, "Member 'BP_TargetInfo_C_GetVisibility_2::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_2, Temp_bool_Variable) == 0x000001, "Member 'BP_TargetInfo_C_GetVisibility_2::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_2, Temp_byte_Variable) == 0x000002, "Member 'BP_TargetInfo_C_GetVisibility_2::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_2, Temp_byte_Variable_1) == 0x000003, "Member 'BP_TargetInfo_C_GetVisibility_2::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_GetVisibility_2, K2Node_Select_Default) == 0x000004, "Member 'BP_TargetInfo_C_GetVisibility_2::K2Node_Select_Default' has a wrong offset!");

// Function BP_TargetInfo.BP_TargetInfo_C.Update Target Platform Icon
// 0x0070 (0x0070 - 0x0000)
struct BP_TargetInfo_C_Update_Target_Platform_Icon final
{
public:
	bool                                          bShowIcon;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayFabPlayer                         CallFunc_GetPlayFabPlayer_ReturnValue;             // 0x0008(0x0060)(ConstParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_PlayFabPlayer_ReturnValue;        // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TargetInfo_C_Update_Target_Platform_Icon) == 0x000008, "Wrong alignment on BP_TargetInfo_C_Update_Target_Platform_Icon");
static_assert(sizeof(BP_TargetInfo_C_Update_Target_Platform_Icon) == 0x000070, "Wrong size on BP_TargetInfo_C_Update_Target_Platform_Icon");
static_assert(offsetof(BP_TargetInfo_C_Update_Target_Platform_Icon, bShowIcon) == 0x000000, "Member 'BP_TargetInfo_C_Update_Target_Platform_Icon::bShowIcon' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Update_Target_Platform_Icon, CallFunc_GetPlayFabPlayer_ReturnValue) == 0x000008, "Member 'BP_TargetInfo_C_Update_Target_Platform_Icon::CallFunc_GetPlayFabPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Update_Target_Platform_Icon, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_TargetInfo_C_Update_Target_Platform_Icon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TargetInfo_C_Update_Target_Platform_Icon, CallFunc_IsValid_PlayFabPlayer_ReturnValue) == 0x000069, "Member 'BP_TargetInfo_C_Update_Target_Platform_Icon::CallFunc_IsValid_PlayFabPlayer_ReturnValue' has a wrong offset!");

}

