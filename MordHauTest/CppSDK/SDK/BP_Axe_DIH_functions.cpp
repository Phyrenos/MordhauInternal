#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Axe_DIH

#include "Basic.hpp"

#include "BP_Axe_DIH_classes.hpp"
#include "BP_Axe_DIH_parameters.hpp"


namespace SDK
{

// Function BP_Axe_DIH.BP_Axe_DIH_C.ExecuteUbergraph_BP_Axe_DIH
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Axe_DIH_C::ExecuteUbergraph_BP_Axe_DIH(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Axe_DIH_C", "ExecuteUbergraph_BP_Axe_DIH");

	Params::BP_Axe_DIH_C_ExecuteUbergraph_BP_Axe_DIH Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Axe_DIH.BP_Axe_DIH_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Axe_DIH_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Axe_DIH_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Axe_DIH.BP_Axe_DIH_C.ApplyComboSpeedMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Combo                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Axe_DIH_C::ApplyComboSpeedMulti(int32 Combo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Axe_DIH_C", "ApplyComboSpeedMulti");

	Params::BP_Axe_DIH_C_ApplyComboSpeedMulti Parms{};

	Parms.Combo = Combo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Axe_DIH.BP_Axe_DIH_C.OnAttackStopped
// (Event, Public, BlueprintEvent)

void ABP_Axe_DIH_C::OnAttackStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Axe_DIH_C", "OnAttackStopped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Axe_DIH.BP_Axe_DIH_C.OnAttackStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// EAttackMove                             Move                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Axe_DIH_C::OnAttackStarted(EAttackMove Move, float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Axe_DIH_C", "OnAttackStarted");

	Params::BP_Axe_DIH_C_OnAttackStarted Parms{};

	Parms.Move = Move;
	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);
}

}

