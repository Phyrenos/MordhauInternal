#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SeparatedBodyPart_Bones

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_SeparatedBodyPart_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SeparatedBodyPart_Bones.BP_SeparatedBodyPart_Bones_C
// 0x0008 (0x0350 - 0x0348)
class ABP_SeparatedBodyPart_Bones_C final : public ABP_SeparatedBodyPart_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_SeparatedBodyPart_Bones_C;       // 0x0348(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)

public:
	void ExecuteUbergraph_BP_SeparatedBodyPart_Bones(int32 EntryPoint);
	void ReceiveBeginPlay();
	void InitializeDismemberment(class AMordhauCharacter* Source, class FName bone, const struct FTransform& SourceBoneTransform, bool bIsPartial, bool bIsBluntForce);
	void BndEvt__Thudder_K2Node_ComponentBoundEvent_1_ComponentThudSignature__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SeparatedBodyPart_Bones_C">();
	}
	static class ABP_SeparatedBodyPart_Bones_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SeparatedBodyPart_Bones_C>();
	}
};
static_assert(alignof(ABP_SeparatedBodyPart_Bones_C) == 0x000008, "Wrong alignment on ABP_SeparatedBodyPart_Bones_C");
static_assert(sizeof(ABP_SeparatedBodyPart_Bones_C) == 0x000350, "Wrong size on ABP_SeparatedBodyPart_Bones_C");
static_assert(offsetof(ABP_SeparatedBodyPart_Bones_C, UberGraphFrame_BP_SeparatedBodyPart_Bones_C) == 0x000348, "Member 'ABP_SeparatedBodyPart_Bones_C::UberGraphFrame_BP_SeparatedBodyPart_Bones_C' has a wrong offset!");

}

