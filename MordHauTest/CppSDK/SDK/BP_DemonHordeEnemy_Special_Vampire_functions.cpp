#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DemonHordeEnemy_Special_Vampire

#include "Basic.hpp"

#include "BP_DemonHordeEnemy_Special_Vampire_classes.hpp"
#include "BP_DemonHordeEnemy_Special_Vampire_parameters.hpp"


namespace SDK
{

// Function BP_DemonHordeEnemy_Special_Vampire.BP_DemonHordeEnemy_Special_Vampire_C.ExecuteUbergraph_BP_DemonHordeEnemy_Special_Vampire
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeEnemy_Special_Vampire_C::ExecuteUbergraph_BP_DemonHordeEnemy_Special_Vampire(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_Vampire_C", "ExecuteUbergraph_BP_DemonHordeEnemy_Special_Vampire");

	Params::BP_DemonHordeEnemy_Special_Vampire_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Vampire Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeEnemy_Special_Vampire.BP_DemonHordeEnemy_Special_Vampire_C.HealEffectSelfMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_DemonHordeEnemy_Special_Vampire_C::HealEffectSelfMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_Vampire_C", "HealEffectSelfMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeEnemy_Special_Vampire.BP_DemonHordeEnemy_Special_Vampire_C.HealEffectsMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_DemonHordeEnemy_C*            Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeEnemy_Special_Vampire_C::HealEffectsMulti(class ABP_DemonHordeEnemy_C* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_Vampire_C", "HealEffectsMulti");

	Params::BP_DemonHordeEnemy_Special_Vampire_C_HealEffectsMulti Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeEnemy_Special_Vampire.BP_DemonHordeEnemy_Special_Vampire_C.SpawnBatTrailMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeEnemy_Special_Vampire_C::SpawnBatTrailMulti(const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_Vampire_C", "SpawnBatTrailMulti");

	Params::BP_DemonHordeEnemy_Special_Vampire_C_SpawnBatTrailMulti Parms{};

	Parms.TargetLocation = std::move(TargetLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeEnemy_Special_Vampire.BP_DemonHordeEnemy_Special_Vampire_C.StartTeleportCooldown
// (BlueprintCallable, BlueprintEvent)

void ABP_DemonHordeEnemy_Special_Vampire_C::StartTeleportCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_Vampire_C", "StartTeleportCooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeEnemy_Special_Vampire.BP_DemonHordeEnemy_Special_Vampire_C.BatEffectsMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Intro                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DemonHordeEnemy_Special_Vampire_C::BatEffectsMulti(bool Intro)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_Vampire_C", "BatEffectsMulti");

	Params::BP_DemonHordeEnemy_Special_Vampire_C_BatEffectsMulti Parms{};

	Parms.Intro = Intro;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeEnemy_Special_Vampire.BP_DemonHordeEnemy_Special_Vampire_C.ReceiveMordhauDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// EMordhauDamageType                      DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   SubDamageType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Agent                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeEnemy_Special_Vampire_C::ReceiveMordhauDamage(float Damage, const struct FHitResult& HitResult, EMordhauDamageType DamageType, uint8 SubDamageType, class AActor* Source, class AActor* Agent, class AController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_Vampire_C", "ReceiveMordhauDamage");

	Params::BP_DemonHordeEnemy_Special_Vampire_C_ReceiveMordhauDamage Parms{};

	Parms.Damage = Damage;
	Parms.HitResult = std::move(HitResult);
	Parms.DamageType = DamageType;
	Parms.SubDamageType = SubDamageType;
	Parms.Source = Source;
	Parms.Agent = Agent;
	Parms.EventInstigator = EventInstigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeEnemy_Special_Vampire.BP_DemonHordeEnemy_Special_Vampire_C.PowerUpEffectsMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DemonHordeEnemy_Special_Vampire_C::PowerUpEffectsMulti(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_Vampire_C", "PowerUpEffectsMulti");

	Params::BP_DemonHordeEnemy_Special_Vampire_C_PowerUpEffectsMulti Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeEnemy_Special_Vampire.BP_DemonHordeEnemy_Special_Vampire_C.StartStateCooldown
// (BlueprintCallable, BlueprintEvent)

void ABP_DemonHordeEnemy_Special_Vampire_C::StartStateCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_Vampire_C", "StartStateCooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeEnemy_Special_Vampire.BP_DemonHordeEnemy_Special_Vampire_C.BehaviourLoop
// (BlueprintCallable, BlueprintEvent)

void ABP_DemonHordeEnemy_Special_Vampire_C::BehaviourLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_Vampire_C", "BehaviourLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeEnemy_Special_Vampire.BP_DemonHordeEnemy_Special_Vampire_C.PowerUp__UpdateFunc
// (BlueprintEvent)

void ABP_DemonHordeEnemy_Special_Vampire_C::PowerUp__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_Vampire_C", "PowerUp__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeEnemy_Special_Vampire.BP_DemonHordeEnemy_Special_Vampire_C.PowerUp__FinishedFunc
// (BlueprintEvent)

void ABP_DemonHordeEnemy_Special_Vampire_C::PowerUp__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_Vampire_C", "PowerUp__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeEnemy_Special_Vampire.BP_DemonHordeEnemy_Special_Vampire_C.GetTeleportLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          SummonLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DemonHordeEnemy_Special_Vampire_C::GetTeleportLocation(struct FVector* SummonLocation, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_Vampire_C", "GetTeleportLocation");

	Params::BP_DemonHordeEnemy_Special_Vampire_C_GetTeleportLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SummonLocation != nullptr)
		*SummonLocation = std::move(Parms.SummonLocation);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_DemonHordeEnemy_Special_Vampire.BP_DemonHordeEnemy_Special_Vampire_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DemonHordeEnemy_Special_Vampire_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_Vampire_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeEnemy_Special_Vampire.BP_DemonHordeEnemy_Special_Vampire_C.OnDied
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMordhauDamageType                      Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   SubType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Agent                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeEnemy_Special_Vampire_C::OnDied(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_Vampire_C", "OnDied");

	Params::BP_DemonHordeEnemy_Special_Vampire_C_OnDied Parms{};

	Parms.Angle = Angle;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Source = Source;
	Parms.Agent = Agent;

	UObject::ProcessEvent(Func, &Parms);
}

}

