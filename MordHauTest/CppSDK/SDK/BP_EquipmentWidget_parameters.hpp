#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_EquipmentWidget.BP_EquipmentWidget_C.ExecuteUbergraph_BP_EquipmentWidget
// 0x0004 (0x0004 - 0x0000)
struct BP_EquipmentWidget_C_ExecuteUbergraph_BP_EquipmentWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentWidget_C_ExecuteUbergraph_BP_EquipmentWidget) == 0x000004, "Wrong alignment on BP_EquipmentWidget_C_ExecuteUbergraph_BP_EquipmentWidget");
static_assert(sizeof(BP_EquipmentWidget_C_ExecuteUbergraph_BP_EquipmentWidget) == 0x000004, "Wrong size on BP_EquipmentWidget_C_ExecuteUbergraph_BP_EquipmentWidget");
static_assert(offsetof(BP_EquipmentWidget_C_ExecuteUbergraph_BP_EquipmentWidget, EntryPoint) == 0x000000, "Member 'BP_EquipmentWidget_C_ExecuteUbergraph_BP_EquipmentWidget::EntryPoint' has a wrong offset!");

// Function BP_EquipmentWidget.BP_EquipmentWidget_C.UpdateEquipmentText
// 0x00D0 (0x00D0 - 0x0000)
struct BP_EquipmentWidget_C_UpdateEquipmentText final
{
public:
	class FName                                   Param_Name_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount_0;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxAmount;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0050(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0090(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0018)()
};
static_assert(alignof(BP_EquipmentWidget_C_UpdateEquipmentText) == 0x000008, "Wrong alignment on BP_EquipmentWidget_C_UpdateEquipmentText");
static_assert(sizeof(BP_EquipmentWidget_C_UpdateEquipmentText) == 0x0000D0, "Wrong size on BP_EquipmentWidget_C_UpdateEquipmentText");
static_assert(offsetof(BP_EquipmentWidget_C_UpdateEquipmentText, Param_Name_0) == 0x000000, "Member 'BP_EquipmentWidget_C_UpdateEquipmentText::Param_Name_0' has a wrong offset!");
static_assert(offsetof(BP_EquipmentWidget_C_UpdateEquipmentText, Amount_0) == 0x000008, "Member 'BP_EquipmentWidget_C_UpdateEquipmentText::Amount_0' has a wrong offset!");
static_assert(offsetof(BP_EquipmentWidget_C_UpdateEquipmentText, MaxAmount) == 0x00000C, "Member 'BP_EquipmentWidget_C_UpdateEquipmentText::MaxAmount' has a wrong offset!");
static_assert(offsetof(BP_EquipmentWidget_C_UpdateEquipmentText, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'BP_EquipmentWidget_C_UpdateEquipmentText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_EquipmentWidget_C_UpdateEquipmentText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000050, "Member 'BP_EquipmentWidget_C_UpdateEquipmentText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentWidget_C_UpdateEquipmentText, CallFunc_Conv_NameToText_ReturnValue) == 0x000090, "Member 'BP_EquipmentWidget_C_UpdateEquipmentText::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentWidget_C_UpdateEquipmentText, K2Node_MakeArray_Array) == 0x0000A8, "Member 'BP_EquipmentWidget_C_UpdateEquipmentText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EquipmentWidget_C_UpdateEquipmentText, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'BP_EquipmentWidget_C_UpdateEquipmentText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_EquipmentWidget.BP_EquipmentWidget_C.UpdateEquipmentReason
// 0x0038 (0x0038 - 0x0000)
struct BP_EquipmentWidget_C_UpdateEquipmentReason final
{
public:
	class FString                                 Reason_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentWidget_C_UpdateEquipmentReason) == 0x000008, "Wrong alignment on BP_EquipmentWidget_C_UpdateEquipmentReason");
static_assert(sizeof(BP_EquipmentWidget_C_UpdateEquipmentReason) == 0x000038, "Wrong size on BP_EquipmentWidget_C_UpdateEquipmentReason");
static_assert(offsetof(BP_EquipmentWidget_C_UpdateEquipmentReason, Reason_0) == 0x000000, "Member 'BP_EquipmentWidget_C_UpdateEquipmentReason::Reason_0' has a wrong offset!");
static_assert(offsetof(BP_EquipmentWidget_C_UpdateEquipmentReason, CallFunc_IsEmpty_ReturnValue) == 0x000010, "Member 'BP_EquipmentWidget_C_UpdateEquipmentReason::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentWidget_C_UpdateEquipmentReason, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_EquipmentWidget_C_UpdateEquipmentReason::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentWidget_C_UpdateEquipmentReason, CallFunc_SelectInt_ReturnValue) == 0x000030, "Member 'BP_EquipmentWidget_C_UpdateEquipmentReason::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function BP_EquipmentWidget.BP_EquipmentWidget_C.GetVisibility_0
// 0x0018 (0x0018 - 0x0000)
struct BP_EquipmentWidget_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetViewTargetCharacter_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBlendingFromMapView_ReturnValue;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EquipmentWidget_C_GetVisibility_0) == 0x000008, "Wrong alignment on BP_EquipmentWidget_C_GetVisibility_0");
static_assert(sizeof(BP_EquipmentWidget_C_GetVisibility_0) == 0x000018, "Wrong size on BP_EquipmentWidget_C_GetVisibility_0");
static_assert(offsetof(BP_EquipmentWidget_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_EquipmentWidget_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentWidget_C_GetVisibility_0, CallFunc_GetViewTargetCharacter_ReturnValue) == 0x000008, "Member 'BP_EquipmentWidget_C_GetVisibility_0::CallFunc_GetViewTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentWidget_C_GetVisibility_0, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EquipmentWidget_C_GetVisibility_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentWidget_C_GetVisibility_0, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_EquipmentWidget_C_GetVisibility_0::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentWidget_C_GetVisibility_0, CallFunc_IsBlendingFromMapView_ReturnValue) == 0x000012, "Member 'BP_EquipmentWidget_C_GetVisibility_0::CallFunc_IsBlendingFromMapView_ReturnValue' has a wrong offset!");

}

