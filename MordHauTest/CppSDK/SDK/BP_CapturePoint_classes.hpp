#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CapturePoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CapturePoint.BP_CapturePoint_C
// 0x0108 (0x0440 - 0x0338)
class ABP_CapturePoint_C : public AControlPoint
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UDecalComponent*                        Decal;                                             // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CaptureAreaCollision;                              // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UMordhauWidgetComponent*                MordhauWidget;                                     // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UBP_CapPointWidget_C*                   TopBar_Cap_Point_Widget;                           // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CapPointTeamBaseWidget_C*           TopBar_Cap_Point_TeamBase_Widget;                  // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TScriptInterface<class IBP_FrontlineObjective_C>> Objectives;                                        // 0x0368(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class ABP_FrontlineDestroyable_C*>     Destroyables;                                      // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_ItemDeliverySpot_C*>         DeliverySpots;                                     // 0x0388(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_FrontlinePushable_C*>        Pushables;                                         // 0x0398(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_FrontlineInteractable_C*>    Interactables;                                     // 0x03A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_FrontlineKillObjectiveWrapper_C*> Kill;                                              // 0x03B8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_DummyObjective_C*>           Dummy;                                             // 0x03C8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	float                                         ObjectiveProgress;                                 // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CapPointWidget_C*                   SpawnPointWidget;                                  // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_FloatingCapPointWidget_C*           FloaterWidget;                                     // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowAnnouncements;                                 // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Icon;                                              // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ObjectiveAttack;                                   // 0x0400(0x0018)(Edit, BlueprintVisible)
	class FText                                   ObjectiveDefend;                                   // 0x0418(0x0018)(Edit, BlueprintVisible)
	float                                         ObjectiveWinDelay;                                 // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPushPoint;                                       // 0x0434(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FlashShouldOnlyPulse;                              // 0x0435(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideOnSpawnScreen;                                 // 0x0436(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_437[0x1];                                      // 0x0437(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ObjectiveCompleteDelay;                            // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PendingNewCaptor;                                  // 0x043C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CapturePoint(int32 EntryPoint);
	void CompleteCaptureDelayed(uint8 NewCaptor);
	void Pulse();
	void TriggerWinDelayed();
	void OnStoppedFlashing();
	void OnStartedFlashing();
	void UpdateUIWidgets();
	void EnemyLostPrerequisites();
	void EnemyGainedPrerequisites();
	void OnOwningTeamChanged();
	void OnCapturingTeamChanged();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void GetTeamRelevance(uint8 Team, int32* Relevance);
	void Set_Cap_Point_Widget_Colors(const struct FLinearColor& Fill_Color, const struct FLinearColor& Progress_Bar_Color);
	void ObjectivesChanged();
	void ShowPushAttackerAnnouncement();
	void ShowPushDefenderAnnouncement();
	void OnObjectivesCompleted();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CapturePoint_C">();
	}
	static class ABP_CapturePoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CapturePoint_C>();
	}
};
static_assert(alignof(ABP_CapturePoint_C) == 0x000008, "Wrong alignment on ABP_CapturePoint_C");
static_assert(sizeof(ABP_CapturePoint_C) == 0x000440, "Wrong size on ABP_CapturePoint_C");
static_assert(offsetof(ABP_CapturePoint_C, UberGraphFrame) == 0x000338, "Member 'ABP_CapturePoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, Decal) == 0x000340, "Member 'ABP_CapturePoint_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, CaptureAreaCollision) == 0x000348, "Member 'ABP_CapturePoint_C::CaptureAreaCollision' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, MordhauWidget) == 0x000350, "Member 'ABP_CapturePoint_C::MordhauWidget' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, TopBar_Cap_Point_Widget) == 0x000358, "Member 'ABP_CapturePoint_C::TopBar_Cap_Point_Widget' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, TopBar_Cap_Point_TeamBase_Widget) == 0x000360, "Member 'ABP_CapturePoint_C::TopBar_Cap_Point_TeamBase_Widget' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, Objectives) == 0x000368, "Member 'ABP_CapturePoint_C::Objectives' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, Destroyables) == 0x000378, "Member 'ABP_CapturePoint_C::Destroyables' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, DeliverySpots) == 0x000388, "Member 'ABP_CapturePoint_C::DeliverySpots' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, Pushables) == 0x000398, "Member 'ABP_CapturePoint_C::Pushables' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, Interactables) == 0x0003A8, "Member 'ABP_CapturePoint_C::Interactables' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, Kill) == 0x0003B8, "Member 'ABP_CapturePoint_C::Kill' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, Dummy) == 0x0003C8, "Member 'ABP_CapturePoint_C::Dummy' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, ObjectiveProgress) == 0x0003D8, "Member 'ABP_CapturePoint_C::ObjectiveProgress' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, SpawnPointWidget) == 0x0003E0, "Member 'ABP_CapturePoint_C::SpawnPointWidget' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, FloaterWidget) == 0x0003E8, "Member 'ABP_CapturePoint_C::FloaterWidget' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, ShowAnnouncements) == 0x0003F0, "Member 'ABP_CapturePoint_C::ShowAnnouncements' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, Icon) == 0x0003F8, "Member 'ABP_CapturePoint_C::Icon' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, ObjectiveAttack) == 0x000400, "Member 'ABP_CapturePoint_C::ObjectiveAttack' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, ObjectiveDefend) == 0x000418, "Member 'ABP_CapturePoint_C::ObjectiveDefend' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, ObjectiveWinDelay) == 0x000430, "Member 'ABP_CapturePoint_C::ObjectiveWinDelay' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, IsPushPoint) == 0x000434, "Member 'ABP_CapturePoint_C::IsPushPoint' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, FlashShouldOnlyPulse) == 0x000435, "Member 'ABP_CapturePoint_C::FlashShouldOnlyPulse' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, HideOnSpawnScreen) == 0x000436, "Member 'ABP_CapturePoint_C::HideOnSpawnScreen' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, ObjectiveCompleteDelay) == 0x000438, "Member 'ABP_CapturePoint_C::ObjectiveCompleteDelay' has a wrong offset!");
static_assert(offsetof(ABP_CapturePoint_C, PendingNewCaptor) == 0x00043C, "Member 'ABP_CapturePoint_C::PendingNewCaptor' has a wrong offset!");

}

