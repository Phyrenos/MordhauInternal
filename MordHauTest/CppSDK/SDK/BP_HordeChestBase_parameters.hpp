#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordeChestBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HordeChestBase.BP_HordeChestBase_C.ExecuteUbergraph_BP_HordeChestBase
// 0x0080 (0x0080 - 0x0000)
struct BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_Event_Character;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordePlayerController_C*            K2Node_DynamicCast_AsBP_Horde_Player_Controller;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDiscountedPrice_DiscountedPrice;       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0048(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeGameState_C*                   K2Node_DynamicCast_AsBP_Horde_Game_State;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase) == 0x000008, "Wrong alignment on BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase");
static_assert(sizeof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase) == 0x000080, "Wrong size on BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, EntryPoint) == 0x000000, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, K2Node_Event_Character) == 0x000008, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, K2Node_DynamicCast_AsBP_Horde_Player_Controller) == 0x000020, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::K2Node_DynamicCast_AsBP_Horde_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x000030, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, CallFunc_GetDiscountedPrice_DiscountedPrice) == 0x00003C, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::CallFunc_GetDiscountedPrice_DiscountedPrice' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, K2Node_Event_Damage) == 0x000040, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, K2Node_Event_DamageType) == 0x000048, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, K2Node_Event_InstigatedBy) == 0x000050, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, K2Node_Event_DamageCauser) == 0x000058, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000064, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, CallFunc_GetGameState_ReturnValue) == 0x000068, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, K2Node_DynamicCast_AsBP_Horde_Game_State) == 0x000070, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::K2Node_DynamicCast_AsBP_Horde_Game_State' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase, CallFunc_Array_AddUnique_ReturnValue) == 0x00007C, "Member 'BP_HordeChestBase_C_ExecuteUbergraph_BP_HordeChestBase::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_HordeChestBase.BP_HordeChestBase_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_HordeChestBase_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeChestBase_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BP_HordeChestBase_C_ReceiveAnyDamage");
static_assert(sizeof(BP_HordeChestBase_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BP_HordeChestBase_C_ReceiveAnyDamage");
static_assert(offsetof(BP_HordeChestBase_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'BP_HordeChestBase_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BP_HordeChestBase_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BP_HordeChestBase_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BP_HordeChestBase_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function BP_HordeChestBase.BP_HordeChestBase_C.OnInteractionStart
// 0x0008 (0x0008 - 0x0000)
struct BP_HordeChestBase_C_OnInteractionStart final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeChestBase_C_OnInteractionStart) == 0x000008, "Wrong alignment on BP_HordeChestBase_C_OnInteractionStart");
static_assert(sizeof(BP_HordeChestBase_C_OnInteractionStart) == 0x000008, "Wrong size on BP_HordeChestBase_C_OnInteractionStart");
static_assert(offsetof(BP_HordeChestBase_C_OnInteractionStart, Character) == 0x000000, "Member 'BP_HordeChestBase_C_OnInteractionStart::Character' has a wrong offset!");

// Function BP_HordeChestBase.BP_HordeChestBase_C.SetAvailability
// 0x0001 (0x0001 - 0x0000)
struct BP_HordeChestBase_C_SetAvailability final
{
public:
	bool                                          NewAvailable;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeChestBase_C_SetAvailability) == 0x000001, "Wrong alignment on BP_HordeChestBase_C_SetAvailability");
static_assert(sizeof(BP_HordeChestBase_C_SetAvailability) == 0x000001, "Wrong size on BP_HordeChestBase_C_SetAvailability");
static_assert(offsetof(BP_HordeChestBase_C_SetAvailability, NewAvailable) == 0x000000, "Member 'BP_HordeChestBase_C_SetAvailability::NewAvailable' has a wrong offset!");

// Function BP_HordeChestBase.BP_HordeChestBase_C.UpdateVisuals
// 0x0068 (0x0068 - 0x0000)
struct BP_HordeChestBase_C_UpdateVisuals final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDiscountedPrice_DiscountedPrice;       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeChestBase_C_UpdateVisuals) == 0x000008, "Wrong alignment on BP_HordeChestBase_C_UpdateVisuals");
static_assert(sizeof(BP_HordeChestBase_C_UpdateVisuals) == 0x000068, "Wrong size on BP_HordeChestBase_C_UpdateVisuals");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'BP_HordeChestBase_C_UpdateVisuals::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, CallFunc_GetCameraLocation_ReturnValue) == 0x000008, "Member 'BP_HordeChestBase_C_UpdateVisuals::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000014, "Member 'BP_HordeChestBase_C_UpdateVisuals::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_HordeChestBase_C_UpdateVisuals::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BP_HordeChestBase_C_UpdateVisuals::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_HordeChestBase_C_UpdateVisuals::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00002C, "Member 'BP_HordeChestBase_C_UpdateVisuals::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, CallFunc_VSize_ReturnValue) == 0x000038, "Member 'BP_HordeChestBase_C_UpdateVisuals::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, CallFunc_Less_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_HordeChestBase_C_UpdateVisuals::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00003D, "Member 'BP_HordeChestBase_C_UpdateVisuals::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'BP_HordeChestBase_C_UpdateVisuals::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_HordeChestBase_C_UpdateVisuals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'BP_HordeChestBase_C_UpdateVisuals::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, CallFunc_IsLocalPlayerController_ReturnValue) == 0x00004A, "Member 'BP_HordeChestBase_C_UpdateVisuals::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x000050, "Member 'BP_HordeChestBase_C_UpdateVisuals::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_HordeChestBase_C_UpdateVisuals::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, CallFunc_GetDiscountedPrice_DiscountedPrice) == 0x00005C, "Member 'BP_HordeChestBase_C_UpdateVisuals::CallFunc_GetDiscountedPrice_DiscountedPrice' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_HordeChestBase_C_UpdateVisuals::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_UpdateVisuals, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000061, "Member 'BP_HordeChestBase_C_UpdateVisuals::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_HordeChestBase.BP_HordeChestBase_C.CanInteract
// 0x0028 (0x0028 - 0x0000)
struct BP_HordeChestBase_C_CanInteract final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanInteract_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDiscountedPrice_DiscountedPrice;       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeChestBase_C_CanInteract) == 0x000008, "Wrong alignment on BP_HordeChestBase_C_CanInteract");
static_assert(sizeof(BP_HordeChestBase_C_CanInteract) == 0x000028, "Wrong size on BP_HordeChestBase_C_CanInteract");
static_assert(offsetof(BP_HordeChestBase_C_CanInteract, Character) == 0x000000, "Member 'BP_HordeChestBase_C_CanInteract::Character' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_CanInteract, ReturnValue) == 0x000008, "Member 'BP_HordeChestBase_C_CanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_CanInteract, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_HordeChestBase_C_CanInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_CanInteract, CallFunc_CanInteract_ReturnValue) == 0x00000A, "Member 'BP_HordeChestBase_C_CanInteract::CallFunc_CanInteract_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_CanInteract, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x000010, "Member 'BP_HordeChestBase_C_CanInteract::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_CanInteract, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HordeChestBase_C_CanInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_CanInteract, CallFunc_GetDiscountedPrice_DiscountedPrice) == 0x00001C, "Member 'BP_HordeChestBase_C_CanInteract::CallFunc_GetDiscountedPrice_DiscountedPrice' has a wrong offset!");
static_assert(offsetof(BP_HordeChestBase_C_CanInteract, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_HordeChestBase_C_CanInteract::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

}

