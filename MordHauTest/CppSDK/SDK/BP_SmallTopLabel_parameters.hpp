#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SmallTopLabel

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_SmallTopLabel.BP_SmallTopLabel_C.ExecuteUbergraph_BP_SmallTopLabel
// 0x0008 (0x0008 - 0x0000)
struct BP_SmallTopLabel_C_ExecuteUbergraph_BP_SmallTopLabel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SmallTopLabel_C_ExecuteUbergraph_BP_SmallTopLabel) == 0x000004, "Wrong alignment on BP_SmallTopLabel_C_ExecuteUbergraph_BP_SmallTopLabel");
static_assert(sizeof(BP_SmallTopLabel_C_ExecuteUbergraph_BP_SmallTopLabel) == 0x000008, "Wrong size on BP_SmallTopLabel_C_ExecuteUbergraph_BP_SmallTopLabel");
static_assert(offsetof(BP_SmallTopLabel_C_ExecuteUbergraph_BP_SmallTopLabel, EntryPoint) == 0x000000, "Member 'BP_SmallTopLabel_C_ExecuteUbergraph_BP_SmallTopLabel::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SmallTopLabel_C_ExecuteUbergraph_BP_SmallTopLabel, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_SmallTopLabel_C_ExecuteUbergraph_BP_SmallTopLabel::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function BP_SmallTopLabel.BP_SmallTopLabel_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_SmallTopLabel_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SmallTopLabel_C_PreConstruct) == 0x000001, "Wrong alignment on BP_SmallTopLabel_C_PreConstruct");
static_assert(sizeof(BP_SmallTopLabel_C_PreConstruct) == 0x000001, "Wrong size on BP_SmallTopLabel_C_PreConstruct");
static_assert(offsetof(BP_SmallTopLabel_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_SmallTopLabel_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_SmallTopLabel.BP_SmallTopLabel_C.Update
// 0x0020 (0x0020 - 0x0000)
struct BP_SmallTopLabel_C_Update final
{
public:
	class FText                                   Text_0;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UScaleBoxSlot*                          CallFunc_SlotAsScaleBoxSlot_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallTopLabel_C_Update) == 0x000008, "Wrong alignment on BP_SmallTopLabel_C_Update");
static_assert(sizeof(BP_SmallTopLabel_C_Update) == 0x000020, "Wrong size on BP_SmallTopLabel_C_Update");
static_assert(offsetof(BP_SmallTopLabel_C_Update, Text_0) == 0x000000, "Member 'BP_SmallTopLabel_C_Update::Text_0' has a wrong offset!");
static_assert(offsetof(BP_SmallTopLabel_C_Update, CallFunc_SlotAsScaleBoxSlot_ReturnValue) == 0x000018, "Member 'BP_SmallTopLabel_C_Update::CallFunc_SlotAsScaleBoxSlot_ReturnValue' has a wrong offset!");

}

