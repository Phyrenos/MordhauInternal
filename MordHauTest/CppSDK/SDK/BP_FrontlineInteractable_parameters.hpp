#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrontlineInteractable

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_FrontlineInteractable.BP_FrontlineInteractable_C.ExecuteUbergraph_BP_FrontlineInteractable
// 0x0110 (0x0110 - 0x0000)
struct BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CapturePoint_C*                     K2Node_Event_Point;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauCharacter*                      K2Node_Event_Character_1;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_Event_Character;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Progress;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_OldValue_1;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AMordhauCharacter*>              CallFunc_Set_ToArray_Result;                       // 0x0060(0x0010)(ReferenceParm)
	class AMordhauCharacter*                      CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerController*               K2Node_DynamicCast_AsMordhau_Player_Controller;    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractWidgetFloater_C*            K2Node_DynamicCast_AsBP_Interact_Widget_Floater;   // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InteractWidgetFloater_C*            K2Node_DynamicCast_AsBP_Interact_Widget_Floater_1; // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_Event_OldValue;                             // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetObjectiveProgress_Progress;            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_2;        // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InteractWidgetFloater_C*            K2Node_DynamicCast_AsBP_Interact_Widget_Floater_2; // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable) == 0x000008, "Wrong alignment on BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable");
static_assert(sizeof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable) == 0x000110, "Wrong size on BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, EntryPoint) == 0x000000, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, K2Node_Event_Point) == 0x000018, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::K2Node_Event_Point' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, K2Node_Event_Character_1) == 0x000020, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::K2Node_Event_Character_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000039, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, K2Node_Event_Character) == 0x000040, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_GetController_ReturnValue_1) == 0x000050, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, K2Node_Event_Progress) == 0x000058, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::K2Node_Event_Progress' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, K2Node_Event_OldValue_1) == 0x00005C, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::K2Node_Event_OldValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_Set_ToArray_Result) == 0x000060, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000078, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_GetController_ReturnValue_2) == 0x000080, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, K2Node_DynamicCast_AsMordhau_Player_Controller) == 0x000090, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::K2Node_DynamicCast_AsMordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00009C, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0000A0, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_FFloor_ReturnValue) == 0x0000A4, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_FFloor_ReturnValue_1) == 0x0000A8, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_Array_Length_ReturnValue) == 0x0000AC, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_Less_IntInt_ReturnValue) == 0x0000B1, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_IsValid_ReturnValue_3) == 0x0000B2, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_GetUserWidgetObject_ReturnValue) == 0x0000B8, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, K2Node_DynamicCast_AsBP_Interact_Widget_Floater) == 0x0000C0, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::K2Node_DynamicCast_AsBP_Interact_Widget_Floater' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x0000D0, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, K2Node_DynamicCast_AsBP_Interact_Widget_Floater_1) == 0x0000E0, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::K2Node_DynamicCast_AsBP_Interact_Widget_Floater_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_Not_PreBool_ReturnValue) == 0x0000E9, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, K2Node_Event_OldValue) == 0x0000EA, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::K2Node_Event_OldValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_IsValid_ReturnValue_4) == 0x0000EB, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_GetObjectiveProgress_Progress) == 0x0000EC, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_GetObjectiveProgress_Progress' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_GetUserWidgetObject_ReturnValue_2) == 0x0000F0, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_GetUserWidgetObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000F8, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, K2Node_DynamicCast_AsBP_Interact_Widget_Floater_2) == 0x000100, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::K2Node_DynamicCast_AsBP_Interact_Widget_Floater_2' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, K2Node_DynamicCast_bSuccess_3) == 0x000108, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x000109, "Member 'BP_FrontlineInteractable_C_ExecuteUbergraph_BP_FrontlineInteractable::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_FrontlineInteractable.BP_FrontlineInteractable_C.OnInteractionsChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_FrontlineInteractable_C_OnInteractionsChanged final
{
public:
	uint8                                         OldValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontlineInteractable_C_OnInteractionsChanged) == 0x000001, "Wrong alignment on BP_FrontlineInteractable_C_OnInteractionsChanged");
static_assert(sizeof(BP_FrontlineInteractable_C_OnInteractionsChanged) == 0x000001, "Wrong size on BP_FrontlineInteractable_C_OnInteractionsChanged");
static_assert(offsetof(BP_FrontlineInteractable_C_OnInteractionsChanged, OldValue) == 0x000000, "Member 'BP_FrontlineInteractable_C_OnInteractionsChanged::OldValue' has a wrong offset!");

// Function BP_FrontlineInteractable.BP_FrontlineInteractable_C.OnCooperativeHoldProgressUpdated
// 0x0008 (0x0008 - 0x0000)
struct BP_FrontlineInteractable_C_OnCooperativeHoldProgressUpdated final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontlineInteractable_C_OnCooperativeHoldProgressUpdated) == 0x000004, "Wrong alignment on BP_FrontlineInteractable_C_OnCooperativeHoldProgressUpdated");
static_assert(sizeof(BP_FrontlineInteractable_C_OnCooperativeHoldProgressUpdated) == 0x000008, "Wrong size on BP_FrontlineInteractable_C_OnCooperativeHoldProgressUpdated");
static_assert(offsetof(BP_FrontlineInteractable_C_OnCooperativeHoldProgressUpdated, Progress) == 0x000000, "Member 'BP_FrontlineInteractable_C_OnCooperativeHoldProgressUpdated::Progress' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_OnCooperativeHoldProgressUpdated, OldValue) == 0x000004, "Member 'BP_FrontlineInteractable_C_OnCooperativeHoldProgressUpdated::OldValue' has a wrong offset!");

// Function BP_FrontlineInteractable.BP_FrontlineInteractable_C.OnInteractionStart
// 0x0008 (0x0008 - 0x0000)
struct BP_FrontlineInteractable_C_OnInteractionStart final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontlineInteractable_C_OnInteractionStart) == 0x000008, "Wrong alignment on BP_FrontlineInteractable_C_OnInteractionStart");
static_assert(sizeof(BP_FrontlineInteractable_C_OnInteractionStart) == 0x000008, "Wrong size on BP_FrontlineInteractable_C_OnInteractionStart");
static_assert(offsetof(BP_FrontlineInteractable_C_OnInteractionStart, Character) == 0x000000, "Member 'BP_FrontlineInteractable_C_OnInteractionStart::Character' has a wrong offset!");

// Function BP_FrontlineInteractable.BP_FrontlineInteractable_C.OnHeldInteractionStart
// 0x0008 (0x0008 - 0x0000)
struct BP_FrontlineInteractable_C_OnHeldInteractionStart final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontlineInteractable_C_OnHeldInteractionStart) == 0x000008, "Wrong alignment on BP_FrontlineInteractable_C_OnHeldInteractionStart");
static_assert(sizeof(BP_FrontlineInteractable_C_OnHeldInteractionStart) == 0x000008, "Wrong size on BP_FrontlineInteractable_C_OnHeldInteractionStart");
static_assert(offsetof(BP_FrontlineInteractable_C_OnHeldInteractionStart, Character) == 0x000000, "Member 'BP_FrontlineInteractable_C_OnHeldInteractionStart::Character' has a wrong offset!");

// Function BP_FrontlineInteractable.BP_FrontlineInteractable_C.OnInitialize
// 0x0008 (0x0008 - 0x0000)
struct BP_FrontlineInteractable_C_OnInitialize final
{
public:
	class ABP_CapturePoint_C*                     Point;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontlineInteractable_C_OnInitialize) == 0x000008, "Wrong alignment on BP_FrontlineInteractable_C_OnInitialize");
static_assert(sizeof(BP_FrontlineInteractable_C_OnInitialize) == 0x000008, "Wrong size on BP_FrontlineInteractable_C_OnInitialize");
static_assert(offsetof(BP_FrontlineInteractable_C_OnInitialize, Point) == 0x000000, "Member 'BP_FrontlineInteractable_C_OnInitialize::Point' has a wrong offset!");

// Function BP_FrontlineInteractable.BP_FrontlineInteractable_C.Activate
// 0x0001 (0x0001 - 0x0000)
struct BP_FrontlineInteractable_C_Activate final
{
public:
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FrontlineInteractable_C_Activate) == 0x000001, "Wrong alignment on BP_FrontlineInteractable_C_Activate");
static_assert(sizeof(BP_FrontlineInteractable_C_Activate) == 0x000001, "Wrong size on BP_FrontlineInteractable_C_Activate");
static_assert(offsetof(BP_FrontlineInteractable_C_Activate, CallFunc_Less_ByteByte_ReturnValue) == 0x000000, "Member 'BP_FrontlineInteractable_C_Activate::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_FrontlineInteractable.BP_FrontlineInteractable_C.Initialize
// 0x0008 (0x0008 - 0x0000)
struct BP_FrontlineInteractable_C_Initialize final
{
public:
	class ABP_CapturePoint_C*                     CapturePoint_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontlineInteractable_C_Initialize) == 0x000008, "Wrong alignment on BP_FrontlineInteractable_C_Initialize");
static_assert(sizeof(BP_FrontlineInteractable_C_Initialize) == 0x000008, "Wrong size on BP_FrontlineInteractable_C_Initialize");
static_assert(offsetof(BP_FrontlineInteractable_C_Initialize, CapturePoint_0) == 0x000000, "Member 'BP_FrontlineInteractable_C_Initialize::CapturePoint_0' has a wrong offset!");

// Function BP_FrontlineInteractable.BP_FrontlineInteractable_C.EnemyGainedPrerequisites
// 0x0003 (0x0003 - 0x0000)
struct BP_FrontlineInteractable_C_EnemyGainedPrerequisites final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FrontlineInteractable_C_EnemyGainedPrerequisites) == 0x000001, "Wrong alignment on BP_FrontlineInteractable_C_EnemyGainedPrerequisites");
static_assert(sizeof(BP_FrontlineInteractable_C_EnemyGainedPrerequisites) == 0x000003, "Wrong size on BP_FrontlineInteractable_C_EnemyGainedPrerequisites");
static_assert(offsetof(BP_FrontlineInteractable_C_EnemyGainedPrerequisites, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_FrontlineInteractable_C_EnemyGainedPrerequisites::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_EnemyGainedPrerequisites, CallFunc_Less_ByteByte_ReturnValue) == 0x000001, "Member 'BP_FrontlineInteractable_C_EnemyGainedPrerequisites::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_EnemyGainedPrerequisites, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000002, "Member 'BP_FrontlineInteractable_C_EnemyGainedPrerequisites::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_FrontlineInteractable.BP_FrontlineInteractable_C.IncrementInteractions
// 0x0018 (0x0018 - 0x0000)
struct BP_FrontlineInteractable_C_IncrementInteractions final
{
public:
	class AController*                            Interactor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerController*               K2Node_DynamicCast_AsMordhau_Player_Controller;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontlineInteractable_C_IncrementInteractions) == 0x000008, "Wrong alignment on BP_FrontlineInteractable_C_IncrementInteractions");
static_assert(sizeof(BP_FrontlineInteractable_C_IncrementInteractions) == 0x000018, "Wrong size on BP_FrontlineInteractable_C_IncrementInteractions");
static_assert(offsetof(BP_FrontlineInteractable_C_IncrementInteractions, Interactor) == 0x000000, "Member 'BP_FrontlineInteractable_C_IncrementInteractions::Interactor' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_IncrementInteractions, K2Node_DynamicCast_AsMordhau_Player_Controller) == 0x000008, "Member 'BP_FrontlineInteractable_C_IncrementInteractions::K2Node_DynamicCast_AsMordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_IncrementInteractions, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_FrontlineInteractable_C_IncrementInteractions::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_IncrementInteractions, CallFunc_Add_ByteByte_ReturnValue) == 0x000011, "Member 'BP_FrontlineInteractable_C_IncrementInteractions::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_IncrementInteractions, CallFunc_HasAuthority_ReturnValue) == 0x000012, "Member 'BP_FrontlineInteractable_C_IncrementInteractions::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_IncrementInteractions, CallFunc_Less_ByteByte_ReturnValue) == 0x000013, "Member 'BP_FrontlineInteractable_C_IncrementInteractions::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_IncrementInteractions, CallFunc_Subtract_ByteByte_ReturnValue) == 0x000014, "Member 'BP_FrontlineInteractable_C_IncrementInteractions::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_FrontlineInteractable.BP_FrontlineInteractable_C.UpdateUIWidgets
// 0x0190 (0x0190 - 0x0000)
struct BP_FrontlineInteractable_C_UpdateUIWidgets final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0030(0x0088)(UObjectWrapper)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerState*                    K2Node_DynamicCast_AsMordhau_Player_State;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x00D8(0x0088)(UObjectWrapper)
	class AMordhauGameState*                      K2Node_DynamicCast_AsMordhau_Game_State;           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InteractWidgetFloater_C*            K2Node_DynamicCast_AsBP_Interact_Widget_Floater;   // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FrontlineInteractable_C_UpdateUIWidgets) == 0x000008, "Wrong alignment on BP_FrontlineInteractable_C_UpdateUIWidgets");
static_assert(sizeof(BP_FrontlineInteractable_C_UpdateUIWidgets) == 0x000190, "Wrong size on BP_FrontlineInteractable_C_UpdateUIWidgets");
static_assert(offsetof(BP_FrontlineInteractable_C_UpdateUIWidgets, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'BP_FrontlineInteractable_C_UpdateUIWidgets::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_UpdateUIWidgets, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'BP_FrontlineInteractable_C_UpdateUIWidgets::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_UpdateUIWidgets, K2Node_MakeStruct_SlateBrush) == 0x000030, "Member 'BP_FrontlineInteractable_C_UpdateUIWidgets::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_UpdateUIWidgets, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BP_FrontlineInteractable_C_UpdateUIWidgets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_UpdateUIWidgets, K2Node_DynamicCast_AsMordhau_Player_State) == 0x0000C0, "Member 'BP_FrontlineInteractable_C_UpdateUIWidgets::K2Node_DynamicCast_AsMordhau_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_UpdateUIWidgets, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_FrontlineInteractable_C_UpdateUIWidgets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_UpdateUIWidgets, CallFunc_IsValid_ReturnValue_1) == 0x0000C9, "Member 'BP_FrontlineInteractable_C_UpdateUIWidgets::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_UpdateUIWidgets, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000CA, "Member 'BP_FrontlineInteractable_C_UpdateUIWidgets::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_UpdateUIWidgets, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0000CB, "Member 'BP_FrontlineInteractable_C_UpdateUIWidgets::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_UpdateUIWidgets, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000CC, "Member 'BP_FrontlineInteractable_C_UpdateUIWidgets::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_UpdateUIWidgets, CallFunc_GetGameState_ReturnValue) == 0x0000D0, "Member 'BP_FrontlineInteractable_C_UpdateUIWidgets::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_UpdateUIWidgets, K2Node_MakeStruct_SlateBrush_1) == 0x0000D8, "Member 'BP_FrontlineInteractable_C_UpdateUIWidgets::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_UpdateUIWidgets, K2Node_DynamicCast_AsMordhau_Game_State) == 0x000160, "Member 'BP_FrontlineInteractable_C_UpdateUIWidgets::K2Node_DynamicCast_AsMordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_UpdateUIWidgets, K2Node_DynamicCast_bSuccess_1) == 0x000168, "Member 'BP_FrontlineInteractable_C_UpdateUIWidgets::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_UpdateUIWidgets, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000170, "Member 'BP_FrontlineInteractable_C_UpdateUIWidgets::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_UpdateUIWidgets, CallFunc_IsValid_ReturnValue_2) == 0x000178, "Member 'BP_FrontlineInteractable_C_UpdateUIWidgets::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_UpdateUIWidgets, K2Node_DynamicCast_AsBP_Interact_Widget_Floater) == 0x000180, "Member 'BP_FrontlineInteractable_C_UpdateUIWidgets::K2Node_DynamicCast_AsBP_Interact_Widget_Floater' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_UpdateUIWidgets, K2Node_DynamicCast_bSuccess_2) == 0x000188, "Member 'BP_FrontlineInteractable_C_UpdateUIWidgets::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_FrontlineInteractable.BP_FrontlineInteractable_C.IsCompleted
// 0x0002 (0x0002 - 0x0000)
struct BP_FrontlineInteractable_C_IsCompleted final
{
public:
	bool                                          Completed;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FrontlineInteractable_C_IsCompleted) == 0x000001, "Wrong alignment on BP_FrontlineInteractable_C_IsCompleted");
static_assert(sizeof(BP_FrontlineInteractable_C_IsCompleted) == 0x000002, "Wrong size on BP_FrontlineInteractable_C_IsCompleted");
static_assert(offsetof(BP_FrontlineInteractable_C_IsCompleted, Completed) == 0x000000, "Member 'BP_FrontlineInteractable_C_IsCompleted::Completed' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_IsCompleted, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_FrontlineInteractable_C_IsCompleted::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_FrontlineInteractable.BP_FrontlineInteractable_C.IsInObjectiveArea
// 0x0030 (0x0030 - 0x0000)
struct BP_FrontlineInteractable_C_IsInObjectiveArea final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InArea;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeXY_ReturnValue;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FrontlineInteractable_C_IsInObjectiveArea) == 0x000004, "Wrong alignment on BP_FrontlineInteractable_C_IsInObjectiveArea");
static_assert(sizeof(BP_FrontlineInteractable_C_IsInObjectiveArea) == 0x000030, "Wrong size on BP_FrontlineInteractable_C_IsInObjectiveArea");
static_assert(offsetof(BP_FrontlineInteractable_C_IsInObjectiveArea, Location) == 0x000000, "Member 'BP_FrontlineInteractable_C_IsInObjectiveArea::Location' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_IsInObjectiveArea, InArea) == 0x00000C, "Member 'BP_FrontlineInteractable_C_IsInObjectiveArea::InArea' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_IsInObjectiveArea, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_FrontlineInteractable_C_IsInObjectiveArea::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_IsInObjectiveArea, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00001C, "Member 'BP_FrontlineInteractable_C_IsInObjectiveArea::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_IsInObjectiveArea, CallFunc_VSizeXY_ReturnValue) == 0x000028, "Member 'BP_FrontlineInteractable_C_IsInObjectiveArea::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_IsInObjectiveArea, CallFunc_Less_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_FrontlineInteractable_C_IsInObjectiveArea::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_FrontlineInteractable.BP_FrontlineInteractable_C.CanInteract
// 0x0020 (0x0020 - 0x0000)
struct BP_FrontlineInteractable_C_CanInteract final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanInteract_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DeliverableEquipment_C*             K2Node_DynamicCast_AsBP_Deliverable_Equipment;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FrontlineInteractable_C_CanInteract) == 0x000008, "Wrong alignment on BP_FrontlineInteractable_C_CanInteract");
static_assert(sizeof(BP_FrontlineInteractable_C_CanInteract) == 0x000020, "Wrong size on BP_FrontlineInteractable_C_CanInteract");
static_assert(offsetof(BP_FrontlineInteractable_C_CanInteract, Character) == 0x000000, "Member 'BP_FrontlineInteractable_C_CanInteract::Character' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_CanInteract, ReturnValue) == 0x000008, "Member 'BP_FrontlineInteractable_C_CanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_CanInteract, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_FrontlineInteractable_C_CanInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_CanInteract, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00000A, "Member 'BP_FrontlineInteractable_C_CanInteract::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_CanInteract, CallFunc_CanInteract_ReturnValue) == 0x00000B, "Member 'BP_FrontlineInteractable_C_CanInteract::CallFunc_CanInteract_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_CanInteract, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'BP_FrontlineInteractable_C_CanInteract::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_CanInteract, K2Node_DynamicCast_AsBP_Deliverable_Equipment) == 0x000010, "Member 'BP_FrontlineInteractable_C_CanInteract::K2Node_DynamicCast_AsBP_Deliverable_Equipment' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_CanInteract, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FrontlineInteractable_C_CanInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_CanInteract, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_FrontlineInteractable_C_CanInteract::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_CanInteract, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'BP_FrontlineInteractable_C_CanInteract::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_FrontlineInteractable.BP_FrontlineInteractable_C.CanHeldInteract
// 0x0020 (0x0020 - 0x0000)
struct BP_FrontlineInteractable_C_CanHeldInteract final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanHeldInteract_ReturnValue;              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DeliverableEquipment_C*             K2Node_DynamicCast_AsBP_Deliverable_Equipment;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FrontlineInteractable_C_CanHeldInteract) == 0x000008, "Wrong alignment on BP_FrontlineInteractable_C_CanHeldInteract");
static_assert(sizeof(BP_FrontlineInteractable_C_CanHeldInteract) == 0x000020, "Wrong size on BP_FrontlineInteractable_C_CanHeldInteract");
static_assert(offsetof(BP_FrontlineInteractable_C_CanHeldInteract, Character) == 0x000000, "Member 'BP_FrontlineInteractable_C_CanHeldInteract::Character' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_CanHeldInteract, ReturnValue) == 0x000008, "Member 'BP_FrontlineInteractable_C_CanHeldInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_CanHeldInteract, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_FrontlineInteractable_C_CanHeldInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_CanHeldInteract, CallFunc_CanHeldInteract_ReturnValue) == 0x00000A, "Member 'BP_FrontlineInteractable_C_CanHeldInteract::CallFunc_CanHeldInteract_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_CanHeldInteract, K2Node_DynamicCast_AsBP_Deliverable_Equipment) == 0x000010, "Member 'BP_FrontlineInteractable_C_CanHeldInteract::K2Node_DynamicCast_AsBP_Deliverable_Equipment' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_CanHeldInteract, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FrontlineInteractable_C_CanHeldInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_CanHeldInteract, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_FrontlineInteractable_C_CanHeldInteract::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_CanHeldInteract, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'BP_FrontlineInteractable_C_CanHeldInteract::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_FrontlineInteractable.BP_FrontlineInteractable_C.GetObjectiveProgress
// 0x0014 (0x0014 - 0x0000)
struct BP_FrontlineInteractable_C_GetObjectiveProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue_1;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontlineInteractable_C_GetObjectiveProgress) == 0x000004, "Wrong alignment on BP_FrontlineInteractable_C_GetObjectiveProgress");
static_assert(sizeof(BP_FrontlineInteractable_C_GetObjectiveProgress) == 0x000014, "Wrong size on BP_FrontlineInteractable_C_GetObjectiveProgress");
static_assert(offsetof(BP_FrontlineInteractable_C_GetObjectiveProgress, Progress) == 0x000000, "Member 'BP_FrontlineInteractable_C_GetObjectiveProgress::Progress' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_GetObjectiveProgress, CallFunc_Conv_ByteToFloat_ReturnValue) == 0x000004, "Member 'BP_FrontlineInteractable_C_GetObjectiveProgress::CallFunc_Conv_ByteToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_GetObjectiveProgress, CallFunc_Conv_ByteToFloat_ReturnValue_1) == 0x000008, "Member 'BP_FrontlineInteractable_C_GetObjectiveProgress::CallFunc_Conv_ByteToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_GetObjectiveProgress, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_FrontlineInteractable_C_GetObjectiveProgress::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlineInteractable_C_GetObjectiveProgress, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_FrontlineInteractable_C_GetObjectiveProgress::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

}

