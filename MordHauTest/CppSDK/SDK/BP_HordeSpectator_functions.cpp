#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordeSpectator

#include "Basic.hpp"

#include "BP_HordeSpectator_classes.hpp"
#include "BP_HordeSpectator_parameters.hpp"


namespace SDK
{

// Function BP_HordeSpectator.BP_HordeSpectator_C.ExecuteUbergraph_BP_HordeSpectator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeSpectator_C::ExecuteUbergraph_BP_HordeSpectator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSpectator_C", "ExecuteUbergraph_BP_HordeSpectator");

	Params::BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeSpectator.BP_HordeSpectator_C.SwitchToFreeCam
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_HordeSpectator_C::SwitchToFreeCam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSpectator_C", "SwitchToFreeCam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeSpectator.BP_HordeSpectator_C.InpActEvt_Primary Spectator Action_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_HordeSpectator_C::InpActEvt_Primary_Spectator_Action_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSpectator_C", "InpActEvt_Primary Spectator Action_K2Node_InputActionEvent_0");

	Params::BP_HordeSpectator_C_InpActEvt_Primary_Spectator_Action_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeSpectator.BP_HordeSpectator_C.InpActEvt_Tertiary Spectator Action_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_HordeSpectator_C::InpActEvt_Tertiary_Spectator_Action_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSpectator_C", "InpActEvt_Tertiary Spectator Action_K2Node_InputActionEvent_1");

	Params::BP_HordeSpectator_C_InpActEvt_Tertiary_Spectator_Action_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeSpectator.BP_HordeSpectator_C.InpActEvt_Secondary Spectator Action_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_HordeSpectator_C::InpActEvt_Secondary_Spectator_Action_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSpectator_C", "InpActEvt_Secondary Spectator Action_K2Node_InputActionEvent_2");

	Params::BP_HordeSpectator_C_InpActEvt_Secondary_Spectator_Action_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeSpectator.BP_HordeSpectator_C.GetGrave
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_HordePlayerGrave_C*           Grave                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeSpectator_C::GetGrave(class ABP_HordePlayerGrave_C** Grave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeSpectator_C", "GetGrave");

	Params::BP_HordeSpectator_C_GetGrave Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Grave != nullptr)
		*Grave = Parms.Grave;
}

}

