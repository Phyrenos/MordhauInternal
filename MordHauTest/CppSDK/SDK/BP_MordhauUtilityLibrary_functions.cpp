#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MordhauUtilityLibrary

#include "Basic.hpp"

#include "BP_MordhauUtilityLibrary_classes.hpp"
#include "BP_MordhauUtilityLibrary_parameters.hpp"


namespace SDK
{

// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetLastComboBoxOption
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UComboBoxText*                    ComboBox                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Option                                                 (Parm, OutParm)

void UBP_MordhauUtilityLibrary_C::GetLastComboBoxOption(class UComboBoxText* ComboBox, class UObject* __WorldContext, class FText* Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetLastComboBoxOption");

	Params::BP_MordhauUtilityLibrary_C_GetLastComboBoxOption Parms{};

	Parms.ComboBox = ComboBox;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Option != nullptr)
		*Option = std::move(Parms.Option);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.SelectLastComboBoxOption
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UComboBoxText*                    ComboBox                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::SelectLastComboBoxOption(class UComboBoxText* ComboBox, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "SelectLastComboBoxOption");

	Params::BP_MordhauUtilityLibrary_C_SelectLastComboBoxOption Parms{};

	Parms.ComboBox = ComboBox;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.IsFirstOptionSelected
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UComboBoxText*                    ComboBox                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_MordhauUtilityLibrary_C::IsFirstOptionSelected(class UComboBoxText* ComboBox, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "IsFirstOptionSelected");

	Params::BP_MordhauUtilityLibrary_C_IsFirstOptionSelected Parms{};

	Parms.ComboBox = ComboBox;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.IsProfileNameValid
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ProfiletName                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MordhauUtilityLibrary_C::IsProfileNameValid(const class FText& ProfiletName, class UObject* __WorldContext, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "IsProfileNameValid");

	Params::BP_MordhauUtilityLibrary_C_IsProfileNameValid Parms{};

	Parms.ProfiletName = std::move(ProfiletName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.SelectFirstComboBoxOption
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UComboBoxText*                    ComboBox                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::SelectFirstComboBoxOption(class UComboBoxText* ComboBox, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "SelectFirstComboBoxOption");

	Params::BP_MordhauUtilityLibrary_C_SelectFirstComboBoxOption Parms{};

	Parms.ComboBox = ComboBox;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetSelectedIndex
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UComboBoxText*                    ComboBox                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SelectedIndex                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::GetSelectedIndex(class UComboBoxText* ComboBox, class UObject* __WorldContext, int32* SelectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetSelectedIndex");

	Params::BP_MordhauUtilityLibrary_C_GetSelectedIndex Parms{};

	Parms.ComboBox = ComboBox;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SelectedIndex != nullptr)
		*SelectedIndex = Parms.SelectedIndex;
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.ComputeRagdollForce
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Agent                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   DamageSubType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   RandomByte                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Receiver                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Force                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::ComputeRagdollForce(class AActor* Agent, uint8 DamageType, uint8 DamageSubType, uint8 RandomByte, class AActor* Receiver, class UObject* __WorldContext, struct FVector* Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "ComputeRagdollForce");

	Params::BP_MordhauUtilityLibrary_C_ComputeRagdollForce Parms{};

	Parms.Agent = Agent;
	Parms.DamageType = DamageType;
	Parms.DamageSubType = DamageSubType;
	Parms.RandomByte = RandomByte;
	Parms.Receiver = Receiver;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Force != nullptr)
		*Force = std::move(Parms.Force);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.Create Text Input Dialog
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             TitleText                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             HintText                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             LeftButtonText                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             RightButtonText                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    bIsPassword                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   NormalTextLimit                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_TextInputDialog_C*            TextInputDialog                                        (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::Create_Text_Input_Dialog(class APlayerController* OwningPlayer, const class FText& TitleText, const class FText& HintText, const class FText& LeftButtonText, const class FText& RightButtonText, bool bIsPassword, int32 NormalTextLimit, class UObject* __WorldContext, class UBP_TextInputDialog_C** TextInputDialog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "Create Text Input Dialog");

	Params::BP_MordhauUtilityLibrary_C_Create_Text_Input_Dialog Parms{};

	Parms.OwningPlayer = OwningPlayer;
	Parms.TitleText = std::move(TitleText);
	Parms.HintText = std::move(HintText);
	Parms.LeftButtonText = std::move(LeftButtonText);
	Parms.RightButtonText = std::move(RightButtonText);
	Parms.bIsPassword = bIsPassword;
	Parms.NormalTextLimit = NormalTextLimit;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (TextInputDialog != nullptr)
		*TextInputDialog = Parms.TextInputDialog;
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.CreateChoiceDialog
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             TitleText                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             ChoiceText                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             LeftButtonText                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             RightButtonText                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_ChoiceDialog_C*               ChoiceDialog                                           (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::CreateChoiceDialog(class APlayerController* OwningPlayer, const class FText& TitleText, const class FText& ChoiceText, const class FText& LeftButtonText, const class FText& RightButtonText, class UObject* __WorldContext, class UBP_ChoiceDialog_C** ChoiceDialog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "CreateChoiceDialog");

	Params::BP_MordhauUtilityLibrary_C_CreateChoiceDialog Parms{};

	Parms.OwningPlayer = OwningPlayer;
	Parms.TitleText = std::move(TitleText);
	Parms.ChoiceText = std::move(ChoiceText);
	Parms.LeftButtonText = std::move(LeftButtonText);
	Parms.RightButtonText = std::move(RightButtonText);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ChoiceDialog != nullptr)
		*ChoiceDialog = Parms.ChoiceDialog;
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.CreateInformationDialog
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             TitleText                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             InformationText                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             ButtonText                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_InformationDialog_C*          InformationDialog                                      (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::CreateInformationDialog(class APlayerController* OwningPlayer, const class FText& TitleText, const class FText& InformationText, const class FText& ButtonText, class UObject* __WorldContext, class UBP_InformationDialog_C** InformationDialog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "CreateInformationDialog");

	Params::BP_MordhauUtilityLibrary_C_CreateInformationDialog Parms{};

	Parms.OwningPlayer = OwningPlayer;
	Parms.TitleText = std::move(TitleText);
	Parms.InformationText = std::move(InformationText);
	Parms.ButtonText = std::move(ButtonText);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (InformationDialog != nullptr)
		*InformationDialog = Parms.InformationDialog;
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetUnlockTooltipText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           ItemDefIDs                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ToolTipText                                            (Parm, OutParm)

void UBP_MordhauUtilityLibrary_C::GetUnlockTooltipText(TArray<int32>& ItemDefIDs, class UObject* __WorldContext, class FText* ToolTipText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetUnlockTooltipText");

	Params::BP_MordhauUtilityLibrary_C_GetUnlockTooltipText Parms{};

	Parms.ItemDefIDs = std::move(ItemDefIDs);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	ItemDefIDs = std::move(Parms.ItemDefIDs);

	if (ToolTipText != nullptr)
		*ToolTipText = std::move(Parms.ToolTipText);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetGoldAndRankUnlockRequirement
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           ItemDefIDs                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Gold                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Rank                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::GetGoldAndRankUnlockRequirement(TArray<int32>& ItemDefIDs, class UObject* __WorldContext, int32* Gold, int32* Rank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetGoldAndRankUnlockRequirement");

	Params::BP_MordhauUtilityLibrary_C_GetGoldAndRankUnlockRequirement Parms{};

	Parms.ItemDefIDs = std::move(ItemDefIDs);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	ItemDefIDs = std::move(Parms.ItemDefIDs);

	if (Gold != nullptr)
		*Gold = Parms.Gold;

	if (Rank != nullptr)
		*Rank = Parms.Rank;
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.CreateContextPopup
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FString, class FText>        Option_Map                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_ContextPopupWrapper_C*        Context_Popup_Wrapper                                  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::CreateContextPopup(const TMap<class FString, class FText>& Option_Map, class UObject* __WorldContext, class UBP_ContextPopupWrapper_C** Context_Popup_Wrapper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "CreateContextPopup");

	Params::BP_MordhauUtilityLibrary_C_CreateContextPopup Parms{};

	Parms.Option_Map = std::move(Option_Map);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Context_Popup_Wrapper != nullptr)
		*Context_Popup_Wrapper = Parms.Context_Popup_Wrapper;
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.Get1v1MMRFromStats
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MMR                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::Get1v1MMRFromStats(class UObject* __WorldContext, int32* MMR)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "Get1v1MMRFromStats");

	Params::BP_MordhauUtilityLibrary_C_Get1v1MMRFromStats Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MMR != nullptr)
		*MMR = Parms.MMR;
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetRank
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Rank                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::GetRank(class UObject* __WorldContext, int32* Rank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetRank");

	Params::BP_MordhauUtilityLibrary_C_GetRank Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Rank != nullptr)
		*Rank = Parms.Rank;
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetKeyInfoFromActionName_Primary
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Action_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       Icon                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Key                                                    (Parm, OutParm, HasGetValueTypeHash)
// class FText                             Key_Display_Name                                       (Parm, OutParm)

void UBP_MordhauUtilityLibrary_C::GetKeyInfoFromActionName_Primary(class FName Action_Name, class UObject* __WorldContext, class UTexture2D** Icon, struct FKey* Key, class FText* Key_Display_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetKeyInfoFromActionName_Primary");

	Params::BP_MordhauUtilityLibrary_C_GetKeyInfoFromActionName_Primary Parms{};

	Parms.Action_Name = Action_Name;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Icon != nullptr)
		*Icon = Parms.Icon;

	if (Key != nullptr)
		*Key = std::move(Parms.Key);

	if (Key_Display_Name != nullptr)
		*Key_Display_Name = std::move(Parms.Key_Display_Name);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetKeyInfoFromKey
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key_                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       Icon                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Key                                                    (Parm, OutParm, HasGetValueTypeHash)
// class FText                             Key_Display_Name                                       (Parm, OutParm)

void UBP_MordhauUtilityLibrary_C::GetKeyInfoFromKey(const struct FKey& Key_, class UObject* __WorldContext, class UTexture2D** Icon, struct FKey* Key, class FText* Key_Display_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetKeyInfoFromKey");

	Params::BP_MordhauUtilityLibrary_C_GetKeyInfoFromKey Parms{};

	Parms.Key_ = std::move(Key_);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Icon != nullptr)
		*Icon = Parms.Icon;

	if (Key != nullptr)
		*Key = std::move(Parms.Key);

	if (Key_Display_Name != nullptr)
		*Key_Display_Name = std::move(Parms.Key_Display_Name);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetPlayerStateFromActor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AMordhauPlayerState*              PlayerState                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::GetPlayerStateFromActor(class AActor* Actor, class UObject* __WorldContext, class AMordhauPlayerState** PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetPlayerStateFromActor");

	Params::BP_MordhauUtilityLibrary_C_GetPlayerStateFromActor Parms{};

	Parms.Actor = Actor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PlayerState != nullptr)
		*PlayerState = Parms.PlayerState;
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.Get3v3MMRFromStats
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MMR                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::Get3v3MMRFromStats(class UObject* __WorldContext, int32* MMR)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "Get3v3MMRFromStats");

	Params::BP_MordhauUtilityLibrary_C_Get3v3MMRFromStats Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MMR != nullptr)
		*MMR = Parms.MMR;
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetTeamColor
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Output__Linear_                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor                      Output__Slate_                                         (Parm, OutParm)

void UBP_MordhauUtilityLibrary_C::GetTeamColor(int32 Team, class UObject* __WorldContext, struct FLinearColor* Output__Linear_, struct FSlateColor* Output__Slate_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetTeamColor");

	Params::BP_MordhauUtilityLibrary_C_GetTeamColor Parms{};

	Parms.Team = Team;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Output__Linear_ != nullptr)
		*Output__Linear_ = std::move(Parms.Output__Linear_);

	if (Output__Slate_ != nullptr)
		*Output__Slate_ = std::move(Parms.Output__Slate_);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetLoadoutFromSingleton
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCharacterProfile                Profile                                                (Parm, OutParm)
// bool                                    is_Default_Profile                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MordhauUtilityLibrary_C::GetLoadoutFromSingleton(int32 ID, class UObject* __WorldContext, struct FCharacterProfile* Profile, bool* is_Default_Profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetLoadoutFromSingleton");

	Params::BP_MordhauUtilityLibrary_C_GetLoadoutFromSingleton Parms{};

	Parms.ID = ID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Profile != nullptr)
		*Profile = std::move(Parms.Profile);

	if (is_Default_Profile != nullptr)
		*is_Default_Profile = Parms.is_Default_Profile;
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.Set Spawn Loadout
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::Set_Spawn_Loadout(class APlayerController* Player_Controller, int32 ID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "Set Spawn Loadout");

	Params::BP_MordhauUtilityLibrary_C_Set_Spawn_Loadout Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.ID = ID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetKeyInfoFromActionName_Secondary
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Action_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       Icon                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Secondary_Key                                          (Parm, OutParm, HasGetValueTypeHash)
// class FText                             Secondary_Key_Display_Name                             (Parm, OutParm)

void UBP_MordhauUtilityLibrary_C::GetKeyInfoFromActionName_Secondary(class FName Action_Name, class UObject* __WorldContext, class UTexture2D** Icon, struct FKey* Secondary_Key, class FText* Secondary_Key_Display_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetKeyInfoFromActionName_Secondary");

	Params::BP_MordhauUtilityLibrary_C_GetKeyInfoFromActionName_Secondary Parms{};

	Parms.Action_Name = Action_Name;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Icon != nullptr)
		*Icon = Parms.Icon;

	if (Secondary_Key != nullptr)
		*Secondary_Key = std::move(Parms.Secondary_Key);

	if (Secondary_Key_Display_Name != nullptr)
		*Secondary_Key_Display_Name = std::move(Parms.Secondary_Key_Display_Name);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.CreateContextPopup_Interface
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBP_ContextPopupInterface_C>Interface                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TMap<class FString, class FText>        Option_Map                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::CreateContextPopup_Interface(TScriptInterface<class IBP_ContextPopupInterface_C> Interface, const TMap<class FString, class FText>& Option_Map, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "CreateContextPopup_Interface");

	Params::BP_MordhauUtilityLibrary_C_CreateContextPopup_Interface Parms{};

	Parms.Interface = Interface;
	Parms.Option_Map = std::move(Option_Map);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.PascalCaseSeparator
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           In_String                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Out_String                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::PascalCaseSeparator(const class FString& In_String, class UObject* __WorldContext, class FString* Out_String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "PascalCaseSeparator");

	Params::BP_MordhauUtilityLibrary_C_PascalCaseSeparator Parms{};

	Parms.In_String = std::move(In_String);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out_String != nullptr)
		*Out_String = std::move(Parms.Out_String);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.CreateContextPopupComplex_Interface
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBP_ContextPopupInterface_C>Interface                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TMap<class FString, class FText>        Option_Map                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// TArray<class UTexture2D*>               Icons                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FLinearColor>             Colors                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             Title                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::CreateContextPopupComplex_Interface(TScriptInterface<class IBP_ContextPopupInterface_C> Interface, const TMap<class FString, class FText>& Option_Map, TArray<class UTexture2D*>& Icons, TArray<struct FLinearColor>& Colors, const class FText& Title, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "CreateContextPopupComplex_Interface");

	Params::BP_MordhauUtilityLibrary_C_CreateContextPopupComplex_Interface Parms{};

	Parms.Interface = Interface;
	Parms.Option_Map = std::move(Option_Map);
	Parms.Icons = std::move(Icons);
	Parms.Colors = std::move(Colors);
	Parms.Title = std::move(Title);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Icons = std::move(Parms.Icons);
	Colors = std::move(Parms.Colors);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetWidgetCornerPoints
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector2D>                Points                                                 (Parm, OutParm)

void UBP_MordhauUtilityLibrary_C::GetWidgetCornerPoints(class UUserWidget* Widget, class UObject* __WorldContext, TArray<struct FVector2D>* Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetWidgetCornerPoints");

	Params::BP_MordhauUtilityLibrary_C_GetWidgetCornerPoints Parms{};

	Parms.Widget = Widget;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Points != nullptr)
		*Points = std::move(Parms.Points);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetWearableCost
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Tier                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EWearableSlot                           Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Cost                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::GetWearableCost(uint8 Tier, EWearableSlot Slot, class UObject* __WorldContext, int32* Cost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetWearableCost");

	Params::BP_MordhauUtilityLibrary_C_GetWearableCost Parms{};

	Parms.Tier = Tier;
	Parms.Slot = Slot;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Cost != nullptr)
		*Cost = Parms.Cost;
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetIsEndScreenShowing
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          WorldContextObject                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsEndScreenShowing                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MordhauUtilityLibrary_C::GetIsEndScreenShowing(class UObject* WorldContextObject, class UObject* __WorldContext, bool* bIsEndScreenShowing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetIsEndScreenShowing");

	Params::BP_MordhauUtilityLibrary_C_GetIsEndScreenShowing Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bIsEndScreenShowing != nullptr)
		*bIsEndScreenShowing = Parms.bIsEndScreenShowing;
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetTeamName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Team_Name                                              (Parm, OutParm)

void UBP_MordhauUtilityLibrary_C::GetTeamName(const class UObject* WorldContextObject, int32 Team, class UObject* __WorldContext, class FText* Team_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetTeamName");

	Params::BP_MordhauUtilityLibrary_C_GetTeamName Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Team = Team;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Team_Name != nullptr)
		*Team_Name = std::move(Parms.Team_Name);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.Get Pointer Ray In World Space
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   StartOffset                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EndOffset                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          RayStart                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          RayEnd                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::Get_Pointer_Ray_In_World_Space(float StartOffset, float EndOffset, class UObject* __WorldContext, struct FVector* RayStart, struct FVector* RayEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "Get Pointer Ray In World Space");

	Params::BP_MordhauUtilityLibrary_C_Get_Pointer_Ray_In_World_Space Parms{};

	Parms.StartOffset = StartOffset;
	Parms.EndOffset = EndOffset;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (RayStart != nullptr)
		*RayStart = std::move(Parms.RayStart);

	if (RayEnd != nullptr)
		*RayEnd = std::move(Parms.RayEnd);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.SwapConfirmCancel
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_ButtonPrompt_C*               ButtonPrompt                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::SwapConfirmCancel(class UBP_ButtonPrompt_C* ButtonPrompt, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "SwapConfirmCancel");

	Params::BP_MordhauUtilityLibrary_C_SwapConfirmCancel Parms{};

	Parms.ButtonPrompt = ButtonPrompt;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetActionText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InName                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ActionText                                             (Parm, OutParm)

void UBP_MordhauUtilityLibrary_C::GetActionText(class FName InName, class UObject* __WorldContext, class FText* ActionText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetActionText");

	Params::BP_MordhauUtilityLibrary_C_GetActionText Parms{};

	Parms.InName = InName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ActionText != nullptr)
		*ActionText = std::move(Parms.ActionText);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.CreateChoiceDialogWithContent
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             TitleText                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class UUserWidget*                      WidgetContent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             LeftButton                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             RightButton                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_ChoiceDialog_C*               ChoiceContentDialog                                    (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::CreateChoiceDialogWithContent(class APlayerController* OwningPlayer, const class FText& TitleText, class UUserWidget* WidgetContent, const class FText& LeftButton, const class FText& RightButton, class UObject* __WorldContext, class UBP_ChoiceDialog_C** ChoiceContentDialog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "CreateChoiceDialogWithContent");

	Params::BP_MordhauUtilityLibrary_C_CreateChoiceDialogWithContent Parms{};

	Parms.OwningPlayer = OwningPlayer;
	Parms.TitleText = std::move(TitleText);
	Parms.WidgetContent = WidgetContent;
	Parms.LeftButton = std::move(LeftButton);
	Parms.RightButton = std::move(RightButton);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ChoiceContentDialog != nullptr)
		*ChoiceContentDialog = Parms.ChoiceContentDialog;
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetGamepadButtonText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           TextToBeLocalised                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             GamepadButtonText                                      (Parm, OutParm)

void UBP_MordhauUtilityLibrary_C::GetGamepadButtonText(const class FString& TextToBeLocalised, class UObject* __WorldContext, class FText* GamepadButtonText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetGamepadButtonText");

	Params::BP_MordhauUtilityLibrary_C_GetGamepadButtonText Parms{};

	Parms.TextToBeLocalised = std::move(TextToBeLocalised);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (GamepadButtonText != nullptr)
		*GamepadButtonText = std::move(Parms.GamepadButtonText);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetGamepadConfirmButton
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             ConfirmKey                                             (Parm, OutParm, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::GetGamepadConfirmButton(class UObject* __WorldContext, struct FKey* ConfirmKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetGamepadConfirmButton");

	Params::BP_MordhauUtilityLibrary_C_GetGamepadConfirmButton Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ConfirmKey != nullptr)
		*ConfirmKey = std::move(Parms.ConfirmKey);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.GetGamepadCancelButton
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             CancelKey                                              (Parm, OutParm, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::GetGamepadCancelButton(class UObject* __WorldContext, struct FKey* CancelKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "GetGamepadCancelButton");

	Params::BP_MordhauUtilityLibrary_C_GetGamepadCancelButton Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CancelKey != nullptr)
		*CancelKey = std::move(Parms.CancelKey);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.SwapConfirmCancelKey
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             InputKey                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             OutputKey                                              (Parm, OutParm, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::SwapConfirmCancelKey(const struct FKey& InputKey, class UObject* __WorldContext, struct FKey* OutputKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "SwapConfirmCancelKey");

	Params::BP_MordhauUtilityLibrary_C_SwapConfirmCancelKey Parms{};

	Parms.InputKey = std::move(InputKey);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutputKey != nullptr)
		*OutputKey = std::move(Parms.OutputKey);
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.CreateUserReportDialog
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             TitleText                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             ChoiceText                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             LeftButtonText                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             RightButtonText                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FPlayFabPlayer                   ReportedPlayer                                         (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_ReportDialog_C*               Report_dialog                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::CreateUserReportDialog(class APlayerController* OwningPlayer, const class FText& TitleText, const class FText& ChoiceText, const class FText& LeftButtonText, const class FText& RightButtonText, const struct FPlayFabPlayer& ReportedPlayer, class UObject* __WorldContext, class UBP_ReportDialog_C** Report_dialog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "CreateUserReportDialog");

	Params::BP_MordhauUtilityLibrary_C_CreateUserReportDialog Parms{};

	Parms.OwningPlayer = OwningPlayer;
	Parms.TitleText = std::move(TitleText);
	Parms.ChoiceText = std::move(ChoiceText);
	Parms.LeftButtonText = std::move(LeftButtonText);
	Parms.RightButtonText = std::move(RightButtonText);
	Parms.ReportedPlayer = std::move(ReportedPlayer);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Report_dialog != nullptr)
		*Report_dialog = Parms.Report_dialog;
}


// Function BP_MordhauUtilityLibrary.BP_MordhauUtilityLibrary_C.CreateNoButtonsDialog
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             TitleText                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             ContentText                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_NoButtonsDialog_C*            InformationDialog                                      (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MordhauUtilityLibrary_C::CreateNoButtonsDialog(class APlayerController* OwningPlayer, const class FText& TitleText, const class FText& ContentText, class UObject* __WorldContext, class UBP_NoButtonsDialog_C** InformationDialog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MordhauUtilityLibrary_C", "CreateNoButtonsDialog");

	Params::BP_MordhauUtilityLibrary_C_CreateNoButtonsDialog Parms{};

	Parms.OwningPlayer = OwningPlayer;
	Parms.TitleText = std::move(TitleText);
	Parms.ContentText = std::move(ContentText);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (InformationDialog != nullptr)
		*InformationDialog = Parms.InformationDialog;
}

}

