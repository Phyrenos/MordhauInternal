#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DemonHordeEnemy_Special_BloatedCarcass

#include "Basic.hpp"

#include "BP_DemonHordeEnemy_Special_BloatedCarcass_classes.hpp"
#include "BP_DemonHordeEnemy_Special_BloatedCarcass_parameters.hpp"


namespace SDK
{

// Function BP_DemonHordeEnemy_Special_BloatedCarcass.BP_DemonHordeEnemy_Special_BloatedCarcass_C.ExecuteUbergraph_BP_DemonHordeEnemy_Special_BloatedCarcass
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeEnemy_Special_BloatedCarcass_C::ExecuteUbergraph_BP_DemonHordeEnemy_Special_BloatedCarcass(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_BloatedCarcass_C", "ExecuteUbergraph_BP_DemonHordeEnemy_Special_BloatedCarcass");

	Params::BP_DemonHordeEnemy_Special_BloatedCarcass_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_BloatedCarcass Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeEnemy_Special_BloatedCarcass.BP_DemonHordeEnemy_Special_BloatedCarcass_C.ScreamingMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DemonHordeEnemy_Special_BloatedCarcass_C::ScreamingMulti(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_BloatedCarcass_C", "ScreamingMulti");

	Params::BP_DemonHordeEnemy_Special_BloatedCarcass_C_ScreamingMulti Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeEnemy_Special_BloatedCarcass.BP_DemonHordeEnemy_Special_BloatedCarcass_C.FirePukeProjectiles
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   IntervalDelay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   VerticalAngle                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Accuracy                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SpeedMin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SpeedMax                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   HeightOffset                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeEnemy_Special_BloatedCarcass_C::FirePukeProjectiles(float IntervalDelay, float VerticalAngle, float Accuracy, float SpeedMin, float SpeedMax, float HeightOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_BloatedCarcass_C", "FirePukeProjectiles");

	Params::BP_DemonHordeEnemy_Special_BloatedCarcass_C_FirePukeProjectiles Parms{};

	Parms.IntervalDelay = IntervalDelay;
	Parms.VerticalAngle = VerticalAngle;
	Parms.Accuracy = Accuracy;
	Parms.SpeedMin = SpeedMin;
	Parms.SpeedMax = SpeedMax;
	Parms.HeightOffset = HeightOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeEnemy_Special_BloatedCarcass.BP_DemonHordeEnemy_Special_BloatedCarcass_C.ExplodeEffectsMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_DemonHordeEnemy_Special_BloatedCarcass_C::ExplodeEffectsMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_BloatedCarcass_C", "ExplodeEffectsMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeEnemy_Special_BloatedCarcass.BP_DemonHordeEnemy_Special_BloatedCarcass_C.ImpactKnockback
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ImpactTarget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeEnemy_Special_BloatedCarcass_C::ImpactKnockback(class AActor* ImpactTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_BloatedCarcass_C", "ImpactKnockback");

	Params::BP_DemonHordeEnemy_Special_BloatedCarcass_C_ImpactKnockback Parms{};

	Parms.ImpactTarget = ImpactTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeEnemy_Special_BloatedCarcass.BP_DemonHordeEnemy_Special_BloatedCarcass_C.ReceiveMordhauDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// EMordhauDamageType                      DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   SubDamageType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Agent                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeEnemy_Special_BloatedCarcass_C::ReceiveMordhauDamage(float Damage, const struct FHitResult& HitResult, EMordhauDamageType DamageType, uint8 SubDamageType, class AActor* Source, class AActor* Agent, class AController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_BloatedCarcass_C", "ReceiveMordhauDamage");

	Params::BP_DemonHordeEnemy_Special_BloatedCarcass_C_ReceiveMordhauDamage Parms{};

	Parms.Damage = Damage;
	Parms.HitResult = std::move(HitResult);
	Parms.DamageType = DamageType;
	Parms.SubDamageType = SubDamageType;
	Parms.Source = Source;
	Parms.Agent = Agent;
	Parms.EventInstigator = EventInstigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeEnemy_Special_BloatedCarcass.BP_DemonHordeEnemy_Special_BloatedCarcass_C.OnLanded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_DemonHordeEnemy_Special_BloatedCarcass_C::OnLanded(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_BloatedCarcass_C", "OnLanded");

	Params::BP_DemonHordeEnemy_Special_BloatedCarcass_C_OnLanded Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeEnemy_Special_BloatedCarcass.BP_DemonHordeEnemy_Special_BloatedCarcass_C.StartStateCooldown
// (BlueprintCallable, BlueprintEvent)

void ABP_DemonHordeEnemy_Special_BloatedCarcass_C::StartStateCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_BloatedCarcass_C", "StartStateCooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeEnemy_Special_BloatedCarcass.BP_DemonHordeEnemy_Special_BloatedCarcass_C.BehaviourLoop
// (BlueprintCallable, BlueprintEvent)

void ABP_DemonHordeEnemy_Special_BloatedCarcass_C::BehaviourLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_BloatedCarcass_C", "BehaviourLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeEnemy_Special_BloatedCarcass.BP_DemonHordeEnemy_Special_BloatedCarcass_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DemonHordeEnemy_Special_BloatedCarcass_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_BloatedCarcass_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeEnemy_Special_BloatedCarcass.BP_DemonHordeEnemy_Special_BloatedCarcass_C.OnDied
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMordhauDamageType                      Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   SubType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Agent                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeEnemy_Special_BloatedCarcass_C::OnDied(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeEnemy_Special_BloatedCarcass_C", "OnDied");

	Params::BP_DemonHordeEnemy_Special_BloatedCarcass_C_OnDied Parms{};

	Parms.Angle = Angle;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Source = Source;
	Parms.Agent = Agent;

	UObject::ProcessEvent(Func, &Parms);
}

}

