#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SeparatedBodyPart_Bones

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_SeparatedBodyPart_Bones.BP_SeparatedBodyPart_Bones_C.ExecuteUbergraph_BP_SeparatedBodyPart_Bones
// 0x0060 (0x0060 - 0x0000)
struct BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_Event_Source;                               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_Bone;                                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_Event_SourceBoneTransform;                  // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsPartial;                           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsBluntForce;                        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones) == 0x000010, "Wrong alignment on BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones");
static_assert(sizeof(BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones) == 0x000060, "Wrong size on BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones");
static_assert(offsetof(BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones, EntryPoint) == 0x000000, "Member 'BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones, K2Node_Event_Source) == 0x000010, "Member 'BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones::K2Node_Event_Source' has a wrong offset!");
static_assert(offsetof(BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones, K2Node_Event_Bone) == 0x000018, "Member 'BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones::K2Node_Event_Bone' has a wrong offset!");
static_assert(offsetof(BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones, K2Node_Event_SourceBoneTransform) == 0x000020, "Member 'BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones::K2Node_Event_SourceBoneTransform' has a wrong offset!");
static_assert(offsetof(BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones, K2Node_Event_bIsPartial) == 0x000050, "Member 'BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones::K2Node_Event_bIsPartial' has a wrong offset!");
static_assert(offsetof(BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones, K2Node_Event_bIsBluntForce) == 0x000051, "Member 'BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones::K2Node_Event_bIsBluntForce' has a wrong offset!");
static_assert(offsetof(BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000058, "Member 'BP_SeparatedBodyPart_Bones_C_ExecuteUbergraph_BP_SeparatedBodyPart_Bones::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function BP_SeparatedBodyPart_Bones.BP_SeparatedBodyPart_Bones_C.InitializeDismemberment
// 0x0050 (0x0050 - 0x0000)
struct BP_SeparatedBodyPart_Bones_C_InitializeDismemberment final
{
public:
	class AMordhauCharacter*                      Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   bone;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SourceBoneTransform;                               // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          bIsPartial;                                        // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsBluntForce;                                     // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SeparatedBodyPart_Bones_C_InitializeDismemberment) == 0x000010, "Wrong alignment on BP_SeparatedBodyPart_Bones_C_InitializeDismemberment");
static_assert(sizeof(BP_SeparatedBodyPart_Bones_C_InitializeDismemberment) == 0x000050, "Wrong size on BP_SeparatedBodyPart_Bones_C_InitializeDismemberment");
static_assert(offsetof(BP_SeparatedBodyPart_Bones_C_InitializeDismemberment, Source) == 0x000000, "Member 'BP_SeparatedBodyPart_Bones_C_InitializeDismemberment::Source' has a wrong offset!");
static_assert(offsetof(BP_SeparatedBodyPart_Bones_C_InitializeDismemberment, bone) == 0x000008, "Member 'BP_SeparatedBodyPart_Bones_C_InitializeDismemberment::bone' has a wrong offset!");
static_assert(offsetof(BP_SeparatedBodyPart_Bones_C_InitializeDismemberment, SourceBoneTransform) == 0x000010, "Member 'BP_SeparatedBodyPart_Bones_C_InitializeDismemberment::SourceBoneTransform' has a wrong offset!");
static_assert(offsetof(BP_SeparatedBodyPart_Bones_C_InitializeDismemberment, bIsPartial) == 0x000040, "Member 'BP_SeparatedBodyPart_Bones_C_InitializeDismemberment::bIsPartial' has a wrong offset!");
static_assert(offsetof(BP_SeparatedBodyPart_Bones_C_InitializeDismemberment, bIsBluntForce) == 0x000041, "Member 'BP_SeparatedBodyPart_Bones_C_InitializeDismemberment::bIsBluntForce' has a wrong offset!");

}

