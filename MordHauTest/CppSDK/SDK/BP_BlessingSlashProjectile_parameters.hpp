#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BlessingSlashProjectile

#include "Basic.hpp"

#include "Mordhau_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BlessingSlashProjectile.BP_BlessingSlashProjectile_C.ExecuteUbergraph_BP_BlessingSlashProjectile
// 0x0130 (0x0130 - 0x0000)
struct BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetProjectileOwningController_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauCharacter*                      K2Node_DynamicCast_AsMordhau_Character;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 Temp_float_Variable;                               // 0x0028(0x0010)(ReferenceParm)
	TArray<float>                                 Temp_float_Variable_1;                             // 0x0038(0x0010)(ReferenceParm)
	TArray<float>                                 Temp_float_Variable_2;                             // 0x0048(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_BounceForce;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_Surface;                              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHasHitWorld;                         // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bHasStopped;                          // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackMove                                   K2Node_CustomEvent_Direction;                      // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Angle;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile) == 0x000008, "Wrong alignment on BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile");
static_assert(sizeof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile) == 0x000130, "Wrong size on BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, EntryPoint) == 0x000000, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_GetProjectileOwningController_ReturnValue) == 0x000008, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_GetProjectileOwningController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, K2Node_DynamicCast_AsMordhau_Character) == 0x000018, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::K2Node_DynamicCast_AsMordhau_Character' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, Temp_float_Variable) == 0x000028, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, Temp_float_Variable_1) == 0x000038, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, Temp_float_Variable_2) == 0x000048, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, Temp_bool_Variable) == 0x000058, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, Temp_float_Variable_3) == 0x000060, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, Temp_float_Variable_4) == 0x000064, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, K2Node_Event_HitLocation) == 0x000068, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, K2Node_Event_HitNormal) == 0x000074, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, K2Node_Event_BounceForce) == 0x000080, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::K2Node_Event_BounceForce' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, K2Node_Event_Surface) == 0x000084, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::K2Node_Event_Surface' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, K2Node_Event_bHasHitWorld) == 0x000085, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::K2Node_Event_bHasHitWorld' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, K2Node_Event_bHasStopped) == 0x000086, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::K2Node_Event_bHasStopped' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, K2Node_MakeArray_Array) == 0x000088, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000098, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_GetObjectClass_ReturnValue) == 0x0000A0, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, K2Node_CustomEvent_Direction) == 0x0000AC, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::K2Node_CustomEvent_Direction' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, K2Node_CustomEvent_Angle) == 0x0000B0, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::K2Node_CustomEvent_Angle' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000B4, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000B8, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, K2Node_Select_Default) == 0x0000C4, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_MakeVector_ReturnValue) == 0x0000C8, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D4, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000D8, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000DC, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000E0, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_MakeRotator_ReturnValue) == 0x0000E4, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_ComposeRotators_ReturnValue) == 0x0000F0, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0000FC, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000100, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00010C, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, K2Node_Event_OtherActor) == 0x000118, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000120, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000128, "Member 'BP_BlessingSlashProjectile_C_ExecuteUbergraph_BP_BlessingSlashProjectile::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_BlessingSlashProjectile.BP_BlessingSlashProjectile_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_BlessingSlashProjectile_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlessingSlashProjectile_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BP_BlessingSlashProjectile_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BP_BlessingSlashProjectile_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BP_BlessingSlashProjectile_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BP_BlessingSlashProjectile_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BP_BlessingSlashProjectile_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function BP_BlessingSlashProjectile.BP_BlessingSlashProjectile_C.SetAngleMulti
// 0x0008 (0x0008 - 0x0000)
struct BP_BlessingSlashProjectile_C_SetAngleMulti final
{
public:
	EAttackMove                                   Direction;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Angle;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlessingSlashProjectile_C_SetAngleMulti) == 0x000004, "Wrong alignment on BP_BlessingSlashProjectile_C_SetAngleMulti");
static_assert(sizeof(BP_BlessingSlashProjectile_C_SetAngleMulti) == 0x000008, "Wrong size on BP_BlessingSlashProjectile_C_SetAngleMulti");
static_assert(offsetof(BP_BlessingSlashProjectile_C_SetAngleMulti, Direction) == 0x000000, "Member 'BP_BlessingSlashProjectile_C_SetAngleMulti::Direction' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_SetAngleMulti, Angle) == 0x000004, "Member 'BP_BlessingSlashProjectile_C_SetAngleMulti::Angle' has a wrong offset!");

// Function BP_BlessingSlashProjectile.BP_BlessingSlashProjectile_C.OnProjectileHit
// 0x0020 (0x0020 - 0x0000)
struct BP_BlessingSlashProjectile_C_OnProjectileHit final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceForce;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Surface;                                           // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasHitWorld;                                      // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHasStopped;                                       // 0x001E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BlessingSlashProjectile_C_OnProjectileHit) == 0x000004, "Wrong alignment on BP_BlessingSlashProjectile_C_OnProjectileHit");
static_assert(sizeof(BP_BlessingSlashProjectile_C_OnProjectileHit) == 0x000020, "Wrong size on BP_BlessingSlashProjectile_C_OnProjectileHit");
static_assert(offsetof(BP_BlessingSlashProjectile_C_OnProjectileHit, HitLocation) == 0x000000, "Member 'BP_BlessingSlashProjectile_C_OnProjectileHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_OnProjectileHit, HitNormal) == 0x00000C, "Member 'BP_BlessingSlashProjectile_C_OnProjectileHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_OnProjectileHit, BounceForce) == 0x000018, "Member 'BP_BlessingSlashProjectile_C_OnProjectileHit::BounceForce' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_OnProjectileHit, Surface) == 0x00001C, "Member 'BP_BlessingSlashProjectile_C_OnProjectileHit::Surface' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_OnProjectileHit, bHasHitWorld) == 0x00001D, "Member 'BP_BlessingSlashProjectile_C_OnProjectileHit::bHasHitWorld' has a wrong offset!");
static_assert(offsetof(BP_BlessingSlashProjectile_C_OnProjectileHit, bHasStopped) == 0x00001E, "Member 'BP_BlessingSlashProjectile_C_OnProjectileHit::bHasStopped' has a wrong offset!");

}

