#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightBoltProjectile_Horde

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_BoltProjectile_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LightBoltProjectile_Horde.BP_LightBoltProjectile_Horde_C
// 0x0010 (0x0870 - 0x0860)
class ABP_LightBoltProjectile_Horde_C final : public ABP_BoltProjectile_C
{
public:
	uint8                                         Pad_854[0x4];                                      // 0x0854(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_LightBoltProjectile_Horde_C;     // 0x0858(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	int32                                         Penetrations;                                      // 0x0860(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxPenetrations;                                   // 0x0864(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_LightBoltProjectile_Horde(int32 EntryPoint);
	void OnProjectileDamagedDamagable(class UDamageableComponent* DamagableComp, bool bWillKill, const struct FVector& WorldLocation, class FName bone);
	void OnProjectileFired();
	void OnProjectileHit(const struct FVector& HitLocation, const struct FVector& HitNormal, float BounceForce, uint8 Surface, bool bHasHitWorld, bool bHasStopped);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LightBoltProjectile_Horde_C">();
	}
	static class ABP_LightBoltProjectile_Horde_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LightBoltProjectile_Horde_C>();
	}
};
static_assert(alignof(ABP_LightBoltProjectile_Horde_C) == 0x000010, "Wrong alignment on ABP_LightBoltProjectile_Horde_C");
static_assert(sizeof(ABP_LightBoltProjectile_Horde_C) == 0x000870, "Wrong size on ABP_LightBoltProjectile_Horde_C");
static_assert(offsetof(ABP_LightBoltProjectile_Horde_C, UberGraphFrame_BP_LightBoltProjectile_Horde_C) == 0x000858, "Member 'ABP_LightBoltProjectile_Horde_C::UberGraphFrame_BP_LightBoltProjectile_Horde_C' has a wrong offset!");
static_assert(offsetof(ABP_LightBoltProjectile_Horde_C, Penetrations) == 0x000860, "Member 'ABP_LightBoltProjectile_Horde_C::Penetrations' has a wrong offset!");
static_assert(offsetof(ABP_LightBoltProjectile_Horde_C, MaxPenetrations) == 0x000864, "Member 'ABP_LightBoltProjectile_Horde_C::MaxPenetrations' has a wrong offset!");

}

