#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordePlayerEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_HordePlayerEntry.BP_HordePlayerEntry_C
// 0x00A8 (0x0308 - 0x0260)
class UBP_HordePlayerEntry_C final : public UUserWidget
{
public:
	class UBP_PlayerAvatar_C*                     BP_PlayerAvatar;                                   // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_1;                                   // 0x0268(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_785;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_dead;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_revive;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay;                                           // 0x0290(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_1;                                         // 0x0298(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_10;                                        // 0x02A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_hp;                                      // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_timer;                                   // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Team;                                              // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Kills;                                             // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Deaths;                                            // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Assists;                                           // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Health;                                            // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name_0;                                            // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          HideEntry;                                         // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Score;                                             // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerState*                    Mordhau_Player_State;                              // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAlive;                                           // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Revive_Period;                                     // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordePlayerGrave_C*                 Last_Grave;                                        // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Start_Time;                                        // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Update(class AMordhauPlayerState* Mordhau_Player_State_0);
	ESlateVisibility GetVisibility_0();
	class FText GetText_0();
	ESlateVisibility GetVisibility_VisibleWhenDead();
	class FText Get_TextBlock_hp_Text_0();
	ESlateVisibility GetVisibility_CollapsedWhenDead();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HordePlayerEntry_C">();
	}
	static class UBP_HordePlayerEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HordePlayerEntry_C>();
	}
};
static_assert(alignof(UBP_HordePlayerEntry_C) == 0x000008, "Wrong alignment on UBP_HordePlayerEntry_C");
static_assert(sizeof(UBP_HordePlayerEntry_C) == 0x000308, "Wrong size on UBP_HordePlayerEntry_C");
static_assert(offsetof(UBP_HordePlayerEntry_C, BP_PlayerAvatar) == 0x000260, "Member 'UBP_HordePlayerEntry_C::BP_PlayerAvatar' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, HorizontalBox_1) == 0x000268, "Member 'UBP_HordePlayerEntry_C::HorizontalBox_1' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, Image_1) == 0x000270, "Member 'UBP_HordePlayerEntry_C::Image_1' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, Image_785) == 0x000278, "Member 'UBP_HordePlayerEntry_C::Image_785' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, Image_dead) == 0x000280, "Member 'UBP_HordePlayerEntry_C::Image_dead' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, Image_revive) == 0x000288, "Member 'UBP_HordePlayerEntry_C::Image_revive' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, Overlay) == 0x000290, "Member 'UBP_HordePlayerEntry_C::Overlay' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, Overlay_1) == 0x000298, "Member 'UBP_HordePlayerEntry_C::Overlay_1' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, Overlay_10) == 0x0002A0, "Member 'UBP_HordePlayerEntry_C::Overlay_10' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, TextBlock_hp) == 0x0002A8, "Member 'UBP_HordePlayerEntry_C::TextBlock_hp' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, TextBlock_timer) == 0x0002B0, "Member 'UBP_HordePlayerEntry_C::TextBlock_timer' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, Team) == 0x0002B8, "Member 'UBP_HordePlayerEntry_C::Team' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, Kills) == 0x0002BC, "Member 'UBP_HordePlayerEntry_C::Kills' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, Deaths) == 0x0002C0, "Member 'UBP_HordePlayerEntry_C::Deaths' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, Assists) == 0x0002C4, "Member 'UBP_HordePlayerEntry_C::Assists' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, Health) == 0x0002C8, "Member 'UBP_HordePlayerEntry_C::Health' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, Name_0) == 0x0002D0, "Member 'UBP_HordePlayerEntry_C::Name_0' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, HideEntry) == 0x0002E0, "Member 'UBP_HordePlayerEntry_C::HideEntry' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, Score) == 0x0002E4, "Member 'UBP_HordePlayerEntry_C::Score' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, Mordhau_Player_State) == 0x0002E8, "Member 'UBP_HordePlayerEntry_C::Mordhau_Player_State' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, IsAlive) == 0x0002F0, "Member 'UBP_HordePlayerEntry_C::IsAlive' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, Revive_Period) == 0x0002F4, "Member 'UBP_HordePlayerEntry_C::Revive_Period' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, Last_Grave) == 0x0002F8, "Member 'UBP_HordePlayerEntry_C::Last_Grave' has a wrong offset!");
static_assert(offsetof(UBP_HordePlayerEntry_C, Start_Time) == 0x000300, "Member 'UBP_HordePlayerEntry_C::Start_Time' has a wrong offset!");

}

