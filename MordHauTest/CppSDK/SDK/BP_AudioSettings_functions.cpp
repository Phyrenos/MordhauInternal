#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioSettings

#include "Basic.hpp"

#include "BP_AudioSettings_classes.hpp"
#include "BP_AudioSettings_parameters.hpp"


namespace SDK
{

// Function BP_AudioSettings.BP_AudioSettings_C.ExecuteUbergraph_BP_AudioSettings
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioSettings_C::ExecuteUbergraph_BP_AudioSettings(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "ExecuteUbergraph_BP_AudioSettings");

	Params::BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioSettings.BP_AudioSettings_C.Reset Settings
// (BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::Reset_Settings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "Reset Settings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__InstrumentVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioSettings_C::BndEvt__InstrumentVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "BndEvt__InstrumentVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature");

	Params::BP_AudioSettings_C_BndEvt__InstrumentVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__InstrumentVolumeSlider_K2Node_ComponentBoundEvent_2_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_AudioSettings_C::BndEvt__InstrumentVolumeSlider_K2Node_ComponentBoundEvent_2_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "BndEvt__InstrumentVolumeSlider_K2Node_ComponentBoundEvent_2_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__VoiceVolumeSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioSettings_C::BndEvt__VoiceVolumeSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "BndEvt__VoiceVolumeSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature");

	Params::BP_AudioSettings_C_BndEvt__VoiceVolumeSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__VoiceVolumeSlider_K2Node_ComponentBoundEvent_7_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_AudioSettings_C::BndEvt__VoiceVolumeSlider_K2Node_ComponentBoundEvent_7_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "BndEvt__VoiceVolumeSlider_K2Node_ComponentBoundEvent_7_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.ResetCancel
// (BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::ResetCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "ResetCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.ResetConfirm
// (BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::ResetConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "ResetConfirm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.OnShown
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::OnShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "OnShown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__EffectsVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioSettings_C::BndEvt__EffectsVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "BndEvt__EffectsVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature");

	Params::BP_AudioSettings_C_BndEvt__EffectsVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioSettings_C::BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature");

	Params::BP_AudioSettings_C_BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioSettings_C::BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature");

	Params::BP_AudioSettings_C_BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__VideoVolumeSlider_K2Node_ComponentBoundEvent_28_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_AudioSettings_C::BndEvt__VideoVolumeSlider_K2Node_ComponentBoundEvent_28_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "BndEvt__VideoVolumeSlider_K2Node_ComponentBoundEvent_28_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_175_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_AudioSettings_C::BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_175_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_175_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__EffectsVolumeSlider_K2Node_ComponentBoundEvent_166_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_AudioSettings_C::BndEvt__EffectsVolumeSlider_K2Node_ComponentBoundEvent_166_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "BndEvt__EffectsVolumeSlider_K2Node_ComponentBoundEvent_166_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_161_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_AudioSettings_C::BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_161_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_161_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.Update Widgets
// (BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::Update_Widgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "Update Widgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__resetButton_K2Node_ComponentBoundEvent_60_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_AudioSettings_C::BndEvt__resetButton_K2Node_ComponentBoundEvent_60_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "BndEvt__resetButton_K2Node_ComponentBoundEvent_60_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__applyButton_K2Node_ComponentBoundEvent_11_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_AudioSettings_C::BndEvt__applyButton_K2Node_ComponentBoundEvent_11_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "BndEvt__applyButton_K2Node_ComponentBoundEvent_11_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.UpdateAudioQualityDropdown
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::UpdateAudioQualityDropdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "UpdateAudioQualityDropdown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.ApplyAudioQuality
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::ApplyAudioQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "ApplyAudioQuality");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.UpdateMasterVolumeSlider
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::UpdateMasterVolumeSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "UpdateMasterVolumeSlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.UpdateEffectsVolumeSlider
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::UpdateEffectsVolumeSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "UpdateEffectsVolumeSlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.UpdateMusicVolumeSlider
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::UpdateMusicVolumeSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "UpdateMusicVolumeSlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.ApplyMasterVolume
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::ApplyMasterVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "ApplyMasterVolume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.ApplyEffectsVolume
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::ApplyEffectsVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "ApplyEffectsVolume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.ApplyMusicVolume
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::ApplyMusicVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "ApplyMusicVolume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.UpdateVideoVolumeSlider
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::UpdateVideoVolumeSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "UpdateVideoVolumeSlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.ApplyVideoVolume
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::ApplyVideoVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "ApplyVideoVolume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.IsValueDifferenceValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   prevValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   minDiff                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AudioSettings_C::IsValueDifferenceValid(float NewValue, float prevValue, float minDiff, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "IsValueDifferenceValid");

	Params::BP_AudioSettings_C_IsValueDifferenceValid Parms{};

	Parms.NewValue = NewValue;
	Parms.prevValue = prevValue;
	Parms.minDiff = minDiff;

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BP_AudioSettings.BP_AudioSettings_C.ApplyVoiceVolume
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::ApplyVoiceVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "ApplyVoiceVolume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.UpdateVoiceVolumeSlider
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::UpdateVoiceVolumeSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "UpdateVoiceVolumeSlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.UpdateInstrumentVolumeSlider
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::UpdateInstrumentVolumeSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "UpdateInstrumentVolumeSlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.ApplyInstrumentsVolume
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AudioSettings_C::ApplyInstrumentsVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "ApplyInstrumentsVolume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioSettings.BP_AudioSettings_C.SaveSettings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_MainMenuAction                        Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioSettings_C::SaveSettings(E_MainMenuAction Action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioSettings_C", "SaveSettings");

	Params::BP_AudioSettings_C_SaveSettings Parms{};

	Parms.Action = Action;

	UObject::ProcessEvent(Func, &Parms);
}

}

