#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SetupDemonHorde

#include "Basic.hpp"

#include "DemonHordeIndexArray_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "DemonHordeActorArray_structs.hpp"
#include "BlessingVisuals_structs.hpp"
#include "STRUCT_HordeEnemyInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Mordhau_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SetupDemonHorde.BP_SetupDemonHorde_C
// 0x0208 (0x0428 - 0x0220)
class ABP_SetupDemonHorde_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UBillboardComponent*                    Billboard;                                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<uint8, struct FDemonHordeActorArray>     StageSettings;                                     // 0x0238(0x0050)(Edit, BlueprintVisible)
	TMap<class FName, struct FSTRUCT_HordeEnemyInfo> EnemyDatabase;                                     // 0x0288(0x0050)(Edit, BlueprintVisible)
	float                                         StartGameDelay;                                    // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              InitialScriptedEvent;                              // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         TestSpawnInterval;                                 // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TestSpawns;                                        // 0x02F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TestSpawnType;                                     // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class AActor>>          ActorsToDelete;                                    // 0x0300(0x0010)(Edit, BlueprintVisible)
	TArray<TSoftObjectPtr<class AStaticMeshActor>> ActorsToAllowDecals;                               // 0x0310(0x0010)(Edit, BlueprintVisible)
	TMap<TSoftObjectPtr<class ABP_HierarchicalInstancedStaticMesh_C>, struct FDemonHordeIndexArray> HISMDeletionMap;                                   // 0x0320(0x0050)(Edit, BlueprintVisible, ExposeOnSpawn)
	TMap<class UClass*, struct FBlessingVisuals>  BlessingVisualOverrides;                           // 0x0370(0x0050)(Edit, BlueprintVisible)
	TArray<struct FCharacterProfile>              TempLoadouts;                                      // 0x03C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FLinearColor>        LevelColours;                                      // 0x03D0(0x0050)(Edit, BlueprintVisible)
	uint8                                         Debug_Starting_Stage;                              // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x3];                                      // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayerLightIntensity;                              // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SetupDemonHorde(int32 EntryPoint);
	void ResetPrestige();
	void ApplyDemonVoices();
	void CountEnemiesLoop();
	void StartGame();
	void TESTSPAWNLOOP();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void NewVoicesArray(TArray<struct FCharacterProfile>& LoadoutsIn, TArray<struct FCharacterProfile>* LoadoutsOut);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SetupDemonHorde_C">();
	}
	static class ABP_SetupDemonHorde_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SetupDemonHorde_C>();
	}
};
static_assert(alignof(ABP_SetupDemonHorde_C) == 0x000008, "Wrong alignment on ABP_SetupDemonHorde_C");
static_assert(sizeof(ABP_SetupDemonHorde_C) == 0x000428, "Wrong size on ABP_SetupDemonHorde_C");
static_assert(offsetof(ABP_SetupDemonHorde_C, UberGraphFrame) == 0x000220, "Member 'ABP_SetupDemonHorde_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SetupDemonHorde_C, Billboard) == 0x000228, "Member 'ABP_SetupDemonHorde_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_SetupDemonHorde_C, DefaultSceneRoot) == 0x000230, "Member 'ABP_SetupDemonHorde_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SetupDemonHorde_C, StageSettings) == 0x000238, "Member 'ABP_SetupDemonHorde_C::StageSettings' has a wrong offset!");
static_assert(offsetof(ABP_SetupDemonHorde_C, EnemyDatabase) == 0x000288, "Member 'ABP_SetupDemonHorde_C::EnemyDatabase' has a wrong offset!");
static_assert(offsetof(ABP_SetupDemonHorde_C, StartGameDelay) == 0x0002D8, "Member 'ABP_SetupDemonHorde_C::StartGameDelay' has a wrong offset!");
static_assert(offsetof(ABP_SetupDemonHorde_C, InitialScriptedEvent) == 0x0002E0, "Member 'ABP_SetupDemonHorde_C::InitialScriptedEvent' has a wrong offset!");
static_assert(offsetof(ABP_SetupDemonHorde_C, TestSpawnInterval) == 0x0002F0, "Member 'ABP_SetupDemonHorde_C::TestSpawnInterval' has a wrong offset!");
static_assert(offsetof(ABP_SetupDemonHorde_C, TestSpawns) == 0x0002F4, "Member 'ABP_SetupDemonHorde_C::TestSpawns' has a wrong offset!");
static_assert(offsetof(ABP_SetupDemonHorde_C, TestSpawnType) == 0x0002F8, "Member 'ABP_SetupDemonHorde_C::TestSpawnType' has a wrong offset!");
static_assert(offsetof(ABP_SetupDemonHorde_C, ActorsToDelete) == 0x000300, "Member 'ABP_SetupDemonHorde_C::ActorsToDelete' has a wrong offset!");
static_assert(offsetof(ABP_SetupDemonHorde_C, ActorsToAllowDecals) == 0x000310, "Member 'ABP_SetupDemonHorde_C::ActorsToAllowDecals' has a wrong offset!");
static_assert(offsetof(ABP_SetupDemonHorde_C, HISMDeletionMap) == 0x000320, "Member 'ABP_SetupDemonHorde_C::HISMDeletionMap' has a wrong offset!");
static_assert(offsetof(ABP_SetupDemonHorde_C, BlessingVisualOverrides) == 0x000370, "Member 'ABP_SetupDemonHorde_C::BlessingVisualOverrides' has a wrong offset!");
static_assert(offsetof(ABP_SetupDemonHorde_C, TempLoadouts) == 0x0003C0, "Member 'ABP_SetupDemonHorde_C::TempLoadouts' has a wrong offset!");
static_assert(offsetof(ABP_SetupDemonHorde_C, LevelColours) == 0x0003D0, "Member 'ABP_SetupDemonHorde_C::LevelColours' has a wrong offset!");
static_assert(offsetof(ABP_SetupDemonHorde_C, Debug_Starting_Stage) == 0x000420, "Member 'ABP_SetupDemonHorde_C::Debug_Starting_Stage' has a wrong offset!");
static_assert(offsetof(ABP_SetupDemonHorde_C, PlayerLightIntensity) == 0x000424, "Member 'ABP_SetupDemonHorde_C::PlayerLightIntensity' has a wrong offset!");

}

