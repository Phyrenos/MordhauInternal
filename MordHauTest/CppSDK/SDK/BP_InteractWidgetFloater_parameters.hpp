#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractWidgetFloater

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_InteractWidgetFloater.BP_InteractWidgetFloater_C.ExecuteUbergraph_BP_InteractWidgetFloater
// 0x00A0 (0x00A0 - 0x0000)
struct BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x001C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FrontlineInteractable_C*            K2Node_DynamicCast_AsBP_Frontline_Interactable;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCameraManager*                  K2Node_DynamicCast_AsMordhau_Camera_Manager;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsInMapView_ReturnValue;               // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInteracting;                   // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater) == 0x000008, "Wrong alignment on BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater");
static_assert(sizeof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater) == 0x0000A0, "Wrong size on BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, EntryPoint) == 0x000000, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, Temp_bool_Variable) == 0x000004, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000010, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, Temp_float_Variable) == 0x000014, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, Temp_float_Variable_1) == 0x000018, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, K2Node_Event_MyGeometry) == 0x00001C, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, K2Node_Event_InDeltaTime) == 0x000054, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, K2Node_DynamicCast_AsBP_Frontline_Interactable) == 0x000060, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::K2Node_DynamicCast_AsBP_Frontline_Interactable' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000069, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, CallFunc_MapRangeClamped_ReturnValue) == 0x00006C, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000070, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, CallFunc_Lerp_ReturnValue) == 0x000078, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, K2Node_DynamicCast_AsMordhau_Camera_Manager) == 0x000080, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::K2Node_DynamicCast_AsMordhau_Camera_Manager' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, CallFunc_MakeVector2D_ReturnValue) == 0x00008C, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, CallFunc_GetIsInMapView_ReturnValue) == 0x000094, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::CallFunc_GetIsInMapView_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, K2Node_Select_Default) == 0x000098, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater, K2Node_CustomEvent_bInteracting) == 0x00009C, "Member 'BP_InteractWidgetFloater_C_ExecuteUbergraph_BP_InteractWidgetFloater::K2Node_CustomEvent_bInteracting' has a wrong offset!");

// Function BP_InteractWidgetFloater.BP_InteractWidgetFloater_C.SetInteracting
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractWidgetFloater_C_SetInteracting final
{
public:
	bool                                          bInteracting;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractWidgetFloater_C_SetInteracting) == 0x000001, "Wrong alignment on BP_InteractWidgetFloater_C_SetInteracting");
static_assert(sizeof(BP_InteractWidgetFloater_C_SetInteracting) == 0x000001, "Wrong size on BP_InteractWidgetFloater_C_SetInteracting");
static_assert(offsetof(BP_InteractWidgetFloater_C_SetInteracting, bInteracting) == 0x000000, "Member 'BP_InteractWidgetFloater_C_SetInteracting::bInteracting' has a wrong offset!");

// Function BP_InteractWidgetFloater.BP_InteractWidgetFloater_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_InteractWidgetFloater_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractWidgetFloater_C_Tick) == 0x000004, "Wrong alignment on BP_InteractWidgetFloater_C_Tick");
static_assert(sizeof(BP_InteractWidgetFloater_C_Tick) == 0x00003C, "Wrong size on BP_InteractWidgetFloater_C_Tick");
static_assert(offsetof(BP_InteractWidgetFloater_C_Tick, MyGeometry) == 0x000000, "Member 'BP_InteractWidgetFloater_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_InteractWidgetFloater_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_InteractWidgetFloater.BP_InteractWidgetFloater_C.UpdateProgress
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractWidgetFloater_C_UpdateProgress final
{
public:
	float                                         NewProgress;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractWidgetFloater_C_UpdateProgress) == 0x000008, "Wrong alignment on BP_InteractWidgetFloater_C_UpdateProgress");
static_assert(sizeof(BP_InteractWidgetFloater_C_UpdateProgress) == 0x000018, "Wrong size on BP_InteractWidgetFloater_C_UpdateProgress");
static_assert(offsetof(BP_InteractWidgetFloater_C_UpdateProgress, NewProgress) == 0x000000, "Member 'BP_InteractWidgetFloater_C_UpdateProgress::NewProgress' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_UpdateProgress, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_InteractWidgetFloater_C_UpdateProgress::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_UpdateProgress, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_InteractWidgetFloater_C_UpdateProgress::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_UpdateProgress, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000010, "Member 'BP_InteractWidgetFloater_C_UpdateProgress::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_UpdateProgress, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_InteractWidgetFloater_C_UpdateProgress::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_UpdateProgress, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'BP_InteractWidgetFloater_C_UpdateProgress::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_InteractWidgetFloater.BP_InteractWidgetFloater_C.Get_Image_above_Visibility_0
// 0x0050 (0x0050 - 0x0000)
struct BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetViewTargetCharacter_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0) == 0x000008, "Wrong alignment on BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0");
static_assert(sizeof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0) == 0x000050, "Wrong size on BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, Temp_byte_Variable) == 0x000001, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, Temp_byte_Variable_1) == 0x000002, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, CallFunc_GetViewTargetCharacter_ReturnValue) == 0x000008, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::CallFunc_GetViewTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, CallFunc_BreakVector_X) == 0x000020, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, CallFunc_BreakVector_Y) == 0x000024, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, CallFunc_BreakVector_Z) == 0x000028, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, Temp_bool_Variable) == 0x00002C, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, CallFunc_BreakVector_X_1) == 0x00003C, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, CallFunc_BreakVector_Y_1) == 0x000040, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, CallFunc_BreakVector_Z_1) == 0x000044, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000049, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, CallFunc_Not_PreBool_ReturnValue) == 0x00004A, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, CallFunc_BooleanAND_ReturnValue) == 0x00004B, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, CallFunc_BooleanAND_ReturnValue_1) == 0x00004C, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0, K2Node_Select_Default) == 0x00004D, "Member 'BP_InteractWidgetFloater_C_Get_Image_above_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_InteractWidgetFloater.BP_InteractWidgetFloater_C.Get_Image_below_Visibility_1
// 0x0050 (0x0050 - 0x0000)
struct BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetViewTargetCharacter_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1) == 0x000008, "Wrong alignment on BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1");
static_assert(sizeof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1) == 0x000050, "Wrong size on BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, ReturnValue) == 0x000000, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, Temp_byte_Variable) == 0x000001, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, Temp_byte_Variable_1) == 0x000002, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, CallFunc_GetViewTargetCharacter_ReturnValue) == 0x000008, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::CallFunc_GetViewTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, CallFunc_BreakVector_X) == 0x000020, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, CallFunc_BreakVector_Y) == 0x000024, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, CallFunc_BreakVector_Z) == 0x000028, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, Temp_bool_Variable) == 0x00002C, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, CallFunc_BreakVector_X_1) == 0x00003C, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, CallFunc_BreakVector_Y_1) == 0x000040, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, CallFunc_BreakVector_Z_1) == 0x000044, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, CallFunc_Less_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000049, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, CallFunc_Not_PreBool_ReturnValue) == 0x00004B, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, CallFunc_BooleanAND_ReturnValue_1) == 0x00004C, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1, K2Node_Select_Default) == 0x00004D, "Member 'BP_InteractWidgetFloater_C_Get_Image_below_Visibility_1::K2Node_Select_Default' has a wrong offset!");

}

