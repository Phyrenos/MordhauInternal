#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapVote

#include "Basic.hpp"

#include "BP_MapVote_classes.hpp"
#include "BP_MapVote_parameters.hpp"


namespace SDK
{

// Function BP_MapVote.BP_MapVote_C.ExecuteUbergraph_BP_MapVote
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapVote_C::ExecuteUbergraph_BP_MapVote(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapVote_C", "ExecuteUbergraph_BP_MapVote");

	Params::BP_MapVote_C_ExecuteUbergraph_BP_MapVote Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapVote.BP_MapVote_C.UpdateVotes
// (BlueprintCallable, BlueprintEvent)

void UBP_MapVote_C::UpdateVotes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapVote_C", "UpdateVotes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapVote.BP_MapVote_C.Init
// (BlueprintCallable, BlueprintEvent)

void UBP_MapVote_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapVote_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapVote.BP_MapVote_C.ClearEntries
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapVote_C::ClearEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapVote_C", "ClearEntries");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapVote.BP_MapVote_C.AddEntry
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           GameModeMapName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UGameModeMetadata*                GameModeMetadata                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMapMetadata*                     MapMetadata                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapVote_C::AddEntry(const class FString& GameModeMapName, class UGameModeMetadata* GameModeMetadata, class UMapMetadata* MapMetadata)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapVote_C", "AddEntry");

	Params::BP_MapVote_C_AddEntry Parms{};

	Parms.GameModeMapName = std::move(GameModeMapName);
	Parms.GameModeMetadata = GameModeMetadata;
	Parms.MapMetadata = MapMetadata;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapVote.BP_MapVote_C.OnEntrySelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MapEntry_C*                   Entry                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapVote_C::OnEntrySelected(class UBP_MapEntry_C* Entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapVote_C", "OnEntrySelected");

	Params::BP_MapVote_C_OnEntrySelected Parms{};

	Parms.Entry = Entry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapVote.BP_MapVote_C.UpdateVoteCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapVote_C::UpdateVoteCount(uint8 Count, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapVote_C", "UpdateVoteCount");

	Params::BP_MapVote_C_UpdateVoteCount Parms{};

	Parms.Count = Count;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

