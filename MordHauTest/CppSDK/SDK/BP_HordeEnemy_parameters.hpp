#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordeEnemy

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HordeEnemy.BP_HordeEnemy_C.ExecuteUbergraph_BP_HordeEnemy
// 0x04C0 (0x04C0 - 0x0000)
struct BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Angle;                                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            K2Node_Event_Type;                                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SubType;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Bone;                                 // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Point;                                // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Source_1;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Agent_1;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Impact;                               // 0x0060(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeGameMode_C*                    K2Node_DynamicCast_AsBP_Horde_Game_Mode;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeTask_C*                        CallFunc_Array_Get_Item;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitResult_1;                          // 0x011C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EMordhauDamageType                            K2Node_Event_DamageType;                           // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SubDamageType;                        // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Source;                               // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Agent;                                // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_EventInstigator_1;                    // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTaskValidFor_IsValid;                   // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordeCharacter_C*                   K2Node_DynamicCast_AsBP_Horde_Character;           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DA[0x2];                                      // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSkillFloat_Value;                      // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSkillFloat_PercentA;                   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSkillFloat_PercentB;                   // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillFloat_IntegerA;                   // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSkillFloat_TimeA;                      // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetSkill_Level;                           // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSkill_PercentA;                        // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSkill_PercentB;                        // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkill_IntegerA;                        // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSkill_TimeA;                           // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSkillFloat_Value_1;                    // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSkillFloat_PercentA_1;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSkillFloat_PercentB_1;                 // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillFloat_IntegerA_1;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSkillFloat_TimeA_1;                    // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_226[0x2];                                      // 0x0226(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0270(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x02AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x02AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x02AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x02B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Trip_ReturnValue;                         // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDead_ReturnValue;                    // 0x02B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B7[0x1];                                      // 0x02B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD[0x3];                                      // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x02C0(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_Event_Attacker;                             // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeCharacter_C*                   K2Node_DynamicCast_AsBP_Horde_Character_1;         // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSkillFloat_Value_2;                    // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSkillFloat_PercentA_2;                 // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSkillFloat_PercentB_2;                 // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillFloat_IntegerA_2;                 // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSkillFloat_TimeA_2;                    // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerController_C*            K2Node_DynamicCast_AsBP_Horde_Player_Controller;   // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsDead_ReturnValue_1;                  // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A[0x2];                                      // 0x039A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloat_ReturnValue_1;                // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDead_ReturnValue_2;                  // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2[0x2];                                      // 0x03A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Duration_1;                     // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsDead_ReturnValue_3;                  // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDead_ReturnValue_4;                  // 0x03AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AE[0x2];                                      // 0x03AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_CustomEvent_Target;                         // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Duration;                       // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_EventInstigator;                      // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue_1;               // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerController_C*            K2Node_DynamicCast_AsBP_Horde_Player_Controller_1; // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetLastNetDamageSource_ReturnValue;       // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeCharacter_C*                   K2Node_DynamicCast_AsBP_Horde_Character_2;         // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordeCharacter_C*                   K2Node_DynamicCast_AsBP_Horde_Character_3;         // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMordhauDamageType                            CallFunc_GetLastNetDamageType_ReturnValue;         // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40B[0x5];                                      // 0x040B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_NewController;                        // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0418(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0428(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0438(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0448(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_DynamicCast_AsMordhau_Character;            // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47A[0x2];                                      // 0x047A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x047C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0488(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInKnockback_ReturnValue;                // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_495[0x3];                                      // 0x0495(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0498(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x04A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsDead_ReturnValue_5;                  // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Knockback_ReturnValue;                    // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B2[0x2];                                      // 0x04B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x04B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy) == 0x000008, "Wrong alignment on BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy");
static_assert(sizeof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy) == 0x0004C0, "Wrong size on BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, EntryPoint) == 0x000000, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, Temp_object_Variable) == 0x000008, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_IsDedicatedServer_ReturnValue) == 0x000018, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, Temp_bool_True_if_break_was_hit_Variable) == 0x000028, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_Angle) == 0x000034, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_Angle' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_Type) == 0x000038, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_SubType) == 0x000039, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_SubType' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_Bone) == 0x00003C, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_Bone' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_Point) == 0x000044, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_Point' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_Source_1) == 0x000050, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_Source_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_Agent_1) == 0x000058, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_Agent_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_Impact) == 0x000060, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_Impact' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, Temp_int_Loop_Counter_Variable_1) == 0x0000EC, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetGameMode_ReturnValue) == 0x0000F0, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_DynamicCast_AsBP_Horde_Game_Mode) == 0x0000F8, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_DynamicCast_AsBP_Horde_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Add_IntInt_ReturnValue_1) == 0x000104, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Array_Get_Item) == 0x000108, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Less_IntInt_ReturnValue) == 0x000114, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BooleanAND_ReturnValue) == 0x000115, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_Damage) == 0x000118, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_HitResult_1) == 0x00011C, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_HitResult_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_DamageType) == 0x0001A8, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_SubDamageType) == 0x0001A9, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_SubDamageType' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_Source) == 0x0001B0, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_Source' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_Agent) == 0x0001B8, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_Agent' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_EventInstigator_1) == 0x0001C0, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_EventInstigator_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_IsTaskValidFor_IsValid) == 0x0001C8, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_IsTaskValidFor_IsValid' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_DynamicCast_AsBP_Horde_Character) == 0x0001D0, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_DynamicCast_AsBP_Horde_Character' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_DynamicCast_bSuccess_1) == 0x0001D8, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D9, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkillFloat_Value) == 0x0001DC, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkillFloat_Value' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkillFloat_PercentA) == 0x0001E0, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkillFloat_PercentA' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkillFloat_PercentB) == 0x0001E4, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkillFloat_PercentB' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkillFloat_IntegerA) == 0x0001E8, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkillFloat_IntegerA' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkillFloat_TimeA) == 0x0001EC, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkillFloat_TimeA' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkill_Level) == 0x0001F0, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkill_Level' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkill_PercentA) == 0x0001F4, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkill_PercentA' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkill_PercentB) == 0x0001F8, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkill_PercentB' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkill_IntegerA) == 0x0001FC, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkill_IntegerA' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkill_TimeA) == 0x000200, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkill_TimeA' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000204, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Greater_ByteByte_ReturnValue) == 0x000208, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkillFloat_Value_1) == 0x00020C, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkillFloat_Value_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkillFloat_PercentA_1) == 0x000210, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkillFloat_PercentA_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkillFloat_PercentB_1) == 0x000214, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkillFloat_PercentB_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkillFloat_IntegerA_1) == 0x000218, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkillFloat_IntegerA_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkillFloat_TimeA_1) == 0x00021C, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkillFloat_TimeA_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000220, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BreakHitResult_bBlockingHit) == 0x000224, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BreakHitResult_bInitialOverlap) == 0x000225, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BreakHitResult_Time) == 0x000228, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BreakHitResult_Distance) == 0x00022C, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BreakHitResult_Location) == 0x000230, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BreakHitResult_ImpactPoint) == 0x00023C, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BreakHitResult_Normal) == 0x000248, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BreakHitResult_ImpactNormal) == 0x000254, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BreakHitResult_PhysMat) == 0x000260, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BreakHitResult_HitActor) == 0x000268, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BreakHitResult_HitComponent) == 0x000270, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BreakHitResult_HitBoneName) == 0x000278, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BreakHitResult_HitItem) == 0x000280, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BreakHitResult_FaceIndex) == 0x000284, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BreakHitResult_TraceStart) == 0x000288, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BreakHitResult_TraceEnd) == 0x000294, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0002A0, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0002A4, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_FCeil_ReturnValue) == 0x0002A8, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0002AC, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x0002AD, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x0002AE, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0002AF, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BooleanOR_ReturnValue) == 0x0002B0, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BooleanAND_ReturnValue_1) == 0x0002B1, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BooleanOR_ReturnValue_1) == 0x0002B2, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BooleanOR_ReturnValue_2) == 0x0002B3, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_MakeLiteralByte_ReturnValue) == 0x0002B4, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Trip_ReturnValue) == 0x0002B5, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Trip_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetIsDead_ReturnValue) == 0x0002B6, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetIsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_RandomFloat_ReturnValue) == 0x0002B8, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0002BC, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_HitResult) == 0x0002C0, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_Attacker) == 0x000350, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_Attacker' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_DynamicCast_AsBP_Horde_Character_1) == 0x000358, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_DynamicCast_AsBP_Horde_Character_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_DynamicCast_bSuccess_2) == 0x000360, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetController_ReturnValue) == 0x000368, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkillFloat_Value_2) == 0x000370, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkillFloat_Value_2' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkillFloat_PercentA_2) == 0x000374, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkillFloat_PercentA_2' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkillFloat_PercentB_2) == 0x000378, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkillFloat_PercentB_2' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkillFloat_IntegerA_2) == 0x00037C, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkillFloat_IntegerA_2' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetSkillFloat_TimeA_2) == 0x000380, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetSkillFloat_TimeA_2' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_DynamicCast_AsBP_Horde_Player_Controller) == 0x000388, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_DynamicCast_AsBP_Horde_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_DynamicCast_bSuccess_3) == 0x000390, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000394, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetIsDead_ReturnValue_1) == 0x000398, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetIsDead_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Add_ByteByte_ReturnValue) == 0x000399, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_RandomFloat_ReturnValue_1) == 0x00039C, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_RandomFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0003A0, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetIsDead_ReturnValue_2) == 0x0003A1, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetIsDead_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_CustomEvent_Duration_1) == 0x0003A4, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_CustomEvent_Duration_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0003A8, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetIsDead_ReturnValue_3) == 0x0003AC, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetIsDead_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetIsDead_ReturnValue_4) == 0x0003AD, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetIsDead_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_CustomEvent_Target) == 0x0003B0, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_CustomEvent_Duration) == 0x0003B8, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_EventInstigator) == 0x0003C0, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_EventInstigator' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Add_ByteByte_ReturnValue_1) == 0x0003C8, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Add_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_DynamicCast_AsBP_Horde_Player_Controller_1) == 0x0003D0, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_DynamicCast_AsBP_Horde_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_DynamicCast_bSuccess_4) == 0x0003D8, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_K2_GetPawn_ReturnValue) == 0x0003E0, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetLastNetDamageSource_ReturnValue) == 0x0003E8, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetLastNetDamageSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_DynamicCast_AsBP_Horde_Character_2) == 0x0003F0, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_DynamicCast_AsBP_Horde_Character_2' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_DynamicCast_bSuccess_5) == 0x0003F8, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_DynamicCast_AsBP_Horde_Character_3) == 0x000400, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_DynamicCast_AsBP_Horde_Character_3' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_DynamicCast_bSuccess_6) == 0x000408, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetLastNetDamageType_ReturnValue) == 0x000409, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetLastNetDamageType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00040A, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_Event_NewController) == 0x000410, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000418, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_MakeArray_Array) == 0x000428, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000438, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_SphereOverlapActors_OutActors) == 0x000448, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_SphereOverlapActors_ReturnValue) == 0x000458, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Array_Get_Item_1) == 0x000460, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Not_PreBool_ReturnValue_1) == 0x000468, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_DynamicCast_AsMordhau_Character) == 0x000470, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_DynamicCast_AsMordhau_Character' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, K2Node_DynamicCast_bSuccess_7) == 0x000478, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_BooleanAND_ReturnValue_2) == 0x000479, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x00047C, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000488, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_IsInKnockback_ReturnValue) == 0x000494, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_IsInKnockback_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Normal_ReturnValue) == 0x000498, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0004A4, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_GetIsDead_ReturnValue_5) == 0x0004B0, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_GetIsDead_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Knockback_ReturnValue) == 0x0004B1, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Knockback_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Array_Length_ReturnValue_1) == 0x0004B4, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_HasAuthority_ReturnValue) == 0x0004B8, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy, CallFunc_Less_IntInt_ReturnValue_1) == 0x0004B9, "Member 'BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_HordeEnemy.BP_HordeEnemy_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_HordeEnemy_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeEnemy_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_HordeEnemy_C_ReceivePossessed");
static_assert(sizeof(BP_HordeEnemy_C_ReceivePossessed) == 0x000008, "Wrong size on BP_HordeEnemy_C_ReceivePossessed");
static_assert(offsetof(BP_HordeEnemy_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_HordeEnemy_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_HordeEnemy.BP_HordeEnemy_C.OnKilled
// 0x0008 (0x0008 - 0x0000)
struct BP_HordeEnemy_C_OnKilled final
{
public:
	class AController*                            EventInstigator;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeEnemy_C_OnKilled) == 0x000008, "Wrong alignment on BP_HordeEnemy_C_OnKilled");
static_assert(sizeof(BP_HordeEnemy_C_OnKilled) == 0x000008, "Wrong size on BP_HordeEnemy_C_OnKilled");
static_assert(offsetof(BP_HordeEnemy_C_OnKilled, EventInstigator) == 0x000000, "Member 'BP_HordeEnemy_C_OnKilled::EventInstigator' has a wrong offset!");

// Function BP_HordeEnemy.BP_HordeEnemy_C.Enrage
// 0x0010 (0x0010 - 0x0000)
struct BP_HordeEnemy_C_Enrage final
{
public:
	class AMordhauCharacter*                      Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeEnemy_C_Enrage) == 0x000008, "Wrong alignment on BP_HordeEnemy_C_Enrage");
static_assert(sizeof(BP_HordeEnemy_C_Enrage) == 0x000010, "Wrong size on BP_HordeEnemy_C_Enrage");
static_assert(offsetof(BP_HordeEnemy_C_Enrage, Target) == 0x000000, "Member 'BP_HordeEnemy_C_Enrage::Target' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_Enrage, Duration) == 0x000008, "Member 'BP_HordeEnemy_C_Enrage::Duration' has a wrong offset!");

// Function BP_HordeEnemy.BP_HordeEnemy_C.Cripple
// 0x0004 (0x0004 - 0x0000)
struct BP_HordeEnemy_C_Cripple final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeEnemy_C_Cripple) == 0x000004, "Wrong alignment on BP_HordeEnemy_C_Cripple");
static_assert(sizeof(BP_HordeEnemy_C_Cripple) == 0x000004, "Wrong size on BP_HordeEnemy_C_Cripple");
static_assert(offsetof(BP_HordeEnemy_C_Cripple, Duration) == 0x000000, "Member 'BP_HordeEnemy_C_Cripple::Duration' has a wrong offset!");

// Function BP_HordeEnemy.BP_HordeEnemy_C.OnBlockedMelee
// 0x0098 (0x0098 - 0x0000)
struct BP_HordeEnemy_C_OnBlockedMelee final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      Attacker;                                          // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeEnemy_C_OnBlockedMelee) == 0x000008, "Wrong alignment on BP_HordeEnemy_C_OnBlockedMelee");
static_assert(sizeof(BP_HordeEnemy_C_OnBlockedMelee) == 0x000098, "Wrong size on BP_HordeEnemy_C_OnBlockedMelee");
static_assert(offsetof(BP_HordeEnemy_C_OnBlockedMelee, HitResult) == 0x000000, "Member 'BP_HordeEnemy_C_OnBlockedMelee::HitResult' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_OnBlockedMelee, Attacker) == 0x000090, "Member 'BP_HordeEnemy_C_OnBlockedMelee::Attacker' has a wrong offset!");

// Function BP_HordeEnemy.BP_HordeEnemy_C.ReceiveMordhauDamage
// 0x00B0 (0x00B0 - 0x0000)
struct BP_HordeEnemy_C_ReceiveMordhauDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0004(0x008C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EMordhauDamageType                            DamageType;                                        // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SubDamageType;                                     // 0x0091(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Agent;                                             // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            EventInstigator;                                   // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeEnemy_C_ReceiveMordhauDamage) == 0x000008, "Wrong alignment on BP_HordeEnemy_C_ReceiveMordhauDamage");
static_assert(sizeof(BP_HordeEnemy_C_ReceiveMordhauDamage) == 0x0000B0, "Wrong size on BP_HordeEnemy_C_ReceiveMordhauDamage");
static_assert(offsetof(BP_HordeEnemy_C_ReceiveMordhauDamage, Damage) == 0x000000, "Member 'BP_HordeEnemy_C_ReceiveMordhauDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ReceiveMordhauDamage, HitResult) == 0x000004, "Member 'BP_HordeEnemy_C_ReceiveMordhauDamage::HitResult' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ReceiveMordhauDamage, DamageType) == 0x000090, "Member 'BP_HordeEnemy_C_ReceiveMordhauDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ReceiveMordhauDamage, SubDamageType) == 0x000091, "Member 'BP_HordeEnemy_C_ReceiveMordhauDamage::SubDamageType' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ReceiveMordhauDamage, Source) == 0x000098, "Member 'BP_HordeEnemy_C_ReceiveMordhauDamage::Source' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ReceiveMordhauDamage, Agent) == 0x0000A0, "Member 'BP_HordeEnemy_C_ReceiveMordhauDamage::Agent' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ReceiveMordhauDamage, EventInstigator) == 0x0000A8, "Member 'BP_HordeEnemy_C_ReceiveMordhauDamage::EventInstigator' has a wrong offset!");

// Function BP_HordeEnemy.BP_HordeEnemy_C.MoveBlockedBySlow
// 0x008C (0x008C - 0x0000)
struct BP_HordeEnemy_C_MoveBlockedBySlow final
{
public:
	struct FHitResult                             Impact;                                            // 0x0000(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_HordeEnemy_C_MoveBlockedBySlow) == 0x000004, "Wrong alignment on BP_HordeEnemy_C_MoveBlockedBySlow");
static_assert(sizeof(BP_HordeEnemy_C_MoveBlockedBySlow) == 0x00008C, "Wrong size on BP_HordeEnemy_C_MoveBlockedBySlow");
static_assert(offsetof(BP_HordeEnemy_C_MoveBlockedBySlow, Impact) == 0x000000, "Member 'BP_HordeEnemy_C_MoveBlockedBySlow::Impact' has a wrong offset!");

// Function BP_HordeEnemy.BP_HordeEnemy_C.ModifyDamage
// 0x00F8 (0x00F8 - 0x0000)
struct BP_HordeEnemy_C_ModifyDamage final
{
public:
	float                                         DamageAmount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMordhauDamageInfo                     DamageInfo;                                        // 0x0008(0x00A8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	class AController*                            EventInstigator;                                   // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x00B8(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordePlayerController_C*            K2Node_DynamicCast_AsBP_Horde_Player_Controller;   // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ModifyDamage_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSkillLevelFloat_SkillLevel;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordeCharacter_C*                   K2Node_DynamicCast_AsBP_Horde_Character;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ModifyOutgoingDamage_OutDamage;           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeEnemy_C_ModifyDamage) == 0x000008, "Wrong alignment on BP_HordeEnemy_C_ModifyDamage");
static_assert(sizeof(BP_HordeEnemy_C_ModifyDamage) == 0x0000F8, "Wrong size on BP_HordeEnemy_C_ModifyDamage");
static_assert(offsetof(BP_HordeEnemy_C_ModifyDamage, DamageAmount) == 0x000000, "Member 'BP_HordeEnemy_C_ModifyDamage::DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyDamage, DamageInfo) == 0x000008, "Member 'BP_HordeEnemy_C_ModifyDamage::DamageInfo' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyDamage, EventInstigator) == 0x0000B0, "Member 'BP_HordeEnemy_C_ModifyDamage::EventInstigator' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyDamage, ReturnValue) == 0x0000B8, "Member 'BP_HordeEnemy_C_ModifyDamage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyDamage, Damage) == 0x0000BC, "Member 'BP_HordeEnemy_C_ModifyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyDamage, K2Node_DynamicCast_AsBP_Horde_Player_Controller) == 0x0000C0, "Member 'BP_HordeEnemy_C_ModifyDamage::K2Node_DynamicCast_AsBP_Horde_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyDamage, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_HordeEnemy_C_ModifyDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyDamage, CallFunc_ModifyDamage_ReturnValue) == 0x0000CC, "Member 'BP_HordeEnemy_C_ModifyDamage::CallFunc_ModifyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyDamage, CallFunc_GetSkillLevelFloat_SkillLevel) == 0x0000D0, "Member 'BP_HordeEnemy_C_ModifyDamage::CallFunc_GetSkillLevelFloat_SkillLevel' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D4, "Member 'BP_HordeEnemy_C_ModifyDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyDamage, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000D8, "Member 'BP_HordeEnemy_C_ModifyDamage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyDamage, K2Node_DynamicCast_AsBP_Horde_Character) == 0x0000E0, "Member 'BP_HordeEnemy_C_ModifyDamage::K2Node_DynamicCast_AsBP_Horde_Character' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyDamage, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'BP_HordeEnemy_C_ModifyDamage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyDamage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E9, "Member 'BP_HordeEnemy_C_ModifyDamage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyDamage, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000EC, "Member 'BP_HordeEnemy_C_ModifyDamage::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyDamage, CallFunc_ModifyOutgoingDamage_OutDamage) == 0x0000F0, "Member 'BP_HordeEnemy_C_ModifyDamage::CallFunc_ModifyOutgoingDamage_OutDamage' has a wrong offset!");

// Function BP_HordeEnemy.BP_HordeEnemy_C.ModifyParryResult
// 0x00B0 (0x00B0 - 0x0000)
struct BP_HordeEnemy_C_ModifyParryResult final
{
public:
	bool                                          InResult;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitResult;                                         // 0x0004(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AMordhauCharacter*                      Attacker;                                          // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0098(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ModifyParryResult_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordeCharacter_C*                   K2Node_DynamicCast_AsBP_Horde_Character;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeEnemy_C_ModifyParryResult) == 0x000008, "Wrong alignment on BP_HordeEnemy_C_ModifyParryResult");
static_assert(sizeof(BP_HordeEnemy_C_ModifyParryResult) == 0x0000B0, "Wrong size on BP_HordeEnemy_C_ModifyParryResult");
static_assert(offsetof(BP_HordeEnemy_C_ModifyParryResult, InResult) == 0x000000, "Member 'BP_HordeEnemy_C_ModifyParryResult::InResult' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyParryResult, HitResult) == 0x000004, "Member 'BP_HordeEnemy_C_ModifyParryResult::HitResult' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyParryResult, Attacker) == 0x000090, "Member 'BP_HordeEnemy_C_ModifyParryResult::Attacker' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyParryResult, ReturnValue) == 0x000098, "Member 'BP_HordeEnemy_C_ModifyParryResult::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyParryResult, CallFunc_ModifyParryResult_ReturnValue) == 0x000099, "Member 'BP_HordeEnemy_C_ModifyParryResult::CallFunc_ModifyParryResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyParryResult, K2Node_DynamicCast_AsBP_Horde_Character) == 0x0000A0, "Member 'BP_HordeEnemy_C_ModifyParryResult::K2Node_DynamicCast_AsBP_Horde_Character' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_ModifyParryResult, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_HordeEnemy_C_ModifyParryResult::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HordeEnemy.BP_HordeEnemy_C.GetEnragedTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_HordeEnemy_C_GetEnragedTarget final
{
public:
	class AMordhauCharacter*                      OutTarget;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDead_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeEnemy_C_GetEnragedTarget) == 0x000008, "Wrong alignment on BP_HordeEnemy_C_GetEnragedTarget");
static_assert(sizeof(BP_HordeEnemy_C_GetEnragedTarget) == 0x000010, "Wrong size on BP_HordeEnemy_C_GetEnragedTarget");
static_assert(offsetof(BP_HordeEnemy_C_GetEnragedTarget, OutTarget) == 0x000000, "Member 'BP_HordeEnemy_C_GetEnragedTarget::OutTarget' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_GetEnragedTarget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_HordeEnemy_C_GetEnragedTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_GetEnragedTarget, CallFunc_GetIsDead_ReturnValue) == 0x000009, "Member 'BP_HordeEnemy_C_GetEnragedTarget::CallFunc_GetIsDead_ReturnValue' has a wrong offset!");

// Function BP_HordeEnemy.BP_HordeEnemy_C.OnRep_StunnedBySkillCounter
// 0x0008 (0x0008 - 0x0000)
struct BP_HordeEnemy_C_OnRep_StunnedBySkillCounter final
{
public:
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeEnemy_C_OnRep_StunnedBySkillCounter) == 0x000008, "Wrong alignment on BP_HordeEnemy_C_OnRep_StunnedBySkillCounter");
static_assert(sizeof(BP_HordeEnemy_C_OnRep_StunnedBySkillCounter) == 0x000008, "Wrong size on BP_HordeEnemy_C_OnRep_StunnedBySkillCounter");
static_assert(offsetof(BP_HordeEnemy_C_OnRep_StunnedBySkillCounter, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000000, "Member 'BP_HordeEnemy_C_OnRep_StunnedBySkillCounter::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function BP_HordeEnemy.BP_HordeEnemy_C.HandleObstructionRemoval
// 0x0168 (0x0168 - 0x0000)
struct BP_HordeEnemy_C_HandleObstructionRemoval final
{
public:
	struct FHitResult                             Impact;                                            // 0x0000(0x008C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ExtraDamageMode;                                   // 0x008C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DamageToApply;                                     // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FrontlineDestroyable_C*             K2Node_DynamicCast_AsBP_Frontline_Destroyable;     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PaviseShield_C*                     K2Node_DynamicCast_AsBP_Pavise_Shield;             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DestroyableActor_C*                 K2Node_DynamicCast_AsBP_Destroyable_Actor;         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeEnemy_C_HandleObstructionRemoval) == 0x000008, "Wrong alignment on BP_HordeEnemy_C_HandleObstructionRemoval");
static_assert(sizeof(BP_HordeEnemy_C_HandleObstructionRemoval) == 0x000168, "Wrong size on BP_HordeEnemy_C_HandleObstructionRemoval");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, Impact) == 0x000000, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::Impact' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, ExtraDamageMode) == 0x00008C, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::ExtraDamageMode' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, DamageToApply) == 0x000090, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::DamageToApply' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_BreakHitResult_bBlockingHit) == 0x000094, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_BreakHitResult_bInitialOverlap) == 0x000095, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_BreakHitResult_Time) == 0x000098, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_BreakHitResult_Distance) == 0x00009C, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_BreakHitResult_Location) == 0x0000A0, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_BreakHitResult_ImpactPoint) == 0x0000AC, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_BreakHitResult_Normal) == 0x0000B8, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_BreakHitResult_ImpactNormal) == 0x0000C4, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_BreakHitResult_PhysMat) == 0x0000D0, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_BreakHitResult_HitActor) == 0x0000D8, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_BreakHitResult_HitComponent) == 0x0000E0, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_BreakHitResult_HitBoneName) == 0x0000E8, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_BreakHitResult_HitItem) == 0x0000F0, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_BreakHitResult_FaceIndex) == 0x0000F4, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_BreakHitResult_TraceStart) == 0x0000F8, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_BreakHitResult_TraceEnd) == 0x000104, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, K2Node_DynamicCast_AsBP_Frontline_Destroyable) == 0x000110, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::K2Node_DynamicCast_AsBP_Frontline_Destroyable' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, K2Node_DynamicCast_AsBP_Pavise_Shield) == 0x000120, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::K2Node_DynamicCast_AsBP_Pavise_Shield' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, K2Node_DynamicCast_AsBP_Destroyable_Actor) == 0x000130, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::K2Node_DynamicCast_AsBP_Destroyable_Actor' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, K2Node_DynamicCast_bSuccess_2) == 0x000138, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x00013C, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_GetTimeSeconds_ReturnValue) == 0x000140, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_Add_FloatFloat_ReturnValue) == 0x000144, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000148, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00014C, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000150, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_GetController_ReturnValue) == 0x000158, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_BooleanOR_ReturnValue) == 0x000160, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_HandleObstructionRemoval, CallFunc_ApplyDamage_ReturnValue) == 0x000164, "Member 'BP_HordeEnemy_C_HandleObstructionRemoval::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");

// Function BP_HordeEnemy.BP_HordeEnemy_C.OnDied
// 0x0030 (0x0030 - 0x0000)
struct BP_HordeEnemy_C_OnDied final
{
public:
	float                                         Angle;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SubType;                                           // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   bone;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Agent;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeEnemy_C_OnDied) == 0x000008, "Wrong alignment on BP_HordeEnemy_C_OnDied");
static_assert(sizeof(BP_HordeEnemy_C_OnDied) == 0x000030, "Wrong size on BP_HordeEnemy_C_OnDied");
static_assert(offsetof(BP_HordeEnemy_C_OnDied, Angle) == 0x000000, "Member 'BP_HordeEnemy_C_OnDied::Angle' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_OnDied, Type) == 0x000004, "Member 'BP_HordeEnemy_C_OnDied::Type' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_OnDied, SubType) == 0x000005, "Member 'BP_HordeEnemy_C_OnDied::SubType' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_OnDied, bone) == 0x000008, "Member 'BP_HordeEnemy_C_OnDied::bone' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_OnDied, Point) == 0x000010, "Member 'BP_HordeEnemy_C_OnDied::Point' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_OnDied, Source) == 0x000020, "Member 'BP_HordeEnemy_C_OnDied::Source' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_OnDied, Agent) == 0x000028, "Member 'BP_HordeEnemy_C_OnDied::Agent' has a wrong offset!");

// Function BP_HordeEnemy.BP_HordeEnemy_C.AttemptClimb
// 0x000C (0x000C - 0x0000)
struct BP_HordeEnemy_C_AttemptClimb final
{
public:
	bool                                          Succeeded;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttemptClimb_Succeeded;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeEnemy_C_AttemptClimb) == 0x000004, "Wrong alignment on BP_HordeEnemy_C_AttemptClimb");
static_assert(sizeof(BP_HordeEnemy_C_AttemptClimb) == 0x00000C, "Wrong size on BP_HordeEnemy_C_AttemptClimb");
static_assert(offsetof(BP_HordeEnemy_C_AttemptClimb, Succeeded) == 0x000000, "Member 'BP_HordeEnemy_C_AttemptClimb::Succeeded' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_AttemptClimb, CallFunc_GetTimeSeconds_ReturnValue) == 0x000004, "Member 'BP_HordeEnemy_C_AttemptClimb::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeEnemy_C_AttemptClimb, CallFunc_AttemptClimb_Succeeded) == 0x000008, "Member 'BP_HordeEnemy_C_AttemptClimb::CallFunc_AttemptClimb_Succeeded' has a wrong offset!");

}

