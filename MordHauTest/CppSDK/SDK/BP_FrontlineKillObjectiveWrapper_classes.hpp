#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrontlineKillObjectiveWrapper

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FrontlineKillObjectiveWrapper.BP_FrontlineKillObjectiveWrapper_C
// 0x0020 (0x0240 - 0x0220)
class ABP_FrontlineKillObjectiveWrapper_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_FrontlineKillObjective_C*           KillObjective;                                     // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Weight;                                            // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FrontlineKillObjectiveWrapper(int32 EntryPoint);
	void OnUpdateUIWidgets();
	void OnInitialize(class ABP_CapturePoint_C* Point);
	void OnEnemyLostPrerequisites();
	void OnEnemyGainedPrerequisites();
	void OnAnyObjectiveProgressChanged();
	void IsCompleted(bool* Completed);
	void IsInObjectiveArea(const struct FVector& Location, bool* InArea);

	void GetObjectiveProgress(float* Progress) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FrontlineKillObjectiveWrapper_C">();
	}
	static class ABP_FrontlineKillObjectiveWrapper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FrontlineKillObjectiveWrapper_C>();
	}
};
static_assert(alignof(ABP_FrontlineKillObjectiveWrapper_C) == 0x000008, "Wrong alignment on ABP_FrontlineKillObjectiveWrapper_C");
static_assert(sizeof(ABP_FrontlineKillObjectiveWrapper_C) == 0x000240, "Wrong size on ABP_FrontlineKillObjectiveWrapper_C");
static_assert(offsetof(ABP_FrontlineKillObjectiveWrapper_C, UberGraphFrame) == 0x000220, "Member 'ABP_FrontlineKillObjectiveWrapper_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjectiveWrapper_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_FrontlineKillObjectiveWrapper_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjectiveWrapper_C, KillObjective) == 0x000230, "Member 'ABP_FrontlineKillObjectiveWrapper_C::KillObjective' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjectiveWrapper_C, Weight) == 0x000238, "Member 'ABP_FrontlineKillObjectiveWrapper_C::Weight' has a wrong offset!");

}

