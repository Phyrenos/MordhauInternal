#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RecurveBow_DIH

#include "Basic.hpp"

#include "BP_RecurveBow_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RecurveBow_DIH.BP_RecurveBow_DIH_C
// 0x0020 (0x0DE0 - 0x0DC0)
class ABP_RecurveBow_DIH_C final : public ABP_RecurveBow_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_RecurveBow_DIH_C;                // 0x0DC0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	int32                                         BurstCount;                                        // 0x0DC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BurstDelay;                                        // 0x0DCC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AutoRestockInterval;                               // 0x0DD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRestocking;                                      // 0x0DD4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_RecurveBow_DIH(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OnAmmoChanged();
	void BeginRestocking();
	void AutoRestock();
	void FireEffectsMulti();
	void CreateAndFireProjectile(float Accuracy, class UClass* Projectile, int32 Index_0);
	void FireProjectile(const struct FVector& Origin, const struct FRotator& Orientation, class AController* OwningController, float ExpectedDelay);
	void UpdateEquipmentState();
	void OnLoadedChanged();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RecurveBow_DIH_C">();
	}
	static class ABP_RecurveBow_DIH_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RecurveBow_DIH_C>();
	}
};
static_assert(alignof(ABP_RecurveBow_DIH_C) == 0x000010, "Wrong alignment on ABP_RecurveBow_DIH_C");
static_assert(sizeof(ABP_RecurveBow_DIH_C) == 0x000DE0, "Wrong size on ABP_RecurveBow_DIH_C");
static_assert(offsetof(ABP_RecurveBow_DIH_C, UberGraphFrame_BP_RecurveBow_DIH_C) == 0x000DC0, "Member 'ABP_RecurveBow_DIH_C::UberGraphFrame_BP_RecurveBow_DIH_C' has a wrong offset!");
static_assert(offsetof(ABP_RecurveBow_DIH_C, BurstCount) == 0x000DC8, "Member 'ABP_RecurveBow_DIH_C::BurstCount' has a wrong offset!");
static_assert(offsetof(ABP_RecurveBow_DIH_C, BurstDelay) == 0x000DCC, "Member 'ABP_RecurveBow_DIH_C::BurstDelay' has a wrong offset!");
static_assert(offsetof(ABP_RecurveBow_DIH_C, AutoRestockInterval) == 0x000DD0, "Member 'ABP_RecurveBow_DIH_C::AutoRestockInterval' has a wrong offset!");
static_assert(offsetof(ABP_RecurveBow_DIH_C, IsRestocking) == 0x000DD4, "Member 'ABP_RecurveBow_DIH_C::IsRestocking' has a wrong offset!");

}

