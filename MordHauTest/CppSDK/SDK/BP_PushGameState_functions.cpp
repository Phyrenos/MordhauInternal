#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PushGameState

#include "Basic.hpp"

#include "BP_PushGameState_classes.hpp"
#include "BP_PushGameState_parameters.hpp"


namespace SDK
{

// Function BP_PushGameState.BP_PushGameState_C.ExecuteUbergraph_BP_PushGameState
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PushGameState_C::ExecuteUbergraph_BP_PushGameState(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PushGameState_C", "ExecuteUbergraph_BP_PushGameState");

	Params::BP_PushGameState_C_ExecuteUbergraph_BP_PushGameState Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PushGameState.BP_PushGameState_C.GetScoreboardTeamObjectiveValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Output                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_PushGameState_C::GetScoreboardTeamObjectiveValue(int32 Team, class FString* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PushGameState_C", "GetScoreboardTeamObjectiveValue");

	Params::BP_PushGameState_C_GetScoreboardTeamObjectiveValue Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = std::move(Parms.Output);
}


// Function BP_PushGameState.BP_PushGameState_C.GetScoreboardObjectiveName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             NewParam                                               (Parm, OutParm)

void ABP_PushGameState_C::GetScoreboardObjectiveName(class FText* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PushGameState_C", "GetScoreboardObjectiveName");

	Params::BP_PushGameState_C_GetScoreboardObjectiveName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function BP_PushGameState.BP_PushGameState_C.GetScoreboardTimeInProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTimespan                        Time                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PushGameState_C::GetScoreboardTimeInProgress(struct FTimespan* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PushGameState_C", "GetScoreboardTimeInProgress");

	Params::BP_PushGameState_C_GetScoreboardTimeInProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = std::move(Parms.Time);
}


// Function BP_PushGameState.BP_PushGameState_C.HandleMatchEndInfo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PushGameState_C::HandleMatchEndInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PushGameState_C", "HandleMatchEndInfo");

	UObject::ProcessEvent(Func, nullptr);
}

}

