#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpawnProtectionBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SpawnProtectionBox.BP_SpawnProtectionBox_C
// 0x0018 (0x0238 - 0x0220)
class ABP_SpawnProtectionBox_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UBoxComponent*                          Box;                                               // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         AllowedTeam;                                       // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsesNavmesh;                                       // 0x0234(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_SpawnProtectionBox(int32 EntryPoint);
	void ReceiveActorEndOverlap(class AActor* OtherActor);
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void UserConstructionScript();
	void Enable();
	void Disable();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SpawnProtectionBox_C">();
	}
	static class ABP_SpawnProtectionBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SpawnProtectionBox_C>();
	}
};
static_assert(alignof(ABP_SpawnProtectionBox_C) == 0x000008, "Wrong alignment on ABP_SpawnProtectionBox_C");
static_assert(sizeof(ABP_SpawnProtectionBox_C) == 0x000238, "Wrong size on ABP_SpawnProtectionBox_C");
static_assert(offsetof(ABP_SpawnProtectionBox_C, UberGraphFrame) == 0x000220, "Member 'ABP_SpawnProtectionBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SpawnProtectionBox_C, Box) == 0x000228, "Member 'ABP_SpawnProtectionBox_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_SpawnProtectionBox_C, AllowedTeam) == 0x000230, "Member 'ABP_SpawnProtectionBox_C::AllowedTeam' has a wrong offset!");
static_assert(offsetof(ABP_SpawnProtectionBox_C, UsesNavmesh) == 0x000234, "Member 'ABP_SpawnProtectionBox_C::UsesNavmesh' has a wrong offset!");

}

