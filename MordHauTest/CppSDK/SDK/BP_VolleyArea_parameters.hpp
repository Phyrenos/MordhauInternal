#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VolleyArea

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_VolleyArea.BP_VolleyArea_C.ExecuteUbergraph_BP_VolleyArea
// 0x0268 (0x0268 - 0x0000)
struct BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAdvancedCharacter*                     K2Node_DynamicCast_AsAdvanced_Character;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsDead_ReturnValue;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0078(0x0010)(ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0098(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0128(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B6[0x2];                                      // 0x01B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MordhauTakeDamage_ReturnValue;            // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauGameState*                      K2Node_DynamicCast_AsMordhau_Game_State;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFriendly_ReturnValue;                   // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea) == 0x000008, "Wrong alignment on BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea");
static_assert(sizeof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea) == 0x000268, "Wrong size on BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, EntryPoint) == 0x000000, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, Temp_object_Variable) == 0x000008, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, K2Node_DynamicCast_AsAdvanced_Character) == 0x000030, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::K2Node_DynamicCast_AsAdvanced_Character' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00004C, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_GetIsDead_ReturnValue) == 0x000058, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_GetIsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_Add_VectorVector_ReturnValue) == 0x00005C, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_HasAuthority_ReturnValue) == 0x000068, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_HasAuthority_ReturnValue_1) == 0x000069, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000070, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000078, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, K2Node_MakeArray_Array) == 0x000088, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000098, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000124, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_MakeHitResult_ReturnValue) == 0x000128, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_BreakHitResult_bBlockingHit) == 0x0001B4, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001B5, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_BreakHitResult_Time) == 0x0001B8, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_BreakHitResult_Distance) == 0x0001BC, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_BreakHitResult_Location) == 0x0001C0, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_BreakHitResult_ImpactPoint) == 0x0001CC, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_BreakHitResult_Normal) == 0x0001D8, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_BreakHitResult_ImpactNormal) == 0x0001E4, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_BreakHitResult_PhysMat) == 0x0001F0, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_BreakHitResult_HitActor) == 0x0001F8, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_BreakHitResult_HitComponent) == 0x000200, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_BreakHitResult_HitBoneName) == 0x000208, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_BreakHitResult_HitItem) == 0x000210, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_BreakHitResult_FaceIndex) == 0x000214, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_BreakHitResult_TraceStart) == 0x000218, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_BreakHitResult_TraceEnd) == 0x000224, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000230, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000234, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_MordhauTakeDamage_ReturnValue) == 0x000238, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_MordhauTakeDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00023C, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, Temp_int_Loop_Counter_Variable) == 0x000240, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_Less_IntInt_ReturnValue) == 0x000244, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_Add_IntInt_ReturnValue) == 0x000248, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_GetGameState_ReturnValue) == 0x000250, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, K2Node_DynamicCast_AsMordhau_Game_State) == 0x000258, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::K2Node_DynamicCast_AsMordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, K2Node_DynamicCast_bSuccess_1) == 0x000260, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea, CallFunc_IsFriendly_ReturnValue) == 0x000261, "Member 'BP_VolleyArea_C_ExecuteUbergraph_BP_VolleyArea::CallFunc_IsFriendly_ReturnValue' has a wrong offset!");

}

