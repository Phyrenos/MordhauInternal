#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PointsRemaining

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Mordhau_structs.hpp"


namespace SDK::Params
{

// Function BP_PointsRemaining.BP_PointsRemaining_C.Update
// 0x0108 (0x0108 - 0x0000)
struct BP_PointsRemaining_C_Update final
{
public:
	struct FCharacterProfile                      Profile;                                           // 0x0000(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ComputePointsLeft_ReturnValue;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00C8(0x0018)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x00E0(0x0028)()
};
static_assert(alignof(BP_PointsRemaining_C_Update) == 0x000008, "Wrong alignment on BP_PointsRemaining_C_Update");
static_assert(sizeof(BP_PointsRemaining_C_Update) == 0x000108, "Wrong size on BP_PointsRemaining_C_Update");
static_assert(offsetof(BP_PointsRemaining_C_Update, Profile) == 0x000000, "Member 'BP_PointsRemaining_C_Update::Profile' has a wrong offset!");
static_assert(offsetof(BP_PointsRemaining_C_Update, Temp_bool_Variable) == 0x0000B8, "Member 'BP_PointsRemaining_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PointsRemaining_C_Update, CallFunc_ComputePointsLeft_ReturnValue) == 0x0000BC, "Member 'BP_PointsRemaining_C_Update::CallFunc_ComputePointsLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PointsRemaining_C_Update, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_PointsRemaining_C_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PointsRemaining_C_Update, CallFunc_Conv_IntToText_ReturnValue) == 0x0000C8, "Member 'BP_PointsRemaining_C_Update::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PointsRemaining_C_Update, K2Node_Select_Default) == 0x0000E0, "Member 'BP_PointsRemaining_C_Update::K2Node_Select_Default' has a wrong offset!");

// Function BP_PointsRemaining.BP_PointsRemaining_C.Update points directly
// 0x0048 (0x0048 - 0x0000)
struct BP_PointsRemaining_C_Update_points_directly final
{
public:
	int32                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0020(0x0028)()
};
static_assert(alignof(BP_PointsRemaining_C_Update_points_directly) == 0x000008, "Wrong alignment on BP_PointsRemaining_C_Update_points_directly");
static_assert(sizeof(BP_PointsRemaining_C_Update_points_directly) == 0x000048, "Wrong size on BP_PointsRemaining_C_Update_points_directly");
static_assert(offsetof(BP_PointsRemaining_C_Update_points_directly, Points) == 0x000000, "Member 'BP_PointsRemaining_C_Update_points_directly::Points' has a wrong offset!");
static_assert(offsetof(BP_PointsRemaining_C_Update_points_directly, Temp_bool_Variable) == 0x000004, "Member 'BP_PointsRemaining_C_Update_points_directly::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PointsRemaining_C_Update_points_directly, CallFunc_Less_IntInt_ReturnValue) == 0x000005, "Member 'BP_PointsRemaining_C_Update_points_directly::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PointsRemaining_C_Update_points_directly, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'BP_PointsRemaining_C_Update_points_directly::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PointsRemaining_C_Update_points_directly, K2Node_Select_Default) == 0x000020, "Member 'BP_PointsRemaining_C_Update_points_directly::K2Node_Select_Default' has a wrong offset!");

}

