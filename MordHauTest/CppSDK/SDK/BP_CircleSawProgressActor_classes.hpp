#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CircleSawProgressActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_SceneProgressActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CircleSawProgressActor.BP_CircleSawProgressActor_C
// 0x0040 (0x0320 - 0x02E0)
class ABP_CircleSawProgressActor_C final : public ABP_SceneProgressActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_CircleSawProgressActor_C;        // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UBoxComponent*                          KillBox;                                           // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BlockingBox;                                       // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_SawbladeSpark;                                   // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        SC_CircleSaw;                                      // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Sawblade;                                          // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AAdvancedCharacter*>             ToDamageList;                                      // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_CircleSawProgressActor(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void BndEvt__KillBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CircleSawProgressActor_C">();
	}
	static class ABP_CircleSawProgressActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CircleSawProgressActor_C>();
	}
};
static_assert(alignof(ABP_CircleSawProgressActor_C) == 0x000010, "Wrong alignment on ABP_CircleSawProgressActor_C");
static_assert(sizeof(ABP_CircleSawProgressActor_C) == 0x000320, "Wrong size on ABP_CircleSawProgressActor_C");
static_assert(offsetof(ABP_CircleSawProgressActor_C, UberGraphFrame_BP_CircleSawProgressActor_C) == 0x0002E0, "Member 'ABP_CircleSawProgressActor_C::UberGraphFrame_BP_CircleSawProgressActor_C' has a wrong offset!");
static_assert(offsetof(ABP_CircleSawProgressActor_C, KillBox) == 0x0002E8, "Member 'ABP_CircleSawProgressActor_C::KillBox' has a wrong offset!");
static_assert(offsetof(ABP_CircleSawProgressActor_C, BlockingBox) == 0x0002F0, "Member 'ABP_CircleSawProgressActor_C::BlockingBox' has a wrong offset!");
static_assert(offsetof(ABP_CircleSawProgressActor_C, P_SawbladeSpark) == 0x0002F8, "Member 'ABP_CircleSawProgressActor_C::P_SawbladeSpark' has a wrong offset!");
static_assert(offsetof(ABP_CircleSawProgressActor_C, SC_CircleSaw) == 0x000300, "Member 'ABP_CircleSawProgressActor_C::SC_CircleSaw' has a wrong offset!");
static_assert(offsetof(ABP_CircleSawProgressActor_C, Sawblade) == 0x000308, "Member 'ABP_CircleSawProgressActor_C::Sawblade' has a wrong offset!");
static_assert(offsetof(ABP_CircleSawProgressActor_C, ToDamageList) == 0x000310, "Member 'ABP_CircleSawProgressActor_C::ToDamageList' has a wrong offset!");

}

