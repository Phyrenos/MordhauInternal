#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TextInputDialog

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_TextInputDialog.BP_TextInputDialog_C.ExecuteUbergraph_BP_TextInputDialog
// 0x00B8 (0x00B8 - 0x0000)
struct BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text_3;                 // 0x0018(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod_1;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_2;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_Text_2;                 // 0x0040(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x0060(0x0018)(ConstParm)
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0078(0x0018)(ConstParm)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsUsingController_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog) == 0x000008, "Wrong alignment on BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog");
static_assert(sizeof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog) == 0x0000B8, "Wrong size on BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, EntryPoint) == 0x000000, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, Temp_bool_Variable) == 0x000010, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, Temp_byte_Variable) == 0x000011, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, Temp_byte_Variable_1) == 0x000012, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, Temp_bool_Variable_1) == 0x000013, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, Temp_byte_Variable_2) == 0x000014, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, Temp_byte_Variable_3) == 0x000015, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, K2Node_ComponentBoundEvent_Text_3) == 0x000018, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::K2Node_ComponentBoundEvent_Text_3' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, K2Node_ComponentBoundEvent_CommitMethod_1) == 0x000030, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::K2Node_ComponentBoundEvent_CommitMethod_1' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, K2Node_Select_Default) == 0x000031, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, K2Node_Select_Default_1) == 0x000032, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, Temp_bool_Variable_2) == 0x000033, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, K2Node_Select_Default_2) == 0x000038, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, K2Node_ComponentBoundEvent_Text_2) == 0x000040, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::K2Node_ComponentBoundEvent_Text_2' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, K2Node_ComponentBoundEvent_CommitMethod) == 0x000058, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, K2Node_ComponentBoundEvent_Text_1) == 0x000060, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, K2Node_ComponentBoundEvent_Text) == 0x000078, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, CallFunc_GetViewportSize_ReturnValue) == 0x000090, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, CallFunc_GetIsUsingController_ReturnValue) == 0x000098, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::CallFunc_GetIsUsingController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x00009C, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, CallFunc_IsConsolePlatform_ReturnValue) == 0x0000A4, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, CallFunc_BreakVector2D_X) == 0x0000A8, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, CallFunc_BreakVector2D_Y) == 0x0000AC, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog, CallFunc_BooleanOR_ReturnValue) == 0x0000B0, "Member 'BP_TextInputDialog_C_ExecuteUbergraph_BP_TextInputDialog::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_TextInputDialog.BP_TextInputDialog_C.BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_20_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_TextInputDialog_C_BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_20_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_TextInputDialog_C_BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_20_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_TextInputDialog_C_BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_20_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(BP_TextInputDialog_C_BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_20_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on BP_TextInputDialog_C_BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_20_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(BP_TextInputDialog_C_BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_20_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'BP_TextInputDialog_C_BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_20_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function BP_TextInputDialog.BP_TextInputDialog_C.BndEvt__NormalTextBox_K2Node_ComponentBoundEvent_19_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_TextInputDialog_C_BndEvt__NormalTextBox_K2Node_ComponentBoundEvent_19_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_TextInputDialog_C_BndEvt__NormalTextBox_K2Node_ComponentBoundEvent_19_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_TextInputDialog_C_BndEvt__NormalTextBox_K2Node_ComponentBoundEvent_19_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(BP_TextInputDialog_C_BndEvt__NormalTextBox_K2Node_ComponentBoundEvent_19_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on BP_TextInputDialog_C_BndEvt__NormalTextBox_K2Node_ComponentBoundEvent_19_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(BP_TextInputDialog_C_BndEvt__NormalTextBox_K2Node_ComponentBoundEvent_19_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'BP_TextInputDialog_C_BndEvt__NormalTextBox_K2Node_ComponentBoundEvent_19_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function BP_TextInputDialog.BP_TextInputDialog_C.BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_7_OnEditableTextBoxCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_TextInputDialog_C_BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_7_OnEditableTextBoxCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TextInputDialog_C_BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_7_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_TextInputDialog_C_BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_7_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(sizeof(BP_TextInputDialog_C_BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_7_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on BP_TextInputDialog_C_BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_7_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(offsetof(BP_TextInputDialog_C_BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_7_OnEditableTextBoxCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'BP_TextInputDialog_C_BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_7_OnEditableTextBoxCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_7_OnEditableTextBoxCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'BP_TextInputDialog_C_BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_7_OnEditableTextBoxCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function BP_TextInputDialog.BP_TextInputDialog_C.BndEvt__PasswordTextbox_K2Node_ComponentBoundEvent_23_OnEditableTextBoxCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_TextInputDialog_C_BndEvt__PasswordTextbox_K2Node_ComponentBoundEvent_23_OnEditableTextBoxCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TextInputDialog_C_BndEvt__PasswordTextbox_K2Node_ComponentBoundEvent_23_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_TextInputDialog_C_BndEvt__PasswordTextbox_K2Node_ComponentBoundEvent_23_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(sizeof(BP_TextInputDialog_C_BndEvt__PasswordTextbox_K2Node_ComponentBoundEvent_23_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on BP_TextInputDialog_C_BndEvt__PasswordTextbox_K2Node_ComponentBoundEvent_23_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(offsetof(BP_TextInputDialog_C_BndEvt__PasswordTextbox_K2Node_ComponentBoundEvent_23_OnEditableTextBoxCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'BP_TextInputDialog_C_BndEvt__PasswordTextbox_K2Node_ComponentBoundEvent_23_OnEditableTextBoxCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_BndEvt__PasswordTextbox_K2Node_ComponentBoundEvent_23_OnEditableTextBoxCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'BP_TextInputDialog_C_BndEvt__PasswordTextbox_K2Node_ComponentBoundEvent_23_OnEditableTextBoxCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function BP_TextInputDialog.BP_TextInputDialog_C.GetHintText
// 0x0018 (0x0018 - 0x0000)
struct BP_TextInputDialog_C_GetHintText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_TextInputDialog_C_GetHintText) == 0x000008, "Wrong alignment on BP_TextInputDialog_C_GetHintText");
static_assert(sizeof(BP_TextInputDialog_C_GetHintText) == 0x000018, "Wrong size on BP_TextInputDialog_C_GetHintText");
static_assert(offsetof(BP_TextInputDialog_C_GetHintText, ReturnValue) == 0x000000, "Member 'BP_TextInputDialog_C_GetHintText::ReturnValue' has a wrong offset!");

// Function BP_TextInputDialog.BP_TextInputDialog_C.SetLeftButtonText
// 0x0018 (0x0018 - 0x0000)
struct BP_TextInputDialog_C_SetLeftButtonText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_TextInputDialog_C_SetLeftButtonText) == 0x000008, "Wrong alignment on BP_TextInputDialog_C_SetLeftButtonText");
static_assert(sizeof(BP_TextInputDialog_C_SetLeftButtonText) == 0x000018, "Wrong size on BP_TextInputDialog_C_SetLeftButtonText");
static_assert(offsetof(BP_TextInputDialog_C_SetLeftButtonText, Text) == 0x000000, "Member 'BP_TextInputDialog_C_SetLeftButtonText::Text' has a wrong offset!");

// Function BP_TextInputDialog.BP_TextInputDialog_C.SetRightButtonText
// 0x0018 (0x0018 - 0x0000)
struct BP_TextInputDialog_C_SetRightButtonText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_TextInputDialog_C_SetRightButtonText) == 0x000008, "Wrong alignment on BP_TextInputDialog_C_SetRightButtonText");
static_assert(sizeof(BP_TextInputDialog_C_SetRightButtonText) == 0x000018, "Wrong size on BP_TextInputDialog_C_SetRightButtonText");
static_assert(offsetof(BP_TextInputDialog_C_SetRightButtonText, Text) == 0x000000, "Member 'BP_TextInputDialog_C_SetRightButtonText::Text' has a wrong offset!");

// Function BP_TextInputDialog.BP_TextInputDialog_C.SetTitleText
// 0x0018 (0x0018 - 0x0000)
struct BP_TextInputDialog_C_SetTitleText final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_TextInputDialog_C_SetTitleText) == 0x000008, "Wrong alignment on BP_TextInputDialog_C_SetTitleText");
static_assert(sizeof(BP_TextInputDialog_C_SetTitleText) == 0x000018, "Wrong size on BP_TextInputDialog_C_SetTitleText");
static_assert(offsetof(BP_TextInputDialog_C_SetTitleText, Title) == 0x000000, "Member 'BP_TextInputDialog_C_SetTitleText::Title' has a wrong offset!");

// Function BP_TextInputDialog.BP_TextInputDialog_C.GetEnteredText
// 0x0060 (0x0060 - 0x0000)
struct BP_TextInputDialog_C_GetEnteredText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0018(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue_1;                    // 0x0030(0x0018)()
	class FText                                   CallFunc_ValidateNormalText_OutputText;            // 0x0048(0x0018)()
};
static_assert(alignof(BP_TextInputDialog_C_GetEnteredText) == 0x000008, "Wrong alignment on BP_TextInputDialog_C_GetEnteredText");
static_assert(sizeof(BP_TextInputDialog_C_GetEnteredText) == 0x000060, "Wrong size on BP_TextInputDialog_C_GetEnteredText");
static_assert(offsetof(BP_TextInputDialog_C_GetEnteredText, Text) == 0x000000, "Member 'BP_TextInputDialog_C_GetEnteredText::Text' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_GetEnteredText, CallFunc_GetText_ReturnValue) == 0x000018, "Member 'BP_TextInputDialog_C_GetEnteredText::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_GetEnteredText, CallFunc_GetText_ReturnValue_1) == 0x000030, "Member 'BP_TextInputDialog_C_GetEnteredText::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_GetEnteredText, CallFunc_ValidateNormalText_OutputText) == 0x000048, "Member 'BP_TextInputDialog_C_GetEnteredText::CallFunc_ValidateNormalText_OutputText' has a wrong offset!");

// Function BP_TextInputDialog.BP_TextInputDialog_C.SetEnteredText
// 0x0028 (0x0028 - 0x0000)
struct BP_TextInputDialog_C_SetEnteredText final
{
public:
	class FText                                   EnteredText;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEditableTextBox*                       K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TextInputDialog_C_SetEnteredText) == 0x000008, "Wrong alignment on BP_TextInputDialog_C_SetEnteredText");
static_assert(sizeof(BP_TextInputDialog_C_SetEnteredText) == 0x000028, "Wrong size on BP_TextInputDialog_C_SetEnteredText");
static_assert(offsetof(BP_TextInputDialog_C_SetEnteredText, EnteredText) == 0x000000, "Member 'BP_TextInputDialog_C_SetEnteredText::EnteredText' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_SetEnteredText, Temp_bool_Variable) == 0x000018, "Member 'BP_TextInputDialog_C_SetEnteredText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_SetEnteredText, K2Node_Select_Default) == 0x000020, "Member 'BP_TextInputDialog_C_SetEnteredText::K2Node_Select_Default' has a wrong offset!");

// Function BP_TextInputDialog.BP_TextInputDialog_C.SetWaitingMode
// 0x0001 (0x0001 - 0x0000)
struct BP_TextInputDialog_C_SetWaitingMode final
{
public:
	bool                                          IsWaitingMode;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TextInputDialog_C_SetWaitingMode) == 0x000001, "Wrong alignment on BP_TextInputDialog_C_SetWaitingMode");
static_assert(sizeof(BP_TextInputDialog_C_SetWaitingMode) == 0x000001, "Wrong size on BP_TextInputDialog_C_SetWaitingMode");
static_assert(offsetof(BP_TextInputDialog_C_SetWaitingMode, IsWaitingMode) == 0x000000, "Member 'BP_TextInputDialog_C_SetWaitingMode::IsWaitingMode' has a wrong offset!");

// Function BP_TextInputDialog.BP_TextInputDialog_C.SetNormalTextLimit
// 0x0008 (0x0008 - 0x0000)
struct BP_TextInputDialog_C_SetNormalTextLimit final
{
public:
	int32                                         Limit;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TextInputDialog_C_SetNormalTextLimit) == 0x000004, "Wrong alignment on BP_TextInputDialog_C_SetNormalTextLimit");
static_assert(sizeof(BP_TextInputDialog_C_SetNormalTextLimit) == 0x000008, "Wrong size on BP_TextInputDialog_C_SetNormalTextLimit");
static_assert(offsetof(BP_TextInputDialog_C_SetNormalTextLimit, Limit) == 0x000000, "Member 'BP_TextInputDialog_C_SetNormalTextLimit::Limit' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_SetNormalTextLimit, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'BP_TextInputDialog_C_SetNormalTextLimit::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_TextInputDialog.BP_TextInputDialog_C.ValidateNormalText
// 0x0070 (0x0070 - 0x0000)
struct BP_TextInputDialog_C_ValidateNormalText final
{
public:
	class FText                                   InputText;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   OutputText;                                        // 0x0018(0x0018)(Parm, OutParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0058(0x0018)()
};
static_assert(alignof(BP_TextInputDialog_C_ValidateNormalText) == 0x000008, "Wrong alignment on BP_TextInputDialog_C_ValidateNormalText");
static_assert(sizeof(BP_TextInputDialog_C_ValidateNormalText) == 0x000070, "Wrong size on BP_TextInputDialog_C_ValidateNormalText");
static_assert(offsetof(BP_TextInputDialog_C_ValidateNormalText, InputText) == 0x000000, "Member 'BP_TextInputDialog_C_ValidateNormalText::InputText' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ValidateNormalText, OutputText) == 0x000018, "Member 'BP_TextInputDialog_C_ValidateNormalText::OutputText' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ValidateNormalText, CallFunc_Conv_TextToString_ReturnValue) == 0x000030, "Member 'BP_TextInputDialog_C_ValidateNormalText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ValidateNormalText, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'BP_TextInputDialog_C_ValidateNormalText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ValidateNormalText, CallFunc_GetSubstring_ReturnValue) == 0x000048, "Member 'BP_TextInputDialog_C_ValidateNormalText::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TextInputDialog_C_ValidateNormalText, CallFunc_Conv_StringToText_ReturnValue) == 0x000058, "Member 'BP_TextInputDialog_C_ValidateNormalText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

}

