#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Catapult2

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Mordhau_structs.hpp"


namespace SDK::Params
{

// Function BP_Catapult2.BP_Catapult2_C.ExecuteUbergraph_BP_Catapult2
// 0x00C0 (0x00C0 - 0x0000)
struct BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1; // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FKey                                   Temp_struct_Variable;                              // 0x0008(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetIsUsingController_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsUsingController_ReturnValue_1;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0028(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0048(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetDriver_ReturnValue;                    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Angle;                                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            K2Node_Event_Type;                                 // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SubType;                              // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Bone;                                 // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Point;                                // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Source;                               // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Agent;                                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2) == 0x000008, "Wrong alignment on BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2");
static_assert(sizeof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2) == 0x0000C0, "Wrong size on BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, EntryPoint) == 0x000000, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000005, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, Temp_bool_IsClosed_Variable) == 0x000006, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1) == 0x000007, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, Temp_struct_Variable) == 0x000008, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, CallFunc_GetIsUsingController_ReturnValue) == 0x000020, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::CallFunc_GetIsUsingController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, CallFunc_GetIsUsingController_ReturnValue_1) == 0x000021, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::CallFunc_GetIsUsingController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, K2Node_InputActionEvent_Key) == 0x000028, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, Temp_bool_Has_Been_Initd_Variable_1) == 0x000040, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, K2Node_InputActionEvent_Key_1) == 0x000048, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, Temp_bool_IsClosed_Variable_1) == 0x000060, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, CallFunc_GetDriver_ReturnValue) == 0x000068, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::CallFunc_GetDriver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, CallFunc_GetMaterial_ReturnValue) == 0x000078, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000080, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, K2Node_InputAxisEvent_AxisValue_1) == 0x000088, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, K2Node_InputAxisEvent_AxisValue) == 0x00008C, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, K2Node_Event_Angle) == 0x000090, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::K2Node_Event_Angle' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, K2Node_Event_Type) == 0x000094, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, K2Node_Event_SubType) == 0x000095, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::K2Node_Event_SubType' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, K2Node_Event_Bone) == 0x000098, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::K2Node_Event_Bone' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, K2Node_Event_Point) == 0x0000A0, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::K2Node_Event_Point' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, K2Node_Event_Source) == 0x0000B0, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::K2Node_Event_Source' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2, K2Node_Event_Agent) == 0x0000B8, "Member 'BP_Catapult2_C_ExecuteUbergraph_BP_Catapult2::K2Node_Event_Agent' has a wrong offset!");

// Function BP_Catapult2.BP_Catapult2_C.OnDied
// 0x0030 (0x0030 - 0x0000)
struct BP_Catapult2_C_OnDied final
{
public:
	float                                         Angle;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SubType;                                           // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   bone;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Agent;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Catapult2_C_OnDied) == 0x000008, "Wrong alignment on BP_Catapult2_C_OnDied");
static_assert(sizeof(BP_Catapult2_C_OnDied) == 0x000030, "Wrong size on BP_Catapult2_C_OnDied");
static_assert(offsetof(BP_Catapult2_C_OnDied, Angle) == 0x000000, "Member 'BP_Catapult2_C_OnDied::Angle' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_OnDied, Type) == 0x000004, "Member 'BP_Catapult2_C_OnDied::Type' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_OnDied, SubType) == 0x000005, "Member 'BP_Catapult2_C_OnDied::SubType' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_OnDied, bone) == 0x000008, "Member 'BP_Catapult2_C_OnDied::bone' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_OnDied, Point) == 0x000010, "Member 'BP_Catapult2_C_OnDied::Point' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_OnDied, Source) == 0x000020, "Member 'BP_Catapult2_C_OnDied::Source' has a wrong offset!");
static_assert(offsetof(BP_Catapult2_C_OnDied, Agent) == 0x000028, "Member 'BP_Catapult2_C_OnDied::Agent' has a wrong offset!");

// Function BP_Catapult2.BP_Catapult2_C.InpAxisEvt_Look Up_K2Node_InputAxisEvent_1
// 0x0004 (0x0004 - 0x0000)
struct BP_Catapult2_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_1 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Catapult2_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_1) == 0x000004, "Wrong alignment on BP_Catapult2_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_1");
static_assert(sizeof(BP_Catapult2_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_1) == 0x000004, "Wrong size on BP_Catapult2_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_1");
static_assert(offsetof(BP_Catapult2_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_1, AxisValue) == 0x000000, "Member 'BP_Catapult2_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_1::AxisValue' has a wrong offset!");

// Function BP_Catapult2.BP_Catapult2_C.InpAxisEvt_Turn Right_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct BP_Catapult2_C_InpAxisEvt_Turn_Right_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Catapult2_C_InpAxisEvt_Turn_Right_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on BP_Catapult2_C_InpAxisEvt_Turn_Right_K2Node_InputAxisEvent_0");
static_assert(sizeof(BP_Catapult2_C_InpAxisEvt_Turn_Right_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on BP_Catapult2_C_InpAxisEvt_Turn_Right_K2Node_InputAxisEvent_0");
static_assert(offsetof(BP_Catapult2_C_InpAxisEvt_Turn_Right_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'BP_Catapult2_C_InpAxisEvt_Turn_Right_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function BP_Catapult2.BP_Catapult2_C.InpActEvt_Cycle Camera_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_Catapult2_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Catapult2_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_Catapult2_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_Catapult2_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_Catapult2_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_Catapult2_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_Catapult2_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_Catapult2.BP_Catapult2_C.InpActEvt_Cycle Camera_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_Catapult2_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Catapult2_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_Catapult2_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_Catapult2_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_Catapult2_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_Catapult2_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_Catapult2_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_Catapult2.BP_Catapult2_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct BP_Catapult2_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Catapult2_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_Catapult2_C_UserConstructionScript");
static_assert(sizeof(BP_Catapult2_C_UserConstructionScript) == 0x000001, "Wrong size on BP_Catapult2_C_UserConstructionScript");
static_assert(offsetof(BP_Catapult2_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000000, "Member 'BP_Catapult2_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

}

