#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordePlayerEntryVertical

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "MordhauOnlineSubsystem_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_HordePlayerEntryVertical.BP_HordePlayerEntryVertical_C.Update
// 0x01E0 (0x01E0 - 0x0000)
struct BP_HordePlayerEntryVertical_C_Update final
{
public:
	class AMordhauPlayerState*                    Mordhau_Player_State_0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayFabPlayer                         CallFunc_GetPlayFabPlayer_ReturnValue;             // 0x0010(0x0060)(ConstParm, HasGetValueTypeHash)
	class ABP_MordhauPlayerState_C*               K2Node_DynamicCast_AsBP_Mordhau_Player_State;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B8(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0118(0x0018)()
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0138(0x0040)(HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0180(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0190(0x0018)()
	float                                         CallFunc_GetTimeSeconds_ReturnValue_2;             // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01B0(0x0018)()
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetLastPossessedMordhauCharacter_ReturnValue; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue;             // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerEntryVertical_C_Update) == 0x000008, "Wrong alignment on BP_HordePlayerEntryVertical_C_Update");
static_assert(sizeof(BP_HordePlayerEntryVertical_C_Update) == 0x0001E0, "Wrong size on BP_HordePlayerEntryVertical_C_Update");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, Mordhau_Player_State_0) == 0x000000, "Member 'BP_HordePlayerEntryVertical_C_Update::Mordhau_Player_State_0' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, Temp_bool_Has_Been_Initd_Variable) == 0x000008, "Member 'BP_HordePlayerEntryVertical_C_Update::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, CallFunc_GetPlayFabPlayer_ReturnValue) == 0x000010, "Member 'BP_HordePlayerEntryVertical_C_Update::CallFunc_GetPlayFabPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, K2Node_DynamicCast_AsBP_Mordhau_Player_State) == 0x000070, "Member 'BP_HordePlayerEntryVertical_C_Update::K2Node_DynamicCast_AsBP_Mordhau_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_HordePlayerEntryVertical_C_Update::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x000080, "Member 'BP_HordePlayerEntryVertical_C_Update::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_HordePlayerEntryVertical_C_Update::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, CallFunc_GetPlayerName_ReturnValue) == 0x000090, "Member 'BP_HordePlayerEntryVertical_C_Update::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'BP_HordePlayerEntryVertical_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, CallFunc_GetTimeSeconds_ReturnValue) == 0x0000A4, "Member 'BP_HordePlayerEntryVertical_C_Update::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x0000A8, "Member 'BP_HordePlayerEntryVertical_C_Update::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000AC, "Member 'BP_HordePlayerEntryVertical_C_Update::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, CallFunc_FCeil_ReturnValue) == 0x0000B0, "Member 'BP_HordePlayerEntryVertical_C_Update::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, K2Node_MakeStruct_FormatArgumentData) == 0x0000B8, "Member 'BP_HordePlayerEntryVertical_C_Update::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000F8, "Member 'BP_HordePlayerEntryVertical_C_Update::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, K2Node_MakeArray_Array) == 0x000100, "Member 'BP_HordePlayerEntryVertical_C_Update::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000110, "Member 'BP_HordePlayerEntryVertical_C_Update::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, CallFunc_Format_ReturnValue) == 0x000118, "Member 'BP_HordePlayerEntryVertical_C_Update::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, CallFunc_FCeil_ReturnValue_1) == 0x000130, "Member 'BP_HordePlayerEntryVertical_C_Update::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, K2Node_MakeStruct_FormatArgumentData_1) == 0x000138, "Member 'BP_HordePlayerEntryVertical_C_Update::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, Temp_bool_IsClosed_Variable) == 0x000178, "Member 'BP_HordePlayerEntryVertical_C_Update::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, K2Node_MakeArray_Array_1) == 0x000180, "Member 'BP_HordePlayerEntryVertical_C_Update::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, CallFunc_Format_ReturnValue_1) == 0x000190, "Member 'BP_HordePlayerEntryVertical_C_Update::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, CallFunc_GetTimeSeconds_ReturnValue_2) == 0x0001A8, "Member 'BP_HordePlayerEntryVertical_C_Update::CallFunc_GetTimeSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, CallFunc_Conv_StringToText_ReturnValue) == 0x0001B0, "Member 'BP_HordePlayerEntryVertical_C_Update::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0001C8, "Member 'BP_HordePlayerEntryVertical_C_Update::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, CallFunc_GetLastPossessedMordhauCharacter_ReturnValue) == 0x0001D0, "Member 'BP_HordePlayerEntryVertical_C_Update::CallFunc_GetLastPossessedMordhauCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, CallFunc_IsValid_ReturnValue_1) == 0x0001D8, "Member 'BP_HordePlayerEntryVertical_C_Update::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Update, CallFunc_Conv_ByteToFloat_ReturnValue) == 0x0001DC, "Member 'BP_HordePlayerEntryVertical_C_Update::CallFunc_Conv_ByteToFloat_ReturnValue' has a wrong offset!");

// Function BP_HordePlayerEntryVertical.BP_HordePlayerEntryVertical_C.GetVisibility_0
// 0x0006 (0x0006 - 0x0000)
struct BP_HordePlayerEntryVertical_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerEntryVertical_C_GetVisibility_0) == 0x000001, "Wrong alignment on BP_HordePlayerEntryVertical_C_GetVisibility_0");
static_assert(sizeof(BP_HordePlayerEntryVertical_C_GetVisibility_0) == 0x000006, "Wrong size on BP_HordePlayerEntryVertical_C_GetVisibility_0");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_HordePlayerEntryVertical_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_HordePlayerEntryVertical_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_HordePlayerEntryVertical_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_HordePlayerEntryVertical_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetVisibility_0, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_HordePlayerEntryVertical_C_GetVisibility_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetVisibility_0, K2Node_Select_Default) == 0x000005, "Member 'BP_HordePlayerEntryVertical_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_HordePlayerEntryVertical.BP_HordePlayerEntryVertical_C.GetText_0
// 0x0030 (0x0030 - 0x0000)
struct BP_HordePlayerEntryVertical_C_GetText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
};
static_assert(alignof(BP_HordePlayerEntryVertical_C_GetText_0) == 0x000008, "Wrong alignment on BP_HordePlayerEntryVertical_C_GetText_0");
static_assert(sizeof(BP_HordePlayerEntryVertical_C_GetText_0) == 0x000030, "Wrong size on BP_HordePlayerEntryVertical_C_GetText_0");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetText_0, ReturnValue) == 0x000000, "Member 'BP_HordePlayerEntryVertical_C_GetText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetText_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'BP_HordePlayerEntryVertical_C_GetText_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function BP_HordePlayerEntryVertical.BP_HordePlayerEntryVertical_C.GetVisibility_VisibleWhenDead
// 0x0006 (0x0006 - 0x0000)
struct BP_HordePlayerEntryVertical_C_GetVisibility_VisibleWhenDead final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerEntryVertical_C_GetVisibility_VisibleWhenDead) == 0x000001, "Wrong alignment on BP_HordePlayerEntryVertical_C_GetVisibility_VisibleWhenDead");
static_assert(sizeof(BP_HordePlayerEntryVertical_C_GetVisibility_VisibleWhenDead) == 0x000006, "Wrong size on BP_HordePlayerEntryVertical_C_GetVisibility_VisibleWhenDead");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetVisibility_VisibleWhenDead, ReturnValue) == 0x000000, "Member 'BP_HordePlayerEntryVertical_C_GetVisibility_VisibleWhenDead::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetVisibility_VisibleWhenDead, Temp_bool_Variable) == 0x000001, "Member 'BP_HordePlayerEntryVertical_C_GetVisibility_VisibleWhenDead::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetVisibility_VisibleWhenDead, Temp_byte_Variable) == 0x000002, "Member 'BP_HordePlayerEntryVertical_C_GetVisibility_VisibleWhenDead::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetVisibility_VisibleWhenDead, Temp_byte_Variable_1) == 0x000003, "Member 'BP_HordePlayerEntryVertical_C_GetVisibility_VisibleWhenDead::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetVisibility_VisibleWhenDead, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_HordePlayerEntryVertical_C_GetVisibility_VisibleWhenDead::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetVisibility_VisibleWhenDead, K2Node_Select_Default) == 0x000005, "Member 'BP_HordePlayerEntryVertical_C_GetVisibility_VisibleWhenDead::K2Node_Select_Default' has a wrong offset!");

// Function BP_HordePlayerEntryVertical.BP_HordePlayerEntryVertical_C.Get_TextBlock_hp_Text_0
// 0x0038 (0x0038 - 0x0000)
struct BP_HordePlayerEntryVertical_C_Get_TextBlock_hp_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
};
static_assert(alignof(BP_HordePlayerEntryVertical_C_Get_TextBlock_hp_Text_0) == 0x000008, "Wrong alignment on BP_HordePlayerEntryVertical_C_Get_TextBlock_hp_Text_0");
static_assert(sizeof(BP_HordePlayerEntryVertical_C_Get_TextBlock_hp_Text_0) == 0x000038, "Wrong size on BP_HordePlayerEntryVertical_C_Get_TextBlock_hp_Text_0");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Get_TextBlock_hp_Text_0, ReturnValue) == 0x000000, "Member 'BP_HordePlayerEntryVertical_C_Get_TextBlock_hp_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Get_TextBlock_hp_Text_0, CallFunc_FCeil_ReturnValue) == 0x000018, "Member 'BP_HordePlayerEntryVertical_C_Get_TextBlock_hp_Text_0::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_Get_TextBlock_hp_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'BP_HordePlayerEntryVertical_C_Get_TextBlock_hp_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function BP_HordePlayerEntryVertical.BP_HordePlayerEntryVertical_C.GetVisibility_CollapsedWhenDead
// 0x0005 (0x0005 - 0x0000)
struct BP_HordePlayerEntryVertical_C_GetVisibility_CollapsedWhenDead final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerEntryVertical_C_GetVisibility_CollapsedWhenDead) == 0x000001, "Wrong alignment on BP_HordePlayerEntryVertical_C_GetVisibility_CollapsedWhenDead");
static_assert(sizeof(BP_HordePlayerEntryVertical_C_GetVisibility_CollapsedWhenDead) == 0x000005, "Wrong size on BP_HordePlayerEntryVertical_C_GetVisibility_CollapsedWhenDead");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetVisibility_CollapsedWhenDead, ReturnValue) == 0x000000, "Member 'BP_HordePlayerEntryVertical_C_GetVisibility_CollapsedWhenDead::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetVisibility_CollapsedWhenDead, Temp_bool_Variable) == 0x000001, "Member 'BP_HordePlayerEntryVertical_C_GetVisibility_CollapsedWhenDead::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetVisibility_CollapsedWhenDead, Temp_byte_Variable) == 0x000002, "Member 'BP_HordePlayerEntryVertical_C_GetVisibility_CollapsedWhenDead::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetVisibility_CollapsedWhenDead, Temp_byte_Variable_1) == 0x000003, "Member 'BP_HordePlayerEntryVertical_C_GetVisibility_CollapsedWhenDead::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerEntryVertical_C_GetVisibility_CollapsedWhenDead, K2Node_Select_Default) == 0x000004, "Member 'BP_HordePlayerEntryVertical_C_GetVisibility_CollapsedWhenDead::K2Node_Select_Default' has a wrong offset!");

}

