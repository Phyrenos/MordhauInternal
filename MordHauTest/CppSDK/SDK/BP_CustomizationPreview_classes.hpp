#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CustomizationPreview

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_CustomizationPreview.BP_CustomizationPreview_C
// 0x00F0 (0x0350 - 0x0260)
class UBP_CustomizationPreview_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UImage*                                 Image_481;                                         // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(float DeltaDistance)> OnDrag;                                            // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(float ScrollDelta)> OnMouseWheelScrolling;                             // 0x0280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(const struct FVector2D& Movement)> OnMouseAxis;                                       // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnLMBPressed;                                      // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnLMBReleased;                                     // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnRMBPressed;                                      // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnRMBReleased;                                     // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnMMBPressed;                                      // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnMMBReleased;                                     // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FVector2D                              StoredMousePosition;                               // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CatchLMB;                                          // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CatchMMB;                                          // 0x0309(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A[0x6];                                      // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FKey& KeyName)> OnKeyPressed;                                      // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          HasMouseOver;                                      // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MoveRecursionStop;                                 // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Show_Tooltip;                                      // 0x0322(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_323[0x5];                                      // 0x0323(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Tooltip_C*                          Tooltip;                                           // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauHUD_C*                       As_BP_Mordhau_HUD;                                 // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          ShouldRefreshFocus;                                // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FKey& Key)> OnRepeatKeyPressed;                                // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_BP_CustomizationPreview(int32 EntryPoint);
	void OnFocusLost(const struct FFocusEvent& InFocusEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void Unbind_Events();
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void HideMouse();
	void UnhideMouse();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CustomizationPreview_C">();
	}
	static class UBP_CustomizationPreview_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CustomizationPreview_C>();
	}
};
static_assert(alignof(UBP_CustomizationPreview_C) == 0x000008, "Wrong alignment on UBP_CustomizationPreview_C");
static_assert(sizeof(UBP_CustomizationPreview_C) == 0x000350, "Wrong size on UBP_CustomizationPreview_C");
static_assert(offsetof(UBP_CustomizationPreview_C, UberGraphFrame) == 0x000260, "Member 'UBP_CustomizationPreview_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, Image_481) == 0x000268, "Member 'UBP_CustomizationPreview_C::Image_481' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, OnDrag) == 0x000270, "Member 'UBP_CustomizationPreview_C::OnDrag' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, OnMouseWheelScrolling) == 0x000280, "Member 'UBP_CustomizationPreview_C::OnMouseWheelScrolling' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, OnMouseAxis) == 0x000290, "Member 'UBP_CustomizationPreview_C::OnMouseAxis' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, OnLMBPressed) == 0x0002A0, "Member 'UBP_CustomizationPreview_C::OnLMBPressed' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, OnLMBReleased) == 0x0002B0, "Member 'UBP_CustomizationPreview_C::OnLMBReleased' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, OnRMBPressed) == 0x0002C0, "Member 'UBP_CustomizationPreview_C::OnRMBPressed' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, OnRMBReleased) == 0x0002D0, "Member 'UBP_CustomizationPreview_C::OnRMBReleased' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, OnMMBPressed) == 0x0002E0, "Member 'UBP_CustomizationPreview_C::OnMMBPressed' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, OnMMBReleased) == 0x0002F0, "Member 'UBP_CustomizationPreview_C::OnMMBReleased' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, StoredMousePosition) == 0x000300, "Member 'UBP_CustomizationPreview_C::StoredMousePosition' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, CatchLMB) == 0x000308, "Member 'UBP_CustomizationPreview_C::CatchLMB' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, CatchMMB) == 0x000309, "Member 'UBP_CustomizationPreview_C::CatchMMB' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, OnKeyPressed) == 0x000310, "Member 'UBP_CustomizationPreview_C::OnKeyPressed' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, HasMouseOver) == 0x000320, "Member 'UBP_CustomizationPreview_C::HasMouseOver' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, MoveRecursionStop) == 0x000321, "Member 'UBP_CustomizationPreview_C::MoveRecursionStop' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, Show_Tooltip) == 0x000322, "Member 'UBP_CustomizationPreview_C::Show_Tooltip' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, Tooltip) == 0x000328, "Member 'UBP_CustomizationPreview_C::Tooltip' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, As_BP_Mordhau_HUD) == 0x000330, "Member 'UBP_CustomizationPreview_C::As_BP_Mordhau_HUD' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, ShouldRefreshFocus) == 0x000338, "Member 'UBP_CustomizationPreview_C::ShouldRefreshFocus' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationPreview_C, OnRepeatKeyPressed) == 0x000340, "Member 'UBP_CustomizationPreview_C::OnRepeatKeyPressed' has a wrong offset!");

}

