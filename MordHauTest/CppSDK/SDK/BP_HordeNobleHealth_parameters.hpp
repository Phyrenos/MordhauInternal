#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordeNobleHealth

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_HordeNobleHealth.BP_HordeNobleHealth_C.Update Health
// 0x02B8 (0x02B8 - 0x0000)
struct BP_HordeNobleHealth_C_Update_Health final
{
public:
	float                                         New_Health;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_Get_HP_Color_Color;                       // 0x0008(0x0028)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0080(0x0088)(UObjectWrapper)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProgressBarStyle                      K2Node_MakeStruct_ProgressBarStyle;                // 0x0110(0x01A0)(UObjectWrapper)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeNobleHealth_C_Update_Health) == 0x000008, "Wrong alignment on BP_HordeNobleHealth_C_Update_Health");
static_assert(sizeof(BP_HordeNobleHealth_C_Update_Health) == 0x0002B8, "Wrong size on BP_HordeNobleHealth_C_Update_Health");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, New_Health) == 0x000000, "Member 'BP_HordeNobleHealth_C_Update_Health::New_Health' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, CallFunc_Get_HP_Color_Color) == 0x000008, "Member 'BP_HordeNobleHealth_C_Update_Health::CallFunc_Get_HP_Color_Color' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_HordeNobleHealth_C_Update_Health::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, CallFunc_FCeil_ReturnValue) == 0x000034, "Member 'BP_HordeNobleHealth_C_Update_Health::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'BP_HordeNobleHealth_C_Update_Health::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, CallFunc_PlayAnimation_ReturnValue) == 0x000050, "Member 'BP_HordeNobleHealth_C_Update_Health::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000058, "Member 'BP_HordeNobleHealth_C_Update_Health::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00005C, "Member 'BP_HordeNobleHealth_C_Update_Health::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, CallFunc_FCeil_ReturnValue_1) == 0x000060, "Member 'BP_HordeNobleHealth_C_Update_Health::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, CallFunc_Not_PreBool_ReturnValue) == 0x000064, "Member 'BP_HordeNobleHealth_C_Update_Health::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, CallFunc_Greater_IntInt_ReturnValue) == 0x000065, "Member 'BP_HordeNobleHealth_C_Update_Health::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000066, "Member 'BP_HordeNobleHealth_C_Update_Health::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, CallFunc_BooleanAND_ReturnValue) == 0x000067, "Member 'BP_HordeNobleHealth_C_Update_Health::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, CallFunc_BooleanAND_ReturnValue_1) == 0x000068, "Member 'BP_HordeNobleHealth_C_Update_Health::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, CallFunc_PlayAnimation_ReturnValue_1) == 0x000070, "Member 'BP_HordeNobleHealth_C_Update_Health::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000078, "Member 'BP_HordeNobleHealth_C_Update_Health::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, K2Node_MakeStruct_SlateBrush) == 0x000080, "Member 'BP_HordeNobleHealth_C_Update_Health::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, CallFunc_Not_PreBool_ReturnValue_1) == 0x000108, "Member 'BP_HordeNobleHealth_C_Update_Health::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, K2Node_MakeStruct_ProgressBarStyle) == 0x000110, "Member 'BP_HordeNobleHealth_C_Update_Health::K2Node_MakeStruct_ProgressBarStyle' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, CallFunc_Less_FloatFloat_ReturnValue) == 0x0002B0, "Member 'BP_HordeNobleHealth_C_Update_Health::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Update_Health, CallFunc_BooleanAND_ReturnValue_2) == 0x0002B1, "Member 'BP_HordeNobleHealth_C_Update_Health::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_HordeNobleHealth.BP_HordeNobleHealth_C.Get HP Color
// 0x0088 (0x0088 - 0x0000)
struct BP_HordeNobleHealth_C_Get_HP_Color final
{
public:
	struct FSlateColor                            Color;                                             // 0x0000(0x0028)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0038(0x0028)()
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x0060(0x0028)()
};
static_assert(alignof(BP_HordeNobleHealth_C_Get_HP_Color) == 0x000008, "Wrong alignment on BP_HordeNobleHealth_C_Get_HP_Color");
static_assert(sizeof(BP_HordeNobleHealth_C_Get_HP_Color) == 0x000088, "Wrong size on BP_HordeNobleHealth_C_Get_HP_Color");
static_assert(offsetof(BP_HordeNobleHealth_C_Get_HP_Color, Color) == 0x000000, "Member 'BP_HordeNobleHealth_C_Get_HP_Color::Color' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Get_HP_Color, Temp_bool_Variable) == 0x000028, "Member 'BP_HordeNobleHealth_C_Get_HP_Color::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Get_HP_Color, Temp_bool_Variable_1) == 0x000029, "Member 'BP_HordeNobleHealth_C_Get_HP_Color::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Get_HP_Color, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_HordeNobleHealth_C_Get_HP_Color::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Get_HP_Color, CallFunc_FCeil_ReturnValue) == 0x000030, "Member 'BP_HordeNobleHealth_C_Get_HP_Color::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Get_HP_Color, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_HordeNobleHealth_C_Get_HP_Color::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Get_HP_Color, CallFunc_Greater_IntInt_ReturnValue) == 0x000035, "Member 'BP_HordeNobleHealth_C_Get_HP_Color::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Get_HP_Color, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000036, "Member 'BP_HordeNobleHealth_C_Get_HP_Color::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Get_HP_Color, CallFunc_BooleanAND_ReturnValue) == 0x000037, "Member 'BP_HordeNobleHealth_C_Get_HP_Color::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Get_HP_Color, K2Node_Select_Default) == 0x000038, "Member 'BP_HordeNobleHealth_C_Get_HP_Color::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_HordeNobleHealth_C_Get_HP_Color, K2Node_Select_Default_1) == 0x000060, "Member 'BP_HordeNobleHealth_C_Get_HP_Color::K2Node_Select_Default_1' has a wrong offset!");

}

