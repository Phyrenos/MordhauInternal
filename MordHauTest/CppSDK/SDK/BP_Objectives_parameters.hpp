#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Objectives

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_Objectives.BP_Objectives_C.ExecuteUbergraph_BP_Objectives
// 0x00A0 (0x00A0 - 0x0000)
struct BP_Objectives_C_ExecuteUbergraph_BP_Objectives final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauHUD*                            CallFunc_GetMordhauHUD_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Description;                    // 0x0038(0x0018)()
	class FText                                   K2Node_CustomEvent_Header;                         // 0x0050(0x0018)()
	class UTexture2D*                             K2Node_CustomEvent_Icon;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_CustomEvent_List;                           // 0x0070(0x0010)(ConstParm, ReferenceParm)
	TArray<bool>                                  K2Node_CustomEvent_Completed;                      // 0x0080(0x0010)(ConstParm, ReferenceParm)
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowObjectives_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Objectives_C_ExecuteUbergraph_BP_Objectives) == 0x000008, "Wrong alignment on BP_Objectives_C_ExecuteUbergraph_BP_Objectives");
static_assert(sizeof(BP_Objectives_C_ExecuteUbergraph_BP_Objectives) == 0x0000A0, "Wrong size on BP_Objectives_C_ExecuteUbergraph_BP_Objectives");
static_assert(offsetof(BP_Objectives_C_ExecuteUbergraph_BP_Objectives, EntryPoint) == 0x000000, "Member 'BP_Objectives_C_ExecuteUbergraph_BP_Objectives::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_ExecuteUbergraph_BP_Objectives, CallFunc_GetMordhauHUD_ReturnValue) == 0x000008, "Member 'BP_Objectives_C_ExecuteUbergraph_BP_Objectives::CallFunc_GetMordhauHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_ExecuteUbergraph_BP_Objectives, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_Objectives_C_ExecuteUbergraph_BP_Objectives::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_ExecuteUbergraph_BP_Objectives, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_Objectives_C_ExecuteUbergraph_BP_Objectives::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_ExecuteUbergraph_BP_Objectives, CallFunc_PlayAnimation_ReturnValue) == 0x000028, "Member 'BP_Objectives_C_ExecuteUbergraph_BP_Objectives::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_ExecuteUbergraph_BP_Objectives, CallFunc_PlayAnimation_ReturnValue_1) == 0x000030, "Member 'BP_Objectives_C_ExecuteUbergraph_BP_Objectives::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_ExecuteUbergraph_BP_Objectives, K2Node_CustomEvent_Description) == 0x000038, "Member 'BP_Objectives_C_ExecuteUbergraph_BP_Objectives::K2Node_CustomEvent_Description' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_ExecuteUbergraph_BP_Objectives, K2Node_CustomEvent_Header) == 0x000050, "Member 'BP_Objectives_C_ExecuteUbergraph_BP_Objectives::K2Node_CustomEvent_Header' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_ExecuteUbergraph_BP_Objectives, K2Node_CustomEvent_Icon) == 0x000068, "Member 'BP_Objectives_C_ExecuteUbergraph_BP_Objectives::K2Node_CustomEvent_Icon' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_ExecuteUbergraph_BP_Objectives, K2Node_CustomEvent_List) == 0x000070, "Member 'BP_Objectives_C_ExecuteUbergraph_BP_Objectives::K2Node_CustomEvent_List' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_ExecuteUbergraph_BP_Objectives, K2Node_CustomEvent_Completed) == 0x000080, "Member 'BP_Objectives_C_ExecuteUbergraph_BP_Objectives::K2Node_CustomEvent_Completed' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_ExecuteUbergraph_BP_Objectives, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000090, "Member 'BP_Objectives_C_ExecuteUbergraph_BP_Objectives::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_ExecuteUbergraph_BP_Objectives, CallFunc_ShouldShowObjectives_ReturnValue) == 0x000098, "Member 'BP_Objectives_C_ExecuteUbergraph_BP_Objectives::CallFunc_ShouldShowObjectives_ReturnValue' has a wrong offset!");

// Function BP_Objectives.BP_Objectives_C.SetSubObjectives
// 0x0020 (0x0020 - 0x0000)
struct BP_Objectives_C_SetSubObjectives final
{
public:
	TArray<class FText>                           List;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<bool>                                  Completed;                                         // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Objectives_C_SetSubObjectives) == 0x000008, "Wrong alignment on BP_Objectives_C_SetSubObjectives");
static_assert(sizeof(BP_Objectives_C_SetSubObjectives) == 0x000020, "Wrong size on BP_Objectives_C_SetSubObjectives");
static_assert(offsetof(BP_Objectives_C_SetSubObjectives, List) == 0x000000, "Member 'BP_Objectives_C_SetSubObjectives::List' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_SetSubObjectives, Completed) == 0x000010, "Member 'BP_Objectives_C_SetSubObjectives::Completed' has a wrong offset!");

// Function BP_Objectives.BP_Objectives_C.Show
// 0x0038 (0x0038 - 0x0000)
struct BP_Objectives_C_Show final
{
public:
	class FText                                   Description;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Header;                                            // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTexture2D*                             Icon_0;                                            // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Objectives_C_Show) == 0x000008, "Wrong alignment on BP_Objectives_C_Show");
static_assert(sizeof(BP_Objectives_C_Show) == 0x000038, "Wrong size on BP_Objectives_C_Show");
static_assert(offsetof(BP_Objectives_C_Show, Description) == 0x000000, "Member 'BP_Objectives_C_Show::Description' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Show, Header) == 0x000018, "Member 'BP_Objectives_C_Show::Header' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Show, Icon_0) == 0x000030, "Member 'BP_Objectives_C_Show::Icon_0' has a wrong offset!");

// Function BP_Objectives.BP_Objectives_C.Update Team Image
// 0x0130 (0x0130 - 0x0000)
struct BP_Objectives_C_Update_Team_Image final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauPlayerState_C*               K2Node_DynamicCast_AsBP_Mordhau_Player_State;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_Select_Default;                             // 0x0020(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00A8(0x0088)(UObjectWrapper)
};
static_assert(alignof(BP_Objectives_C_Update_Team_Image) == 0x000008, "Wrong alignment on BP_Objectives_C_Update_Team_Image");
static_assert(sizeof(BP_Objectives_C_Update_Team_Image) == 0x000130, "Wrong size on BP_Objectives_C_Update_Team_Image");
static_assert(offsetof(BP_Objectives_C_Update_Team_Image, Temp_int_Variable) == 0x000000, "Member 'BP_Objectives_C_Update_Team_Image::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Update_Team_Image, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_Objectives_C_Update_Team_Image::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Update_Team_Image, K2Node_DynamicCast_AsBP_Mordhau_Player_State) == 0x000010, "Member 'BP_Objectives_C_Update_Team_Image::K2Node_DynamicCast_AsBP_Mordhau_Player_State' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Update_Team_Image, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Objectives_C_Update_Team_Image::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Update_Team_Image, K2Node_Select_Default) == 0x000020, "Member 'BP_Objectives_C_Update_Team_Image::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Update_Team_Image, K2Node_MakeStruct_SlateBrush) == 0x0000A8, "Member 'BP_Objectives_C_Update_Team_Image::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function BP_Objectives.BP_Objectives_C.Get_ObjectiveBorder_Visibility_0
// 0x0030 (0x0030 - 0x0000)
struct BP_Objectives_C_Get_ObjectiveBorder_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowObjectives_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MordhauPlayerState_C*               K2Node_DynamicCast_AsBP_Mordhau_Player_State;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Objectives_C_Get_ObjectiveBorder_Visibility_0) == 0x000008, "Wrong alignment on BP_Objectives_C_Get_ObjectiveBorder_Visibility_0");
static_assert(sizeof(BP_Objectives_C_Get_ObjectiveBorder_Visibility_0) == 0x000030, "Wrong size on BP_Objectives_C_Get_ObjectiveBorder_Visibility_0");
static_assert(offsetof(BP_Objectives_C_Get_ObjectiveBorder_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_Objectives_C_Get_ObjectiveBorder_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Get_ObjectiveBorder_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_Objectives_C_Get_ObjectiveBorder_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Get_ObjectiveBorder_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_Objectives_C_Get_ObjectiveBorder_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Get_ObjectiveBorder_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_Objectives_C_Get_ObjectiveBorder_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Get_ObjectiveBorder_Visibility_0, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000008, "Member 'BP_Objectives_C_Get_ObjectiveBorder_Visibility_0::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Get_ObjectiveBorder_Visibility_0, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_Objectives_C_Get_ObjectiveBorder_Visibility_0::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Get_ObjectiveBorder_Visibility_0, CallFunc_ShouldShowObjectives_ReturnValue) == 0x000018, "Member 'BP_Objectives_C_Get_ObjectiveBorder_Visibility_0::CallFunc_ShouldShowObjectives_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Get_ObjectiveBorder_Visibility_0, K2Node_DynamicCast_AsBP_Mordhau_Player_State) == 0x000020, "Member 'BP_Objectives_C_Get_ObjectiveBorder_Visibility_0::K2Node_DynamicCast_AsBP_Mordhau_Player_State' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Get_ObjectiveBorder_Visibility_0, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Objectives_C_Get_ObjectiveBorder_Visibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Get_ObjectiveBorder_Visibility_0, K2Node_Select_Default) == 0x000029, "Member 'BP_Objectives_C_Get_ObjectiveBorder_Visibility_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Get_ObjectiveBorder_Visibility_0, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002A, "Member 'BP_Objectives_C_Get_ObjectiveBorder_Visibility_0::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Objectives.BP_Objectives_C.Get_TeamImage_Visibility_0
// 0x0006 (0x0006 - 0x0000)
struct BP_Objectives_C_Get_TeamImage_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Objectives_C_Get_TeamImage_Visibility_0) == 0x000001, "Wrong alignment on BP_Objectives_C_Get_TeamImage_Visibility_0");
static_assert(sizeof(BP_Objectives_C_Get_TeamImage_Visibility_0) == 0x000006, "Wrong size on BP_Objectives_C_Get_TeamImage_Visibility_0");
static_assert(offsetof(BP_Objectives_C_Get_TeamImage_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_Objectives_C_Get_TeamImage_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Get_TeamImage_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_Objectives_C_Get_TeamImage_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Get_TeamImage_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_Objectives_C_Get_TeamImage_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Get_TeamImage_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_Objectives_C_Get_TeamImage_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Get_TeamImage_Visibility_0, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_Objectives_C_Get_TeamImage_Visibility_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objectives_C_Get_TeamImage_Visibility_0, K2Node_Select_Default) == 0x000005, "Member 'BP_Objectives_C_Get_TeamImage_Visibility_0::K2Node_Select_Default' has a wrong offset!");

}

