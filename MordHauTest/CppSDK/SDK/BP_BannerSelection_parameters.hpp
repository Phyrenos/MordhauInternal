#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BannerSelection

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "MordhauOnlineSubsystem_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_BannerSelection.BP_BannerSelection_C.ExecuteUbergraph_BP_BannerSelection
// 0x0050 (0x0050 - 0x0000)
struct BP_BannerSelection_C_ExecuteUbergraph_BP_BannerSelection final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauSingleton*                      CallFunc_GetMordhauSingleton_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BannerSelection_C_ExecuteUbergraph_BP_BannerSelection) == 0x000008, "Wrong alignment on BP_BannerSelection_C_ExecuteUbergraph_BP_BannerSelection");
static_assert(sizeof(BP_BannerSelection_C_ExecuteUbergraph_BP_BannerSelection) == 0x000050, "Wrong size on BP_BannerSelection_C_ExecuteUbergraph_BP_BannerSelection");
static_assert(offsetof(BP_BannerSelection_C_ExecuteUbergraph_BP_BannerSelection, EntryPoint) == 0x000000, "Member 'BP_BannerSelection_C_ExecuteUbergraph_BP_BannerSelection::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_ExecuteUbergraph_BP_BannerSelection, K2Node_Event_MyGeometry) == 0x000004, "Member 'BP_BannerSelection_C_ExecuteUbergraph_BP_BannerSelection::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_ExecuteUbergraph_BP_BannerSelection, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'BP_BannerSelection_C_ExecuteUbergraph_BP_BannerSelection::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_ExecuteUbergraph_BP_BannerSelection, CallFunc_GetMordhauSingleton_ReturnValue) == 0x000040, "Member 'BP_BannerSelection_C_ExecuteUbergraph_BP_BannerSelection::CallFunc_GetMordhauSingleton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_ExecuteUbergraph_BP_BannerSelection, CallFunc_IsHovered_ReturnValue) == 0x000048, "Member 'BP_BannerSelection_C_ExecuteUbergraph_BP_BannerSelection::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_ExecuteUbergraph_BP_BannerSelection, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00004C, "Member 'BP_BannerSelection_C_ExecuteUbergraph_BP_BannerSelection::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BP_BannerSelection.BP_BannerSelection_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_BannerSelection_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BannerSelection_C_Tick) == 0x000004, "Wrong alignment on BP_BannerSelection_C_Tick");
static_assert(sizeof(BP_BannerSelection_C_Tick) == 0x00003C, "Wrong size on BP_BannerSelection_C_Tick");
static_assert(offsetof(BP_BannerSelection_C_Tick, MyGeometry) == 0x000000, "Member 'BP_BannerSelection_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_BannerSelection_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_BannerSelection.BP_BannerSelection_C.Populate Grid
// 0x0080 (0x0080 - 0x0000)
struct BP_BannerSelection_C_Populate_Grid final
{
public:
	int32                                         CurrIdx;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RowIndex;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EntriesPerRow;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauInventory*                      CallFunc_GetMordhauInventory_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayFabID_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauInventory*                      CallFunc_GetMordhauInventory_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauSingleton*                      CallFunc_GetMordhauSingleton_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BannerEntry_C*                      CallFunc_Create_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsItemPlatformAvailable_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasItem_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BannerSelection_C_Populate_Grid) == 0x000008, "Wrong alignment on BP_BannerSelection_C_Populate_Grid");
static_assert(sizeof(BP_BannerSelection_C_Populate_Grid) == 0x000080, "Wrong size on BP_BannerSelection_C_Populate_Grid");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CurrIdx) == 0x000000, "Member 'BP_BannerSelection_C_Populate_Grid::CurrIdx' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, RowIndex) == 0x000004, "Member 'BP_BannerSelection_C_Populate_Grid::RowIndex' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, EntriesPerRow) == 0x000008, "Member 'BP_BannerSelection_C_Populate_Grid::EntriesPerRow' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_BannerSelection_C_Populate_Grid::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_BannerSelection_C_Populate_Grid::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_GetMordhauInventory_ReturnValue) == 0x000018, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_GetMordhauInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_IsConsolePlatform_ReturnValue) == 0x000020, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_GetPlayFabID_ReturnValue) == 0x000028, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_GetPlayFabID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_GetMordhauInventory_ReturnValue_1) == 0x000040, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_GetMordhauInventory_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_GetMordhauSingleton_ReturnValue) == 0x000048, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_GetMordhauSingleton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_Create_ReturnValue) == 0x000050, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000064, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_Less_IntInt_ReturnValue) == 0x000065, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_BooleanAND_ReturnValue) == 0x000066, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000067, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_IsItemPlatformAvailable_ReturnValue) == 0x000068, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_IsItemPlatformAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_HasItem_ReturnValue) == 0x000069, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_HasItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_BooleanOR_ReturnValue) == 0x00006A, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_Add_IntInt_ReturnValue_2) == 0x00006C, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_Percent_IntInt_ReturnValue) == 0x000070, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000074, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_Populate_Grid, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x000078, "Member 'BP_BannerSelection_C_Populate_Grid::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");

// Function BP_BannerSelection.BP_BannerSelection_C.UpdatePreviewWidget
// 0x0078 (0x0078 - 0x0000)
struct BP_BannerSelection_C_UpdatePreviewWidget final
{
public:
	int32                                         Banner_ID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayFabPlayer                         CallFunc_GetPlayFabPlayer_ReturnValue;             // 0x0008(0x0060)(HasGetValueTypeHash)
	class UMordhauSingleton*                      CallFunc_GetMordhauSingleton_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRank_Rank;                             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BannerSelection_C_UpdatePreviewWidget) == 0x000008, "Wrong alignment on BP_BannerSelection_C_UpdatePreviewWidget");
static_assert(sizeof(BP_BannerSelection_C_UpdatePreviewWidget) == 0x000078, "Wrong size on BP_BannerSelection_C_UpdatePreviewWidget");
static_assert(offsetof(BP_BannerSelection_C_UpdatePreviewWidget, Banner_ID) == 0x000000, "Member 'BP_BannerSelection_C_UpdatePreviewWidget::Banner_ID' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_UpdatePreviewWidget, CallFunc_GetPlayFabPlayer_ReturnValue) == 0x000008, "Member 'BP_BannerSelection_C_UpdatePreviewWidget::CallFunc_GetPlayFabPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_UpdatePreviewWidget, CallFunc_GetMordhauSingleton_ReturnValue) == 0x000068, "Member 'BP_BannerSelection_C_UpdatePreviewWidget::CallFunc_GetMordhauSingleton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_UpdatePreviewWidget, CallFunc_GetRank_Rank) == 0x000070, "Member 'BP_BannerSelection_C_UpdatePreviewWidget::CallFunc_GetRank_Rank' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_UpdatePreviewWidget, CallFunc_GetValidValue_ReturnValue) == 0x000074, "Member 'BP_BannerSelection_C_UpdatePreviewWidget::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function BP_BannerSelection.BP_BannerSelection_C.OnKeyDown
// 0x02B8 (0x02B8 - 0x0000)
struct BP_BannerSelection_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0128(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E0(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01F8(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BannerSelection_C_OnKeyDown) == 0x000008, "Wrong alignment on BP_BannerSelection_C_OnKeyDown");
static_assert(sizeof(BP_BannerSelection_C_OnKeyDown) == 0x0002B8, "Wrong size on BP_BannerSelection_C_OnKeyDown");
static_assert(offsetof(BP_BannerSelection_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'BP_BannerSelection_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'BP_BannerSelection_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'BP_BannerSelection_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000128, "Member 'BP_BannerSelection_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E0, "Member 'BP_BannerSelection_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x0001F8, "Member 'BP_BannerSelection_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BannerSelection_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0002B0, "Member 'BP_BannerSelection_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

}

