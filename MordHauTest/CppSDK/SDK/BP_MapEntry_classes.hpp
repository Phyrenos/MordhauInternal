#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_MapEntry.BP_MapEntry_C
// 0x0198 (0x03F8 - 0x0260)
class UBP_MapEntry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       HoverAnim;                                         // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBP_RadialGradient_C*                   BP_RadialGradient;                                 // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                EntryButton;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             GameModeName;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_4;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MapName;                                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TeamImage;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Thumbnail;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VoteCount;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateBrush                            SelectedStyle;                                     // 0x02B8(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            DeselectedStyle;                                   // 0x0340(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(class UBP_MapEntry_C* Entry)> Selected;                                          // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bIsSelected;                                       // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 GameModeMapName;                                   // 0x03E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bIsInvasion;                                       // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_MapEntry(int32 EntryPoint);
	void BndEvt__EntryButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__EntryButton_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Row_K2Node_ComponentBoundEvent_100_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void Select();
	void DeSelect();
	void SetMapName(const class FText& MapName_0);
	void SetThumbnail(class UTexture2D* Thumbnail_0);
	void SetGameModeName(const class FText& GameModeName_0);
	void Update(const class FString& GameModeMapName_0, class UGameModeMetadata* GameModeMetadata, class UMapMetadata* MapMetadata);
	void SetVoteCount(const class FText& VoteCount_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MapEntry_C">();
	}
	static class UBP_MapEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MapEntry_C>();
	}
};
static_assert(alignof(UBP_MapEntry_C) == 0x000008, "Wrong alignment on UBP_MapEntry_C");
static_assert(sizeof(UBP_MapEntry_C) == 0x0003F8, "Wrong size on UBP_MapEntry_C");
static_assert(offsetof(UBP_MapEntry_C, UberGraphFrame) == 0x000260, "Member 'UBP_MapEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MapEntry_C, HoverAnim) == 0x000268, "Member 'UBP_MapEntry_C::HoverAnim' has a wrong offset!");
static_assert(offsetof(UBP_MapEntry_C, BP_RadialGradient) == 0x000270, "Member 'UBP_MapEntry_C::BP_RadialGradient' has a wrong offset!");
static_assert(offsetof(UBP_MapEntry_C, EntryButton) == 0x000278, "Member 'UBP_MapEntry_C::EntryButton' has a wrong offset!");
static_assert(offsetof(UBP_MapEntry_C, GameModeName) == 0x000280, "Member 'UBP_MapEntry_C::GameModeName' has a wrong offset!");
static_assert(offsetof(UBP_MapEntry_C, Image_2) == 0x000288, "Member 'UBP_MapEntry_C::Image_2' has a wrong offset!");
static_assert(offsetof(UBP_MapEntry_C, Image_4) == 0x000290, "Member 'UBP_MapEntry_C::Image_4' has a wrong offset!");
static_assert(offsetof(UBP_MapEntry_C, MapName) == 0x000298, "Member 'UBP_MapEntry_C::MapName' has a wrong offset!");
static_assert(offsetof(UBP_MapEntry_C, TeamImage) == 0x0002A0, "Member 'UBP_MapEntry_C::TeamImage' has a wrong offset!");
static_assert(offsetof(UBP_MapEntry_C, Thumbnail) == 0x0002A8, "Member 'UBP_MapEntry_C::Thumbnail' has a wrong offset!");
static_assert(offsetof(UBP_MapEntry_C, VoteCount) == 0x0002B0, "Member 'UBP_MapEntry_C::VoteCount' has a wrong offset!");
static_assert(offsetof(UBP_MapEntry_C, SelectedStyle) == 0x0002B8, "Member 'UBP_MapEntry_C::SelectedStyle' has a wrong offset!");
static_assert(offsetof(UBP_MapEntry_C, DeselectedStyle) == 0x000340, "Member 'UBP_MapEntry_C::DeselectedStyle' has a wrong offset!");
static_assert(offsetof(UBP_MapEntry_C, Selected) == 0x0003C8, "Member 'UBP_MapEntry_C::Selected' has a wrong offset!");
static_assert(offsetof(UBP_MapEntry_C, bIsSelected) == 0x0003D8, "Member 'UBP_MapEntry_C::bIsSelected' has a wrong offset!");
static_assert(offsetof(UBP_MapEntry_C, GameModeMapName) == 0x0003E0, "Member 'UBP_MapEntry_C::GameModeMapName' has a wrong offset!");
static_assert(offsetof(UBP_MapEntry_C, bIsInvasion) == 0x0003F0, "Member 'UBP_MapEntry_C::bIsInvasion' has a wrong offset!");

}

