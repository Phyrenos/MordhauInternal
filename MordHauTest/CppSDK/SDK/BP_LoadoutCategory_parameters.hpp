#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LoadoutCategory

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_LoadoutCategoryType_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Mordhau_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_LoadoutCategory.BP_LoadoutCategory_C.ExecuteUbergraph_BP_LoadoutCategory
// 0x0140 (0x0140 - 0x0000)
struct BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_PointerEvent_1;                       // 0x0008(0x0070)()
	class UDragDropOperation*                     K2Node_Event_Operation_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPointerEvent                          K2Node_Event_PointerEvent;                         // 0x0080(0x0070)(ConstParm)
	class UDragDropOperation*                     K2Node_Event_Operation;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_LoadoutCategoryTooltip_C*           CallFunc_Create_ReturnValue;                       // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0100(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDragDropping_ReturnValue;               // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory) == 0x000008, "Wrong alignment on BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory");
static_assert(sizeof(BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory) == 0x000140, "Wrong size on BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory");
static_assert(offsetof(BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory, EntryPoint) == 0x000000, "Member 'BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000004, "Member 'BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory, K2Node_Event_PointerEvent_1) == 0x000008, "Member 'BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory::K2Node_Event_PointerEvent_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory, K2Node_Event_Operation_1) == 0x000078, "Member 'BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory::K2Node_Event_Operation_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory, K2Node_Event_PointerEvent) == 0x000080, "Member 'BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory::K2Node_Event_PointerEvent' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory, K2Node_Event_Operation) == 0x0000F0, "Member 'BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory::K2Node_Event_Operation' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory, CallFunc_Create_ReturnValue) == 0x0000F8, "Member 'BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory, K2Node_Event_MyGeometry) == 0x000100, "Member 'BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory, K2Node_Event_InDeltaTime) == 0x000138, "Member 'BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory, CallFunc_IsDragDropping_ReturnValue) == 0x00013C, "Member 'BP_LoadoutCategory_C_ExecuteUbergraph_BP_LoadoutCategory::CallFunc_IsDragDropping_ReturnValue' has a wrong offset!");

// Function BP_LoadoutCategory.BP_LoadoutCategory_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_LoadoutCategory_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LoadoutCategory_C_Tick) == 0x000004, "Wrong alignment on BP_LoadoutCategory_C_Tick");
static_assert(sizeof(BP_LoadoutCategory_C_Tick) == 0x00003C, "Wrong size on BP_LoadoutCategory_C_Tick");
static_assert(offsetof(BP_LoadoutCategory_C_Tick, MyGeometry) == 0x000000, "Member 'BP_LoadoutCategory_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_LoadoutCategory_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_LoadoutCategory.BP_LoadoutCategory_C.OnDragCancelled
// 0x0078 (0x0078 - 0x0000)
struct BP_LoadoutCategory_C_OnDragCancelled final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UDragDropOperation*                     Operation;                                         // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LoadoutCategory_C_OnDragCancelled) == 0x000008, "Wrong alignment on BP_LoadoutCategory_C_OnDragCancelled");
static_assert(sizeof(BP_LoadoutCategory_C_OnDragCancelled) == 0x000078, "Wrong size on BP_LoadoutCategory_C_OnDragCancelled");
static_assert(offsetof(BP_LoadoutCategory_C_OnDragCancelled, PointerEvent) == 0x000000, "Member 'BP_LoadoutCategory_C_OnDragCancelled::PointerEvent' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_OnDragCancelled, Operation) == 0x000070, "Member 'BP_LoadoutCategory_C_OnDragCancelled::Operation' has a wrong offset!");

// Function BP_LoadoutCategory.BP_LoadoutCategory_C.OnDragLeave
// 0x0078 (0x0078 - 0x0000)
struct BP_LoadoutCategory_C_OnDragLeave final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LoadoutCategory_C_OnDragLeave) == 0x000008, "Wrong alignment on BP_LoadoutCategory_C_OnDragLeave");
static_assert(sizeof(BP_LoadoutCategory_C_OnDragLeave) == 0x000078, "Wrong size on BP_LoadoutCategory_C_OnDragLeave");
static_assert(offsetof(BP_LoadoutCategory_C_OnDragLeave, PointerEvent) == 0x000000, "Member 'BP_LoadoutCategory_C_OnDragLeave::PointerEvent' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_OnDragLeave, Operation) == 0x000070, "Member 'BP_LoadoutCategory_C_OnDragLeave::Operation' has a wrong offset!");

// Function BP_LoadoutCategory.BP_LoadoutCategory_C.Get_CurrentPoints_Text_0
// 0x0040 (0x0040 - 0x0000)
struct BP_LoadoutCategory_C_Get_CurrentPoints_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_1;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LoadoutCategory_C_Get_CurrentPoints_Text_0) == 0x000008, "Wrong alignment on BP_LoadoutCategory_C_Get_CurrentPoints_Text_0");
static_assert(sizeof(BP_LoadoutCategory_C_Get_CurrentPoints_Text_0) == 0x000040, "Wrong size on BP_LoadoutCategory_C_Get_CurrentPoints_Text_0");
static_assert(offsetof(BP_LoadoutCategory_C_Get_CurrentPoints_Text_0, ReturnValue) == 0x000000, "Member 'BP_LoadoutCategory_C_Get_CurrentPoints_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_CurrentPoints_Text_0, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000018, "Member 'BP_LoadoutCategory_C_Get_CurrentPoints_Text_0::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_CurrentPoints_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'BP_LoadoutCategory_C_Get_CurrentPoints_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_CurrentPoints_Text_0, CallFunc_EqualEqual_StriStri_ReturnValue_1) == 0x000038, "Member 'BP_LoadoutCategory_C_Get_CurrentPoints_Text_0::CallFunc_EqualEqual_StriStri_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_CurrentPoints_Text_0, CallFunc_BooleanOR_ReturnValue) == 0x000039, "Member 'BP_LoadoutCategory_C_Get_CurrentPoints_Text_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_LoadoutCategory.BP_LoadoutCategory_C.GetColorAndOpacity_0
// 0x0054 (0x0054 - 0x0000)
struct BP_LoadoutCategory_C_GetColorAndOpacity_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LoadoutCategoryType                         Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LoadoutCategory_C_GetColorAndOpacity_0) == 0x000004, "Wrong alignment on BP_LoadoutCategory_C_GetColorAndOpacity_0");
static_assert(sizeof(BP_LoadoutCategory_C_GetColorAndOpacity_0) == 0x000054, "Wrong size on BP_LoadoutCategory_C_GetColorAndOpacity_0");
static_assert(offsetof(BP_LoadoutCategory_C_GetColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'BP_LoadoutCategory_C_GetColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetColorAndOpacity_0, Temp_byte_Variable) == 0x000010, "Member 'BP_LoadoutCategory_C_GetColorAndOpacity_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetColorAndOpacity_0, Temp_struct_Variable) == 0x000014, "Member 'BP_LoadoutCategory_C_GetColorAndOpacity_0::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetColorAndOpacity_0, Temp_struct_Variable_1) == 0x000024, "Member 'BP_LoadoutCategory_C_GetColorAndOpacity_0::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetColorAndOpacity_0, Temp_struct_Variable_2) == 0x000034, "Member 'BP_LoadoutCategory_C_GetColorAndOpacity_0::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetColorAndOpacity_0, K2Node_Select_Default) == 0x000044, "Member 'BP_LoadoutCategory_C_GetColorAndOpacity_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_LoadoutCategory.BP_LoadoutCategory_C.Get_NameText_ColorAndOpacity_0
// 0x0078 (0x0078 - 0x0000)
struct BP_LoadoutCategory_C_Get_NameText_ColorAndOpacity_0 final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)(UObjectWrapper)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0050(0x0028)()
};
static_assert(alignof(BP_LoadoutCategory_C_Get_NameText_ColorAndOpacity_0) == 0x000008, "Wrong alignment on BP_LoadoutCategory_C_Get_NameText_ColorAndOpacity_0");
static_assert(sizeof(BP_LoadoutCategory_C_Get_NameText_ColorAndOpacity_0) == 0x000078, "Wrong size on BP_LoadoutCategory_C_Get_NameText_ColorAndOpacity_0");
static_assert(offsetof(BP_LoadoutCategory_C_Get_NameText_ColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'BP_LoadoutCategory_C_Get_NameText_ColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_NameText_ColorAndOpacity_0, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'BP_LoadoutCategory_C_Get_NameText_ColorAndOpacity_0::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_NameText_ColorAndOpacity_0, K2Node_MakeStruct_SlateColor_1) == 0x000050, "Member 'BP_LoadoutCategory_C_Get_NameText_ColorAndOpacity_0::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function BP_LoadoutCategory.BP_LoadoutCategory_C.OnDragOver
// 0x00B8 (0x00B8 - 0x0000)
struct BP_LoadoutCategory_C_OnDragOver final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_1;        // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LoadoutCategory_C_OnDragOver) == 0x000008, "Wrong alignment on BP_LoadoutCategory_C_OnDragOver");
static_assert(sizeof(BP_LoadoutCategory_C_OnDragOver) == 0x0000B8, "Wrong size on BP_LoadoutCategory_C_OnDragOver");
static_assert(offsetof(BP_LoadoutCategory_C_OnDragOver, MyGeometry) == 0x000000, "Member 'BP_LoadoutCategory_C_OnDragOver::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_OnDragOver, PointerEvent) == 0x000038, "Member 'BP_LoadoutCategory_C_OnDragOver::PointerEvent' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_OnDragOver, Operation) == 0x0000A8, "Member 'BP_LoadoutCategory_C_OnDragOver::Operation' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_OnDragOver, ReturnValue) == 0x0000B0, "Member 'BP_LoadoutCategory_C_OnDragOver::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_OnDragOver, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x0000B1, "Member 'BP_LoadoutCategory_C_OnDragOver::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_OnDragOver, CallFunc_EqualEqual_StriStri_ReturnValue_1) == 0x0000B2, "Member 'BP_LoadoutCategory_C_OnDragOver::CallFunc_EqualEqual_StriStri_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_OnDragOver, CallFunc_BooleanOR_ReturnValue) == 0x0000B3, "Member 'BP_LoadoutCategory_C_OnDragOver::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_LoadoutCategory.BP_LoadoutCategory_C.OnDrop
// 0x00D8 (0x00D8 - 0x0000)
struct BP_LoadoutCategory_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DragDropOperation_C*                K2Node_DynamicCast_AsBP_Drag_Drop_Operation;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_LoadoutData_C*                      K2Node_DynamicCast_AsBP_Loadout_Data;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_1;        // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LoadoutCategory_C_OnDrop) == 0x000008, "Wrong alignment on BP_LoadoutCategory_C_OnDrop");
static_assert(sizeof(BP_LoadoutCategory_C_OnDrop) == 0x0000D8, "Wrong size on BP_LoadoutCategory_C_OnDrop");
static_assert(offsetof(BP_LoadoutCategory_C_OnDrop, MyGeometry) == 0x000000, "Member 'BP_LoadoutCategory_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_OnDrop, PointerEvent) == 0x000038, "Member 'BP_LoadoutCategory_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_OnDrop, Operation) == 0x0000A8, "Member 'BP_LoadoutCategory_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_OnDrop, ReturnValue) == 0x0000B0, "Member 'BP_LoadoutCategory_C_OnDrop::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_OnDrop, K2Node_DynamicCast_AsBP_Drag_Drop_Operation) == 0x0000B8, "Member 'BP_LoadoutCategory_C_OnDrop::K2Node_DynamicCast_AsBP_Drag_Drop_Operation' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_OnDrop, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_LoadoutCategory_C_OnDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_OnDrop, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x0000C1, "Member 'BP_LoadoutCategory_C_OnDrop::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_OnDrop, K2Node_DynamicCast_AsBP_Loadout_Data) == 0x0000C8, "Member 'BP_LoadoutCategory_C_OnDrop::K2Node_DynamicCast_AsBP_Loadout_Data' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_OnDrop, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'BP_LoadoutCategory_C_OnDrop::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_OnDrop, CallFunc_EqualEqual_StriStri_ReturnValue_1) == 0x0000D1, "Member 'BP_LoadoutCategory_C_OnDrop::CallFunc_EqualEqual_StriStri_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_OnDrop, CallFunc_BooleanOR_ReturnValue) == 0x0000D2, "Member 'BP_LoadoutCategory_C_OnDrop::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_LoadoutCategory.BP_LoadoutCategory_C.GetVisibility_0
// 0x000C (0x000C - 0x0000)
struct BP_LoadoutCategory_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_1;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_2;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LoadoutCategory_C_GetVisibility_0) == 0x000001, "Wrong alignment on BP_LoadoutCategory_C_GetVisibility_0");
static_assert(sizeof(BP_LoadoutCategory_C_GetVisibility_0) == 0x00000C, "Wrong size on BP_LoadoutCategory_C_GetVisibility_0");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_LoadoutCategory_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_LoadoutCategory_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_LoadoutCategory_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_LoadoutCategory_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_0, CallFunc_IsHovered_ReturnValue) == 0x000004, "Member 'BP_LoadoutCategory_C_GetVisibility_0::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_0, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'BP_LoadoutCategory_C_GetVisibility_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_0, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000006, "Member 'BP_LoadoutCategory_C_GetVisibility_0::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_0, CallFunc_EqualEqual_StriStri_ReturnValue_1) == 0x000007, "Member 'BP_LoadoutCategory_C_GetVisibility_0::CallFunc_EqualEqual_StriStri_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_0, CallFunc_EqualEqual_StriStri_ReturnValue_2) == 0x000008, "Member 'BP_LoadoutCategory_C_GetVisibility_0::CallFunc_EqualEqual_StriStri_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_0, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'BP_LoadoutCategory_C_GetVisibility_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_0, CallFunc_BooleanOR_ReturnValue_1) == 0x00000A, "Member 'BP_LoadoutCategory_C_GetVisibility_0::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_0, K2Node_Select_Default) == 0x00000B, "Member 'BP_LoadoutCategory_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_LoadoutCategory.BP_LoadoutCategory_C.Get_Image_ColorStrip_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct BP_LoadoutCategory_C_Get_Image_ColorStrip_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LoadoutCategory_C_Get_Image_ColorStrip_Visibility_0) == 0x000001, "Wrong alignment on BP_LoadoutCategory_C_Get_Image_ColorStrip_Visibility_0");
static_assert(sizeof(BP_LoadoutCategory_C_Get_Image_ColorStrip_Visibility_0) == 0x000005, "Wrong size on BP_LoadoutCategory_C_Get_Image_ColorStrip_Visibility_0");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Image_ColorStrip_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_LoadoutCategory_C_Get_Image_ColorStrip_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Image_ColorStrip_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_LoadoutCategory_C_Get_Image_ColorStrip_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Image_ColorStrip_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_LoadoutCategory_C_Get_Image_ColorStrip_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Image_ColorStrip_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_LoadoutCategory_C_Get_Image_ColorStrip_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Image_ColorStrip_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'BP_LoadoutCategory_C_Get_Image_ColorStrip_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_LoadoutCategory.BP_LoadoutCategory_C.GetVisibility_1
// 0x0006 (0x0006 - 0x0000)
struct BP_LoadoutCategory_C_GetVisibility_1 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LoadoutCategoryType                         Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LoadoutCategory_C_GetVisibility_1) == 0x000001, "Wrong alignment on BP_LoadoutCategory_C_GetVisibility_1");
static_assert(sizeof(BP_LoadoutCategory_C_GetVisibility_1) == 0x000006, "Wrong size on BP_LoadoutCategory_C_GetVisibility_1");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_1, ReturnValue) == 0x000000, "Member 'BP_LoadoutCategory_C_GetVisibility_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_1, Temp_byte_Variable) == 0x000001, "Member 'BP_LoadoutCategory_C_GetVisibility_1::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_1, Temp_byte_Variable_1) == 0x000002, "Member 'BP_LoadoutCategory_C_GetVisibility_1::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_1, Temp_byte_Variable_2) == 0x000003, "Member 'BP_LoadoutCategory_C_GetVisibility_1::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_1, Temp_byte_Variable_3) == 0x000004, "Member 'BP_LoadoutCategory_C_GetVisibility_1::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_1, K2Node_Select_Default) == 0x000005, "Member 'BP_LoadoutCategory_C_GetVisibility_1::K2Node_Select_Default' has a wrong offset!");

// Function BP_LoadoutCategory.BP_LoadoutCategory_C.Get_Overlay_GamepadBinds_Visibility_0
// 0x0007 (0x0007 - 0x0000)
struct BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsUsingController_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0) == 0x000001, "Wrong alignment on BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0");
static_assert(sizeof(BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0) == 0x000007, "Wrong size on BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0, CallFunc_GetIsUsingController_ReturnValue) == 0x000004, "Member 'BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0::CallFunc_GetIsUsingController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0, K2Node_Select_Default) == 0x000006, "Member 'BP_LoadoutCategory_C_Get_Overlay_GamepadBinds_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_LoadoutCategory.BP_LoadoutCategory_C.Get_Overlay_UpBind_Visibility_0
// 0x0006 (0x0006 - 0x0000)
struct BP_LoadoutCategory_C_Get_Overlay_UpBind_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LoadoutCategory_C_Get_Overlay_UpBind_Visibility_0) == 0x000001, "Wrong alignment on BP_LoadoutCategory_C_Get_Overlay_UpBind_Visibility_0");
static_assert(sizeof(BP_LoadoutCategory_C_Get_Overlay_UpBind_Visibility_0) == 0x000006, "Wrong size on BP_LoadoutCategory_C_Get_Overlay_UpBind_Visibility_0");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Overlay_UpBind_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_LoadoutCategory_C_Get_Overlay_UpBind_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Overlay_UpBind_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_LoadoutCategory_C_Get_Overlay_UpBind_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Overlay_UpBind_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_LoadoutCategory_C_Get_Overlay_UpBind_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Overlay_UpBind_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_LoadoutCategory_C_Get_Overlay_UpBind_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Overlay_UpBind_Visibility_0, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_LoadoutCategory_C_Get_Overlay_UpBind_Visibility_0::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Overlay_UpBind_Visibility_0, K2Node_Select_Default) == 0x000005, "Member 'BP_LoadoutCategory_C_Get_Overlay_UpBind_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_LoadoutCategory.BP_LoadoutCategory_C.Get_Overlay_DownBind_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct BP_LoadoutCategory_C_Get_Overlay_DownBind_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LoadoutCategory_C_Get_Overlay_DownBind_Visibility_0) == 0x000001, "Wrong alignment on BP_LoadoutCategory_C_Get_Overlay_DownBind_Visibility_0");
static_assert(sizeof(BP_LoadoutCategory_C_Get_Overlay_DownBind_Visibility_0) == 0x000005, "Wrong size on BP_LoadoutCategory_C_Get_Overlay_DownBind_Visibility_0");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Overlay_DownBind_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_LoadoutCategory_C_Get_Overlay_DownBind_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Overlay_DownBind_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_LoadoutCategory_C_Get_Overlay_DownBind_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Overlay_DownBind_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_LoadoutCategory_C_Get_Overlay_DownBind_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Overlay_DownBind_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_LoadoutCategory_C_Get_Overlay_DownBind_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_Overlay_DownBind_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'BP_LoadoutCategory_C_Get_Overlay_DownBind_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_LoadoutCategory.BP_LoadoutCategory_C.GetVisibility_2
// 0x0005 (0x0005 - 0x0000)
struct BP_LoadoutCategory_C_GetVisibility_2 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LoadoutCategory_C_GetVisibility_2) == 0x000001, "Wrong alignment on BP_LoadoutCategory_C_GetVisibility_2");
static_assert(sizeof(BP_LoadoutCategory_C_GetVisibility_2) == 0x000005, "Wrong size on BP_LoadoutCategory_C_GetVisibility_2");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_2, ReturnValue) == 0x000000, "Member 'BP_LoadoutCategory_C_GetVisibility_2::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_2, Temp_bool_Variable) == 0x000001, "Member 'BP_LoadoutCategory_C_GetVisibility_2::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_2, Temp_byte_Variable) == 0x000002, "Member 'BP_LoadoutCategory_C_GetVisibility_2::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_2, Temp_byte_Variable_1) == 0x000003, "Member 'BP_LoadoutCategory_C_GetVisibility_2::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_GetVisibility_2, K2Node_Select_Default) == 0x000004, "Member 'BP_LoadoutCategory_C_GetVisibility_2::K2Node_Select_Default' has a wrong offset!");

// Function BP_LoadoutCategory.BP_LoadoutCategory_C.Get_ButtonEntry_ToolTipWidget_0
// 0x0110 (0x0110 - 0x0000)
struct BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0030(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0048(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x0068(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_1;        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0098(0x0018)()
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_2;        // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x00B8(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x00D0(0x0018)()
	class UBP_LoadoutCategoryTooltip_C*           K2Node_DynamicCast_AsBP_Loadout_Category_Tooltip;  // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F8(0x0018)()
};
static_assert(alignof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0) == 0x000008, "Wrong alignment on BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0");
static_assert(sizeof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0) == 0x000110, "Wrong size on BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0");
static_assert(offsetof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0, Temp_bool_Variable) == 0x000008, "Member 'BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0, Temp_text_Variable) == 0x000010, "Member 'BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0, Temp_bool_Variable_1) == 0x000028, "Member 'BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0, Temp_text_Variable_1) == 0x000030, "Member 'BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0, Temp_text_Variable_2) == 0x000048, "Member 'BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0, Temp_bool_Variable_2) == 0x000060, "Member 'BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0, Temp_text_Variable_3) == 0x000068, "Member 'BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000090, "Member 'BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0, CallFunc_EqualEqual_StriStri_ReturnValue_1) == 0x000091, "Member 'BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0::CallFunc_EqualEqual_StriStri_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0, K2Node_Select_Default) == 0x000098, "Member 'BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0, CallFunc_EqualEqual_StriStri_ReturnValue_2) == 0x0000B0, "Member 'BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0::CallFunc_EqualEqual_StriStri_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0, K2Node_Select_Default_1) == 0x0000B8, "Member 'BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0, K2Node_Select_Default_2) == 0x0000D0, "Member 'BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0, K2Node_DynamicCast_AsBP_Loadout_Category_Tooltip) == 0x0000E8, "Member 'BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0::K2Node_DynamicCast_AsBP_Loadout_Category_Tooltip' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'BP_LoadoutCategory_C_Get_ButtonEntry_ToolTipWidget_0::CallFunc_Format_ReturnValue' has a wrong offset!");

}

