#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordePlayersList_Vertical

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_HordePlayersList_Vertical.BP_HordePlayersList_Vertical_C.ExecuteUbergraph_BP_HordePlayersList_Vertical
// 0x0050 (0x0050 - 0x0000)
struct BP_HordePlayersList_Vertical_C_ExecuteUbergraph_BP_HordePlayersList_Vertical final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_HordePlayerEntryVertical_C*> K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_HordePlayersList_Vertical_C_ExecuteUbergraph_BP_HordePlayersList_Vertical) == 0x000008, "Wrong alignment on BP_HordePlayersList_Vertical_C_ExecuteUbergraph_BP_HordePlayersList_Vertical");
static_assert(sizeof(BP_HordePlayersList_Vertical_C_ExecuteUbergraph_BP_HordePlayersList_Vertical) == 0x000050, "Wrong size on BP_HordePlayersList_Vertical_C_ExecuteUbergraph_BP_HordePlayersList_Vertical");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_ExecuteUbergraph_BP_HordePlayersList_Vertical, EntryPoint) == 0x000000, "Member 'BP_HordePlayersList_Vertical_C_ExecuteUbergraph_BP_HordePlayersList_Vertical::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_ExecuteUbergraph_BP_HordePlayersList_Vertical, K2Node_Event_MyGeometry) == 0x000004, "Member 'BP_HordePlayersList_Vertical_C_ExecuteUbergraph_BP_HordePlayersList_Vertical::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_ExecuteUbergraph_BP_HordePlayersList_Vertical, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'BP_HordePlayersList_Vertical_C_ExecuteUbergraph_BP_HordePlayersList_Vertical::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_ExecuteUbergraph_BP_HordePlayersList_Vertical, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_HordePlayersList_Vertical_C_ExecuteUbergraph_BP_HordePlayersList_Vertical::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_HordePlayersList_Vertical.BP_HordePlayersList_Vertical_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_HordePlayersList_Vertical_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayersList_Vertical_C_Tick) == 0x000004, "Wrong alignment on BP_HordePlayersList_Vertical_C_Tick");
static_assert(sizeof(BP_HordePlayersList_Vertical_C_Tick) == 0x00003C, "Wrong size on BP_HordePlayersList_Vertical_C_Tick");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Tick, MyGeometry) == 0x000000, "Member 'BP_HordePlayersList_Vertical_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_HordePlayersList_Vertical_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_HordePlayersList_Vertical.BP_HordePlayersList_Vertical_C.Update
// 0x0108 (0x0108 - 0x0000)
struct BP_HordePlayersList_Vertical_C_Update final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_HordePlayerEntryVertical_C*         CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerState*                    CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeGameState_C*                   K2Node_DynamicCast_AsBP_Horde_Game_State;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item_2;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerState*                    K2Node_DynamicCast_AsMordhau_Player_State;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0018)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayersList_Vertical_C_Update) == 0x000008, "Wrong alignment on BP_HordePlayersList_Vertical_C_Update");
static_assert(sizeof(BP_HordePlayersList_Vertical_C_Update) == 0x000108, "Wrong size on BP_HordePlayersList_Vertical_C_Update");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, Temp_byte_Variable) == 0x000000, "Member 'BP_HordePlayersList_Vertical_C_Update::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_HordePlayersList_Vertical_C_Update::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_HordePlayersList_Vertical_C_Update::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_HordePlayersList_Vertical_C_Update::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, Temp_byte_Variable_1) == 0x000024, "Member 'BP_HordePlayersList_Vertical_C_Update::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'BP_HordePlayersList_Vertical_C_Update::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, Temp_bool_Variable) == 0x000030, "Member 'BP_HordePlayersList_Vertical_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000042, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_GetGameState_ReturnValue) == 0x000048, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, K2Node_DynamicCast_AsBP_Horde_Game_State) == 0x000050, "Member 'BP_HordePlayersList_Vertical_C_Update::K2Node_DynamicCast_AsBP_Horde_Game_State' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_HordePlayersList_Vertical_C_Update::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_Array_Length_ReturnValue_2) == 0x00005C, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_Array_Get_Item_2) == 0x000060, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, K2Node_DynamicCast_AsMordhau_Player_State) == 0x000070, "Member 'BP_HordePlayersList_Vertical_C_Update::K2Node_DynamicCast_AsMordhau_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BP_HordePlayersList_Vertical_C_Update::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'BP_HordePlayersList_Vertical_C_Update::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_Array_Add_ReturnValue) == 0x0000C0, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_HordePlayersList_Vertical_C_Update::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_Array_Find_ReturnValue) == 0x0000D8, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F9, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_Array_Length_ReturnValue_3) == 0x0000FC, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, CallFunc_Less_IntInt_ReturnValue_1) == 0x000100, "Member 'BP_HordePlayersList_Vertical_C_Update::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordePlayersList_Vertical_C_Update, K2Node_Select_Default) == 0x000101, "Member 'BP_HordePlayersList_Vertical_C_Update::K2Node_Select_Default' has a wrong offset!");

}

