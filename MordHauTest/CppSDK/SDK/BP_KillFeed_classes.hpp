#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KillFeed

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_KillFeed.BP_KillFeed_C
// 0x0030 (0x0290 - 0x0260)
class UBP_KillFeed_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UListView*                              Entries;                                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UBP_KillFeedEntry_C*>            EntriesArray;                                      // 0x0270(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         TimeForKillFeedToDisappear;                        // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxEntries;                                        // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoopingIndex;                                      // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_KillFeed(int32 EntryPoint);
	void Construct();
	void HideAfterSomeTime();
	void HideCallback();
	void OnMessageReceived(class APlayerState* Killer, const class FText& KilledBy, class APlayerState* Victim);
	void AddEntry(class APlayerState* Killer, const class FText& KilledBy, class APlayerState* Victim);
	void AddEntryToList(const struct FS_KillfeedEntryData& NewKillFeedData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_KillFeed_C">();
	}
	static class UBP_KillFeed_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_KillFeed_C>();
	}
};
static_assert(alignof(UBP_KillFeed_C) == 0x000008, "Wrong alignment on UBP_KillFeed_C");
static_assert(sizeof(UBP_KillFeed_C) == 0x000290, "Wrong size on UBP_KillFeed_C");
static_assert(offsetof(UBP_KillFeed_C, UberGraphFrame) == 0x000260, "Member 'UBP_KillFeed_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_KillFeed_C, Entries) == 0x000268, "Member 'UBP_KillFeed_C::Entries' has a wrong offset!");
static_assert(offsetof(UBP_KillFeed_C, EntriesArray) == 0x000270, "Member 'UBP_KillFeed_C::EntriesArray' has a wrong offset!");
static_assert(offsetof(UBP_KillFeed_C, TimeForKillFeedToDisappear) == 0x000280, "Member 'UBP_KillFeed_C::TimeForKillFeedToDisappear' has a wrong offset!");
static_assert(offsetof(UBP_KillFeed_C, MaxEntries) == 0x000284, "Member 'UBP_KillFeed_C::MaxEntries' has a wrong offset!");
static_assert(offsetof(UBP_KillFeed_C, LoopingIndex) == 0x000288, "Member 'UBP_KillFeed_C::LoopingIndex' has a wrong offset!");

}

