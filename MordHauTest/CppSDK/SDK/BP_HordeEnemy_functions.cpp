#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordeEnemy

#include "Basic.hpp"

#include "BP_HordeEnemy_classes.hpp"
#include "BP_HordeEnemy_parameters.hpp"


namespace SDK
{

// Function BP_HordeEnemy.BP_HordeEnemy_C.ExecuteUbergraph_BP_HordeEnemy
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeEnemy_C::ExecuteUbergraph_BP_HordeEnemy(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "ExecuteUbergraph_BP_HordeEnemy");

	Params::BP_HordeEnemy_C_ExecuteUbergraph_BP_HordeEnemy Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeEnemy.BP_HordeEnemy_C.ReceivePossessed
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeEnemy_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "ReceivePossessed");

	Params::BP_HordeEnemy_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeEnemy.BP_HordeEnemy_C.OnKilled
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeEnemy_C::OnKilled(class AController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "OnKilled");

	Params::BP_HordeEnemy_C_OnKilled Parms{};

	Parms.EventInstigator = EventInstigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeEnemy.BP_HordeEnemy_C.Enrage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeEnemy_C::Enrage(class AMordhauCharacter* Target, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "Enrage");

	Params::BP_HordeEnemy_C_Enrage Parms{};

	Parms.Target = Target;
	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeEnemy.BP_HordeEnemy_C.Cripple
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeEnemy_C::Cripple(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "Cripple");

	Params::BP_HordeEnemy_C_Cripple Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeEnemy.BP_HordeEnemy_C.Recoil
// (BlueprintCallable, BlueprintEvent)

void ABP_HordeEnemy_C::Recoil()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "Recoil");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeEnemy.BP_HordeEnemy_C.OnBlockedMelee
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AMordhauCharacter*                Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeEnemy_C::OnBlockedMelee(const struct FHitResult& HitResult, class AMordhauCharacter* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "OnBlockedMelee");

	Params::BP_HordeEnemy_C_OnBlockedMelee Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeEnemy.BP_HordeEnemy_C.LegSweep
// (BlueprintCallable, BlueprintEvent)

void ABP_HordeEnemy_C::LegSweep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "LegSweep");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeEnemy.BP_HordeEnemy_C.ReceiveMordhauDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// EMordhauDamageType                      DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   SubDamageType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Agent                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeEnemy_C::ReceiveMordhauDamage(float Damage, const struct FHitResult& HitResult, EMordhauDamageType DamageType, uint8 SubDamageType, class AActor* Source, class AActor* Agent, class AController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "ReceiveMordhauDamage");

	Params::BP_HordeEnemy_C_ReceiveMordhauDamage Parms{};

	Parms.Damage = Damage;
	Parms.HitResult = std::move(HitResult);
	Parms.DamageType = DamageType;
	Parms.SubDamageType = SubDamageType;
	Parms.Source = Source;
	Parms.Agent = Agent;
	Parms.EventInstigator = EventInstigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeEnemy.BP_HordeEnemy_C.CompleteTask
// (BlueprintCallable, BlueprintEvent)

void ABP_HordeEnemy_C::CompleteTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "CompleteTask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeEnemy.BP_HordeEnemy_C.MoveBlockedBySlow
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Impact                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_HordeEnemy_C::MoveBlockedBySlow(const struct FHitResult& Impact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "MoveBlockedBySlow");

	Params::BP_HordeEnemy_C_MoveBlockedBySlow Parms{};

	Parms.Impact = std::move(Impact);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeEnemy.BP_HordeEnemy_C.ModifyDamage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DamageAmount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FMordhauDamageInfo               DamageInfo                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_HordeEnemy_C::ModifyDamage(float DamageAmount, const struct FMordhauDamageInfo& DamageInfo, class AController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "ModifyDamage");

	Params::BP_HordeEnemy_C_ModifyDamage Parms{};

	Parms.DamageAmount = DamageAmount;
	Parms.DamageInfo = std::move(DamageInfo);
	Parms.EventInstigator = EventInstigator;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HordeEnemy.BP_HordeEnemy_C.ModifyParryResult
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InResult                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AMordhauCharacter*                Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_HordeEnemy_C::ModifyParryResult(bool InResult, const struct FHitResult& HitResult, class AMordhauCharacter* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "ModifyParryResult");

	Params::BP_HordeEnemy_C_ModifyParryResult Parms{};

	Parms.InResult = InResult;
	Parms.HitResult = std::move(HitResult);
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HordeEnemy.BP_HordeEnemy_C.GetEnragedTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                OutTarget                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeEnemy_C::GetEnragedTarget(class AMordhauCharacter** OutTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "GetEnragedTarget");

	Params::BP_HordeEnemy_C_GetEnragedTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutTarget != nullptr)
		*OutTarget = Parms.OutTarget;
}


// Function BP_HordeEnemy.BP_HordeEnemy_C.OnRep_StunnedBySkillCounter
// (BlueprintCallable, BlueprintEvent)

void ABP_HordeEnemy_C::OnRep_StunnedBySkillCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "OnRep_StunnedBySkillCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeEnemy.BP_HordeEnemy_C.HandleObstructionRemoval
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Impact                                                 (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_HordeEnemy_C::HandleObstructionRemoval(const struct FHitResult& Impact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "HandleObstructionRemoval");

	Params::BP_HordeEnemy_C_HandleObstructionRemoval Parms{};

	Parms.Impact = std::move(Impact);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeEnemy.BP_HordeEnemy_C.OnDied
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMordhauDamageType                      Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   SubType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Agent                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeEnemy_C::OnDied(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "OnDied");

	Params::BP_HordeEnemy_C_OnDied Parms{};

	Parms.Angle = Angle;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Source = Source;
	Parms.Agent = Agent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeEnemy.BP_HordeEnemy_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_HordeEnemy_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeEnemy.BP_HordeEnemy_C.AttemptClimb
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Succeeded                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HordeEnemy_C::AttemptClimb(bool* Succeeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeEnemy_C", "AttemptClimb");

	Params::BP_HordeEnemy_C_AttemptClimb Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Succeeded != nullptr)
		*Succeeded = Parms.Succeeded;
}

}

