#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PartyMembers

#include "Basic.hpp"

#include "MordhauOnlineSubsystem_structs.hpp"
#include "E_RankDisplayType_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_PartyMembers.BP_PartyMembers_C
// 0x00A8 (0x0308 - 0x0260)
class UBP_PartyMembers_C final : public UUserWidget
{
public:
	class UBP_PartyMembersEntry_C*                BP_PartyMembersEntry;                              // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PartyMembersEntry_C*                BP_PartyMembersEntry_0;                            // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PartyMembersEntry_C*                BP_PartyMembersEntry_1;                            // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PartyMembersEntry_C*                BP_PartyMembersEntry_2;                            // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PartyMembersEntry_C*                BP_PartyMembersEntry_3;                            // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PartyMembersEntry_C*                BP_PartyMembersEntry_4;                            // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Entries;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Rank;                                              // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Banner;                                            // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_RankDisplayType                             RankDisplayType;                                   // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayFabPlayer                         PartyLeader;                                       // 0x02A8(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void Update(TArray<struct FPlayFabPlayer>& Members);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PartyMembers_C">();
	}
	static class UBP_PartyMembers_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PartyMembers_C>();
	}
};
static_assert(alignof(UBP_PartyMembers_C) == 0x000008, "Wrong alignment on UBP_PartyMembers_C");
static_assert(sizeof(UBP_PartyMembers_C) == 0x000308, "Wrong size on UBP_PartyMembers_C");
static_assert(offsetof(UBP_PartyMembers_C, BP_PartyMembersEntry) == 0x000260, "Member 'UBP_PartyMembers_C::BP_PartyMembersEntry' has a wrong offset!");
static_assert(offsetof(UBP_PartyMembers_C, BP_PartyMembersEntry_0) == 0x000268, "Member 'UBP_PartyMembers_C::BP_PartyMembersEntry_0' has a wrong offset!");
static_assert(offsetof(UBP_PartyMembers_C, BP_PartyMembersEntry_1) == 0x000270, "Member 'UBP_PartyMembers_C::BP_PartyMembersEntry_1' has a wrong offset!");
static_assert(offsetof(UBP_PartyMembers_C, BP_PartyMembersEntry_2) == 0x000278, "Member 'UBP_PartyMembers_C::BP_PartyMembersEntry_2' has a wrong offset!");
static_assert(offsetof(UBP_PartyMembers_C, BP_PartyMembersEntry_3) == 0x000280, "Member 'UBP_PartyMembers_C::BP_PartyMembersEntry_3' has a wrong offset!");
static_assert(offsetof(UBP_PartyMembers_C, BP_PartyMembersEntry_4) == 0x000288, "Member 'UBP_PartyMembers_C::BP_PartyMembersEntry_4' has a wrong offset!");
static_assert(offsetof(UBP_PartyMembers_C, Entries) == 0x000290, "Member 'UBP_PartyMembers_C::Entries' has a wrong offset!");
static_assert(offsetof(UBP_PartyMembers_C, Rank) == 0x000298, "Member 'UBP_PartyMembers_C::Rank' has a wrong offset!");
static_assert(offsetof(UBP_PartyMembers_C, Banner) == 0x00029C, "Member 'UBP_PartyMembers_C::Banner' has a wrong offset!");
static_assert(offsetof(UBP_PartyMembers_C, RankDisplayType) == 0x0002A0, "Member 'UBP_PartyMembers_C::RankDisplayType' has a wrong offset!");
static_assert(offsetof(UBP_PartyMembers_C, PartyLeader) == 0x0002A8, "Member 'UBP_PartyMembers_C::PartyLeader' has a wrong offset!");

}

