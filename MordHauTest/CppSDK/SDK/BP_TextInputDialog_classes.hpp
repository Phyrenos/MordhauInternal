#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TextInputDialog

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Mordhau_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_TextInputDialog.BP_TextInputDialog_C
// 0x0098 (0x0310 - 0x0278)
class UBP_TextInputDialog_C final : public UMordhauDialog
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UBP_TwoButtonDialog_C*                  BP_TwoButtonDialog;                                // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCircularThrobber*                      Loading;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       NormalTextBox;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       PasswordTextBox;                                   // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   HintText;                                          // 0x02A8(0x0018)(Edit, BlueprintVisible)
	TMulticastInlineDelegate<void()>              LeftButtonClicked;                                 // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              RightButtonClicked;                                // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bIsPassword;                                       // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class FText Text, ETextCommit Commit_Method)> TextCommitted;                                     // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class FText Text)> TextChanged;                                       // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         NormalTextLimit;                                   // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TextInputDialog(int32 EntryPoint);
	void BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_20_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__NormalTextBox_K2Node_ComponentBoundEvent_19_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__PasswordTextBox_K2Node_ComponentBoundEvent_7_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void Hide();
	void Show();
	void BndEvt__BP_TwoButtonDialog_K2Node_ComponentBoundEvent_187_RightButtonClicked__DelegateSignature();
	void BndEvt__BP_TwoButtonDialog_K2Node_ComponentBoundEvent_183_LeftButtonClicked__DelegateSignature();
	void BndEvt__PasswordTextbox_K2Node_ComponentBoundEvent_23_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	class FText GetHintText();
	void SetLeftButtonText(const class FText& Text);
	void SetRightButtonText(const class FText& Text);
	void SetTitleText(const class FText& Title);
	void GetEnteredText(class FText* Text);
	void SetEnteredText(const class FText& EnteredText);
	void SetWaitingMode(bool IsWaitingMode);
	void SetNormalTextLimit(int32 Limit);
	void ValidateNormalText(const class FText& InputText, class FText* OutputText);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TextInputDialog_C">();
	}
	static class UBP_TextInputDialog_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TextInputDialog_C>();
	}
};
static_assert(alignof(UBP_TextInputDialog_C) == 0x000008, "Wrong alignment on UBP_TextInputDialog_C");
static_assert(sizeof(UBP_TextInputDialog_C) == 0x000310, "Wrong size on UBP_TextInputDialog_C");
static_assert(offsetof(UBP_TextInputDialog_C, UberGraphFrame) == 0x000278, "Member 'UBP_TextInputDialog_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_TextInputDialog_C, BP_TwoButtonDialog) == 0x000280, "Member 'UBP_TextInputDialog_C::BP_TwoButtonDialog' has a wrong offset!");
static_assert(offsetof(UBP_TextInputDialog_C, Loading) == 0x000288, "Member 'UBP_TextInputDialog_C::Loading' has a wrong offset!");
static_assert(offsetof(UBP_TextInputDialog_C, NormalTextBox) == 0x000290, "Member 'UBP_TextInputDialog_C::NormalTextBox' has a wrong offset!");
static_assert(offsetof(UBP_TextInputDialog_C, PasswordTextBox) == 0x000298, "Member 'UBP_TextInputDialog_C::PasswordTextBox' has a wrong offset!");
static_assert(offsetof(UBP_TextInputDialog_C, WidgetSwitcher_0) == 0x0002A0, "Member 'UBP_TextInputDialog_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UBP_TextInputDialog_C, HintText) == 0x0002A8, "Member 'UBP_TextInputDialog_C::HintText' has a wrong offset!");
static_assert(offsetof(UBP_TextInputDialog_C, LeftButtonClicked) == 0x0002C0, "Member 'UBP_TextInputDialog_C::LeftButtonClicked' has a wrong offset!");
static_assert(offsetof(UBP_TextInputDialog_C, RightButtonClicked) == 0x0002D0, "Member 'UBP_TextInputDialog_C::RightButtonClicked' has a wrong offset!");
static_assert(offsetof(UBP_TextInputDialog_C, bIsPassword) == 0x0002E0, "Member 'UBP_TextInputDialog_C::bIsPassword' has a wrong offset!");
static_assert(offsetof(UBP_TextInputDialog_C, TextCommitted) == 0x0002E8, "Member 'UBP_TextInputDialog_C::TextCommitted' has a wrong offset!");
static_assert(offsetof(UBP_TextInputDialog_C, TextChanged) == 0x0002F8, "Member 'UBP_TextInputDialog_C::TextChanged' has a wrong offset!");
static_assert(offsetof(UBP_TextInputDialog_C, NormalTextLimit) == 0x000308, "Member 'UBP_TextInputDialog_C::NormalTextLimit' has a wrong offset!");

}

