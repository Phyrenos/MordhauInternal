#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TwoTeamSelect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_TwoTeamSelect.BP_TwoTeamSelect_C.ExecuteUbergraph_BP_TwoTeamSelect
// 0x0028 (0x0028 - 0x0000)
struct BP_TwoTeamSelect_C_ExecuteUbergraph_BP_TwoTeamSelect final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TwoTeamSelect_C_ExecuteUbergraph_BP_TwoTeamSelect) == 0x000004, "Wrong alignment on BP_TwoTeamSelect_C_ExecuteUbergraph_BP_TwoTeamSelect");
static_assert(sizeof(BP_TwoTeamSelect_C_ExecuteUbergraph_BP_TwoTeamSelect) == 0x000028, "Wrong size on BP_TwoTeamSelect_C_ExecuteUbergraph_BP_TwoTeamSelect");
static_assert(offsetof(BP_TwoTeamSelect_C_ExecuteUbergraph_BP_TwoTeamSelect, EntryPoint) == 0x000000, "Member 'BP_TwoTeamSelect_C_ExecuteUbergraph_BP_TwoTeamSelect::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_ExecuteUbergraph_BP_TwoTeamSelect, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_TwoTeamSelect_C_ExecuteUbergraph_BP_TwoTeamSelect::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_ExecuteUbergraph_BP_TwoTeamSelect, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_TwoTeamSelect_C_ExecuteUbergraph_BP_TwoTeamSelect::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_ExecuteUbergraph_BP_TwoTeamSelect, K2Node_Event_IsDesignTime) == 0x000024, "Member 'BP_TwoTeamSelect_C_ExecuteUbergraph_BP_TwoTeamSelect::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function BP_TwoTeamSelect.BP_TwoTeamSelect_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_TwoTeamSelect_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TwoTeamSelect_C_PreConstruct) == 0x000001, "Wrong alignment on BP_TwoTeamSelect_C_PreConstruct");
static_assert(sizeof(BP_TwoTeamSelect_C_PreConstruct) == 0x000001, "Wrong size on BP_TwoTeamSelect_C_PreConstruct");
static_assert(offsetof(BP_TwoTeamSelect_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_TwoTeamSelect_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_TwoTeamSelect.BP_TwoTeamSelect_C.GetText_0
// 0x0030 (0x0030 - 0x0000)
struct BP_TwoTeamSelect_C_GetText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_GetGameModeName_Text;                     // 0x0018(0x0018)()
};
static_assert(alignof(BP_TwoTeamSelect_C_GetText_0) == 0x000008, "Wrong alignment on BP_TwoTeamSelect_C_GetText_0");
static_assert(sizeof(BP_TwoTeamSelect_C_GetText_0) == 0x000030, "Wrong size on BP_TwoTeamSelect_C_GetText_0");
static_assert(offsetof(BP_TwoTeamSelect_C_GetText_0, ReturnValue) == 0x000000, "Member 'BP_TwoTeamSelect_C_GetText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_GetText_0, CallFunc_GetGameModeName_Text) == 0x000018, "Member 'BP_TwoTeamSelect_C_GetText_0::CallFunc_GetGameModeName_Text' has a wrong offset!");

// Function BP_TwoTeamSelect.BP_TwoTeamSelect_C.GetText_1
// 0x0040 (0x0040 - 0x0000)
struct BP_TwoTeamSelect_C_GetText_1 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_GetMapName_NewParam;                      // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
};
static_assert(alignof(BP_TwoTeamSelect_C_GetText_1) == 0x000008, "Wrong alignment on BP_TwoTeamSelect_C_GetText_1");
static_assert(sizeof(BP_TwoTeamSelect_C_GetText_1) == 0x000040, "Wrong size on BP_TwoTeamSelect_C_GetText_1");
static_assert(offsetof(BP_TwoTeamSelect_C_GetText_1, ReturnValue) == 0x000000, "Member 'BP_TwoTeamSelect_C_GetText_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_GetText_1, CallFunc_GetMapName_NewParam) == 0x000018, "Member 'BP_TwoTeamSelect_C_GetText_1::CallFunc_GetMapName_NewParam' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_GetText_1, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_TwoTeamSelect_C_GetText_1::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_TwoTeamSelect.BP_TwoTeamSelect_C.Get_CloseButton_Visibility_0
// 0x0001 (0x0001 - 0x0000)
struct BP_TwoTeamSelect_C_Get_CloseButton_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TwoTeamSelect_C_Get_CloseButton_Visibility_0) == 0x000001, "Wrong alignment on BP_TwoTeamSelect_C_Get_CloseButton_Visibility_0");
static_assert(sizeof(BP_TwoTeamSelect_C_Get_CloseButton_Visibility_0) == 0x000001, "Wrong size on BP_TwoTeamSelect_C_Get_CloseButton_Visibility_0");
static_assert(offsetof(BP_TwoTeamSelect_C_Get_CloseButton_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_TwoTeamSelect_C_Get_CloseButton_Visibility_0::ReturnValue' has a wrong offset!");

// Function BP_TwoTeamSelect.BP_TwoTeamSelect_C.GetbIsEnabled_0
// 0x0020 (0x0020 - 0x0000)
struct BP_TwoTeamSelect_C_GetbIsEnabled_0 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauPlayerController_C*          K2Node_DynamicCast_AsBP_Mordhau_Player_Controller; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TwoTeamSelect_C_GetbIsEnabled_0) == 0x000008, "Wrong alignment on BP_TwoTeamSelect_C_GetbIsEnabled_0");
static_assert(sizeof(BP_TwoTeamSelect_C_GetbIsEnabled_0) == 0x000020, "Wrong size on BP_TwoTeamSelect_C_GetbIsEnabled_0");
static_assert(offsetof(BP_TwoTeamSelect_C_GetbIsEnabled_0, ReturnValue) == 0x000000, "Member 'BP_TwoTeamSelect_C_GetbIsEnabled_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_GetbIsEnabled_0, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_TwoTeamSelect_C_GetbIsEnabled_0::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_GetbIsEnabled_0, K2Node_DynamicCast_AsBP_Mordhau_Player_Controller) == 0x000010, "Member 'BP_TwoTeamSelect_C_GetbIsEnabled_0::K2Node_DynamicCast_AsBP_Mordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_GetbIsEnabled_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_TwoTeamSelect_C_GetbIsEnabled_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_TwoTeamSelect.BP_TwoTeamSelect_C.DisplayTeamSelectionAnnouncement
// 0x0090 (0x0090 - 0x0000)
struct BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauPlayerController_C*          K2Node_DynamicCast_AsBP_Mordhau_Player_Controller; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamSelectionDisabledTime_DisabledTime; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0018)()
};
static_assert(alignof(BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement) == 0x000008, "Wrong alignment on BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement");
static_assert(sizeof(BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement) == 0x000090, "Wrong size on BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement");
static_assert(offsetof(BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement, K2Node_DynamicCast_AsBP_Mordhau_Player_Controller) == 0x000010, "Member 'BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement::K2Node_DynamicCast_AsBP_Mordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement, CallFunc_GetTeamSelectionDisabledTime_DisabledTime) == 0x00001C, "Member 'BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement::CallFunc_GetTeamSelectionDisabledTime_DisabledTime' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement, CallFunc_Format_ReturnValue) == 0x000078, "Member 'BP_TwoTeamSelect_C_DisplayTeamSelectionAnnouncement::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_TwoTeamSelect.BP_TwoTeamSelect_C.RefreshTeamSelection
// 0x0038 (0x0038 - 0x0000)
struct BP_TwoTeamSelect_C_RefreshTeamSelection final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MordhauPlayerController_C*          K2Node_DynamicCast_AsBP_Mordhau_Player_Controller; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauHUD_C*                       K2Node_DynamicCast_AsBP_Mordhau_HUD;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TwoTeamSelect_C_RefreshTeamSelection) == 0x000008, "Wrong alignment on BP_TwoTeamSelect_C_RefreshTeamSelection");
static_assert(sizeof(BP_TwoTeamSelect_C_RefreshTeamSelection) == 0x000038, "Wrong size on BP_TwoTeamSelect_C_RefreshTeamSelection");
static_assert(offsetof(BP_TwoTeamSelect_C_RefreshTeamSelection, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_TwoTeamSelect_C_RefreshTeamSelection::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_RefreshTeamSelection, CallFunc_IsVisible_ReturnValue) == 0x000008, "Member 'BP_TwoTeamSelect_C_RefreshTeamSelection::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_RefreshTeamSelection, K2Node_DynamicCast_AsBP_Mordhau_Player_Controller) == 0x000010, "Member 'BP_TwoTeamSelect_C_RefreshTeamSelection::K2Node_DynamicCast_AsBP_Mordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_RefreshTeamSelection, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_TwoTeamSelect_C_RefreshTeamSelection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_RefreshTeamSelection, CallFunc_GetHUD_ReturnValue) == 0x000020, "Member 'BP_TwoTeamSelect_C_RefreshTeamSelection::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_RefreshTeamSelection, K2Node_DynamicCast_AsBP_Mordhau_HUD) == 0x000028, "Member 'BP_TwoTeamSelect_C_RefreshTeamSelection::K2Node_DynamicCast_AsBP_Mordhau_HUD' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_RefreshTeamSelection, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_TwoTeamSelect_C_RefreshTeamSelection::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_TwoTeamSelect.BP_TwoTeamSelect_C.OnKeyDown
// 0x02B8 (0x02B8 - 0x0000)
struct BP_TwoTeamSelect_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnKeyDown_ReturnValue;                    // 0x0128(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E0(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01F8(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TwoTeamSelect_C_OnKeyDown) == 0x000008, "Wrong alignment on BP_TwoTeamSelect_C_OnKeyDown");
static_assert(sizeof(BP_TwoTeamSelect_C_OnKeyDown) == 0x0002B8, "Wrong size on BP_TwoTeamSelect_C_OnKeyDown");
static_assert(offsetof(BP_TwoTeamSelect_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'BP_TwoTeamSelect_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'BP_TwoTeamSelect_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'BP_TwoTeamSelect_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_OnKeyDown, CallFunc_OnKeyDown_ReturnValue) == 0x000128, "Member 'BP_TwoTeamSelect_C_OnKeyDown::CallFunc_OnKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E0, "Member 'BP_TwoTeamSelect_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x0001F8, "Member 'BP_TwoTeamSelect_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0002B0, "Member 'BP_TwoTeamSelect_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TwoTeamSelect_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x0002B1, "Member 'BP_TwoTeamSelect_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");

}

