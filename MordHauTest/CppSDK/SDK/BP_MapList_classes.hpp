#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapList

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_MapList.BP_MapList_C
// 0x0040 (0x02A0 - 0x0260)
class UBP_MapList_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UBP_MapEntryLocalPlay_C*                BP_MapEntryLocalPlay;                              // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapEntryLocalPlay_C*                BP_MapEntryLocalPlay_0;                            // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapEntryLocalPlay_C*                BP_MapEntryLocalPlay_1;                            // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapEntryLocalPlay_C*                BP_MapEntryLocalPlay_2;                            // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapEntryLocalPlay_C*                BP_MapEntryLocalPlay_3;                            // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               EntryGrid;                                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapEntryLocalPlay_C*                SelectedEntry;                                     // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MapList(int32 EntryPoint);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void ClearEntries();
	void AddEntry(const class FString& GameModeMapName, class UGameModeMetadata* GameModeMetadata, class UMapMetadata* MapMetadata);
	void OnEntrySelected(class UBP_MapEntryLocalPlay_C* Entry);
	void SelectFirstEntry();
	void GetSelectedEntry(class UBP_MapEntryLocalPlay_C** SelectedEntry_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MapList_C">();
	}
	static class UBP_MapList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MapList_C>();
	}
};
static_assert(alignof(UBP_MapList_C) == 0x000008, "Wrong alignment on UBP_MapList_C");
static_assert(sizeof(UBP_MapList_C) == 0x0002A0, "Wrong size on UBP_MapList_C");
static_assert(offsetof(UBP_MapList_C, UberGraphFrame) == 0x000260, "Member 'UBP_MapList_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MapList_C, BP_MapEntryLocalPlay) == 0x000268, "Member 'UBP_MapList_C::BP_MapEntryLocalPlay' has a wrong offset!");
static_assert(offsetof(UBP_MapList_C, BP_MapEntryLocalPlay_0) == 0x000270, "Member 'UBP_MapList_C::BP_MapEntryLocalPlay_0' has a wrong offset!");
static_assert(offsetof(UBP_MapList_C, BP_MapEntryLocalPlay_1) == 0x000278, "Member 'UBP_MapList_C::BP_MapEntryLocalPlay_1' has a wrong offset!");
static_assert(offsetof(UBP_MapList_C, BP_MapEntryLocalPlay_2) == 0x000280, "Member 'UBP_MapList_C::BP_MapEntryLocalPlay_2' has a wrong offset!");
static_assert(offsetof(UBP_MapList_C, BP_MapEntryLocalPlay_3) == 0x000288, "Member 'UBP_MapList_C::BP_MapEntryLocalPlay_3' has a wrong offset!");
static_assert(offsetof(UBP_MapList_C, EntryGrid) == 0x000290, "Member 'UBP_MapList_C::EntryGrid' has a wrong offset!");
static_assert(offsetof(UBP_MapList_C, SelectedEntry) == 0x000298, "Member 'UBP_MapList_C::SelectedEntry' has a wrong offset!");

}

