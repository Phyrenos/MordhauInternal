#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentTypeIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_EquipmentTypeIndicator.BP_EquipmentTypeIndicator_C
// 0x0030 (0x0290 - 0x0260)
class UBP_EquipmentTypeIndicator_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UImage*                                 Image_73;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Icon;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_0;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              Size_Override;                                     // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEquipmentCategory                            Type;                                              // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_EquipmentTypeIndicator(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void Update(EEquipmentCategory Type_0, bool Show_All_Types);
	void Set_Icon_Color(const struct FLinearColor& InColorAndOpacity);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EquipmentTypeIndicator_C">();
	}
	static class UBP_EquipmentTypeIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_EquipmentTypeIndicator_C>();
	}
};
static_assert(alignof(UBP_EquipmentTypeIndicator_C) == 0x000008, "Wrong alignment on UBP_EquipmentTypeIndicator_C");
static_assert(sizeof(UBP_EquipmentTypeIndicator_C) == 0x000290, "Wrong size on UBP_EquipmentTypeIndicator_C");
static_assert(offsetof(UBP_EquipmentTypeIndicator_C, UberGraphFrame) == 0x000260, "Member 'UBP_EquipmentTypeIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentTypeIndicator_C, Image_73) == 0x000268, "Member 'UBP_EquipmentTypeIndicator_C::Image_73' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentTypeIndicator_C, Image_Icon) == 0x000270, "Member 'UBP_EquipmentTypeIndicator_C::Image_Icon' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentTypeIndicator_C, SizeBox_0) == 0x000278, "Member 'UBP_EquipmentTypeIndicator_C::SizeBox_0' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentTypeIndicator_C, Size_Override) == 0x000280, "Member 'UBP_EquipmentTypeIndicator_C::Size_Override' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentTypeIndicator_C, Type) == 0x000288, "Member 'UBP_EquipmentTypeIndicator_C::Type' has a wrong offset!");

}

