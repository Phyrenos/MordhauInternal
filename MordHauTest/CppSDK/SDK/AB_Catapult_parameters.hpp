#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_Catapult

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AB_Catapult.AB_Catapult_C.ExecuteUbergraph_AB_Catapult
// 0x00E0 (0x00E0 - 0x0000)
struct AB_Catapult_C_ExecuteUbergraph_AB_Catapult final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Catapult_C*                         K2Node_DynamicCast_AsBP_Catapult;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectileArmShooterComponent*         CallFunc_GetComponentByClass_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0xF];                                       // 0x0061(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult) == 0x000010, "Wrong alignment on AB_Catapult_C_ExecuteUbergraph_AB_Catapult");
static_assert(sizeof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult) == 0x0000E0, "Wrong size on AB_Catapult_C_ExecuteUbergraph_AB_Catapult");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, EntryPoint) == 0x000000, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000005, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000007, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_MakeRotator_ReturnValue) == 0x000008, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_MakeRotator_ReturnValue_1) == 0x000018, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_MakeRotator_ReturnValue_2) == 0x000028, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000038, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, K2Node_Event_DeltaTimeX) == 0x000040, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, K2Node_DynamicCast_AsBP_Catapult) == 0x000048, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::K2Node_DynamicCast_AsBP_Catapult' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_GetComponentByClass_ReturnValue) == 0x000058, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000060, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000070, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_GetVelocity_ReturnValue) == 0x0000A0, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_InverseTransformDirection_ReturnValue) == 0x0000AC, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_BreakVector_X) == 0x0000B8, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_BreakVector_Y) == 0x0000BC, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_BreakVector_Z) == 0x0000C0, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000C4, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000C8, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000CC, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Catapult_C_ExecuteUbergraph_AB_Catapult, CallFunc_Percent_FloatFloat_ReturnValue) == 0x0000D0, "Member 'AB_Catapult_C_ExecuteUbergraph_AB_Catapult::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");

// Function AB_Catapult.AB_Catapult_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AB_Catapult_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_Catapult_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AB_Catapult_C_BlueprintUpdateAnimation");
static_assert(sizeof(AB_Catapult_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AB_Catapult_C_BlueprintUpdateAnimation");
static_assert(offsetof(AB_Catapult_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AB_Catapult_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AB_Catapult.AB_Catapult_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AB_Catapult_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_Catapult_C_AnimGraph) == 0x000008, "Wrong alignment on AB_Catapult_C_AnimGraph");
static_assert(sizeof(AB_Catapult_C_AnimGraph) == 0x000010, "Wrong size on AB_Catapult_C_AnimGraph");
static_assert(offsetof(AB_Catapult_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AB_Catapult_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

