#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MordhauOnlineSubsystem

#include "Basic.hpp"

#include "MordhauOnlineSubsystem_classes.hpp"
#include "MordhauOnlineSubsystem_parameters.hpp"


namespace SDK
{

// Function MordhauOnlineSubsystem.OnlineUtilities.CanCrossplayWith
// (Final, Native, Static, Public)
// Parameters:
// EPlatform                               OtherPlatform                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineUtilities::CanCrossplayWith(EPlatform OtherPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "CanCrossplayWith");

	Params::OnlineUtilities_CanCrossplayWith Parms{};

	Parms.OtherPlatform = OtherPlatform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetBuildVersion
// (Final, Native, Static, Public)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOnlineUtilities::GetBuildVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetBuildVersion");

	Params::OnlineUtilities_GetBuildVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetCurrentPlatformName
// (Final, Native, Static, Public)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineUtilities::GetCurrentPlatformName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetCurrentPlatformName");

	Params::OnlineUtilities_GetCurrentPlatformName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetEnumKey
// (Final, Native, Static, Public)
// Parameters:
// class FString                           EnumName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EnumValue                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineUtilities::GetEnumKey(const class FString& EnumName, const int32 EnumValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetEnumKey");

	Params::OnlineUtilities_GetEnumKey Parms{};

	Parms.EnumName = std::move(EnumName);
	Parms.EnumValue = EnumValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetEnumValue
// (Final, Native, Static, Public)
// Parameters:
// class FString                           EnumName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           EnumKey                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOnlineUtilities::GetEnumValue(const class FString& EnumName, const class FString& EnumKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetEnumValue");

	Params::OnlineUtilities_GetEnumValue Parms{};

	Parms.EnumName = std::move(EnumName);
	Parms.EnumKey = std::move(EnumKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetGameServerGamePort
// (Final, Native, Static, Public)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOnlineUtilities::GetGameServerGamePort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetGameServerGamePort");

	Params::OnlineUtilities_GetGameServerGamePort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetLocalNetworkVersion
// (Final, Native, Static, Public)
// Parameters:
// uint32                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint32 UOnlineUtilities::GetLocalNetworkVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetLocalNetworkVersion");

	Params::OnlineUtilities_GetLocalNetworkVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetLocation
// (Final, Native, Static, Public)
// Parameters:
// class FString                           LocationName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EServerLocation                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EServerLocation UOnlineUtilities::GetLocation(const class FString& LocationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetLocation");

	Params::OnlineUtilities_GetLocation Parms{};

	Parms.LocationName = std::move(LocationName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetLocationDisplayName
// (Final, Native, Static, Public)
// Parameters:
// EServerLocation                         Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UOnlineUtilities::GetLocationDisplayName(EServerLocation Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetLocationDisplayName");

	Params::OnlineUtilities_GetLocationDisplayName Parms{};

	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetLocationName
// (Final, Native, Static, Public)
// Parameters:
// EServerLocation                         Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineUtilities::GetLocationName(EServerLocation Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetLocationName");

	Params::OnlineUtilities_GetLocationName Parms{};

	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetOSVersion
// (Final, Native, Static, Public)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineUtilities::GetOSVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetOSVersion");

	Params::OnlineUtilities_GetOSVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetPerforceRevision
// (Final, Native, Static, Public)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOnlineUtilities::GetPerforceRevision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetPerforceRevision");

	Params::OnlineUtilities_GetPerforceRevision Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetPerforceRevisionEnforced
// (Final, Native, Static, Public)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOnlineUtilities::GetPerforceRevisionEnforced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetPerforceRevisionEnforced");

	Params::OnlineUtilities_GetPerforceRevisionEnforced Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetPlatform
// (Final, Native, Static, Public)
// Parameters:
// EPlatform                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlatform UOnlineUtilities::GetPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetPlatform");

	Params::OnlineUtilities_GetPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetPlatformByName
// (Final, Native, Static, Public)
// Parameters:
// class FString                           PlatformName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlatform                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlatform UOnlineUtilities::GetPlatformByName(const class FString& PlatformName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetPlatformByName");

	Params::OnlineUtilities_GetPlatformByName Parms{};

	Parms.PlatformName = std::move(PlatformName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetPlatformName
// (Final, Native, Static, Public)
// Parameters:
// EPlatform                               Platform                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineUtilities::GetPlatformName(EPlatform Platform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetPlatformName");

	Params::OnlineUtilities_GetPlatformName Parms{};

	Parms.Platform = Platform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetPlatformSpecific
// (Final, Native, Static, Public)
// Parameters:
// EPlatformSpecific                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlatformSpecific UOnlineUtilities::GetPlatformSpecific()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetPlatformSpecific");

	Params::OnlineUtilities_GetPlatformSpecific Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetPlatformSpecificName
// (Final, Native, Static, Public)
// Parameters:
// EPlatformSpecific                       Platform                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineUtilities::GetPlatformSpecificName(EPlatformSpecific Platform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetPlatformSpecificName");

	Params::OnlineUtilities_GetPlatformSpecificName Parms{};

	Parms.Platform = Platform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetPlayFabAPI
// (Final, Native, Static, Public)
// Parameters:
// class UPlayFabAPI*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAPI* UOnlineUtilities::GetPlayFabAPI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetPlayFabAPI");

	Params::OnlineUtilities_GetPlayFabAPI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetPlayFabPlayer
// (Final, Native, Static, Public)
// Parameters:
// struct FPlayFabPlayer                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FPlayFabPlayer UOnlineUtilities::GetPlayFabPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetPlayFabPlayer");

	Params::OnlineUtilities_GetPlayFabPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetPlayFabServer
// (Final, Native, Static, Public)
// Parameters:
// struct FPlayFabServer                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FPlayFabServer UOnlineUtilities::GetPlayFabServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetPlayFabServer");

	Params::OnlineUtilities_GetPlayFabServer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetRegion
// (Final, Native, Static, Public)
// Parameters:
// class FString                           RegionName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EServerRegion                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EServerRegion UOnlineUtilities::GetRegion(const class FString& RegionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetRegion");

	Params::OnlineUtilities_GetRegion Parms{};

	Parms.RegionName = std::move(RegionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetRegionDisplayName
// (Final, Native, Static, Public)
// Parameters:
// EServerRegion                           Region                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UOnlineUtilities::GetRegionDisplayName(EServerRegion Region)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetRegionDisplayName");

	Params::OnlineUtilities_GetRegionDisplayName Parms{};

	Parms.Region = Region;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetRegionName
// (Final, Native, Static, Public)
// Parameters:
// EServerRegion                           Region                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineUtilities::GetRegionName(EServerRegion Region)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetRegionName");

	Params::OnlineUtilities_GetRegionName Parms{};

	Parms.Region = Region;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetReleaseVersion
// (Final, Native, Static, Public)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOnlineUtilities::GetReleaseVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetReleaseVersion");

	Params::OnlineUtilities_GetReleaseVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.GetUseLegacyPakMounting
// (Final, Native, Static, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineUtilities::GetUseLegacyPakMounting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "GetUseLegacyPakMounting");

	Params::OnlineUtilities_GetUseLegacyPakMounting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.IsDedicatedServer
// (Final, Native, Static, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineUtilities::IsDedicatedServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "IsDedicatedServer");

	Params::OnlineUtilities_IsDedicatedServer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.IsDevelopmentBranch
// (Final, Native, Static, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineUtilities::IsDevelopmentBranch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "IsDevelopmentBranch");

	Params::OnlineUtilities_IsDevelopmentBranch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.IsDevelopmentBuild
// (Final, Native, Static, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineUtilities::IsDevelopmentBuild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "IsDevelopmentBuild");

	Params::OnlineUtilities_IsDevelopmentBuild Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.IsDevelopmentEnvironment
// (Final, Native, Static, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineUtilities::IsDevelopmentEnvironment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "IsDevelopmentEnvironment");

	Params::OnlineUtilities_IsDevelopmentEnvironment Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.IsOfficialServer
// (Final, Native, Static, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineUtilities::IsOfficialServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "IsOfficialServer");

	Params::OnlineUtilities_IsOfficialServer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.IsPlayInEditor
// (Final, Native, Static, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineUtilities::IsPlayInEditor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "IsPlayInEditor");

	Params::OnlineUtilities_IsPlayInEditor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.IsPrivateIPAddress
// (Final, Native, Static, Public)
// Parameters:
// class FString                           IPAddress                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineUtilities::IsPrivateIPAddress(const class FString& IPAddress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "IsPrivateIPAddress");

	Params::OnlineUtilities_IsPrivateIPAddress Parms{};

	Parms.IPAddress = std::move(IPAddress);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.IsPublicIPAddress
// (Final, Native, Static, Public)
// Parameters:
// class FString                           IPAddress                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineUtilities::IsPublicIPAddress(const class FString& IPAddress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "IsPublicIPAddress");

	Params::OnlineUtilities_IsPublicIPAddress Parms{};

	Parms.IPAddress = std::move(IPAddress);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.IsValidIPAddress
// (Final, Native, Static, Public)
// Parameters:
// class FString                           IPAddress                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineUtilities::IsValidIPAddress(const class FString& IPAddress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "IsValidIPAddress");

	Params::OnlineUtilities_IsValidIPAddress Parms{};

	Parms.IPAddress = std::move(IPAddress);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.IsWindowsVersionOrGreater
// (Final, Native, Static, Public)
// Parameters:
// int32                                   MajorVersion                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MinorVersion                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ServicePackMajor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineUtilities::IsWindowsVersionOrGreater(int32 MajorVersion, int32 MinorVersion, int32 ServicePackMajor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "IsWindowsVersionOrGreater");

	Params::OnlineUtilities_IsWindowsVersionOrGreater Parms{};

	Parms.MajorVersion = MajorVersion;
	Parms.MinorVersion = MinorVersion;
	Parms.ServicePackMajor = ServicePackMajor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.MountPak
// (Final, Native, Static, Public)
// Parameters:
// class FString                           PakPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineUtilities::MountPak(const class FString& PakPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "MountPak");

	Params::OnlineUtilities_MountPak Parms{};

	Parms.PakPath = std::move(PakPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.RandomRangeExclude
// (Final, Native, Static, Public)
// Parameters:
// int32                                   Min                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Max                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Exclude                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOnlineUtilities::RandomRangeExclude(int32 Min, int32 Max, int32 Exclude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "RandomRangeExclude");

	Params::OnlineUtilities_RandomRangeExclude Parms{};

	Parms.Min = Min;
	Parms.Max = Max;
	Parms.Exclude = Exclude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.ReportError
// (Final, Native, Static, Public)
// Parameters:
// EReportErrorType                        ErrorType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineUtilities::ReportError(EReportErrorType ErrorType, const class FString& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "ReportError");

	Params::OnlineUtilities_ReportError Parms{};

	Parms.ErrorType = ErrorType;
	Parms.ErrorMessage = std::move(ErrorMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.ReportUser
// (Final, Native, Static, Public)
// Parameters:
// EPlayerReportType                       PlayerReportType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Platform                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReporterId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OffenderId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ServerId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnlineUtilities::ReportUser(EPlayerReportType PlayerReportType, const class FString& Platform, const class FString& ReporterId, const class FString& OffenderId, const class FString& ErrorMessage, const class FString& ServerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "ReportUser");

	Params::OnlineUtilities_ReportUser Parms{};

	Parms.PlayerReportType = PlayerReportType;
	Parms.Platform = std::move(Platform);
	Parms.ReporterId = std::move(ReporterId);
	Parms.OffenderId = std::move(OffenderId);
	Parms.ErrorMessage = std::move(ErrorMessage);
	Parms.ServerId = std::move(ServerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.SanitizePlayerName
// (Final, Native, Static, Public)
// Parameters:
// class FString                           InName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InFallback                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineUtilities::SanitizePlayerName(const class FString& InName, const class FString& InFallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "SanitizePlayerName");

	Params::OnlineUtilities_SanitizePlayerName Parms{};

	Parms.InName = std::move(InName);
	Parms.InFallback = std::move(InFallback);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.OnlineUtilities.UnmountPak
// (Final, Native, Static, Public)
// Parameters:
// class FString                           PakPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineUtilities::UnmountPak(const class FString& PakPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineUtilities", "UnmountPak");

	Params::OnlineUtilities_UnmountPak Parms{};

	Parms.PakPath = std::move(PakPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.PlayFabAPI.GetLeaderboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           LeaderboardName                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAPI::GetLeaderboard(const class FString& LeaderboardName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAPI", "GetLeaderboard");

	Params::PlayFabAPI_GetLeaderboard Parms{};

	Parms.LeaderboardName = std::move(LeaderboardName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MordhauOnlineSubsystem.PlayFabAPI.GetPlayerByShortId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ShortId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EPlatform                               PlatformFilter                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAPI::GetPlayerByShortId(const TArray<class FString>& ShortId, const EPlatform PlatformFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAPI", "GetPlayerByShortId");

	Params::PlayFabAPI_GetPlayerByShortId Parms{};

	Parms.ShortId = std::move(ShortId);
	Parms.PlatformFilter = PlatformFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MordhauOnlineSubsystem.PlayFabAPI.GetShortID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayFabAPI::GetShortID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAPI", "GetShortID");

	Params::PlayFabAPI_GetShortID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MordhauOnlineSubsystem.PlayFabAPI.IsPlayerLoggedIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayFabAPI::IsPlayerLoggedIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAPI", "IsPlayerLoggedIn");

	Params::PlayFabAPI_IsPlayerLoggedIn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

