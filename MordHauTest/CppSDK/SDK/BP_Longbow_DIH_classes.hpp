#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Longbow_DIH

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Longbow_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Longbow_DIH.BP_Longbow_DIH_C
// 0x0020 (0x0DE0 - 0x0DC0)
class ABP_Longbow_DIH_C final : public ABP_Longbow_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Longbow_DIH_C;                   // 0x0DC0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UParticleSystemComponent*               P_BlessingWeaponCharge;                            // 0x0DC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DrawTimeStart;                                     // 0x0DD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDrawing;                                         // 0x0DD4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD5[0x3];                                      // 0x0DD5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AutoRestockInterval;                               // 0x0DD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRestocking;                                      // 0x0DDC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Longbow_DIH(int32 EntryPoint);
	void SetupBlessingStats();
	void OnAmmoChanged();
	void BeginRestocking();
	void AutoRestock();
	void ChargeEffectsLoop();
	void ReceiveBeginPlay();
	void BoostProjectileDamage(float DamageMod);
	void FireProjectile(const struct FVector& Origin, const struct FRotator& Orientation, class AController* OwningController, float ExpectedDelay);
	void UpdateEquipmentState();
	void OnLoadedChanged();
	bool OnRequestFire(class AMordhauCharacter* Character);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Longbow_DIH_C">();
	}
	static class ABP_Longbow_DIH_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Longbow_DIH_C>();
	}
};
static_assert(alignof(ABP_Longbow_DIH_C) == 0x000010, "Wrong alignment on ABP_Longbow_DIH_C");
static_assert(sizeof(ABP_Longbow_DIH_C) == 0x000DE0, "Wrong size on ABP_Longbow_DIH_C");
static_assert(offsetof(ABP_Longbow_DIH_C, UberGraphFrame_BP_Longbow_DIH_C) == 0x000DC0, "Member 'ABP_Longbow_DIH_C::UberGraphFrame_BP_Longbow_DIH_C' has a wrong offset!");
static_assert(offsetof(ABP_Longbow_DIH_C, P_BlessingWeaponCharge) == 0x000DC8, "Member 'ABP_Longbow_DIH_C::P_BlessingWeaponCharge' has a wrong offset!");
static_assert(offsetof(ABP_Longbow_DIH_C, DrawTimeStart) == 0x000DD0, "Member 'ABP_Longbow_DIH_C::DrawTimeStart' has a wrong offset!");
static_assert(offsetof(ABP_Longbow_DIH_C, IsDrawing) == 0x000DD4, "Member 'ABP_Longbow_DIH_C::IsDrawing' has a wrong offset!");
static_assert(offsetof(ABP_Longbow_DIH_C, AutoRestockInterval) == 0x000DD8, "Member 'ABP_Longbow_DIH_C::AutoRestockInterval' has a wrong offset!");
static_assert(offsetof(ABP_Longbow_DIH_C, IsRestocking) == 0x000DDC, "Member 'ABP_Longbow_DIH_C::IsRestocking' has a wrong offset!");

}

