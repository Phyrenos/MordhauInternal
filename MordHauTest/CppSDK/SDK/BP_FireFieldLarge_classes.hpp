#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FireFieldLarge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterField_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FireFieldLarge.BP_FireFieldLarge_C
// 0x0178 (0x04C8 - 0x0350)
class ABP_FireFieldLarge_C final : public ABP_MasterField_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_FireFieldLarge_C;                // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UFieldSpawnComponent*                   FieldSpawn41;                                      // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn40;                                      // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn39;                                      // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn38;                                      // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn37;                                      // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn36;                                      // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn35;                                      // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn34;                                      // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn33;                                      // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn32;                                      // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn31;                                      // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn30;                                      // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn29;                                      // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn28;                                      // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn27;                                      // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn26;                                      // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn25;                                      // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn24;                                      // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn23;                                      // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn22;                                      // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn21;                                      // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn20;                                      // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn19;                                      // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn18;                                      // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn17;                                      // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn16;                                      // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn15;                                      // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn14;                                      // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn13;                                      // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn12;                                      // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn11;                                      // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn10;                                      // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn9;                                       // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn8;                                       // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn7;                                       // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn5;                                       // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn4;                                       // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn6;                                       // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn3;                                       // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn2;                                       // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSpawnComponent*                   FieldSpawn1;                                       // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         OtherDamage;                                       // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            CharFireDmgByTime;                                 // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CharFireTickByTime;                                // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WarmupTime;                                        // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FireFieldLarge(int32 EntryPoint);
	void BeginFieldDeactivation();
	void ReceiveTick(float DeltaSeconds);
	void GetAgent(class AActor** Agent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FireFieldLarge_C">();
	}
	static class ABP_FireFieldLarge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FireFieldLarge_C>();
	}
};
static_assert(alignof(ABP_FireFieldLarge_C) == 0x000008, "Wrong alignment on ABP_FireFieldLarge_C");
static_assert(sizeof(ABP_FireFieldLarge_C) == 0x0004C8, "Wrong size on ABP_FireFieldLarge_C");
static_assert(offsetof(ABP_FireFieldLarge_C, UberGraphFrame_BP_FireFieldLarge_C) == 0x000350, "Member 'ABP_FireFieldLarge_C::UberGraphFrame_BP_FireFieldLarge_C' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn41) == 0x000358, "Member 'ABP_FireFieldLarge_C::FieldSpawn41' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn40) == 0x000360, "Member 'ABP_FireFieldLarge_C::FieldSpawn40' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn39) == 0x000368, "Member 'ABP_FireFieldLarge_C::FieldSpawn39' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn38) == 0x000370, "Member 'ABP_FireFieldLarge_C::FieldSpawn38' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn37) == 0x000378, "Member 'ABP_FireFieldLarge_C::FieldSpawn37' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn36) == 0x000380, "Member 'ABP_FireFieldLarge_C::FieldSpawn36' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn35) == 0x000388, "Member 'ABP_FireFieldLarge_C::FieldSpawn35' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn34) == 0x000390, "Member 'ABP_FireFieldLarge_C::FieldSpawn34' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn33) == 0x000398, "Member 'ABP_FireFieldLarge_C::FieldSpawn33' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn32) == 0x0003A0, "Member 'ABP_FireFieldLarge_C::FieldSpawn32' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn31) == 0x0003A8, "Member 'ABP_FireFieldLarge_C::FieldSpawn31' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn30) == 0x0003B0, "Member 'ABP_FireFieldLarge_C::FieldSpawn30' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn29) == 0x0003B8, "Member 'ABP_FireFieldLarge_C::FieldSpawn29' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn28) == 0x0003C0, "Member 'ABP_FireFieldLarge_C::FieldSpawn28' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn27) == 0x0003C8, "Member 'ABP_FireFieldLarge_C::FieldSpawn27' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn26) == 0x0003D0, "Member 'ABP_FireFieldLarge_C::FieldSpawn26' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn25) == 0x0003D8, "Member 'ABP_FireFieldLarge_C::FieldSpawn25' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn24) == 0x0003E0, "Member 'ABP_FireFieldLarge_C::FieldSpawn24' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn23) == 0x0003E8, "Member 'ABP_FireFieldLarge_C::FieldSpawn23' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn22) == 0x0003F0, "Member 'ABP_FireFieldLarge_C::FieldSpawn22' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn21) == 0x0003F8, "Member 'ABP_FireFieldLarge_C::FieldSpawn21' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn20) == 0x000400, "Member 'ABP_FireFieldLarge_C::FieldSpawn20' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn19) == 0x000408, "Member 'ABP_FireFieldLarge_C::FieldSpawn19' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn18) == 0x000410, "Member 'ABP_FireFieldLarge_C::FieldSpawn18' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn17) == 0x000418, "Member 'ABP_FireFieldLarge_C::FieldSpawn17' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn16) == 0x000420, "Member 'ABP_FireFieldLarge_C::FieldSpawn16' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn15) == 0x000428, "Member 'ABP_FireFieldLarge_C::FieldSpawn15' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn14) == 0x000430, "Member 'ABP_FireFieldLarge_C::FieldSpawn14' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn13) == 0x000438, "Member 'ABP_FireFieldLarge_C::FieldSpawn13' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn12) == 0x000440, "Member 'ABP_FireFieldLarge_C::FieldSpawn12' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn11) == 0x000448, "Member 'ABP_FireFieldLarge_C::FieldSpawn11' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn10) == 0x000450, "Member 'ABP_FireFieldLarge_C::FieldSpawn10' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn9) == 0x000458, "Member 'ABP_FireFieldLarge_C::FieldSpawn9' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn8) == 0x000460, "Member 'ABP_FireFieldLarge_C::FieldSpawn8' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn7) == 0x000468, "Member 'ABP_FireFieldLarge_C::FieldSpawn7' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn5) == 0x000470, "Member 'ABP_FireFieldLarge_C::FieldSpawn5' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn4) == 0x000478, "Member 'ABP_FireFieldLarge_C::FieldSpawn4' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, Audio) == 0x000480, "Member 'ABP_FireFieldLarge_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn6) == 0x000488, "Member 'ABP_FireFieldLarge_C::FieldSpawn6' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn3) == 0x000490, "Member 'ABP_FireFieldLarge_C::FieldSpawn3' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn2) == 0x000498, "Member 'ABP_FireFieldLarge_C::FieldSpawn2' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, FieldSpawn1) == 0x0004A0, "Member 'ABP_FireFieldLarge_C::FieldSpawn1' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, OtherDamage) == 0x0004A8, "Member 'ABP_FireFieldLarge_C::OtherDamage' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, CharFireDmgByTime) == 0x0004B0, "Member 'ABP_FireFieldLarge_C::CharFireDmgByTime' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, CharFireTickByTime) == 0x0004B8, "Member 'ABP_FireFieldLarge_C::CharFireTickByTime' has a wrong offset!");
static_assert(offsetof(ABP_FireFieldLarge_C, WarmupTime) == 0x0004C0, "Member 'ABP_FireFieldLarge_C::WarmupTime' has a wrong offset!");

}

