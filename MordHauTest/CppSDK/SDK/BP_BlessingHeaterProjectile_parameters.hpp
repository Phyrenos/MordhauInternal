#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BlessingHeaterProjectile

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BlessingHeaterProjectile.BP_BlessingHeaterProjectile_C.ExecuteUbergraph_BP_BlessingHeaterProjectile
// 0x00E0 (0x00E0 - 0x0000)
struct BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 Temp_float_Variable;                               // 0x0008(0x0010)(ReferenceParm)
	TArray<float>                                 Temp_float_Variable_1;                             // 0x0018(0x0010)(ReferenceParm)
	TArray<float>                                 Temp_float_Variable_2;                             // 0x0028(0x0010)(ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_BounceForce;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_Surface;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHasHitWorld;                         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bHasStopped;                          // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetProjectileOwningController_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauCharacter*                      K2Node_DynamicCast_AsMordhau_Character;            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile) == 0x000008, "Wrong alignment on BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile");
static_assert(sizeof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile) == 0x0000E0, "Wrong size on BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, EntryPoint) == 0x000000, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, Temp_float_Variable) == 0x000008, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, Temp_float_Variable_1) == 0x000018, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, Temp_float_Variable_2) == 0x000028, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, K2Node_Event_HitLocation) == 0x00004C, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, K2Node_Event_HitNormal) == 0x000058, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, K2Node_Event_BounceForce) == 0x000064, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::K2Node_Event_BounceForce' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, K2Node_Event_Surface) == 0x000068, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::K2Node_Event_Surface' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, K2Node_Event_bHasHitWorld) == 0x000069, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::K2Node_Event_bHasHitWorld' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, K2Node_Event_bHasStopped) == 0x00006A, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::K2Node_Event_bHasStopped' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000080, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, CallFunc_GetObjectClass_ReturnValue) == 0x000088, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000094, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000098, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000A4, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, K2Node_Event_OtherActor) == 0x0000B0, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0000B8, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, CallFunc_GetProjectileOwningController_ReturnValue) == 0x0000C0, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::CallFunc_GetProjectileOwningController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, CallFunc_K2_GetPawn_ReturnValue) == 0x0000C8, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, K2Node_DynamicCast_AsMordhau_Character) == 0x0000D0, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::K2Node_DynamicCast_AsMordhau_Character' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000D9, "Member 'BP_BlessingHeaterProjectile_C_ExecuteUbergraph_BP_BlessingHeaterProjectile::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_BlessingHeaterProjectile.BP_BlessingHeaterProjectile_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_BlessingHeaterProjectile_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BlessingHeaterProjectile_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BP_BlessingHeaterProjectile_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BP_BlessingHeaterProjectile_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BP_BlessingHeaterProjectile_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BP_BlessingHeaterProjectile_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function BP_BlessingHeaterProjectile.BP_BlessingHeaterProjectile_C.OnProjectileHit
// 0x0020 (0x0020 - 0x0000)
struct BP_BlessingHeaterProjectile_C_OnProjectileHit final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceForce;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Surface;                                           // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasHitWorld;                                      // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHasStopped;                                       // 0x001E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BlessingHeaterProjectile_C_OnProjectileHit) == 0x000004, "Wrong alignment on BP_BlessingHeaterProjectile_C_OnProjectileHit");
static_assert(sizeof(BP_BlessingHeaterProjectile_C_OnProjectileHit) == 0x000020, "Wrong size on BP_BlessingHeaterProjectile_C_OnProjectileHit");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_OnProjectileHit, HitLocation) == 0x000000, "Member 'BP_BlessingHeaterProjectile_C_OnProjectileHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_OnProjectileHit, HitNormal) == 0x00000C, "Member 'BP_BlessingHeaterProjectile_C_OnProjectileHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_OnProjectileHit, BounceForce) == 0x000018, "Member 'BP_BlessingHeaterProjectile_C_OnProjectileHit::BounceForce' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_OnProjectileHit, Surface) == 0x00001C, "Member 'BP_BlessingHeaterProjectile_C_OnProjectileHit::Surface' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_OnProjectileHit, bHasHitWorld) == 0x00001D, "Member 'BP_BlessingHeaterProjectile_C_OnProjectileHit::bHasHitWorld' has a wrong offset!");
static_assert(offsetof(BP_BlessingHeaterProjectile_C_OnProjectileHit, bHasStopped) == 0x00001E, "Member 'BP_BlessingHeaterProjectile_C_OnProjectileHit::bHasStopped' has a wrong offset!");

}

