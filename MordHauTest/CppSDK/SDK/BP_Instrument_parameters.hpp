#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Instrument

#include "Basic.hpp"

#include "Mordhau_structs.hpp"


namespace SDK::Params
{

// Function BP_Instrument.BP_Instrument_C.ExecuteUbergraph_BP_Instrument
// 0x0024 (0x0024 - 0x0000)
struct BP_Instrument_C_ExecuteUbergraph_BP_Instrument final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlay_Return;                           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAttackMove                                   K2Node_Event_Move;                                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Angle;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_Tone;                           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetToneFromAttack_Tone;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Event_Command;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlay_Return_1;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Instrument_C_ExecuteUbergraph_BP_Instrument) == 0x000004, "Wrong alignment on BP_Instrument_C_ExecuteUbergraph_BP_Instrument");
static_assert(sizeof(BP_Instrument_C_ExecuteUbergraph_BP_Instrument) == 0x000024, "Wrong size on BP_Instrument_C_ExecuteUbergraph_BP_Instrument");
static_assert(offsetof(BP_Instrument_C_ExecuteUbergraph_BP_Instrument, EntryPoint) == 0x000000, "Member 'BP_Instrument_C_ExecuteUbergraph_BP_Instrument::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ExecuteUbergraph_BP_Instrument, CallFunc_CanPlay_Return) == 0x000004, "Member 'BP_Instrument_C_ExecuteUbergraph_BP_Instrument::CallFunc_CanPlay_Return' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ExecuteUbergraph_BP_Instrument, K2Node_Event_Move) == 0x000005, "Member 'BP_Instrument_C_ExecuteUbergraph_BP_Instrument::K2Node_Event_Move' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ExecuteUbergraph_BP_Instrument, K2Node_Event_Angle) == 0x000008, "Member 'BP_Instrument_C_ExecuteUbergraph_BP_Instrument::K2Node_Event_Angle' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ExecuteUbergraph_BP_Instrument, K2Node_CustomEvent_Tone) == 0x00000C, "Member 'BP_Instrument_C_ExecuteUbergraph_BP_Instrument::K2Node_CustomEvent_Tone' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ExecuteUbergraph_BP_Instrument, CallFunc_GetToneFromAttack_Tone) == 0x00000D, "Member 'BP_Instrument_C_ExecuteUbergraph_BP_Instrument::CallFunc_GetToneFromAttack_Tone' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ExecuteUbergraph_BP_Instrument, CallFunc_Add_ByteByte_ReturnValue) == 0x00000E, "Member 'BP_Instrument_C_ExecuteUbergraph_BP_Instrument::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ExecuteUbergraph_BP_Instrument, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000F, "Member 'BP_Instrument_C_ExecuteUbergraph_BP_Instrument::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ExecuteUbergraph_BP_Instrument, K2Node_Event_Command) == 0x000010, "Member 'BP_Instrument_C_ExecuteUbergraph_BP_Instrument::K2Node_Event_Command' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ExecuteUbergraph_BP_Instrument, CallFunc_CanPlay_Return_1) == 0x000014, "Member 'BP_Instrument_C_ExecuteUbergraph_BP_Instrument::CallFunc_CanPlay_Return_1' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ExecuteUbergraph_BP_Instrument, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_Instrument_C_ExecuteUbergraph_BP_Instrument::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ExecuteUbergraph_BP_Instrument, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_Instrument_C_ExecuteUbergraph_BP_Instrument::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ExecuteUbergraph_BP_Instrument, CallFunc_Conv_IntToByte_ReturnValue) == 0x000020, "Member 'BP_Instrument_C_ExecuteUbergraph_BP_Instrument::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");

// Function BP_Instrument.BP_Instrument_C.EquipmentCommand
// 0x0004 (0x0004 - 0x0000)
struct BP_Instrument_C_EquipmentCommand final
{
public:
	int32                                         Command;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Instrument_C_EquipmentCommand) == 0x000004, "Wrong alignment on BP_Instrument_C_EquipmentCommand");
static_assert(sizeof(BP_Instrument_C_EquipmentCommand) == 0x000004, "Wrong size on BP_Instrument_C_EquipmentCommand");
static_assert(offsetof(BP_Instrument_C_EquipmentCommand, Command) == 0x000000, "Member 'BP_Instrument_C_EquipmentCommand::Command' has a wrong offset!");

// Function BP_Instrument.BP_Instrument_C.ServerSetTone
// 0x0001 (0x0001 - 0x0000)
struct BP_Instrument_C_ServerSetTone final
{
public:
	uint8                                         Tone;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Instrument_C_ServerSetTone) == 0x000001, "Wrong alignment on BP_Instrument_C_ServerSetTone");
static_assert(sizeof(BP_Instrument_C_ServerSetTone) == 0x000001, "Wrong size on BP_Instrument_C_ServerSetTone");
static_assert(offsetof(BP_Instrument_C_ServerSetTone, Tone) == 0x000000, "Member 'BP_Instrument_C_ServerSetTone::Tone' has a wrong offset!");

// Function BP_Instrument.BP_Instrument_C.RequestAttack
// 0x0008 (0x0008 - 0x0000)
struct BP_Instrument_C_RequestAttack final
{
public:
	EAttackMove                                   Move;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Angle;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Instrument_C_RequestAttack) == 0x000004, "Wrong alignment on BP_Instrument_C_RequestAttack");
static_assert(sizeof(BP_Instrument_C_RequestAttack) == 0x000008, "Wrong size on BP_Instrument_C_RequestAttack");
static_assert(offsetof(BP_Instrument_C_RequestAttack, Move) == 0x000000, "Member 'BP_Instrument_C_RequestAttack::Move' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_RequestAttack, Angle) == 0x000004, "Member 'BP_Instrument_C_RequestAttack::Angle' has a wrong offset!");

// Function BP_Instrument.BP_Instrument_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct BP_Instrument_C_UserConstructionScript final
{
public:
	TArray<class UAudioComponent*>                K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_Instrument_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Instrument_C_UserConstructionScript");
static_assert(sizeof(BP_Instrument_C_UserConstructionScript) == 0x000010, "Wrong size on BP_Instrument_C_UserConstructionScript");
static_assert(offsetof(BP_Instrument_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_Instrument_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_Instrument.BP_Instrument_C.OnRep_ReplicatedTone
// 0x0018 (0x0018 - 0x0000)
struct BP_Instrument_C_OnRep_ReplicatedTone final
{
public:
	bool                                          Parent;                                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Tone;                                              // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetParentCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyPlayerControlledIncludingVehicle_ReturnValue; // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Instrument_C_OnRep_ReplicatedTone) == 0x000008, "Wrong alignment on BP_Instrument_C_OnRep_ReplicatedTone");
static_assert(sizeof(BP_Instrument_C_OnRep_ReplicatedTone) == 0x000018, "Wrong size on BP_Instrument_C_OnRep_ReplicatedTone");
static_assert(offsetof(BP_Instrument_C_OnRep_ReplicatedTone, Parent) == 0x000000, "Member 'BP_Instrument_C_OnRep_ReplicatedTone::Parent' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_OnRep_ReplicatedTone, Tone) == 0x000001, "Member 'BP_Instrument_C_OnRep_ReplicatedTone::Tone' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_OnRep_ReplicatedTone, CallFunc_IsDedicatedServer_ReturnValue) == 0x000002, "Member 'BP_Instrument_C_OnRep_ReplicatedTone::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_OnRep_ReplicatedTone, CallFunc_GetParentCharacter_ReturnValue) == 0x000008, "Member 'BP_Instrument_C_OnRep_ReplicatedTone::CallFunc_GetParentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_OnRep_ReplicatedTone, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_Instrument_C_OnRep_ReplicatedTone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_OnRep_ReplicatedTone, CallFunc_IsLocallyPlayerControlledIncludingVehicle_ReturnValue) == 0x000011, "Member 'BP_Instrument_C_OnRep_ReplicatedTone::CallFunc_IsLocallyPlayerControlledIncludingVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_OnRep_ReplicatedTone, CallFunc_Subtract_ByteByte_ReturnValue) == 0x000012, "Member 'BP_Instrument_C_OnRep_ReplicatedTone::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_OnRep_ReplicatedTone, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x000013, "Member 'BP_Instrument_C_OnRep_ReplicatedTone::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Instrument.BP_Instrument_C.PlayTone
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Instrument_C_PlayTone final
{
public:
	uint8                                         Tone;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundWave*                             CallFunc_Array_Get_Item_2;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundWave*                             CallFunc_Array_Get_Item_3;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetParentCharacter_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsDead_ReturnValue;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauMotion*                         CallFunc_GetMotion_ReturnValue;                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_Get_ReturnValue;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIdleMotion*                            K2Node_DynamicCast_AsIdle_Motion;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Instrument_C_PlayTone) == 0x000008, "Wrong alignment on BP_Instrument_C_PlayTone");
static_assert(sizeof(BP_Instrument_C_PlayTone) == 0x0000B0, "Wrong size on BP_Instrument_C_PlayTone");
static_assert(offsetof(BP_Instrument_C_PlayTone, Tone) == 0x000000, "Member 'BP_Instrument_C_PlayTone::Tone' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'BP_Instrument_C_PlayTone::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_Instrument_C_PlayTone::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_GetTimeSeconds_ReturnValue) == 0x000010, "Member 'BP_Instrument_C_PlayTone::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x000014, "Member 'BP_Instrument_C_PlayTone::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_Instrument_C_PlayTone::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Less_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_Instrument_C_PlayTone::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_Instrument_C_PlayTone::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Conv_IntToByte_ReturnValue) == 0x000024, "Member 'BP_Instrument_C_PlayTone::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x000025, "Member 'BP_Instrument_C_PlayTone::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'BP_Instrument_C_PlayTone::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'BP_Instrument_C_PlayTone::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Subtract_ByteByte_ReturnValue) == 0x000030, "Member 'BP_Instrument_C_PlayTone::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000034, "Member 'BP_Instrument_C_PlayTone::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_Instrument_C_PlayTone::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_Instrument_C_PlayTone::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Divide_IntInt_ReturnValue) == 0x000040, "Member 'BP_Instrument_C_PlayTone::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Clamp_ReturnValue) == 0x000044, "Member 'BP_Instrument_C_PlayTone::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BP_Instrument_C_PlayTone::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Array_Get_Item_2) == 0x000050, "Member 'BP_Instrument_C_PlayTone::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Multiply_IntInt_ReturnValue) == 0x000058, "Member 'BP_Instrument_C_PlayTone::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Array_Length_ReturnValue_2) == 0x00005C, "Member 'BP_Instrument_C_PlayTone::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_Instrument_C_PlayTone::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Percent_IntInt_ReturnValue) == 0x000064, "Member 'BP_Instrument_C_PlayTone::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000068, "Member 'BP_Instrument_C_PlayTone::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_Instrument_C_PlayTone::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Array_Get_Item_3) == 0x000070, "Member 'BP_Instrument_C_PlayTone::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000078, "Member 'BP_Instrument_C_PlayTone::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_GetParentCharacter_ReturnValue) == 0x000080, "Member 'BP_Instrument_C_PlayTone::CallFunc_GetParentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_GetIsDead_ReturnValue) == 0x000088, "Member 'BP_Instrument_C_PlayTone::CallFunc_GetIsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'BP_Instrument_C_PlayTone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_GetMotion_ReturnValue) == 0x000090, "Member 'BP_Instrument_C_PlayTone::CallFunc_GetMotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_Get_ReturnValue) == 0x000098, "Member 'BP_Instrument_C_PlayTone::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, K2Node_DynamicCast_AsIdle_Motion) == 0x0000A0, "Member 'BP_Instrument_C_PlayTone::K2Node_DynamicCast_AsIdle_Motion' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_Instrument_C_PlayTone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_PlayTone, CallFunc_PlayAnimMontage_ReturnValue) == 0x0000AC, "Member 'BP_Instrument_C_PlayTone::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");

// Function BP_Instrument.BP_Instrument_C.GetToneFromAttack
// 0x000C (0x000C - 0x0000)
struct BP_Instrument_C_GetToneFromAttack final
{
public:
	EAttackMove                                   Move;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Angle;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Tone;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Instrument_C_GetToneFromAttack) == 0x000004, "Wrong alignment on BP_Instrument_C_GetToneFromAttack");
static_assert(sizeof(BP_Instrument_C_GetToneFromAttack) == 0x00000C, "Wrong size on BP_Instrument_C_GetToneFromAttack");
static_assert(offsetof(BP_Instrument_C_GetToneFromAttack, Move) == 0x000000, "Member 'BP_Instrument_C_GetToneFromAttack::Move' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_GetToneFromAttack, Angle) == 0x000004, "Member 'BP_Instrument_C_GetToneFromAttack::Angle' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_GetToneFromAttack, Tone) == 0x000008, "Member 'BP_Instrument_C_GetToneFromAttack::Tone' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_GetToneFromAttack, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000009, "Member 'BP_Instrument_C_GetToneFromAttack::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_GetToneFromAttack, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000A, "Member 'BP_Instrument_C_GetToneFromAttack::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_GetToneFromAttack, K2Node_SwitchEnum_CmpSuccess) == 0x00000B, "Member 'BP_Instrument_C_GetToneFromAttack::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Instrument.BP_Instrument_C.RequestBlock
// 0x0050 (0x0050 - 0x0000)
struct BP_Instrument_C_RequestBlock final
{
public:
	EBlockType                                    BlockType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAllowFTP;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanPlay_Return;                           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RequestBlock_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetParentCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauPlayerController_C*          K2Node_DynamicCast_AsBP_Mordhau_Player_Controller; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnglingAngle_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Instrument_C_RequestBlock) == 0x000008, "Wrong alignment on BP_Instrument_C_RequestBlock");
static_assert(sizeof(BP_Instrument_C_RequestBlock) == 0x000050, "Wrong size on BP_Instrument_C_RequestBlock");
static_assert(offsetof(BP_Instrument_C_RequestBlock, BlockType) == 0x000000, "Member 'BP_Instrument_C_RequestBlock::BlockType' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_RequestBlock, bAllowFTP) == 0x000001, "Member 'BP_Instrument_C_RequestBlock::bAllowFTP' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_RequestBlock, ReturnValue) == 0x000002, "Member 'BP_Instrument_C_RequestBlock::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_RequestBlock, CallFunc_CanPlay_Return) == 0x000003, "Member 'BP_Instrument_C_RequestBlock::CallFunc_CanPlay_Return' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_RequestBlock, CallFunc_RequestBlock_ReturnValue) == 0x000004, "Member 'BP_Instrument_C_RequestBlock::CallFunc_RequestBlock_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_RequestBlock, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_Instrument_C_RequestBlock::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_RequestBlock, CallFunc_GetParentCharacter_ReturnValue) == 0x000010, "Member 'BP_Instrument_C_RequestBlock::CallFunc_GetParentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_RequestBlock, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Instrument_C_RequestBlock::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_RequestBlock, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'BP_Instrument_C_RequestBlock::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_RequestBlock, K2Node_DynamicCast_AsBP_Mordhau_Player_Controller) == 0x000028, "Member 'BP_Instrument_C_RequestBlock::K2Node_DynamicCast_AsBP_Mordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_RequestBlock, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Instrument_C_RequestBlock::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_RequestBlock, CallFunc_GetAnglingAngle_ReturnValue) == 0x000034, "Member 'BP_Instrument_C_RequestBlock::CallFunc_GetAnglingAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_RequestBlock, CallFunc_MapRangeClamped_ReturnValue) == 0x000038, "Member 'BP_Instrument_C_RequestBlock::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_RequestBlock, CallFunc_Round_ReturnValue) == 0x00003C, "Member 'BP_Instrument_C_RequestBlock::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_RequestBlock, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_Instrument_C_RequestBlock::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_RequestBlock, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_Instrument_C_RequestBlock::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_RequestBlock, CallFunc_Conv_IntToByte_ReturnValue) == 0x000048, "Member 'BP_Instrument_C_RequestBlock::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");

// Function BP_Instrument.BP_Instrument_C.ServerSetToneAndPlay
// 0x0038 (0x0038 - 0x0000)
struct BP_Instrument_C_ServerSetToneAndPlay final
{
public:
	uint8                                         Tone;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetParentCharacter_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyPlayerControlledIncludingVehicle_ReturnValue; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Instrument_C_ServerSetToneAndPlay) == 0x000008, "Wrong alignment on BP_Instrument_C_ServerSetToneAndPlay");
static_assert(sizeof(BP_Instrument_C_ServerSetToneAndPlay) == 0x000038, "Wrong size on BP_Instrument_C_ServerSetToneAndPlay");
static_assert(offsetof(BP_Instrument_C_ServerSetToneAndPlay, Tone) == 0x000000, "Member 'BP_Instrument_C_ServerSetToneAndPlay::Tone' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ServerSetToneAndPlay, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_Instrument_C_ServerSetToneAndPlay::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ServerSetToneAndPlay, CallFunc_Conv_IntToByte_ReturnValue) == 0x000008, "Member 'BP_Instrument_C_ServerSetToneAndPlay::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ServerSetToneAndPlay, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x00000C, "Member 'BP_Instrument_C_ServerSetToneAndPlay::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ServerSetToneAndPlay, CallFunc_Less_ByteByte_ReturnValue) == 0x000010, "Member 'BP_Instrument_C_ServerSetToneAndPlay::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ServerSetToneAndPlay, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_Instrument_C_ServerSetToneAndPlay::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ServerSetToneAndPlay, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_Instrument_C_ServerSetToneAndPlay::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ServerSetToneAndPlay, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'BP_Instrument_C_ServerSetToneAndPlay::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ServerSetToneAndPlay, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000020, "Member 'BP_Instrument_C_ServerSetToneAndPlay::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ServerSetToneAndPlay, CallFunc_GetParentCharacter_ReturnValue) == 0x000028, "Member 'BP_Instrument_C_ServerSetToneAndPlay::CallFunc_GetParentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ServerSetToneAndPlay, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_Instrument_C_ServerSetToneAndPlay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_ServerSetToneAndPlay, CallFunc_IsLocallyPlayerControlledIncludingVehicle_ReturnValue) == 0x000031, "Member 'BP_Instrument_C_ServerSetToneAndPlay::CallFunc_IsLocallyPlayerControlledIncludingVehicle_ReturnValue' has a wrong offset!");

// Function BP_Instrument.BP_Instrument_C.CanPlay
// 0x0030 (0x0030 - 0x0000)
struct BP_Instrument_C_CanPlay final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetParentCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauMotion*                         CallFunc_GetMotion_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIdleMotion*                            K2Node_DynamicCast_AsIdle_Motion;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Instrument_C_CanPlay) == 0x000008, "Wrong alignment on BP_Instrument_C_CanPlay");
static_assert(sizeof(BP_Instrument_C_CanPlay) == 0x000030, "Wrong size on BP_Instrument_C_CanPlay");
static_assert(offsetof(BP_Instrument_C_CanPlay, Return) == 0x000000, "Member 'BP_Instrument_C_CanPlay::Return' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_CanPlay, CallFunc_GetParentCharacter_ReturnValue) == 0x000008, "Member 'BP_Instrument_C_CanPlay::CallFunc_GetParentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_CanPlay, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_Instrument_C_CanPlay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_CanPlay, CallFunc_GetMotion_ReturnValue) == 0x000018, "Member 'BP_Instrument_C_CanPlay::CallFunc_GetMotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_CanPlay, K2Node_DynamicCast_AsIdle_Motion) == 0x000020, "Member 'BP_Instrument_C_CanPlay::K2Node_DynamicCast_AsIdle_Motion' has a wrong offset!");
static_assert(offsetof(BP_Instrument_C_CanPlay, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Instrument_C_CanPlay::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

