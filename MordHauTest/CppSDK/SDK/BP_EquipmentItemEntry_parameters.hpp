#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentItemEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Mordhau_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_EquipmentItemEntry.BP_EquipmentItemEntry_C.ExecuteUbergraph_BP_EquipmentItemEntry
// 0x0034 (0x0034 - 0x0000)
struct BP_EquipmentItemEntry_C_ExecuteUbergraph_BP_EquipmentItemEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_EquipmentItemEntry_C_ExecuteUbergraph_BP_EquipmentItemEntry) == 0x000004, "Wrong alignment on BP_EquipmentItemEntry_C_ExecuteUbergraph_BP_EquipmentItemEntry");
static_assert(sizeof(BP_EquipmentItemEntry_C_ExecuteUbergraph_BP_EquipmentItemEntry) == 0x000034, "Wrong size on BP_EquipmentItemEntry_C_ExecuteUbergraph_BP_EquipmentItemEntry");
static_assert(offsetof(BP_EquipmentItemEntry_C_ExecuteUbergraph_BP_EquipmentItemEntry, EntryPoint) == 0x000000, "Member 'BP_EquipmentItemEntry_C_ExecuteUbergraph_BP_EquipmentItemEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_ExecuteUbergraph_BP_EquipmentItemEntry, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_EquipmentItemEntry_C_ExecuteUbergraph_BP_EquipmentItemEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_ExecuteUbergraph_BP_EquipmentItemEntry, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_EquipmentItemEntry_C_ExecuteUbergraph_BP_EquipmentItemEntry::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_ExecuteUbergraph_BP_EquipmentItemEntry, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'BP_EquipmentItemEntry_C_ExecuteUbergraph_BP_EquipmentItemEntry::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function BP_EquipmentItemEntry.BP_EquipmentItemEntry_C.Initialize Equipment Entry
// 0x01B0 (0x01B0 - 0x0000)
struct BP_EquipmentItemEntry_C_Initialize_Equipment_Entry final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetGoldAndRankUnlockRequirement_Gold;     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGoldAndRankUnlockRequirement_Rank;     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetUnlockTooltipText_TooltipText;         // 0x0020(0x0018)()
	EEquipmentCategory                            Temp_byte_Variable_3;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEquipmentSkinEntry>            Temp_struct_Variable_6;                            // 0x00A0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEquipmentSkinEntry                    CallFunc_Array_Get_Item;                           // 0x00C8(0x0058)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0134(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayFabID_ReturnValue;                 // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x015C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0170(0x0028)(UObjectWrapper)
	bool                                          Temp_bool_Variable_1;                              // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauInventory*                      CallFunc_GetMordhauInventory_ReturnValue;          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasSkin_ReturnValue;                      // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry) == 0x000008, "Wrong alignment on BP_EquipmentItemEntry_C_Initialize_Equipment_Entry");
static_assert(sizeof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry) == 0x0001B0, "Wrong size on BP_EquipmentItemEntry_C_Initialize_Equipment_Entry");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, Temp_byte_Variable) == 0x000000, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, Temp_bool_Variable) == 0x000001, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, Temp_byte_Variable_1) == 0x000002, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, Temp_byte_Variable_2) == 0x000003, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, CallFunc_GetGoldAndRankUnlockRequirement_Gold) == 0x000018, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::CallFunc_GetGoldAndRankUnlockRequirement_Gold' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, CallFunc_GetGoldAndRankUnlockRequirement_Rank) == 0x00001C, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::CallFunc_GetGoldAndRankUnlockRequirement_Rank' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, CallFunc_GetUnlockTooltipText_TooltipText) == 0x000020, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::CallFunc_GetUnlockTooltipText_TooltipText' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, Temp_byte_Variable_3) == 0x000038, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, Temp_struct_Variable) == 0x00003C, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, Temp_struct_Variable_1) == 0x00004C, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, Temp_struct_Variable_2) == 0x00005C, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, Temp_struct_Variable_3) == 0x00006C, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, Temp_struct_Variable_4) == 0x00007C, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, Temp_struct_Variable_5) == 0x00008C, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, Temp_struct_Variable_6) == 0x0000A0, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, CallFunc_Not_PreBool_ReturnValue) == 0x0000B0, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, CallFunc_PlayAnimation_ReturnValue) == 0x0000B8, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, CallFunc_BooleanAND_ReturnValue) == 0x0000C0, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, K2Node_Select_Default) == 0x0000C1, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000C2, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, CallFunc_IsValidClass_ReturnValue) == 0x0000C3, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, CallFunc_Greater_IntInt_ReturnValue) == 0x000124, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000125, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, CallFunc_Array_Get_Item_1) == 0x000128, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000130, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, K2Node_Select_Default_1) == 0x000134, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, CallFunc_GetPlayFabID_ReturnValue) == 0x000148, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::CallFunc_GetPlayFabID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, Temp_byte_Variable_4) == 0x000158, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, K2Node_MakeStruct_LinearColor) == 0x00015C, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, K2Node_MakeStruct_SlateColor) == 0x000170, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, Temp_bool_Variable_1) == 0x000198, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, CallFunc_GetMordhauInventory_ReturnValue) == 0x0001A0, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::CallFunc_GetMordhauInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, K2Node_Select_Default_2) == 0x0001A8, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, CallFunc_HasSkin_ReturnValue) == 0x0001A9, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::CallFunc_HasSkin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Initialize_Equipment_Entry, CallFunc_BooleanOR_ReturnValue) == 0x0001AA, "Member 'BP_EquipmentItemEntry_C_Initialize_Equipment_Entry::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_EquipmentItemEntry.BP_EquipmentItemEntry_C.Get_CostText_Text_0
// 0x0030 (0x0030 - 0x0000)
struct BP_EquipmentItemEntry_C_Get_CostText_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
};
static_assert(alignof(BP_EquipmentItemEntry_C_Get_CostText_Text_0) == 0x000008, "Wrong alignment on BP_EquipmentItemEntry_C_Get_CostText_Text_0");
static_assert(sizeof(BP_EquipmentItemEntry_C_Get_CostText_Text_0) == 0x000030, "Wrong size on BP_EquipmentItemEntry_C_Get_CostText_Text_0");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_CostText_Text_0, ReturnValue) == 0x000000, "Member 'BP_EquipmentItemEntry_C_Get_CostText_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_CostText_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'BP_EquipmentItemEntry_C_Get_CostText_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function BP_EquipmentItemEntry.BP_EquipmentItemEntry_C.Get_CostAndIconBox_Visibility_0
// 0x0006 (0x0006 - 0x0000)
struct BP_EquipmentItemEntry_C_Get_CostAndIconBox_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentItemEntry_C_Get_CostAndIconBox_Visibility_0) == 0x000001, "Wrong alignment on BP_EquipmentItemEntry_C_Get_CostAndIconBox_Visibility_0");
static_assert(sizeof(BP_EquipmentItemEntry_C_Get_CostAndIconBox_Visibility_0) == 0x000006, "Wrong size on BP_EquipmentItemEntry_C_Get_CostAndIconBox_Visibility_0");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_CostAndIconBox_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_EquipmentItemEntry_C_Get_CostAndIconBox_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_CostAndIconBox_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_EquipmentItemEntry_C_Get_CostAndIconBox_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_CostAndIconBox_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_EquipmentItemEntry_C_Get_CostAndIconBox_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_CostAndIconBox_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_EquipmentItemEntry_C_Get_CostAndIconBox_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_CostAndIconBox_Visibility_0, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_EquipmentItemEntry_C_Get_CostAndIconBox_Visibility_0::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_CostAndIconBox_Visibility_0, K2Node_Select_Default) == 0x000005, "Member 'BP_EquipmentItemEntry_C_Get_CostAndIconBox_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_EquipmentItemEntry.BP_EquipmentItemEntry_C.Get_ic_locked_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct BP_EquipmentItemEntry_C_Get_ic_locked_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentItemEntry_C_Get_ic_locked_Visibility_0) == 0x000001, "Wrong alignment on BP_EquipmentItemEntry_C_Get_ic_locked_Visibility_0");
static_assert(sizeof(BP_EquipmentItemEntry_C_Get_ic_locked_Visibility_0) == 0x000005, "Wrong size on BP_EquipmentItemEntry_C_Get_ic_locked_Visibility_0");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_ic_locked_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_EquipmentItemEntry_C_Get_ic_locked_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_ic_locked_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_EquipmentItemEntry_C_Get_ic_locked_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_ic_locked_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_EquipmentItemEntry_C_Get_ic_locked_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_ic_locked_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_EquipmentItemEntry_C_Get_ic_locked_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_ic_locked_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'BP_EquipmentItemEntry_C_Get_ic_locked_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_EquipmentItemEntry.BP_EquipmentItemEntry_C.Get_GradientOverlay_ColorAndOpacity_0
// 0x0010 (0x0010 - 0x0000)
struct BP_EquipmentItemEntry_C_Get_GradientOverlay_ColorAndOpacity_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentItemEntry_C_Get_GradientOverlay_ColorAndOpacity_0) == 0x000004, "Wrong alignment on BP_EquipmentItemEntry_C_Get_GradientOverlay_ColorAndOpacity_0");
static_assert(sizeof(BP_EquipmentItemEntry_C_Get_GradientOverlay_ColorAndOpacity_0) == 0x000010, "Wrong size on BP_EquipmentItemEntry_C_Get_GradientOverlay_ColorAndOpacity_0");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_GradientOverlay_ColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'BP_EquipmentItemEntry_C_Get_GradientOverlay_ColorAndOpacity_0::ReturnValue' has a wrong offset!");

// Function BP_EquipmentItemEntry.BP_EquipmentItemEntry_C.Get_Image_10_ColorAndOpacity_0
// 0x006C (0x006C - 0x0000)
struct BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0) == 0x000004, "Wrong alignment on BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0");
static_assert(sizeof(BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0) == 0x00006C, "Wrong size on BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0, Temp_bool_Variable) == 0x000010, "Member 'BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0, Temp_struct_Variable) == 0x000014, "Member 'BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0, Temp_struct_Variable_1) == 0x000024, "Member 'BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0, Temp_bool_Variable_1) == 0x000034, "Member 'BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0, Temp_struct_Variable_2) == 0x000038, "Member 'BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0, CallFunc_IsHovered_ReturnValue) == 0x000048, "Member 'BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0, K2Node_Select_Default) == 0x00004C, "Member 'BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0, K2Node_Select_Default_1) == 0x00005C, "Member 'BP_EquipmentItemEntry_C_Get_Image_10_ColorAndOpacity_0::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_EquipmentItemEntry.BP_EquipmentItemEntry_C.Update Entry Name
// 0x00D8 (0x00D8 - 0x0000)
struct BP_EquipmentItemEntry_C_Update_Entry_Name final
{
public:
	class FText                                   Param_Name_0;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C0(0x0018)()
};
static_assert(alignof(BP_EquipmentItemEntry_C_Update_Entry_Name) == 0x000008, "Wrong alignment on BP_EquipmentItemEntry_C_Update_Entry_Name");
static_assert(sizeof(BP_EquipmentItemEntry_C_Update_Entry_Name) == 0x0000D8, "Wrong size on BP_EquipmentItemEntry_C_Update_Entry_Name");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Entry_Name, Param_Name_0) == 0x000000, "Member 'BP_EquipmentItemEntry_C_Update_Entry_Name::Param_Name_0' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Entry_Name, CallFunc_Conv_TextToString_ReturnValue) == 0x000018, "Member 'BP_EquipmentItemEntry_C_Update_Entry_Name::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Entry_Name, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000028, "Member 'BP_EquipmentItemEntry_C_Update_Entry_Name::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Entry_Name, CallFunc_FindSubstring_ReturnValue) == 0x000038, "Member 'BP_EquipmentItemEntry_C_Update_Entry_Name::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Entry_Name, CallFunc_Len_ReturnValue) == 0x00003C, "Member 'BP_EquipmentItemEntry_C_Update_Entry_Name::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Entry_Name, CallFunc_Contains_ReturnValue) == 0x000040, "Member 'BP_EquipmentItemEntry_C_Update_Entry_Name::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Entry_Name, CallFunc_GetSubstring_ReturnValue) == 0x000048, "Member 'BP_EquipmentItemEntry_C_Update_Entry_Name::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Entry_Name, CallFunc_Split_LeftS) == 0x000058, "Member 'BP_EquipmentItemEntry_C_Update_Entry_Name::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Entry_Name, CallFunc_Split_RightS) == 0x000068, "Member 'BP_EquipmentItemEntry_C_Update_Entry_Name::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Entry_Name, CallFunc_Split_ReturnValue) == 0x000078, "Member 'BP_EquipmentItemEntry_C_Update_Entry_Name::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Entry_Name, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'BP_EquipmentItemEntry_C_Update_Entry_Name::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Entry_Name, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'BP_EquipmentItemEntry_C_Update_Entry_Name::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Entry_Name, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'BP_EquipmentItemEntry_C_Update_Entry_Name::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Entry_Name, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B0, "Member 'BP_EquipmentItemEntry_C_Update_Entry_Name::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Entry_Name, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C0, "Member 'BP_EquipmentItemEntry_C_Update_Entry_Name::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_EquipmentItemEntry.BP_EquipmentItemEntry_C.Update Tooltip Widget
// 0x0038 (0x0038 - 0x0000)
struct BP_EquipmentItemEntry_C_Update_Tooltip_Widget final
{
public:
	class UBP_EquipmentTooltip_C*                 Tooltip_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EquipmentTooltip_C*                 Equipment_Toolip;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EquipmentTooltip_C*                 CallFunc_Update_Tooltip_Equipment_Toolip;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauWeapon*                         K2Node_DynamicCast_AsMordhau_Weapon;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EquipmentTooltip_C*                 CallFunc_Update_Tooltip_Equipment_Toolip_1;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EquipmentTooltip_C*                 CallFunc_Update_Tooltip_Equipment_Toolip_2;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentItemEntry_C_Update_Tooltip_Widget) == 0x000008, "Wrong alignment on BP_EquipmentItemEntry_C_Update_Tooltip_Widget");
static_assert(sizeof(BP_EquipmentItemEntry_C_Update_Tooltip_Widget) == 0x000038, "Wrong size on BP_EquipmentItemEntry_C_Update_Tooltip_Widget");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Tooltip_Widget, Tooltip_0) == 0x000000, "Member 'BP_EquipmentItemEntry_C_Update_Tooltip_Widget::Tooltip_0' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Tooltip_Widget, Equipment_Toolip) == 0x000008, "Member 'BP_EquipmentItemEntry_C_Update_Tooltip_Widget::Equipment_Toolip' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Tooltip_Widget, CallFunc_Update_Tooltip_Equipment_Toolip) == 0x000010, "Member 'BP_EquipmentItemEntry_C_Update_Tooltip_Widget::CallFunc_Update_Tooltip_Equipment_Toolip' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Tooltip_Widget, K2Node_DynamicCast_AsMordhau_Weapon) == 0x000018, "Member 'BP_EquipmentItemEntry_C_Update_Tooltip_Widget::K2Node_DynamicCast_AsMordhau_Weapon' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Tooltip_Widget, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EquipmentItemEntry_C_Update_Tooltip_Widget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Tooltip_Widget, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_EquipmentItemEntry_C_Update_Tooltip_Widget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Tooltip_Widget, CallFunc_Update_Tooltip_Equipment_Toolip_1) == 0x000028, "Member 'BP_EquipmentItemEntry_C_Update_Tooltip_Widget::CallFunc_Update_Tooltip_Equipment_Toolip_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Update_Tooltip_Widget, CallFunc_Update_Tooltip_Equipment_Toolip_2) == 0x000030, "Member 'BP_EquipmentItemEntry_C_Update_Tooltip_Widget::CallFunc_Update_Tooltip_Equipment_Toolip_2' has a wrong offset!");

// Function BP_EquipmentItemEntry.BP_EquipmentItemEntry_C.Get_Image_ColorAndOpacity_0
// 0x0020 (0x0020 - 0x0000)
struct BP_EquipmentItemEntry_C_Get_Image_ColorAndOpacity_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentItemEntry_C_Get_Image_ColorAndOpacity_0) == 0x000004, "Wrong alignment on BP_EquipmentItemEntry_C_Get_Image_ColorAndOpacity_0");
static_assert(sizeof(BP_EquipmentItemEntry_C_Get_Image_ColorAndOpacity_0) == 0x000020, "Wrong size on BP_EquipmentItemEntry_C_Get_Image_ColorAndOpacity_0");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_Image_ColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'BP_EquipmentItemEntry_C_Get_Image_ColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_Image_ColorAndOpacity_0, CallFunc_SelectColor_ReturnValue) == 0x000010, "Member 'BP_EquipmentItemEntry_C_Get_Image_ColorAndOpacity_0::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function BP_EquipmentItemEntry.BP_EquipmentItemEntry_C.GetVisibility_0
// 0x0005 (0x0005 - 0x0000)
struct BP_EquipmentItemEntry_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentItemEntry_C_GetVisibility_0) == 0x000001, "Wrong alignment on BP_EquipmentItemEntry_C_GetVisibility_0");
static_assert(sizeof(BP_EquipmentItemEntry_C_GetVisibility_0) == 0x000005, "Wrong size on BP_EquipmentItemEntry_C_GetVisibility_0");
static_assert(offsetof(BP_EquipmentItemEntry_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_EquipmentItemEntry_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_EquipmentItemEntry_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_EquipmentItemEntry_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_EquipmentItemEntry_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_GetVisibility_0, K2Node_Select_Default) == 0x000004, "Member 'BP_EquipmentItemEntry_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_EquipmentItemEntry.BP_EquipmentItemEntry_C.GetbIsEnabled_0
// 0x0001 (0x0001 - 0x0000)
struct BP_EquipmentItemEntry_C_GetbIsEnabled_0 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EquipmentItemEntry_C_GetbIsEnabled_0) == 0x000001, "Wrong alignment on BP_EquipmentItemEntry_C_GetbIsEnabled_0");
static_assert(sizeof(BP_EquipmentItemEntry_C_GetbIsEnabled_0) == 0x000001, "Wrong size on BP_EquipmentItemEntry_C_GetbIsEnabled_0");
static_assert(offsetof(BP_EquipmentItemEntry_C_GetbIsEnabled_0, ReturnValue) == 0x000000, "Member 'BP_EquipmentItemEntry_C_GetbIsEnabled_0::ReturnValue' has a wrong offset!");

// Function BP_EquipmentItemEntry.BP_EquipmentItemEntry_C.Get_Image_2_Visibility_0
// 0x0007 (0x0007 - 0x0000)
struct BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0) == 0x000001, "Wrong alignment on BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0");
static_assert(sizeof(BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0) == 0x000007, "Wrong size on BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0, K2Node_Select_Default) == 0x000006, "Member 'BP_EquipmentItemEntry_C_Get_Image_2_Visibility_0::K2Node_Select_Default' has a wrong offset!");

}

