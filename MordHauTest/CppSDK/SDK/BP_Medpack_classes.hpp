#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Medpack

#include "Basic.hpp"

#include "BP_2HThrowableBase_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Medpack.BP_Medpack_C
// 0x0030 (0x0D60 - 0x0D30)
class ABP_Medpack_C final : public ABP_2HThrowableBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D30(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	int32                                         HealsLeft;                                         // 0x0D38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HealthPerHeal;                                     // 0x0D3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HealTimeToHold;                                    // 0x0D40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OriginalMaxHoldTime;                               // 0x0D44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            ThrowerController;                                 // 0x0D48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HealScoreModifier;                                 // 0x0D50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D54[0x4];                                      // 0x0D54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          OpenBagSkeletalMesh;                               // 0x0D58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Medpack(int32 EntryPoint);
	void OnHeldInteractionStart(class AMordhauCharacter* Character);
	void OnLoadedChanged();
	void FireProjectile(const struct FVector& Origin, const struct FRotator& Orientation, class AController* OwningController, float ExpectedDelay);
	void ApplyHeal(class AMordhauCharacter* Character);

	bool CanInteract(class AMordhauCharacter* Character) const;
	bool CanHeldInteract(class AMordhauCharacter* Character) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Medpack_C">();
	}
	static class ABP_Medpack_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Medpack_C>();
	}
};
static_assert(alignof(ABP_Medpack_C) == 0x000010, "Wrong alignment on ABP_Medpack_C");
static_assert(sizeof(ABP_Medpack_C) == 0x000D60, "Wrong size on ABP_Medpack_C");
static_assert(offsetof(ABP_Medpack_C, UberGraphFrame) == 0x000D30, "Member 'ABP_Medpack_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Medpack_C, HealsLeft) == 0x000D38, "Member 'ABP_Medpack_C::HealsLeft' has a wrong offset!");
static_assert(offsetof(ABP_Medpack_C, HealthPerHeal) == 0x000D3C, "Member 'ABP_Medpack_C::HealthPerHeal' has a wrong offset!");
static_assert(offsetof(ABP_Medpack_C, HealTimeToHold) == 0x000D40, "Member 'ABP_Medpack_C::HealTimeToHold' has a wrong offset!");
static_assert(offsetof(ABP_Medpack_C, OriginalMaxHoldTime) == 0x000D44, "Member 'ABP_Medpack_C::OriginalMaxHoldTime' has a wrong offset!");
static_assert(offsetof(ABP_Medpack_C, ThrowerController) == 0x000D48, "Member 'ABP_Medpack_C::ThrowerController' has a wrong offset!");
static_assert(offsetof(ABP_Medpack_C, HealScoreModifier) == 0x000D50, "Member 'ABP_Medpack_C::HealScoreModifier' has a wrong offset!");
static_assert(offsetof(ABP_Medpack_C, OpenBagSkeletalMesh) == 0x000D58, "Member 'ABP_Medpack_C::OpenBagSkeletalMesh' has a wrong offset!");

}

