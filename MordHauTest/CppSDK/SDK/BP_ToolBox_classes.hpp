#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ToolBox

#include "Basic.hpp"

#include "BP_2HThrowableBase_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ToolBox.BP_ToolBox_C
// 0x0050 (0x0D80 - 0x0D30)
class ABP_ToolBox_C : public ABP_2HThrowableBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D30(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UMordhauHUDWidgetComponent*             MordhauHUDWidget;                                  // 0x0D38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UBuildingSystemComponent*               BuildingSystem;                                    // 0x0D40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         ObjectType;                                        // 0x0D48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4C[0x4];                                      // 0x0D4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         PreviewMeshComponent;                              // 0x0D50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NextAvailableTime;                                 // 0x0D58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cooldown;                                          // 0x0D5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       WidgetDisplay;                                     // 0x0D60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   LastTraceText;                                     // 0x0D68(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_ToolBox(int32 EntryPoint);
	void OnUnbindEventToPlaceablesUpdate();
	void EventOnPlaceablesUpdate();
	void OnBindEventToPlaceablesUpdate();
	void K2_OnBecomeViewTarget(class APlayerController* PC);
	void BndEvt__BuildingSystem_K2Node_ComponentBoundEvent_1_OnMeshPreviewDestroyed__DelegateSignature();
	void BndEvt__BuildingSystem_K2Node_ComponentBoundEvent_0_OnMeshPreviewCreated__DelegateSignature();
	void ServerRequestPlant(const struct FVector& Location, const struct FRotator& Rotation, uint8 ObjectType_0, class USceneComponent* AttachTo);
	void LocalPlayerLateTick(float DeltaTime);
	void UpdateEquipmentState();
	bool OnRequestFire(class AMordhauCharacter* Character);
	bool OnRequestModeSwitch(class AMordhauCharacter* Character);
	void RequestPlant(const struct FVector& Location, const struct FRotator& Rotation, uint8 ObjectType_0, class USceneComponent* AttachTo);
	void AddSkeletalMeshPreviewIfNone(class USkeletalMesh* SkeletalMesh);
	void AddStaticMeshPreviewIfNone(class UStaticMesh* StaticMesh);
	void DestroyMeshPreview();
	void SetupMeshPreview();
	void CycleObjectType();
	void ValidateSpotWithBuildingSystem(const struct FVector& Offset, bool DisplayObjectPreview, bool* Succeeded, struct FVector* Location, struct FRotator* Rotation, class USceneComponent** AttachToComponent);
	void GetAmountOfPlacedEquipment(class FName PlaceableEquipmentName, int32* Amount);
	void UpdateEquipmentUI();
	void OnShowWidget();
	void OnHideWidget();
	void Update_Trace_Text(const class FText& Trace_Placement_Text, bool IgnoreLastText, bool Valid_Placement);
	void ValidateDeployableSpawnConditions(int32* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ToolBox_C">();
	}
	static class ABP_ToolBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ToolBox_C>();
	}
};
static_assert(alignof(ABP_ToolBox_C) == 0x000010, "Wrong alignment on ABP_ToolBox_C");
static_assert(sizeof(ABP_ToolBox_C) == 0x000D80, "Wrong size on ABP_ToolBox_C");
static_assert(offsetof(ABP_ToolBox_C, UberGraphFrame) == 0x000D30, "Member 'ABP_ToolBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ToolBox_C, MordhauHUDWidget) == 0x000D38, "Member 'ABP_ToolBox_C::MordhauHUDWidget' has a wrong offset!");
static_assert(offsetof(ABP_ToolBox_C, BuildingSystem) == 0x000D40, "Member 'ABP_ToolBox_C::BuildingSystem' has a wrong offset!");
static_assert(offsetof(ABP_ToolBox_C, ObjectType) == 0x000D48, "Member 'ABP_ToolBox_C::ObjectType' has a wrong offset!");
static_assert(offsetof(ABP_ToolBox_C, PreviewMeshComponent) == 0x000D50, "Member 'ABP_ToolBox_C::PreviewMeshComponent' has a wrong offset!");
static_assert(offsetof(ABP_ToolBox_C, NextAvailableTime) == 0x000D58, "Member 'ABP_ToolBox_C::NextAvailableTime' has a wrong offset!");
static_assert(offsetof(ABP_ToolBox_C, Cooldown) == 0x000D5C, "Member 'ABP_ToolBox_C::Cooldown' has a wrong offset!");
static_assert(offsetof(ABP_ToolBox_C, WidgetDisplay) == 0x000D60, "Member 'ABP_ToolBox_C::WidgetDisplay' has a wrong offset!");
static_assert(offsetof(ABP_ToolBox_C, LastTraceText) == 0x000D68, "Member 'ABP_ToolBox_C::LastTraceText' has a wrong offset!");

}

