#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PushHUDWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Mordhau_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PushHUDWidget.BP_PushHUDWidget_C.ExecuteUbergraph_BP_PushHUDWidget
// 0x0160 (0x0160 - 0x0000)
struct BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0028(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FrontlineGameState_C*               K2Node_DynamicCast_AsBP_Frontline_Game_State;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCapturePointGroup                     CallFunc_Array_Get_Item;                           // 0x0080(0x0010)()
	struct FCapturePointGroup                     CallFunc_Array_Get_Item_1;                         // 0x0090(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF[0x1];                                       // 0x00BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Time_to_add__seconds_;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_AsTimespan_Timespan_ReturnValue;          // 0x00D8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00F0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0140(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget) == 0x000008, "Wrong alignment on BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget");
static_assert(sizeof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget) == 0x000160, "Wrong size on BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, EntryPoint) == 0x000000, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, Temp_byte_Variable) == 0x000004, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, Temp_byte_Variable_1) == 0x00000C, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, Temp_bool_Has_Been_Initd_Variable) == 0x00000D, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, K2Node_Event_MyGeometry) == 0x000028, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, K2Node_Event_InDeltaTime) == 0x000060, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_GetGameState_ReturnValue) == 0x000068, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, K2Node_DynamicCast_AsBP_Frontline_Game_State) == 0x000070, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::K2Node_DynamicCast_AsBP_Frontline_Game_State' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, K2Node_Select_Default) == 0x00007C, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000AC, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_Max_ReturnValue) == 0x0000B0, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_Array_Length_ReturnValue_2) == 0x0000B4, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, K2Node_Select_Default_1) == 0x0000B8, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000BC, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000BD, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, Temp_bool_IsClosed_Variable) == 0x0000BE, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, K2Node_CustomEvent_Time_to_add__seconds_) == 0x0000C0, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::K2Node_CustomEvent_Time_to_add__seconds_' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000C4, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_FTrunc_ReturnValue) == 0x0000C8, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_MakeTimespan_ReturnValue) == 0x0000D0, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_AsTimespan_Timespan_ReturnValue) == 0x0000D8, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_AsTimespan_Timespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, K2Node_MakeStruct_FormatArgumentData) == 0x0000F0, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, K2Node_MakeArray_Array) == 0x000130, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_Format_ReturnValue) == 0x000140, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget, CallFunc_PlayAnimation_ReturnValue) == 0x000158, "Member 'BP_PushHUDWidget_C_ExecuteUbergraph_BP_PushHUDWidget::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_PushHUDWidget.BP_PushHUDWidget_C.AddTime
// 0x0004 (0x0004 - 0x0000)
struct BP_PushHUDWidget_C_AddTime final
{
public:
	float                                         Time_to_add__seconds_;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PushHUDWidget_C_AddTime) == 0x000004, "Wrong alignment on BP_PushHUDWidget_C_AddTime");
static_assert(sizeof(BP_PushHUDWidget_C_AddTime) == 0x000004, "Wrong size on BP_PushHUDWidget_C_AddTime");
static_assert(offsetof(BP_PushHUDWidget_C_AddTime, Time_to_add__seconds_) == 0x000000, "Member 'BP_PushHUDWidget_C_AddTime::Time_to_add__seconds_' has a wrong offset!");

// Function BP_PushHUDWidget.BP_PushHUDWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_PushHUDWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PushHUDWidget_C_Tick) == 0x000004, "Wrong alignment on BP_PushHUDWidget_C_Tick");
static_assert(sizeof(BP_PushHUDWidget_C_Tick) == 0x00003C, "Wrong size on BP_PushHUDWidget_C_Tick");
static_assert(offsetof(BP_PushHUDWidget_C_Tick, MyGeometry) == 0x000000, "Member 'BP_PushHUDWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_PushHUDWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_PushHUDWidget.BP_PushHUDWidget_C.GetRightTeamColor
// 0x0014 (0x0014 - 0x0000)
struct BP_PushHUDWidget_C_GetRightTeamColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PushHUDWidget_C_GetRightTeamColor) == 0x000004, "Wrong alignment on BP_PushHUDWidget_C_GetRightTeamColor");
static_assert(sizeof(BP_PushHUDWidget_C_GetRightTeamColor) == 0x000014, "Wrong size on BP_PushHUDWidget_C_GetRightTeamColor");
static_assert(offsetof(BP_PushHUDWidget_C_GetRightTeamColor, ReturnValue) == 0x000000, "Member 'BP_PushHUDWidget_C_GetRightTeamColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_GetRightTeamColor, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_PushHUDWidget_C_GetRightTeamColor::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PushHUDWidget.BP_PushHUDWidget_C.GetLeftTeamColor
// 0x0014 (0x0014 - 0x0000)
struct BP_PushHUDWidget_C_GetLeftTeamColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PushHUDWidget_C_GetLeftTeamColor) == 0x000004, "Wrong alignment on BP_PushHUDWidget_C_GetLeftTeamColor");
static_assert(sizeof(BP_PushHUDWidget_C_GetLeftTeamColor) == 0x000014, "Wrong size on BP_PushHUDWidget_C_GetLeftTeamColor");
static_assert(offsetof(BP_PushHUDWidget_C_GetLeftTeamColor, ReturnValue) == 0x000000, "Member 'BP_PushHUDWidget_C_GetLeftTeamColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_GetLeftTeamColor, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_PushHUDWidget_C_GetLeftTeamColor::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PushHUDWidget.BP_PushHUDWidget_C.InitializeCapPointGroup
// 0x0048 (0x0048 - 0x0000)
struct BP_PushHUDWidget_C_InitializeCapPointGroup final
{
public:
	struct FCapturePointGroup                     Group;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Index_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Length;                                            // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AControlPoint*                          CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CapPointWidgetBox_C*                CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PushHUDWidget_C_InitializeCapPointGroup) == 0x000008, "Wrong alignment on BP_PushHUDWidget_C_InitializeCapPointGroup");
static_assert(sizeof(BP_PushHUDWidget_C_InitializeCapPointGroup) == 0x000048, "Wrong size on BP_PushHUDWidget_C_InitializeCapPointGroup");
static_assert(offsetof(BP_PushHUDWidget_C_InitializeCapPointGroup, Group) == 0x000000, "Member 'BP_PushHUDWidget_C_InitializeCapPointGroup::Group' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_InitializeCapPointGroup, Index_0) == 0x000010, "Member 'BP_PushHUDWidget_C_InitializeCapPointGroup::Index_0' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_InitializeCapPointGroup, Length) == 0x000014, "Member 'BP_PushHUDWidget_C_InitializeCapPointGroup::Length' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_InitializeCapPointGroup, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PushHUDWidget_C_InitializeCapPointGroup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_InitializeCapPointGroup, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_PushHUDWidget_C_InitializeCapPointGroup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_InitializeCapPointGroup, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_PushHUDWidget_C_InitializeCapPointGroup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_InitializeCapPointGroup, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_PushHUDWidget_C_InitializeCapPointGroup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_InitializeCapPointGroup, CallFunc_Create_ReturnValue) == 0x000030, "Member 'BP_PushHUDWidget_C_InitializeCapPointGroup::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_InitializeCapPointGroup, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_PushHUDWidget_C_InitializeCapPointGroup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_InitializeCapPointGroup, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_PushHUDWidget_C_InitializeCapPointGroup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_InitializeCapPointGroup, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000040, "Member 'BP_PushHUDWidget_C_InitializeCapPointGroup::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");

// Function BP_PushHUDWidget.BP_PushHUDWidget_C.Get_timer_Text_Text_0
// 0x0148 (0x0148 - 0x0000)
struct BP_PushHUDWidget_C_Get_timer_Text_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FTimespan                              Timespan;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Seconds;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Minutes;                                           // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BreakTimespan_Days_1;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours_1;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds_1;             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTotalMinutes_ReturnValue;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSeconds_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00B0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00F8(0x0018)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FrontlineGameState_C*               K2Node_DynamicCast_AsBP_Frontline_Game_State;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetScoreboardTimeInProgress_Time;         // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_FromSeconds_ReturnValue;                  // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PushHUDWidget_C_Get_timer_Text_Text_0) == 0x000008, "Wrong alignment on BP_PushHUDWidget_C_Get_timer_Text_Text_0");
static_assert(sizeof(BP_PushHUDWidget_C_Get_timer_Text_Text_0) == 0x000148, "Wrong size on BP_PushHUDWidget_C_Get_timer_Text_Text_0");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, ReturnValue) == 0x000000, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, Timespan) == 0x000018, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::Timespan' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, Seconds) == 0x000020, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::Seconds' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, Minutes) == 0x000030, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::Minutes' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000040, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_BreakTimespan_Days) == 0x000044, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_BreakTimespan_Hours) == 0x000048, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_BreakTimespan_Minutes) == 0x00004C, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_BreakTimespan_Seconds) == 0x000050, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_BreakTimespan_Milliseconds) == 0x000054, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000059, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00005A, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_Percent_IntInt_ReturnValue) == 0x00005C, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000060, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000061, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_BooleanAND_ReturnValue) == 0x000062, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000063, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000064, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_BooleanAND_ReturnValue_1) == 0x000065, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_BooleanAND_ReturnValue_2) == 0x000066, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_BooleanAND_ReturnValue_3) == 0x000067, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_BooleanOR_ReturnValue) == 0x000068, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_PlayAnimation_ReturnValue) == 0x000070, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_BooleanOR_ReturnValue_1) == 0x000078, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_BooleanOR_ReturnValue_2) == 0x000079, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_BreakTimespan_Days_1) == 0x00007C, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_BreakTimespan_Days_1' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_BreakTimespan_Hours_1) == 0x000080, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_BreakTimespan_Hours_1' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_BreakTimespan_Minutes_1) == 0x000084, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_BreakTimespan_Minutes_1' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_BreakTimespan_Seconds_1) == 0x000088, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_BreakTimespan_Seconds_1' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_BreakTimespan_Milliseconds_1) == 0x00008C, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_BreakTimespan_Milliseconds_1' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_Less_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_GetTotalMinutes_ReturnValue) == 0x000094, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_GetTotalMinutes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_FFloor_ReturnValue) == 0x000098, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_GetSeconds_ReturnValue) == 0x00009C, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_GetSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_Conv_IntToString_ReturnValue) == 0x0000A0, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x0000B0, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_Conv_TextToString_ReturnValue) == 0x0000C8, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D8, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000E8, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x0000F8, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_GetGameState_ReturnValue) == 0x000110, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, K2Node_DynamicCast_AsBP_Frontline_Game_State) == 0x000118, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::K2Node_DynamicCast_AsBP_Frontline_Game_State' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_GetScoreboardTimeInProgress_Time) == 0x000128, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_GetScoreboardTimeInProgress_Time' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000130, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, K2Node_SwitchName_CmpSuccess) == 0x000131, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000134, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_FMax_ReturnValue) == 0x000138, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Text_0, CallFunc_FromSeconds_ReturnValue) == 0x000140, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Text_0::CallFunc_FromSeconds_ReturnValue' has a wrong offset!");

// Function BP_PushHUDWidget.BP_PushHUDWidget_C.Get_timer_Text_Visibility_0
// 0x0018 (0x0018 - 0x0000)
struct BP_PushHUDWidget_C_Get_timer_Text_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchStarted_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PushHUDWidget_C_Get_timer_Text_Visibility_0) == 0x000008, "Wrong alignment on BP_PushHUDWidget_C_Get_timer_Text_Visibility_0");
static_assert(sizeof(BP_PushHUDWidget_C_Get_timer_Text_Visibility_0) == 0x000018, "Wrong size on BP_PushHUDWidget_C_Get_timer_Text_Visibility_0");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Visibility_0, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Visibility_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Visibility_0, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Visibility_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PushHUDWidget_C_Get_timer_Text_Visibility_0, CallFunc_HasMatchStarted_ReturnValue) == 0x000011, "Member 'BP_PushHUDWidget_C_Get_timer_Text_Visibility_0::CallFunc_HasMatchStarted_ReturnValue' has a wrong offset!");

}

