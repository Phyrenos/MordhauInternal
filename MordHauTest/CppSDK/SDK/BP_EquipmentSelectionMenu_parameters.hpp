#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentSelectionMenu

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_EquipmentSelectionMenu.BP_EquipmentSelectionMenu_C.ExecuteUbergraph_BP_EquipmentSelectionMenu
// 0x0128 (0x0128 - 0x0000)
struct BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UBP_EquipmentTypeFilterTab_C* Tab)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0030(0x0018)()
	TDelegate<void(class UObject* Obj, bool* RetVal)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* ObjA, class UObject* ObjB, bool* RetVal)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Obj, bool* RetVal)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* ObjA, class UObject* ObjB, bool* RetVal)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	class UBP_EquipmentTypeFilterTab_C*           K2Node_CustomEvent_Tab;                            // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EquipmentTypeFilterTab_C*           CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Obj, bool* RetVal)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* ObjA, class UObject* ObjB, bool* RetVal)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_EquipmentTypeFilterTab_C*>   K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00E0(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu) == 0x000008, "Wrong alignment on BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu");
static_assert(sizeof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu) == 0x000128, "Wrong size on BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, EntryPoint) == 0x000000, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, Temp_bool_IsClosed_Variable) == 0x000028, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, Temp_bool_Has_Been_Initd_Variable) == 0x000029, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, K2Node_ComponentBoundEvent_Text) == 0x000030, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, K2Node_CreateDelegate_OutputDelegate_3) == 0x000058, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, K2Node_CreateDelegate_OutputDelegate_4) == 0x000068, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, K2Node_CreateDelegate_OutputDelegate_5) == 0x000078, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, K2Node_CustomEvent_Tab) == 0x000088, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::K2Node_CustomEvent_Tab' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, K2Node_CreateDelegate_OutputDelegate_6) == 0x00009C, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000AC, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, K2Node_MakeArray_Array) == 0x0000C0, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, CallFunc_IsHovered_ReturnValue) == 0x0000D0, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, Temp_int_Loop_Counter_Variable) == 0x0000D4, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, CallFunc_Add_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, K2Node_Event_MyGeometry) == 0x0000E0, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, K2Node_Event_InDeltaTime) == 0x000118, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu, CallFunc_PlayAnimation_ReturnValue) == 0x000120, "Member 'BP_EquipmentSelectionMenu_C_ExecuteUbergraph_BP_EquipmentSelectionMenu::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_EquipmentSelectionMenu.BP_EquipmentSelectionMenu_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_EquipmentSelectionMenu_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentSelectionMenu_C_Tick) == 0x000004, "Wrong alignment on BP_EquipmentSelectionMenu_C_Tick");
static_assert(sizeof(BP_EquipmentSelectionMenu_C_Tick) == 0x00003C, "Wrong size on BP_EquipmentSelectionMenu_C_Tick");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Tick, MyGeometry) == 0x000000, "Member 'BP_EquipmentSelectionMenu_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_EquipmentSelectionMenu_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_EquipmentSelectionMenu.BP_EquipmentSelectionMenu_C.Tab Clicked
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentSelectionMenu_C_Tab_Clicked final
{
public:
	class UBP_EquipmentTypeFilterTab_C*           Tab;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentSelectionMenu_C_Tab_Clicked) == 0x000008, "Wrong alignment on BP_EquipmentSelectionMenu_C_Tab_Clicked");
static_assert(sizeof(BP_EquipmentSelectionMenu_C_Tab_Clicked) == 0x000008, "Wrong size on BP_EquipmentSelectionMenu_C_Tab_Clicked");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Tab_Clicked, Tab) == 0x000000, "Member 'BP_EquipmentSelectionMenu_C_Tab_Clicked::Tab' has a wrong offset!");

// Function BP_EquipmentSelectionMenu.BP_EquipmentSelectionMenu_C.BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On Text Changed__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_EquipmentSelectionMenu_C_BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On_Text_Changed__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_EquipmentSelectionMenu_C_BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On_Text_Changed__DelegateSignature) == 0x000008, "Wrong alignment on BP_EquipmentSelectionMenu_C_BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On_Text_Changed__DelegateSignature");
static_assert(sizeof(BP_EquipmentSelectionMenu_C_BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On_Text_Changed__DelegateSignature) == 0x000018, "Wrong size on BP_EquipmentSelectionMenu_C_BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On_Text_Changed__DelegateSignature");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On_Text_Changed__DelegateSignature, Text) == 0x000000, "Member 'BP_EquipmentSelectionMenu_C_BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On_Text_Changed__DelegateSignature::Text' has a wrong offset!");

// Function BP_EquipmentSelectionMenu.BP_EquipmentSelectionMenu_C.Filter Is Peasant Weapon
// 0x0020 (0x0020 - 0x0000)
struct BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon final
{
public:
	class UObject*                                Obj_A;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret_Val;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EquipmentItemEntry_C*               K2Node_DynamicCast_AsBP_Equipment_Item_Entry;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsPeasant_ReturnValue;                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon) == 0x000008, "Wrong alignment on BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon");
static_assert(sizeof(BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon) == 0x000020, "Wrong size on BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon, Obj_A) == 0x000000, "Member 'BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon::Obj_A' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon, Ret_Val) == 0x000008, "Member 'BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon::Ret_Val' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon, K2Node_DynamicCast_AsBP_Equipment_Item_Entry) == 0x000010, "Member 'BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon::K2Node_DynamicCast_AsBP_Equipment_Item_Entry' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon, CallFunc_IsValidClass_ReturnValue) == 0x000019, "Member 'BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon, CallFunc_GetIsPeasant_ReturnValue) == 0x00001B, "Member 'BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon::CallFunc_GetIsPeasant_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon, CallFunc_BooleanOR_ReturnValue) == 0x00001C, "Member 'BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon, CallFunc_Not_PreBool_ReturnValue) == 0x00001D, "Member 'BP_EquipmentSelectionMenu_C_Filter_Is_Peasant_Weapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EquipmentSelectionMenu.BP_EquipmentSelectionMenu_C.Filter By Weapon Type
// 0x0020 (0x0020 - 0x0000)
struct BP_EquipmentSelectionMenu_C_Filter_By_Weapon_Type final
{
public:
	class UObject*                                Obj_A;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret_Val;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EquipmentItemEntry_C*               K2Node_DynamicCast_AsBP_Equipment_Item_Entry;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EquipmentSelectionMenu_C_Filter_By_Weapon_Type) == 0x000008, "Wrong alignment on BP_EquipmentSelectionMenu_C_Filter_By_Weapon_Type");
static_assert(sizeof(BP_EquipmentSelectionMenu_C_Filter_By_Weapon_Type) == 0x000020, "Wrong size on BP_EquipmentSelectionMenu_C_Filter_By_Weapon_Type");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Filter_By_Weapon_Type, Obj_A) == 0x000000, "Member 'BP_EquipmentSelectionMenu_C_Filter_By_Weapon_Type::Obj_A' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Filter_By_Weapon_Type, Ret_Val) == 0x000008, "Member 'BP_EquipmentSelectionMenu_C_Filter_By_Weapon_Type::Ret_Val' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Filter_By_Weapon_Type, K2Node_DynamicCast_AsBP_Equipment_Item_Entry) == 0x000010, "Member 'BP_EquipmentSelectionMenu_C_Filter_By_Weapon_Type::K2Node_DynamicCast_AsBP_Equipment_Item_Entry' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Filter_By_Weapon_Type, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EquipmentSelectionMenu_C_Filter_By_Weapon_Type::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Filter_By_Weapon_Type, CallFunc_IsValidClass_ReturnValue) == 0x000019, "Member 'BP_EquipmentSelectionMenu_C_Filter_By_Weapon_Type::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Filter_By_Weapon_Type, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'BP_EquipmentSelectionMenu_C_Filter_By_Weapon_Type::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_EquipmentSelectionMenu.BP_EquipmentSelectionMenu_C.Select Tab
// 0x0050 (0x0050 - 0x0000)
struct BP_EquipmentSelectionMenu_C_Select_Tab final
{
public:
	class UBP_EquipmentTypeFilterTab_C*           Tab;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EquipmentTypeFilterTab_C*           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EquipmentItemEntry_C*               K2Node_DynamicCast_AsBP_Equipment_Item_Entry;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EquipmentTypeFilterTab_C*           CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EquipmentSelectionMenu_C_Select_Tab) == 0x000008, "Wrong alignment on BP_EquipmentSelectionMenu_C_Select_Tab");
static_assert(sizeof(BP_EquipmentSelectionMenu_C_Select_Tab) == 0x000050, "Wrong size on BP_EquipmentSelectionMenu_C_Select_Tab");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, Tab) == 0x000000, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::Tab' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, K2Node_DynamicCast_AsBP_Equipment_Item_Entry) == 0x000028, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::K2Node_DynamicCast_AsBP_Equipment_Item_Entry' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, CallFunc_IsValidClass_ReturnValue) == 0x000031, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000032, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, CallFunc_Less_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000049, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00004A, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004B, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Tab, CallFunc_BooleanAND_ReturnValue) == 0x00004C, "Member 'BP_EquipmentSelectionMenu_C_Select_Tab::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_EquipmentSelectionMenu.BP_EquipmentSelectionMenu_C.Update Gold
// 0x0010 (0x0010 - 0x0000)
struct BP_EquipmentSelectionMenu_C_Update_Gold final
{
public:
	class UMordhauInventory*                      CallFunc_GetMordhauInventory_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGold_ReturnValue;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentSelectionMenu_C_Update_Gold) == 0x000008, "Wrong alignment on BP_EquipmentSelectionMenu_C_Update_Gold");
static_assert(sizeof(BP_EquipmentSelectionMenu_C_Update_Gold) == 0x000010, "Wrong size on BP_EquipmentSelectionMenu_C_Update_Gold");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Update_Gold, CallFunc_GetMordhauInventory_ReturnValue) == 0x000000, "Member 'BP_EquipmentSelectionMenu_C_Update_Gold::CallFunc_GetMordhauInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Update_Gold, CallFunc_GetGold_ReturnValue) == 0x000008, "Member 'BP_EquipmentSelectionMenu_C_Update_Gold::CallFunc_GetGold_ReturnValue' has a wrong offset!");

// Function BP_EquipmentSelectionMenu.BP_EquipmentSelectionMenu_C.OnKeyDown
// 0x0200 (0x0200 - 0x0000)
struct BP_EquipmentSelectionMenu_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0138(0x00B8)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentSelectionMenu_C_OnKeyDown) == 0x000008, "Wrong alignment on BP_EquipmentSelectionMenu_C_OnKeyDown");
static_assert(sizeof(BP_EquipmentSelectionMenu_C_OnKeyDown) == 0x000200, "Wrong size on BP_EquipmentSelectionMenu_C_OnKeyDown");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'BP_EquipmentSelectionMenu_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'BP_EquipmentSelectionMenu_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'BP_EquipmentSelectionMenu_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_OnKeyDown, CallFunc_Concat_StrStr_ReturnValue) == 0x000128, "Member 'BP_EquipmentSelectionMenu_C_OnKeyDown::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000138, "Member 'BP_EquipmentSelectionMenu_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_OnKeyDown, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001F0, "Member 'BP_EquipmentSelectionMenu_C_OnKeyDown::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_EquipmentSelectionMenu.BP_EquipmentSelectionMenu_C.Select Initial Tab
// 0x0030 (0x0030 - 0x0000)
struct BP_EquipmentSelectionMenu_C_Select_Initial_Tab final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EquipmentTypeFilterTab_C*           CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EquipmentItemEntry_C*               K2Node_DynamicCast_AsBP_Equipment_Item_Entry;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EquipmentSelectionMenu_C_Select_Initial_Tab) == 0x000008, "Wrong alignment on BP_EquipmentSelectionMenu_C_Select_Initial_Tab");
static_assert(sizeof(BP_EquipmentSelectionMenu_C_Select_Initial_Tab) == 0x000030, "Wrong size on BP_EquipmentSelectionMenu_C_Select_Initial_Tab");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Initial_Tab, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EquipmentSelectionMenu_C_Select_Initial_Tab::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Initial_Tab, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EquipmentSelectionMenu_C_Select_Initial_Tab::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Initial_Tab, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EquipmentSelectionMenu_C_Select_Initial_Tab::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Initial_Tab, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_EquipmentSelectionMenu_C_Select_Initial_Tab::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Initial_Tab, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_EquipmentSelectionMenu_C_Select_Initial_Tab::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Initial_Tab, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EquipmentSelectionMenu_C_Select_Initial_Tab::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Initial_Tab, K2Node_DynamicCast_AsBP_Equipment_Item_Entry) == 0x000020, "Member 'BP_EquipmentSelectionMenu_C_Select_Initial_Tab::K2Node_DynamicCast_AsBP_Equipment_Item_Entry' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Initial_Tab, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_EquipmentSelectionMenu_C_Select_Initial_Tab::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Initial_Tab, CallFunc_IsValidClass_ReturnValue) == 0x000029, "Member 'BP_EquipmentSelectionMenu_C_Select_Initial_Tab::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Initial_Tab, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002A, "Member 'BP_EquipmentSelectionMenu_C_Select_Initial_Tab::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_EquipmentSelectionMenu.BP_EquipmentSelectionMenu_C.Select Next Tab
// 0x0018 (0x0018 - 0x0000)
struct BP_EquipmentSelectionMenu_C_Select_Next_Tab final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EquipmentTypeFilterTab_C*           CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentSelectionMenu_C_Select_Next_Tab) == 0x000008, "Wrong alignment on BP_EquipmentSelectionMenu_C_Select_Next_Tab");
static_assert(sizeof(BP_EquipmentSelectionMenu_C_Select_Next_Tab) == 0x000018, "Wrong size on BP_EquipmentSelectionMenu_C_Select_Next_Tab");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Next_Tab, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_EquipmentSelectionMenu_C_Select_Next_Tab::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Next_Tab, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_EquipmentSelectionMenu_C_Select_Next_Tab::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Next_Tab, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_EquipmentSelectionMenu_C_Select_Next_Tab::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Next_Tab, CallFunc_SelectInt_ReturnValue) == 0x00000C, "Member 'BP_EquipmentSelectionMenu_C_Select_Next_Tab::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Next_Tab, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_EquipmentSelectionMenu_C_Select_Next_Tab::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_EquipmentSelectionMenu.BP_EquipmentSelectionMenu_C.Select Prev Tab
// 0x0018 (0x0018 - 0x0000)
struct BP_EquipmentSelectionMenu_C_Select_Prev_Tab final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EquipmentTypeFilterTab_C*           CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentSelectionMenu_C_Select_Prev_Tab) == 0x000008, "Wrong alignment on BP_EquipmentSelectionMenu_C_Select_Prev_Tab");
static_assert(sizeof(BP_EquipmentSelectionMenu_C_Select_Prev_Tab) == 0x000018, "Wrong size on BP_EquipmentSelectionMenu_C_Select_Prev_Tab");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Prev_Tab, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_EquipmentSelectionMenu_C_Select_Prev_Tab::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Prev_Tab, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_EquipmentSelectionMenu_C_Select_Prev_Tab::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Prev_Tab, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_EquipmentSelectionMenu_C_Select_Prev_Tab::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Prev_Tab, CallFunc_SelectInt_ReturnValue) == 0x00000C, "Member 'BP_EquipmentSelectionMenu_C_Select_Prev_Tab::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Select_Prev_Tab, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_EquipmentSelectionMenu_C_Select_Prev_Tab::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_EquipmentSelectionMenu.BP_EquipmentSelectionMenu_C.Get_BP_PromptButton_Customize_bIsEnabled_0
// 0x0003 (0x0003 - 0x0000)
struct BP_EquipmentSelectionMenu_C_Get_BP_PromptButton_Customize_bIsEnabled_0 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EquipmentSelectionMenu_C_Get_BP_PromptButton_Customize_bIsEnabled_0) == 0x000001, "Wrong alignment on BP_EquipmentSelectionMenu_C_Get_BP_PromptButton_Customize_bIsEnabled_0");
static_assert(sizeof(BP_EquipmentSelectionMenu_C_Get_BP_PromptButton_Customize_bIsEnabled_0) == 0x000003, "Wrong size on BP_EquipmentSelectionMenu_C_Get_BP_PromptButton_Customize_bIsEnabled_0");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Get_BP_PromptButton_Customize_bIsEnabled_0, ReturnValue) == 0x000000, "Member 'BP_EquipmentSelectionMenu_C_Get_BP_PromptButton_Customize_bIsEnabled_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Get_BP_PromptButton_Customize_bIsEnabled_0, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_EquipmentSelectionMenu_C_Get_BP_PromptButton_Customize_bIsEnabled_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Get_BP_PromptButton_Customize_bIsEnabled_0, CallFunc_IsValidClass_ReturnValue) == 0x000002, "Member 'BP_EquipmentSelectionMenu_C_Get_BP_PromptButton_Customize_bIsEnabled_0::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_EquipmentSelectionMenu.BP_EquipmentSelectionMenu_C.Initialize NextPrev Elements
// 0x0168 (0x0168 - 0x0000)
struct BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0098(0x0018)()
	int32                                         Temp_int_Variable_4;                               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_6;                              // 0x00B8(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00D0(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00E8(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x0108(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_4;                           // 0x0138(0x0018)()
	class FText                                   K2Node_Select_Default_5;                           // 0x0150(0x0018)()
};
static_assert(alignof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements) == 0x000008, "Wrong alignment on BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements");
static_assert(sizeof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements) == 0x000168, "Wrong size on BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_bool_Variable) == 0x000000, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_byte_Variable) == 0x000001, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_byte_Variable_1) == 0x000002, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_bool_Variable_1) == 0x000003, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_int_Variable) == 0x000004, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_int_Variable_1) == 0x000008, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_text_Variable) == 0x000010, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_text_Variable_1) == 0x000028, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_text_Variable_2) == 0x000040, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_bool_Variable_2) == 0x000058, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_int_Variable_2) == 0x00005C, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_int_Variable_3) == 0x000060, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_text_Variable_3) == 0x000068, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_text_Variable_4) == 0x000080, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_text_Variable_5) == 0x000098, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_int_Variable_4) == 0x0000B0, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_text_Variable_6) == 0x0000B8, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_text_Variable_7) == 0x0000D0, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, Temp_text_Variable_8) == 0x0000E8, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, K2Node_Select_Default) == 0x000100, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, CallFunc_Subtract_IntInt_ReturnValue) == 0x000104, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, K2Node_Select_Default_1) == 0x000108, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, CallFunc_Less_IntInt_ReturnValue) == 0x000120, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, CallFunc_Add_IntInt_ReturnValue) == 0x000124, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, CallFunc_Greater_IntInt_ReturnValue) == 0x000128, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, K2Node_Select_Default_2) == 0x00012C, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, K2Node_Select_Default_3) == 0x000130, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, K2Node_Select_Default_4) == 0x000138, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements, K2Node_Select_Default_5) == 0x000150, "Member 'BP_EquipmentSelectionMenu_C_Initialize_NextPrev_Elements::K2Node_Select_Default_5' has a wrong offset!");

}

