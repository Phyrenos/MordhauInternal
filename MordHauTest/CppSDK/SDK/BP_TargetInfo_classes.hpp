#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TargetInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_TargetInfo.BP_TargetInfo_C
// 0x00C8 (0x0328 - 0x0260)
class UBP_TargetInfo_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UBP_CasualRankDiamond_C*                BP_CasualRankDiamond;                              // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PlatformIcon_C*                     BP_PlatformIcon;                                   // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HeadText;                                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_0;                                   // 0x0280(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_RankIndicator;                             // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_0;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_2;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_0;                                         // 0x02B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_3PlatformIcon;                             // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TargetNameText;                                    // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_0;                                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_0;                                     // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   TargetName;                                        // 0x02D8(0x0018)(Edit, BlueprintVisible)
	int32                                         TargetDistance;                                    // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Interval;                                          // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpectatingPlayer;                                  // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TargetTeam;                                        // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerState*                    LastPlayerState;                                   // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanMute;                                           // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsAlive;                                           // 0x0319(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A[0x2];                                      // 0x031A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Health;                                            // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Stamina;                                           // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDestructible;                                    // 0x0324(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasBuilder;                                        // 0x0325(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          isPlayer;                                          // 0x0326(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          isFreeCam;                                         // 0x0327(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_TargetInfo(int32 EntryPoint);
	void Construct();
	void CheckForTarget();
	ESlateVisibility Get_HeadText_Visibility();
	ESlateVisibility Get_TargetNameText_Visibility_0();
	class FText Get_HeadText_Text_0();
	void GetPlayerStateFromTarget(class AActor* Target, class AMordhauPlayerState** State);
	ESlateVisibility GetVisibility_0();
	ESlateVisibility Get_TextBlock_0_Visibility_0();
	class FText Get_TextBlock_0_Text_0();
	float GetPercent_0();
	ESlateVisibility GetVisibility_1();
	float GetPercent_1();
	ESlateVisibility Get_Overlay_RankIndicator_Visibility_0();
	ESlateVisibility GetVisibility_2();
	void Update_Target_Platform_Icon(bool bShowIcon);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TargetInfo_C">();
	}
	static class UBP_TargetInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TargetInfo_C>();
	}
};
static_assert(alignof(UBP_TargetInfo_C) == 0x000008, "Wrong alignment on UBP_TargetInfo_C");
static_assert(sizeof(UBP_TargetInfo_C) == 0x000328, "Wrong size on UBP_TargetInfo_C");
static_assert(offsetof(UBP_TargetInfo_C, UberGraphFrame) == 0x000260, "Member 'UBP_TargetInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, BP_CasualRankDiamond) == 0x000268, "Member 'UBP_TargetInfo_C::BP_CasualRankDiamond' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, BP_PlatformIcon) == 0x000270, "Member 'UBP_TargetInfo_C::BP_PlatformIcon' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, HeadText) == 0x000278, "Member 'UBP_TargetInfo_C::HeadText' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, HorizontalBox_0) == 0x000280, "Member 'UBP_TargetInfo_C::HorizontalBox_0' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, Image_1) == 0x000288, "Member 'UBP_TargetInfo_C::Image_1' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, Image_2) == 0x000290, "Member 'UBP_TargetInfo_C::Image_2' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, Overlay_RankIndicator) == 0x000298, "Member 'UBP_TargetInfo_C::Overlay_RankIndicator' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, ProgressBar_0) == 0x0002A0, "Member 'UBP_TargetInfo_C::ProgressBar_0' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, ProgressBar_2) == 0x0002A8, "Member 'UBP_TargetInfo_C::ProgressBar_2' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, SizeBox_0) == 0x0002B0, "Member 'UBP_TargetInfo_C::SizeBox_0' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, SizeBox_3PlatformIcon) == 0x0002B8, "Member 'UBP_TargetInfo_C::SizeBox_3PlatformIcon' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, TargetNameText) == 0x0002C0, "Member 'UBP_TargetInfo_C::TargetNameText' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, TextBlock_0) == 0x0002C8, "Member 'UBP_TargetInfo_C::TextBlock_0' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, VerticalBox_0) == 0x0002D0, "Member 'UBP_TargetInfo_C::VerticalBox_0' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, TargetName) == 0x0002D8, "Member 'UBP_TargetInfo_C::TargetName' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, TargetDistance) == 0x0002F0, "Member 'UBP_TargetInfo_C::TargetDistance' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, Interval) == 0x0002F4, "Member 'UBP_TargetInfo_C::Interval' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, Color) == 0x0002F8, "Member 'UBP_TargetInfo_C::Color' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, SpectatingPlayer) == 0x000308, "Member 'UBP_TargetInfo_C::SpectatingPlayer' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, TargetTeam) == 0x00030C, "Member 'UBP_TargetInfo_C::TargetTeam' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, LastPlayerState) == 0x000310, "Member 'UBP_TargetInfo_C::LastPlayerState' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, CanMute) == 0x000318, "Member 'UBP_TargetInfo_C::CanMute' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, IsAlive) == 0x000319, "Member 'UBP_TargetInfo_C::IsAlive' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, Health) == 0x00031C, "Member 'UBP_TargetInfo_C::Health' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, Stamina) == 0x000320, "Member 'UBP_TargetInfo_C::Stamina' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, IsDestructible) == 0x000324, "Member 'UBP_TargetInfo_C::IsDestructible' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, HasBuilder) == 0x000325, "Member 'UBP_TargetInfo_C::HasBuilder' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, isPlayer) == 0x000326, "Member 'UBP_TargetInfo_C::isPlayer' has a wrong offset!");
static_assert(offsetof(UBP_TargetInfo_C, isFreeCam) == 0x000327, "Member 'UBP_TargetInfo_C::isFreeCam' has a wrong offset!");

}

