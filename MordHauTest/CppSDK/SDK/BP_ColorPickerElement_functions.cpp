#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ColorPickerElement

#include "Basic.hpp"

#include "BP_ColorPickerElement_classes.hpp"
#include "BP_ColorPickerElement_parameters.hpp"


namespace SDK
{

// Function BP_ColorPickerElement.BP_ColorPickerElement_C.ExecuteUbergraph_BP_ColorPickerElement
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ColorPickerElement_C::ExecuteUbergraph_BP_ColorPickerElement(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPickerElement_C", "ExecuteUbergraph_BP_ColorPickerElement");

	Params::BP_ColorPickerElement_C_ExecuteUbergraph_BP_ColorPickerElement Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ColorPickerElement.BP_ColorPickerElement_C.BndEvt__ImageButton_K2Node_ComponentBoundEvent_2238_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UBP_ColorPickerElement_C::BndEvt__ImageButton_K2Node_ComponentBoundEvent_2238_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPickerElement_C", "BndEvt__ImageButton_K2Node_ComponentBoundEvent_2238_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ColorPickerElement.BP_ColorPickerElement_C.BndEvt__ImageButton_K2Node_ComponentBoundEvent_9595_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_ColorPickerElement_C::BndEvt__ImageButton_K2Node_ComponentBoundEvent_9595_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPickerElement_C", "BndEvt__ImageButton_K2Node_ComponentBoundEvent_9595_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ColorPickerElement.BP_ColorPickerElement_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_ColorPickerElement_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPickerElement_C", "OnMouseLeave");

	Params::BP_ColorPickerElement_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ColorPickerElement.BP_ColorPickerElement_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_ColorPickerElement_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPickerElement_C", "OnMouseEnter");

	Params::BP_ColorPickerElement_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ColorPickerElement.BP_ColorPickerElement_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_ColorPickerElement_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPickerElement_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ColorPickerElement.BP_ColorPickerElement_C.SetColor
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ColorPickerElement_C::SetColor(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPickerElement_C", "SetColor");

	Params::BP_ColorPickerElement_C_SetColor Parms{};

	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ColorPickerElement.BP_ColorPickerElement_C.SetData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ColorPickerElement_C::SetData(int32 Param_Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPickerElement_C", "SetData");

	Params::BP_ColorPickerElement_C_SetData Parms{};

	Parms.Param_Index_0 = Param_Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ColorPickerElement.BP_ColorPickerElement_C.IsSelectedElement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ColorPickerElement_C::IsSelectedElement(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPickerElement_C", "IsSelectedElement");

	Params::BP_ColorPickerElement_C_IsSelectedElement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_ColorPickerElement.BP_ColorPickerElement_C.Get_ImageButton_ToolTipText_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_ColorPickerElement_C::Get_ImageButton_ToolTipText_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPickerElement_C", "Get_ImageButton_ToolTipText_0");

	Params::BP_ColorPickerElement_C_Get_ImageButton_ToolTipText_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ColorPickerElement.BP_ColorPickerElement_C.Get_Lock_Visibility_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_ColorPickerElement_C::Get_Lock_Visibility_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPickerElement_C", "Get_Lock_Visibility_0");

	Params::BP_ColorPickerElement_C_Get_Lock_Visibility_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

