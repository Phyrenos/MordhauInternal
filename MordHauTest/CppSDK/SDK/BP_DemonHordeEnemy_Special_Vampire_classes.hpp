#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DemonHordeEnemy_Special_Vampire

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_DemonHordeEnemy_Special_classes.hpp"
#include "Mordhau_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DemonHordeEnemy_Special_Vampire.BP_DemonHordeEnemy_Special_Vampire_C
// 0x0050 (0x1580 - 0x1530)
class ABP_DemonHordeEnemy_Special_Vampire_C final : public ABP_DemonHordeEnemy_Special_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_DemonHordeEnemy_Special_Vampire_C; // 0x1530(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class USphereComponent*                       HealSphere;                                        // 0x1538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ClawBloodDripR;                                    // 0x1540(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ClawBloodDripL;                                    // 0x1548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ClawBloodTrailR;                                   // 0x1550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ClawBloodTrailL;                                   // 0x1558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         PowerUp_PowerUpAlpha_288978914B4D42E9C6B8389BCC0BDC14; // 0x1560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            PowerUp__Direction_288978914B4D42E9C6B8389BCC0BDC14; // 0x1564(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_1565[0x3];                                     // 0x1565(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     PowerUp;                                           // 0x1568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          IsStateCooldown;                                   // 0x1570(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1571[0x3];                                     // 0x1571(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StateCooldown;                                     // 0x1574(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTeleportCooldown;                                // 0x1578(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_DemonHordeEnemy_Special_Vampire(int32 EntryPoint);
	void HealEffectSelfMulti();
	void HealEffectsMulti(class ABP_DemonHordeEnemy_C* Actor);
	void SpawnBatTrailMulti(const struct FVector& TargetLocation);
	void StartTeleportCooldown();
	void BatEffectsMulti(bool Intro);
	void ReceiveMordhauDamage(float Damage, const struct FHitResult& HitResult, EMordhauDamageType DamageType, uint8 SubDamageType, class AActor* Source, class AActor* Agent, class AController* EventInstigator);
	void PowerUpEffectsMulti(bool Active);
	void StartStateCooldown();
	void BehaviourLoop();
	void PowerUp__UpdateFunc();
	void PowerUp__FinishedFunc();
	void GetTeleportLocation(struct FVector* SummonLocation, bool* Success);
	void ReceiveBeginPlay();
	void OnDied(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source, class AActor* Agent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DemonHordeEnemy_Special_Vampire_C">();
	}
	static class ABP_DemonHordeEnemy_Special_Vampire_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DemonHordeEnemy_Special_Vampire_C>();
	}
};
static_assert(alignof(ABP_DemonHordeEnemy_Special_Vampire_C) == 0x000010, "Wrong alignment on ABP_DemonHordeEnemy_Special_Vampire_C");
static_assert(sizeof(ABP_DemonHordeEnemy_Special_Vampire_C) == 0x001580, "Wrong size on ABP_DemonHordeEnemy_Special_Vampire_C");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_Vampire_C, UberGraphFrame_BP_DemonHordeEnemy_Special_Vampire_C) == 0x001530, "Member 'ABP_DemonHordeEnemy_Special_Vampire_C::UberGraphFrame_BP_DemonHordeEnemy_Special_Vampire_C' has a wrong offset!");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_Vampire_C, HealSphere) == 0x001538, "Member 'ABP_DemonHordeEnemy_Special_Vampire_C::HealSphere' has a wrong offset!");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_Vampire_C, ClawBloodDripR) == 0x001540, "Member 'ABP_DemonHordeEnemy_Special_Vampire_C::ClawBloodDripR' has a wrong offset!");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_Vampire_C, ClawBloodDripL) == 0x001548, "Member 'ABP_DemonHordeEnemy_Special_Vampire_C::ClawBloodDripL' has a wrong offset!");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_Vampire_C, ClawBloodTrailR) == 0x001550, "Member 'ABP_DemonHordeEnemy_Special_Vampire_C::ClawBloodTrailR' has a wrong offset!");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_Vampire_C, ClawBloodTrailL) == 0x001558, "Member 'ABP_DemonHordeEnemy_Special_Vampire_C::ClawBloodTrailL' has a wrong offset!");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_Vampire_C, PowerUp_PowerUpAlpha_288978914B4D42E9C6B8389BCC0BDC14) == 0x001560, "Member 'ABP_DemonHordeEnemy_Special_Vampire_C::PowerUp_PowerUpAlpha_288978914B4D42E9C6B8389BCC0BDC14' has a wrong offset!");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_Vampire_C, PowerUp__Direction_288978914B4D42E9C6B8389BCC0BDC14) == 0x001564, "Member 'ABP_DemonHordeEnemy_Special_Vampire_C::PowerUp__Direction_288978914B4D42E9C6B8389BCC0BDC14' has a wrong offset!");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_Vampire_C, PowerUp) == 0x001568, "Member 'ABP_DemonHordeEnemy_Special_Vampire_C::PowerUp' has a wrong offset!");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_Vampire_C, IsStateCooldown) == 0x001570, "Member 'ABP_DemonHordeEnemy_Special_Vampire_C::IsStateCooldown' has a wrong offset!");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_Vampire_C, StateCooldown) == 0x001574, "Member 'ABP_DemonHordeEnemy_Special_Vampire_C::StateCooldown' has a wrong offset!");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_Vampire_C, IsTeleportCooldown) == 0x001578, "Member 'ABP_DemonHordeEnemy_Special_Vampire_C::IsTeleportCooldown' has a wrong offset!");

}

