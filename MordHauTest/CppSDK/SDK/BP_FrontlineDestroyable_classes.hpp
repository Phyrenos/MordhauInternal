#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrontlineDestroyable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_DestroyableActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FrontlineDestroyable.BP_FrontlineDestroyable_C
// 0x0040 (0x0520 - 0x04E0)
class ABP_FrontlineDestroyable_C : public ABP_DestroyableActor_C
{
public:
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_FrontlineDestroyable_C;          // 0x04D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UMordhauWidgetComponent*                MordhauWidget;                                     // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_CapturePoint_C*                     CapturePoint;                                      // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerController*               LastDamagedByPlayerController;                     // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScoreAwardedPerDestroy;                            // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        FinalMeshChangeParticle;                           // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScoreDamageMultiplier;                             // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDamagePerHit;                                   // 0x050C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CapturePointObjectivesCompleted;                   // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511[0x3];                                      // 0x0511(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ObjectiveWeight;                                   // 0x0514(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStartWithWidgetHidden;                            // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Show_Widget_Height_Indicator;                      // 0x0519(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51A[0x2];                                      // 0x051A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Widget_Height_Tolerance;                           // 0x051C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FrontlineDestroyable(int32 EntryPoint);
	void OnAnyObjectiveProgressChanged();
	void OnInitialize(class ABP_CapturePoint_C* Point);
	void OnUpdateUIWidgets();
	void OnEnemyLostPrerequisites();
	void OnEnemyGainedPrerequisites();
	void Initialize(class ABP_CapturePoint_C* InCapturePoint);
	void EnemyGainedPrerequisites();
	void EnemyLostPrerequisites();
	void UpdateUIWidgets();
	void IsCompleted(bool* Completed);
	void IsInObjectiveArea(const struct FVector& Location, bool* InArea);
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnReplicatedHealthChanged();
	void ReceiveBeginPlay();

	void GetObjectiveProgress(float* Progress) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FrontlineDestroyable_C">();
	}
	static class ABP_FrontlineDestroyable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FrontlineDestroyable_C>();
	}
};
static_assert(alignof(ABP_FrontlineDestroyable_C) == 0x000010, "Wrong alignment on ABP_FrontlineDestroyable_C");
static_assert(sizeof(ABP_FrontlineDestroyable_C) == 0x000520, "Wrong size on ABP_FrontlineDestroyable_C");
static_assert(offsetof(ABP_FrontlineDestroyable_C, UberGraphFrame_BP_FrontlineDestroyable_C) == 0x0004D8, "Member 'ABP_FrontlineDestroyable_C::UberGraphFrame_BP_FrontlineDestroyable_C' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineDestroyable_C, MordhauWidget) == 0x0004E0, "Member 'ABP_FrontlineDestroyable_C::MordhauWidget' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineDestroyable_C, CapturePoint) == 0x0004E8, "Member 'ABP_FrontlineDestroyable_C::CapturePoint' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineDestroyable_C, LastDamagedByPlayerController) == 0x0004F0, "Member 'ABP_FrontlineDestroyable_C::LastDamagedByPlayerController' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineDestroyable_C, ScoreAwardedPerDestroy) == 0x0004F8, "Member 'ABP_FrontlineDestroyable_C::ScoreAwardedPerDestroy' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineDestroyable_C, FinalMeshChangeParticle) == 0x000500, "Member 'ABP_FrontlineDestroyable_C::FinalMeshChangeParticle' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineDestroyable_C, ScoreDamageMultiplier) == 0x000508, "Member 'ABP_FrontlineDestroyable_C::ScoreDamageMultiplier' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineDestroyable_C, MaxDamagePerHit) == 0x00050C, "Member 'ABP_FrontlineDestroyable_C::MaxDamagePerHit' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineDestroyable_C, CapturePointObjectivesCompleted) == 0x000510, "Member 'ABP_FrontlineDestroyable_C::CapturePointObjectivesCompleted' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineDestroyable_C, ObjectiveWeight) == 0x000514, "Member 'ABP_FrontlineDestroyable_C::ObjectiveWeight' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineDestroyable_C, bStartWithWidgetHidden) == 0x000518, "Member 'ABP_FrontlineDestroyable_C::bStartWithWidgetHidden' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineDestroyable_C, Show_Widget_Height_Indicator) == 0x000519, "Member 'ABP_FrontlineDestroyable_C::Show_Widget_Height_Indicator' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineDestroyable_C, Widget_Height_Tolerance) == 0x00051C, "Member 'ABP_FrontlineDestroyable_C::Widget_Height_Tolerance' has a wrong offset!");

}

