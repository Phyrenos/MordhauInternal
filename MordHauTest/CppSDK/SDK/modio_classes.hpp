#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: modio

#include "Basic.hpp"

#include "modio_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class modio.CallbackProxy_AddMetadataKVP
// 0x0080 (0x00B0 - 0x0030)
class UCallbackProxy_AddMetadataKVP final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0090(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_AddMetadataKVP* AddMetadataKVP(class UObject* WorldContext, int32 ModId, const TMap<class FString, class FString>& MetadataKVP);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_AddMetadataKVP">();
	}
	static class UCallbackProxy_AddMetadataKVP* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_AddMetadataKVP>();
	}
};
static_assert(alignof(UCallbackProxy_AddMetadataKVP) == 0x000008, "Wrong alignment on UCallbackProxy_AddMetadataKVP");
static_assert(sizeof(UCallbackProxy_AddMetadataKVP) == 0x0000B0, "Wrong size on UCallbackProxy_AddMetadataKVP");
static_assert(offsetof(UCallbackProxy_AddMetadataKVP, WorldContextObject) == 0x000088, "Member 'UCallbackProxy_AddMetadataKVP::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_AddMetadataKVP, onSuccess) == 0x000090, "Member 'UCallbackProxy_AddMetadataKVP::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_AddMetadataKVP, onFailure) == 0x0000A0, "Member 'UCallbackProxy_AddMetadataKVP::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_AddMod
// 0x00B0 (0x00E0 - 0x0030)
class UCallbackProxy_AddMod final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x88];                                      // 0x0030(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, const struct FModioMod& Mod)> onSuccess;                                         // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, const struct FModioMod& Mod)> onFailure;                                         // 0x00D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_AddMod* AddMod(class UObject* WorldContext, const struct FModioModCreator& ModCreator);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_AddMod">();
	}
	static class UCallbackProxy_AddMod* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_AddMod>();
	}
};
static_assert(alignof(UCallbackProxy_AddMod) == 0x000008, "Wrong alignment on UCallbackProxy_AddMod");
static_assert(sizeof(UCallbackProxy_AddMod) == 0x0000E0, "Wrong size on UCallbackProxy_AddMod");
static_assert(offsetof(UCallbackProxy_AddMod, WorldContextObject) == 0x0000B8, "Member 'UCallbackProxy_AddMod::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_AddMod, onSuccess) == 0x0000C0, "Member 'UCallbackProxy_AddMod::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_AddMod, onFailure) == 0x0000D0, "Member 'UCallbackProxy_AddMod::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_AddModDependencies
// 0x0040 (0x0070 - 0x0030)
class UCallbackProxy_AddModDependencies final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_AddModDependencies* AddModDependencies(class UObject* WorldContext, int32 ModId, const TArray<int32>& Dependencies);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_AddModDependencies">();
	}
	static class UCallbackProxy_AddModDependencies* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_AddModDependencies>();
	}
};
static_assert(alignof(UCallbackProxy_AddModDependencies) == 0x000008, "Wrong alignment on UCallbackProxy_AddModDependencies");
static_assert(sizeof(UCallbackProxy_AddModDependencies) == 0x000070, "Wrong size on UCallbackProxy_AddModDependencies");
static_assert(offsetof(UCallbackProxy_AddModDependencies, WorldContextObject) == 0x000048, "Member 'UCallbackProxy_AddModDependencies::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_AddModDependencies, onSuccess) == 0x000050, "Member 'UCallbackProxy_AddModDependencies::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_AddModDependencies, onFailure) == 0x000060, "Member 'UCallbackProxy_AddModDependencies::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_AddModImages
// 0x0040 (0x0070 - 0x0030)
class UCallbackProxy_AddModImages final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_AddModImages* AddModImages(class UObject* WorldContext, int32 ModId, const TArray<class FString>& ImagePaths);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_AddModImages">();
	}
	static class UCallbackProxy_AddModImages* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_AddModImages>();
	}
};
static_assert(alignof(UCallbackProxy_AddModImages) == 0x000008, "Wrong alignment on UCallbackProxy_AddModImages");
static_assert(sizeof(UCallbackProxy_AddModImages) == 0x000070, "Wrong size on UCallbackProxy_AddModImages");
static_assert(offsetof(UCallbackProxy_AddModImages, WorldContextObject) == 0x000048, "Member 'UCallbackProxy_AddModImages::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_AddModImages, onSuccess) == 0x000050, "Member 'UCallbackProxy_AddModImages::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_AddModImages, onFailure) == 0x000060, "Member 'UCallbackProxy_AddModImages::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_AddModLogo
// 0x0040 (0x0070 - 0x0030)
class UCallbackProxy_AddModLogo final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_AddModLogo* AddModLogo(class UObject* WorldContext, int32 ModId, const class FString& LogoPath);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_AddModLogo">();
	}
	static class UCallbackProxy_AddModLogo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_AddModLogo>();
	}
};
static_assert(alignof(UCallbackProxy_AddModLogo) == 0x000008, "Wrong alignment on UCallbackProxy_AddModLogo");
static_assert(sizeof(UCallbackProxy_AddModLogo) == 0x000070, "Wrong size on UCallbackProxy_AddModLogo");
static_assert(offsetof(UCallbackProxy_AddModLogo, WorldContextObject) == 0x000048, "Member 'UCallbackProxy_AddModLogo::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_AddModLogo, onSuccess) == 0x000050, "Member 'UCallbackProxy_AddModLogo::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_AddModLogo, onFailure) == 0x000060, "Member 'UCallbackProxy_AddModLogo::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_AddModRating
// 0x0030 (0x0060 - 0x0030)
class UCallbackProxy_AddModRating final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_AddModRating* AddModRating(class UObject* WorldContext, int32 ModId, bool IsRatingPositive);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_AddModRating">();
	}
	static class UCallbackProxy_AddModRating* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_AddModRating>();
	}
};
static_assert(alignof(UCallbackProxy_AddModRating) == 0x000008, "Wrong alignment on UCallbackProxy_AddModRating");
static_assert(sizeof(UCallbackProxy_AddModRating) == 0x000060, "Wrong size on UCallbackProxy_AddModRating");
static_assert(offsetof(UCallbackProxy_AddModRating, WorldContextObject) == 0x000038, "Member 'UCallbackProxy_AddModRating::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_AddModRating, onSuccess) == 0x000040, "Member 'UCallbackProxy_AddModRating::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_AddModRating, onFailure) == 0x000050, "Member 'UCallbackProxy_AddModRating::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_AddModSketchfabLinks
// 0x0040 (0x0070 - 0x0030)
class UCallbackProxy_AddModSketchfabLinks final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_AddModSketchfabLinks* AddModSketchfabLinks(class UObject* WorldContext, int32 ModId, const TArray<class FString>& SketchfabLinks);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_AddModSketchfabLinks">();
	}
	static class UCallbackProxy_AddModSketchfabLinks* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_AddModSketchfabLinks>();
	}
};
static_assert(alignof(UCallbackProxy_AddModSketchfabLinks) == 0x000008, "Wrong alignment on UCallbackProxy_AddModSketchfabLinks");
static_assert(sizeof(UCallbackProxy_AddModSketchfabLinks) == 0x000070, "Wrong size on UCallbackProxy_AddModSketchfabLinks");
static_assert(offsetof(UCallbackProxy_AddModSketchfabLinks, WorldContextObject) == 0x000048, "Member 'UCallbackProxy_AddModSketchfabLinks::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_AddModSketchfabLinks, onSuccess) == 0x000050, "Member 'UCallbackProxy_AddModSketchfabLinks::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_AddModSketchfabLinks, onFailure) == 0x000060, "Member 'UCallbackProxy_AddModSketchfabLinks::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_AddModTags
// 0x0040 (0x0070 - 0x0030)
class UCallbackProxy_AddModTags final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_AddModTags* AddModTags(class UObject* WorldContext, int32 ModId, const TArray<class FString>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_AddModTags">();
	}
	static class UCallbackProxy_AddModTags* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_AddModTags>();
	}
};
static_assert(alignof(UCallbackProxy_AddModTags) == 0x000008, "Wrong alignment on UCallbackProxy_AddModTags");
static_assert(sizeof(UCallbackProxy_AddModTags) == 0x000070, "Wrong size on UCallbackProxy_AddModTags");
static_assert(offsetof(UCallbackProxy_AddModTags, WorldContextObject) == 0x000048, "Member 'UCallbackProxy_AddModTags::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_AddModTags, onSuccess) == 0x000050, "Member 'UCallbackProxy_AddModTags::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_AddModTags, onFailure) == 0x000060, "Member 'UCallbackProxy_AddModTags::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_AddModYoutubeLinks
// 0x0040 (0x0070 - 0x0030)
class UCallbackProxy_AddModYoutubeLinks final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_AddModYoutubeLinks* AddModYoutubeLinks(class UObject* WorldContext, int32 ModId, const TArray<class FString>& YoutubeLinks);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_AddModYoutubeLinks">();
	}
	static class UCallbackProxy_AddModYoutubeLinks* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_AddModYoutubeLinks>();
	}
};
static_assert(alignof(UCallbackProxy_AddModYoutubeLinks) == 0x000008, "Wrong alignment on UCallbackProxy_AddModYoutubeLinks");
static_assert(sizeof(UCallbackProxy_AddModYoutubeLinks) == 0x000070, "Wrong size on UCallbackProxy_AddModYoutubeLinks");
static_assert(offsetof(UCallbackProxy_AddModYoutubeLinks, WorldContextObject) == 0x000048, "Member 'UCallbackProxy_AddModYoutubeLinks::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_AddModYoutubeLinks, onSuccess) == 0x000050, "Member 'UCallbackProxy_AddModYoutubeLinks::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_AddModYoutubeLinks, onFailure) == 0x000060, "Member 'UCallbackProxy_AddModYoutubeLinks::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_DeleteMetadataKVP
// 0x0080 (0x00B0 - 0x0030)
class UCallbackProxy_DeleteMetadataKVP final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0090(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_DeleteMetadataKVP* DeleteMetadataKVP(class UObject* WorldContext, int32 ModId, const TMap<class FString, class FString>& MetadataKVP);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_DeleteMetadataKVP">();
	}
	static class UCallbackProxy_DeleteMetadataKVP* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_DeleteMetadataKVP>();
	}
};
static_assert(alignof(UCallbackProxy_DeleteMetadataKVP) == 0x000008, "Wrong alignment on UCallbackProxy_DeleteMetadataKVP");
static_assert(sizeof(UCallbackProxy_DeleteMetadataKVP) == 0x0000B0, "Wrong size on UCallbackProxy_DeleteMetadataKVP");
static_assert(offsetof(UCallbackProxy_DeleteMetadataKVP, WorldContextObject) == 0x000088, "Member 'UCallbackProxy_DeleteMetadataKVP::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_DeleteMetadataKVP, onSuccess) == 0x000090, "Member 'UCallbackProxy_DeleteMetadataKVP::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_DeleteMetadataKVP, onFailure) == 0x0000A0, "Member 'UCallbackProxy_DeleteMetadataKVP::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_DeleteModDependencies
// 0x0040 (0x0070 - 0x0030)
class UCallbackProxy_DeleteModDependencies final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_DeleteModDependencies* DeleteModDependencies(class UObject* WorldContext, int32 ModId, const TArray<int32>& Dependencies);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_DeleteModDependencies">();
	}
	static class UCallbackProxy_DeleteModDependencies* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_DeleteModDependencies>();
	}
};
static_assert(alignof(UCallbackProxy_DeleteModDependencies) == 0x000008, "Wrong alignment on UCallbackProxy_DeleteModDependencies");
static_assert(sizeof(UCallbackProxy_DeleteModDependencies) == 0x000070, "Wrong size on UCallbackProxy_DeleteModDependencies");
static_assert(offsetof(UCallbackProxy_DeleteModDependencies, WorldContextObject) == 0x000048, "Member 'UCallbackProxy_DeleteModDependencies::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_DeleteModDependencies, onSuccess) == 0x000050, "Member 'UCallbackProxy_DeleteModDependencies::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_DeleteModDependencies, onFailure) == 0x000060, "Member 'UCallbackProxy_DeleteModDependencies::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_DeleteModImages
// 0x0040 (0x0070 - 0x0030)
class UCallbackProxy_DeleteModImages final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_DeleteModImages* DeleteModImages(class UObject* WorldContext, int32 ModId, const TArray<class FString>& ImagePaths);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_DeleteModImages">();
	}
	static class UCallbackProxy_DeleteModImages* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_DeleteModImages>();
	}
};
static_assert(alignof(UCallbackProxy_DeleteModImages) == 0x000008, "Wrong alignment on UCallbackProxy_DeleteModImages");
static_assert(sizeof(UCallbackProxy_DeleteModImages) == 0x000070, "Wrong size on UCallbackProxy_DeleteModImages");
static_assert(offsetof(UCallbackProxy_DeleteModImages, WorldContextObject) == 0x000048, "Member 'UCallbackProxy_DeleteModImages::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_DeleteModImages, onSuccess) == 0x000050, "Member 'UCallbackProxy_DeleteModImages::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_DeleteModImages, onFailure) == 0x000060, "Member 'UCallbackProxy_DeleteModImages::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_DeleteModSketchfabLinks
// 0x0040 (0x0070 - 0x0030)
class UCallbackProxy_DeleteModSketchfabLinks final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_DeleteModSketchfabLinks* DeleteModSketchfabLinks(class UObject* WorldContext, int32 ModId, const TArray<class FString>& SketchfabLinks);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_DeleteModSketchfabLinks">();
	}
	static class UCallbackProxy_DeleteModSketchfabLinks* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_DeleteModSketchfabLinks>();
	}
};
static_assert(alignof(UCallbackProxy_DeleteModSketchfabLinks) == 0x000008, "Wrong alignment on UCallbackProxy_DeleteModSketchfabLinks");
static_assert(sizeof(UCallbackProxy_DeleteModSketchfabLinks) == 0x000070, "Wrong size on UCallbackProxy_DeleteModSketchfabLinks");
static_assert(offsetof(UCallbackProxy_DeleteModSketchfabLinks, WorldContextObject) == 0x000048, "Member 'UCallbackProxy_DeleteModSketchfabLinks::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_DeleteModSketchfabLinks, onSuccess) == 0x000050, "Member 'UCallbackProxy_DeleteModSketchfabLinks::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_DeleteModSketchfabLinks, onFailure) == 0x000060, "Member 'UCallbackProxy_DeleteModSketchfabLinks::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_DeleteModTags
// 0x0040 (0x0070 - 0x0030)
class UCallbackProxy_DeleteModTags final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_DeleteModTags* DeleteModTags(class UObject* WorldContext, int32 ModId, const TArray<class FString>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_DeleteModTags">();
	}
	static class UCallbackProxy_DeleteModTags* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_DeleteModTags>();
	}
};
static_assert(alignof(UCallbackProxy_DeleteModTags) == 0x000008, "Wrong alignment on UCallbackProxy_DeleteModTags");
static_assert(sizeof(UCallbackProxy_DeleteModTags) == 0x000070, "Wrong size on UCallbackProxy_DeleteModTags");
static_assert(offsetof(UCallbackProxy_DeleteModTags, WorldContextObject) == 0x000048, "Member 'UCallbackProxy_DeleteModTags::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_DeleteModTags, onSuccess) == 0x000050, "Member 'UCallbackProxy_DeleteModTags::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_DeleteModTags, onFailure) == 0x000060, "Member 'UCallbackProxy_DeleteModTags::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_DeleteModYoutubeLinks
// 0x0040 (0x0070 - 0x0030)
class UCallbackProxy_DeleteModYoutubeLinks final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_DeleteModYoutubeLinks* DeleteModYoutubeLinks(class UObject* WorldContext, int32 ModId, const TArray<class FString>& YoutubeLinks);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_DeleteModYoutubeLinks">();
	}
	static class UCallbackProxy_DeleteModYoutubeLinks* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_DeleteModYoutubeLinks>();
	}
};
static_assert(alignof(UCallbackProxy_DeleteModYoutubeLinks) == 0x000008, "Wrong alignment on UCallbackProxy_DeleteModYoutubeLinks");
static_assert(sizeof(UCallbackProxy_DeleteModYoutubeLinks) == 0x000070, "Wrong size on UCallbackProxy_DeleteModYoutubeLinks");
static_assert(offsetof(UCallbackProxy_DeleteModYoutubeLinks, WorldContextObject) == 0x000048, "Member 'UCallbackProxy_DeleteModYoutubeLinks::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_DeleteModYoutubeLinks, onSuccess) == 0x000050, "Member 'UCallbackProxy_DeleteModYoutubeLinks::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_DeleteModYoutubeLinks, onFailure) == 0x000060, "Member 'UCallbackProxy_DeleteModYoutubeLinks::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_DownloadModfilesById
// 0x0038 (0x0068 - 0x0030)
class UCallbackProxy_DownloadModfilesById final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, bool mods_are_updated)> onSuccess;                                         // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, bool mods_are_updated)> onFailure;                                         // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_DownloadModfilesById* DownloadModfilesById(class UObject* WorldContext, const TArray<int32>& ModIds);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_DownloadModfilesById">();
	}
	static class UCallbackProxy_DownloadModfilesById* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_DownloadModfilesById>();
	}
};
static_assert(alignof(UCallbackProxy_DownloadModfilesById) == 0x000008, "Wrong alignment on UCallbackProxy_DownloadModfilesById");
static_assert(sizeof(UCallbackProxy_DownloadModfilesById) == 0x000068, "Wrong size on UCallbackProxy_DownloadModfilesById");
static_assert(offsetof(UCallbackProxy_DownloadModfilesById, WorldContextObject) == 0x000040, "Member 'UCallbackProxy_DownloadModfilesById::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_DownloadModfilesById, onSuccess) == 0x000048, "Member 'UCallbackProxy_DownloadModfilesById::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_DownloadModfilesById, onFailure) == 0x000058, "Member 'UCallbackProxy_DownloadModfilesById::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_DownloadSubscribedModfiles
// 0x0030 (0x0060 - 0x0030)
class UCallbackProxy_DownloadSubscribedModfiles final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, bool mods_are_updated)> onSuccess;                                         // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, bool mods_are_updated)> onFailure;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_DownloadSubscribedModfiles* DownloadSubscribedModfiles(class UObject* WorldContext, bool UninstallUnsubscribed);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_DownloadSubscribedModfiles">();
	}
	static class UCallbackProxy_DownloadSubscribedModfiles* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_DownloadSubscribedModfiles>();
	}
};
static_assert(alignof(UCallbackProxy_DownloadSubscribedModfiles) == 0x000008, "Wrong alignment on UCallbackProxy_DownloadSubscribedModfiles");
static_assert(sizeof(UCallbackProxy_DownloadSubscribedModfiles) == 0x000060, "Wrong size on UCallbackProxy_DownloadSubscribedModfiles");
static_assert(offsetof(UCallbackProxy_DownloadSubscribedModfiles, WorldContextObject) == 0x000038, "Member 'UCallbackProxy_DownloadSubscribedModfiles::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_DownloadSubscribedModfiles, onSuccess) == 0x000040, "Member 'UCallbackProxy_DownloadSubscribedModfiles::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_DownloadSubscribedModfiles, onFailure) == 0x000050, "Member 'UCallbackProxy_DownloadSubscribedModfiles::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_EditMod
// 0x0098 (0x00C8 - 0x0030)
class UCallbackProxy_EditMod final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x70];                                      // 0x0030(0x0070)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, const struct FModioMod& Mod)> onSuccess;                                         // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, const struct FModioMod& Mod)> onFailure;                                         // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_EditMod* EditMod(class UObject* WorldContext, int32 ModId, const struct FModioModEditor& ModEditor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_EditMod">();
	}
	static class UCallbackProxy_EditMod* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_EditMod>();
	}
};
static_assert(alignof(UCallbackProxy_EditMod) == 0x000008, "Wrong alignment on UCallbackProxy_EditMod");
static_assert(sizeof(UCallbackProxy_EditMod) == 0x0000C8, "Wrong size on UCallbackProxy_EditMod");
static_assert(offsetof(UCallbackProxy_EditMod, WorldContextObject) == 0x0000A0, "Member 'UCallbackProxy_EditMod::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_EditMod, onSuccess) == 0x0000A8, "Member 'UCallbackProxy_EditMod::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_EditMod, onFailure) == 0x0000B8, "Member 'UCallbackProxy_EditMod::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_EmailExchange
// 0x0038 (0x0068 - 0x0030)
class UCallbackProxy_EmailExchange final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_EmailExchange* EmailExchange(class UObject* WorldContext, const class FString& SecurityCode);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_EmailExchange">();
	}
	static class UCallbackProxy_EmailExchange* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_EmailExchange>();
	}
};
static_assert(alignof(UCallbackProxy_EmailExchange) == 0x000008, "Wrong alignment on UCallbackProxy_EmailExchange");
static_assert(sizeof(UCallbackProxy_EmailExchange) == 0x000068, "Wrong size on UCallbackProxy_EmailExchange");
static_assert(offsetof(UCallbackProxy_EmailExchange, WorldContextObject) == 0x000040, "Member 'UCallbackProxy_EmailExchange::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_EmailExchange, onSuccess) == 0x000048, "Member 'UCallbackProxy_EmailExchange::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_EmailExchange, onFailure) == 0x000058, "Member 'UCallbackProxy_EmailExchange::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_EmailRequest
// 0x0038 (0x0068 - 0x0030)
class UCallbackProxy_EmailRequest final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_EmailRequest* EmailRequest(class UObject* WorldContext, const class FString& Email);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_EmailRequest">();
	}
	static class UCallbackProxy_EmailRequest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_EmailRequest>();
	}
};
static_assert(alignof(UCallbackProxy_EmailRequest) == 0x000008, "Wrong alignment on UCallbackProxy_EmailRequest");
static_assert(sizeof(UCallbackProxy_EmailRequest) == 0x000068, "Wrong size on UCallbackProxy_EmailRequest");
static_assert(offsetof(UCallbackProxy_EmailRequest, WorldContextObject) == 0x000040, "Member 'UCallbackProxy_EmailRequest::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_EmailRequest, onSuccess) == 0x000048, "Member 'UCallbackProxy_EmailRequest::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_EmailRequest, onFailure) == 0x000058, "Member 'UCallbackProxy_EmailRequest::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_GalaxyAuth
// 0x0038 (0x0068 - 0x0030)
class UCallbackProxy_GalaxyAuth final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_GalaxyAuth* GalaxyAuth(class UObject* WorldContext, const class FString& Appdata);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_GalaxyAuth">();
	}
	static class UCallbackProxy_GalaxyAuth* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_GalaxyAuth>();
	}
};
static_assert(alignof(UCallbackProxy_GalaxyAuth) == 0x000008, "Wrong alignment on UCallbackProxy_GalaxyAuth");
static_assert(sizeof(UCallbackProxy_GalaxyAuth) == 0x000068, "Wrong size on UCallbackProxy_GalaxyAuth");
static_assert(offsetof(UCallbackProxy_GalaxyAuth, WorldContextObject) == 0x000040, "Member 'UCallbackProxy_GalaxyAuth::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GalaxyAuth, onSuccess) == 0x000048, "Member 'UCallbackProxy_GalaxyAuth::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GalaxyAuth, onFailure) == 0x000058, "Member 'UCallbackProxy_GalaxyAuth::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_GetAllMetadataKVP
// 0x0030 (0x0060 - 0x0030)
class UCallbackProxy_GetAllMetadataKVP final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioMetadataKVP>& MetadataKVP)> onSuccess;                                         // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioMetadataKVP>& MetadataKVP)> onFailure;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_GetAllMetadataKVP* GetAllMetadataKVP(class UObject* WorldContext, int32 ModId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_GetAllMetadataKVP">();
	}
	static class UCallbackProxy_GetAllMetadataKVP* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_GetAllMetadataKVP>();
	}
};
static_assert(alignof(UCallbackProxy_GetAllMetadataKVP) == 0x000008, "Wrong alignment on UCallbackProxy_GetAllMetadataKVP");
static_assert(sizeof(UCallbackProxy_GetAllMetadataKVP) == 0x000060, "Wrong size on UCallbackProxy_GetAllMetadataKVP");
static_assert(offsetof(UCallbackProxy_GetAllMetadataKVP, WorldContextObject) == 0x000038, "Member 'UCallbackProxy_GetAllMetadataKVP::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetAllMetadataKVP, onSuccess) == 0x000040, "Member 'UCallbackProxy_GetAllMetadataKVP::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetAllMetadataKVP, onFailure) == 0x000050, "Member 'UCallbackProxy_GetAllMetadataKVP::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_GetAllModDependencies
// 0x0030 (0x0060 - 0x0030)
class UCallbackProxy_GetAllModDependencies final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioModDependency>& ModDependencies)> onSuccess;                                         // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioModDependency>& ModDependencies)> onFailure;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_GetAllModDependencies* GetAllModDependencies(class UObject* WorldContext, int32 ModId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_GetAllModDependencies">();
	}
	static class UCallbackProxy_GetAllModDependencies* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_GetAllModDependencies>();
	}
};
static_assert(alignof(UCallbackProxy_GetAllModDependencies) == 0x000008, "Wrong alignment on UCallbackProxy_GetAllModDependencies");
static_assert(sizeof(UCallbackProxy_GetAllModDependencies) == 0x000060, "Wrong size on UCallbackProxy_GetAllModDependencies");
static_assert(offsetof(UCallbackProxy_GetAllModDependencies, WorldContextObject) == 0x000038, "Member 'UCallbackProxy_GetAllModDependencies::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetAllModDependencies, onSuccess) == 0x000040, "Member 'UCallbackProxy_GetAllModDependencies::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetAllModDependencies, onFailure) == 0x000050, "Member 'UCallbackProxy_GetAllModDependencies::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_GetAllModfiles
// 0x0030 (0x0060 - 0x0030)
class UCallbackProxy_GetAllModfiles final : public UOnlineBlueprintCallProxyBase
{
public:
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioModfile>& ModFile)> onSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioModfile>& ModFile)> onFailure;                                         // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UObject*                                WorldContextObject;                                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UCallbackProxy_GetAllModfiles* GetAllModfiles(class UObject* WorldContext, int32 ModId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_GetAllModfiles">();
	}
	static class UCallbackProxy_GetAllModfiles* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_GetAllModfiles>();
	}
};
static_assert(alignof(UCallbackProxy_GetAllModfiles) == 0x000008, "Wrong alignment on UCallbackProxy_GetAllModfiles");
static_assert(sizeof(UCallbackProxy_GetAllModfiles) == 0x000060, "Wrong size on UCallbackProxy_GetAllModfiles");
static_assert(offsetof(UCallbackProxy_GetAllModfiles, onSuccess) == 0x000030, "Member 'UCallbackProxy_GetAllModfiles::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetAllModfiles, onFailure) == 0x000040, "Member 'UCallbackProxy_GetAllModfiles::onFailure' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetAllModfiles, WorldContextObject) == 0x000050, "Member 'UCallbackProxy_GetAllModfiles::WorldContextObject' has a wrong offset!");

// Class modio.CallbackProxy_GetAllMods
// 0x0068 (0x0098 - 0x0030)
class UCallbackProxy_GetAllMods final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x40];                                      // 0x0030(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioMod>& Mods)> onSuccess;                                         // 0x0078(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioMod>& Mods)> onFailure;                                         // 0x0088(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_GetAllMods* GetAllMods(class UObject* WorldContext, const struct FModioFilterCreator& Filter, const TArray<class FString>& ModTags, int32 Limit, int32 Offset);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_GetAllMods">();
	}
	static class UCallbackProxy_GetAllMods* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_GetAllMods>();
	}
};
static_assert(alignof(UCallbackProxy_GetAllMods) == 0x000008, "Wrong alignment on UCallbackProxy_GetAllMods");
static_assert(sizeof(UCallbackProxy_GetAllMods) == 0x000098, "Wrong size on UCallbackProxy_GetAllMods");
static_assert(offsetof(UCallbackProxy_GetAllMods, WorldContextObject) == 0x000070, "Member 'UCallbackProxy_GetAllMods::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetAllMods, onSuccess) == 0x000078, "Member 'UCallbackProxy_GetAllMods::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetAllMods, onFailure) == 0x000088, "Member 'UCallbackProxy_GetAllMods::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_GetAllModTags
// 0x0030 (0x0060 - 0x0030)
class UCallbackProxy_GetAllModTags final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioModTag>& ModTags)> onSuccess;                                         // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioModTag>& ModTags)> onFailure;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_GetAllModTags* GetAllModTags(class UObject* WorldContext, int32 ModId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_GetAllModTags">();
	}
	static class UCallbackProxy_GetAllModTags* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_GetAllModTags>();
	}
};
static_assert(alignof(UCallbackProxy_GetAllModTags) == 0x000008, "Wrong alignment on UCallbackProxy_GetAllModTags");
static_assert(sizeof(UCallbackProxy_GetAllModTags) == 0x000060, "Wrong size on UCallbackProxy_GetAllModTags");
static_assert(offsetof(UCallbackProxy_GetAllModTags, WorldContextObject) == 0x000038, "Member 'UCallbackProxy_GetAllModTags::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetAllModTags, onSuccess) == 0x000040, "Member 'UCallbackProxy_GetAllModTags::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetAllModTags, onFailure) == 0x000050, "Member 'UCallbackProxy_GetAllModTags::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_GetAuthenticatedUser
// 0x0028 (0x0058 - 0x0030)
class UCallbackProxy_GetAuthenticatedUser final : public UOnlineBlueprintCallProxyBase
{
public:
	class UObject*                                WorldContextObject;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, const struct FModioUser& User)> onSuccess;                                         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, const struct FModioUser& User)> onFailure;                                         // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_GetAuthenticatedUser* GetAuthenticatedUser(class UObject* WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_GetAuthenticatedUser">();
	}
	static class UCallbackProxy_GetAuthenticatedUser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_GetAuthenticatedUser>();
	}
};
static_assert(alignof(UCallbackProxy_GetAuthenticatedUser) == 0x000008, "Wrong alignment on UCallbackProxy_GetAuthenticatedUser");
static_assert(sizeof(UCallbackProxy_GetAuthenticatedUser) == 0x000058, "Wrong size on UCallbackProxy_GetAuthenticatedUser");
static_assert(offsetof(UCallbackProxy_GetAuthenticatedUser, WorldContextObject) == 0x000030, "Member 'UCallbackProxy_GetAuthenticatedUser::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetAuthenticatedUser, onSuccess) == 0x000038, "Member 'UCallbackProxy_GetAuthenticatedUser::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetAuthenticatedUser, onFailure) == 0x000048, "Member 'UCallbackProxy_GetAuthenticatedUser::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_GetGame
// 0x0030 (0x0060 - 0x0030)
class UCallbackProxy_GetGame final : public UOnlineBlueprintCallProxyBase
{
public:
	TMulticastInlineDelegate<void(const struct FModioResponse& response, const struct FModioGame& Game)> onSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, const struct FModioGame& Game)> onFailure;                                         // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UCallbackProxy_GetGame* GetGame(class UObject* WorldContext, int32 GameId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_GetGame">();
	}
	static class UCallbackProxy_GetGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_GetGame>();
	}
};
static_assert(alignof(UCallbackProxy_GetGame) == 0x000008, "Wrong alignment on UCallbackProxy_GetGame");
static_assert(sizeof(UCallbackProxy_GetGame) == 0x000060, "Wrong size on UCallbackProxy_GetGame");
static_assert(offsetof(UCallbackProxy_GetGame, onSuccess) == 0x000030, "Member 'UCallbackProxy_GetGame::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetGame, onFailure) == 0x000040, "Member 'UCallbackProxy_GetGame::onFailure' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetGame, WorldContextObject) == 0x000058, "Member 'UCallbackProxy_GetGame::WorldContextObject' has a wrong offset!");

// Class modio.CallbackProxy_GetMod
// 0x0030 (0x0060 - 0x0030)
class UCallbackProxy_GetMod final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, const struct FModioMod& Mod)> onSuccess;                                         // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, const struct FModioMod& Mod)> onFailure;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_GetMod* GetMod(class UObject* WorldContext, int32 ModId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_GetMod">();
	}
	static class UCallbackProxy_GetMod* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_GetMod>();
	}
};
static_assert(alignof(UCallbackProxy_GetMod) == 0x000008, "Wrong alignment on UCallbackProxy_GetMod");
static_assert(sizeof(UCallbackProxy_GetMod) == 0x000060, "Wrong size on UCallbackProxy_GetMod");
static_assert(offsetof(UCallbackProxy_GetMod, WorldContextObject) == 0x000038, "Member 'UCallbackProxy_GetMod::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetMod, onSuccess) == 0x000040, "Member 'UCallbackProxy_GetMod::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetMod, onFailure) == 0x000050, "Member 'UCallbackProxy_GetMod::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_GetUserEvents
// 0x0030 (0x0060 - 0x0030)
class UCallbackProxy_GetUserEvents final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioUserEvent>& UserEvents)> onSuccess;                                         // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioUserEvent>& UserEvents)> onFailure;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_GetUserEvents* GetUserEvents(class UObject* WorldContext, int32 Limit, int32 Offset);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_GetUserEvents">();
	}
	static class UCallbackProxy_GetUserEvents* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_GetUserEvents>();
	}
};
static_assert(alignof(UCallbackProxy_GetUserEvents) == 0x000008, "Wrong alignment on UCallbackProxy_GetUserEvents");
static_assert(sizeof(UCallbackProxy_GetUserEvents) == 0x000060, "Wrong size on UCallbackProxy_GetUserEvents");
static_assert(offsetof(UCallbackProxy_GetUserEvents, WorldContextObject) == 0x000038, "Member 'UCallbackProxy_GetUserEvents::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetUserEvents, onSuccess) == 0x000040, "Member 'UCallbackProxy_GetUserEvents::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetUserEvents, onFailure) == 0x000050, "Member 'UCallbackProxy_GetUserEvents::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_GetUserModfiles
// 0x0030 (0x0060 - 0x0030)
class UCallbackProxy_GetUserModfiles final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioModfile>& Modfiles)> onSuccess;                                         // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioModfile>& Modfiles)> onFailure;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_GetUserModfiles* GetUserModfiles(class UObject* WorldContext, int32 Limit, int32 Offset);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_GetUserModfiles">();
	}
	static class UCallbackProxy_GetUserModfiles* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_GetUserModfiles>();
	}
};
static_assert(alignof(UCallbackProxy_GetUserModfiles) == 0x000008, "Wrong alignment on UCallbackProxy_GetUserModfiles");
static_assert(sizeof(UCallbackProxy_GetUserModfiles) == 0x000060, "Wrong size on UCallbackProxy_GetUserModfiles");
static_assert(offsetof(UCallbackProxy_GetUserModfiles, WorldContextObject) == 0x000038, "Member 'UCallbackProxy_GetUserModfiles::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetUserModfiles, onSuccess) == 0x000040, "Member 'UCallbackProxy_GetUserModfiles::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetUserModfiles, onFailure) == 0x000050, "Member 'UCallbackProxy_GetUserModfiles::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_GetUserMods
// 0x0068 (0x0098 - 0x0030)
class UCallbackProxy_GetUserMods final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x40];                                      // 0x0030(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioMod>& Mods)> onSuccess;                                         // 0x0078(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioMod>& Mods)> onFailure;                                         // 0x0088(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_GetUserMods* GetUserMods(class UObject* WorldContext, const struct FModioFilterCreator& FilterCreator, const TArray<class FString>& ModTags, int32 Limit, int32 Offset);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_GetUserMods">();
	}
	static class UCallbackProxy_GetUserMods* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_GetUserMods>();
	}
};
static_assert(alignof(UCallbackProxy_GetUserMods) == 0x000008, "Wrong alignment on UCallbackProxy_GetUserMods");
static_assert(sizeof(UCallbackProxy_GetUserMods) == 0x000098, "Wrong size on UCallbackProxy_GetUserMods");
static_assert(offsetof(UCallbackProxy_GetUserMods, WorldContextObject) == 0x000070, "Member 'UCallbackProxy_GetUserMods::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetUserMods, onSuccess) == 0x000078, "Member 'UCallbackProxy_GetUserMods::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetUserMods, onFailure) == 0x000088, "Member 'UCallbackProxy_GetUserMods::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_GetUserRatings
// 0x0030 (0x0060 - 0x0030)
class UCallbackProxy_GetUserRatings final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioRating>& Ratings)> onSuccess;                                         // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioRating>& Ratings)> onFailure;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_GetUserRatings* GetUserRatings(class UObject* WorldContext, int32 Limit, int32 Offset);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_GetUserRatings">();
	}
	static class UCallbackProxy_GetUserRatings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_GetUserRatings>();
	}
};
static_assert(alignof(UCallbackProxy_GetUserRatings) == 0x000008, "Wrong alignment on UCallbackProxy_GetUserRatings");
static_assert(sizeof(UCallbackProxy_GetUserRatings) == 0x000060, "Wrong size on UCallbackProxy_GetUserRatings");
static_assert(offsetof(UCallbackProxy_GetUserRatings, WorldContextObject) == 0x000038, "Member 'UCallbackProxy_GetUserRatings::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetUserRatings, onSuccess) == 0x000040, "Member 'UCallbackProxy_GetUserRatings::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetUserRatings, onFailure) == 0x000050, "Member 'UCallbackProxy_GetUserRatings::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_GetUserSubscriptions
// 0x0068 (0x0098 - 0x0030)
class UCallbackProxy_GetUserSubscriptions final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x40];                                      // 0x0030(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioMod>& Mods)> onSuccess;                                         // 0x0078(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioMod>& Mods)> onFailure;                                         // 0x0088(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_GetUserSubscriptions* GetUserSubscriptions(class UObject* WorldContext, const struct FModioFilterCreator& FilterCreator, const TArray<class FString>& ModTags, int32 Limit, int32 Offset);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_GetUserSubscriptions">();
	}
	static class UCallbackProxy_GetUserSubscriptions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_GetUserSubscriptions>();
	}
};
static_assert(alignof(UCallbackProxy_GetUserSubscriptions) == 0x000008, "Wrong alignment on UCallbackProxy_GetUserSubscriptions");
static_assert(sizeof(UCallbackProxy_GetUserSubscriptions) == 0x000098, "Wrong size on UCallbackProxy_GetUserSubscriptions");
static_assert(offsetof(UCallbackProxy_GetUserSubscriptions, WorldContextObject) == 0x000070, "Member 'UCallbackProxy_GetUserSubscriptions::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetUserSubscriptions, onSuccess) == 0x000078, "Member 'UCallbackProxy_GetUserSubscriptions::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_GetUserSubscriptions, onFailure) == 0x000088, "Member 'UCallbackProxy_GetUserSubscriptions::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_OculusAuth
// 0x0080 (0x00B0 - 0x0030)
class UCallbackProxy_OculusAuth final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0090(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_OculusAuth* OculusAuth(class UObject* WorldContext, const class FString& Nonce, const class FString& OculusUserId, const class FString& AccessToken, const class FString& Email, const class FString& Device, int32 DateExpires);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_OculusAuth">();
	}
	static class UCallbackProxy_OculusAuth* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_OculusAuth>();
	}
};
static_assert(alignof(UCallbackProxy_OculusAuth) == 0x000008, "Wrong alignment on UCallbackProxy_OculusAuth");
static_assert(sizeof(UCallbackProxy_OculusAuth) == 0x0000B0, "Wrong size on UCallbackProxy_OculusAuth");
static_assert(offsetof(UCallbackProxy_OculusAuth, WorldContextObject) == 0x000088, "Member 'UCallbackProxy_OculusAuth::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_OculusAuth, onSuccess) == 0x000090, "Member 'UCallbackProxy_OculusAuth::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_OculusAuth, onFailure) == 0x0000A0, "Member 'UCallbackProxy_OculusAuth::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_SetModDownloadListener
// 0x0028 (0x0058 - 0x0030)
class UCallbackProxy_SetModDownloadListener final : public UOnlineBlueprintCallProxyBase
{
public:
	class UObject*                                WorldContextObject;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 ResponseCode, int32 ModId)> onSuccess;                                         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 ResponseCode, int32 ModId)> onFailure;                                         // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_SetModDownloadListener* SetModDownloadListener(class UObject* WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_SetModDownloadListener">();
	}
	static class UCallbackProxy_SetModDownloadListener* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_SetModDownloadListener>();
	}
};
static_assert(alignof(UCallbackProxy_SetModDownloadListener) == 0x000008, "Wrong alignment on UCallbackProxy_SetModDownloadListener");
static_assert(sizeof(UCallbackProxy_SetModDownloadListener) == 0x000058, "Wrong size on UCallbackProxy_SetModDownloadListener");
static_assert(offsetof(UCallbackProxy_SetModDownloadListener, WorldContextObject) == 0x000030, "Member 'UCallbackProxy_SetModDownloadListener::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_SetModDownloadListener, onSuccess) == 0x000038, "Member 'UCallbackProxy_SetModDownloadListener::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_SetModDownloadListener, onFailure) == 0x000048, "Member 'UCallbackProxy_SetModDownloadListener::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_SetModEventListener
// 0x0028 (0x0058 - 0x0030)
class UCallbackProxy_SetModEventListener final : public UOnlineBlueprintCallProxyBase
{
public:
	class UObject*                                WorldContextObject;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioModEvent>& ModEvents)> onSuccess;                                         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, TArray<struct FModioModEvent>& ModEvents)> onFailure;                                         // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_SetModEventListener* SetModEventListener(class UObject* WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_SetModEventListener">();
	}
	static class UCallbackProxy_SetModEventListener* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_SetModEventListener>();
	}
};
static_assert(alignof(UCallbackProxy_SetModEventListener) == 0x000008, "Wrong alignment on UCallbackProxy_SetModEventListener");
static_assert(sizeof(UCallbackProxy_SetModEventListener) == 0x000058, "Wrong size on UCallbackProxy_SetModEventListener");
static_assert(offsetof(UCallbackProxy_SetModEventListener, WorldContextObject) == 0x000030, "Member 'UCallbackProxy_SetModEventListener::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_SetModEventListener, onSuccess) == 0x000038, "Member 'UCallbackProxy_SetModEventListener::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_SetModEventListener, onFailure) == 0x000048, "Member 'UCallbackProxy_SetModEventListener::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_SetModfileUploadListener
// 0x0028 (0x0058 - 0x0030)
class UCallbackProxy_SetModfileUploadListener final : public UOnlineBlueprintCallProxyBase
{
public:
	class UObject*                                WorldContextObject;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 ResponseCode, int32 ModId)> onSuccess;                                         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 ResponseCode, int32 ModId)> onFailure;                                         // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_SetModfileUploadListener* SetModfileUploadListener(class UObject* WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_SetModfileUploadListener">();
	}
	static class UCallbackProxy_SetModfileUploadListener* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_SetModfileUploadListener>();
	}
};
static_assert(alignof(UCallbackProxy_SetModfileUploadListener) == 0x000008, "Wrong alignment on UCallbackProxy_SetModfileUploadListener");
static_assert(sizeof(UCallbackProxy_SetModfileUploadListener) == 0x000058, "Wrong size on UCallbackProxy_SetModfileUploadListener");
static_assert(offsetof(UCallbackProxy_SetModfileUploadListener, WorldContextObject) == 0x000030, "Member 'UCallbackProxy_SetModfileUploadListener::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_SetModfileUploadListener, onSuccess) == 0x000038, "Member 'UCallbackProxy_SetModfileUploadListener::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_SetModfileUploadListener, onFailure) == 0x000048, "Member 'UCallbackProxy_SetModfileUploadListener::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_SteamAuth
// 0x0038 (0x0068 - 0x0030)
class UCallbackProxy_SteamAuth final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_SteamAuth* SteamAuth(class UObject* WorldContext, const class FString& Base64Ticket);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_SteamAuth">();
	}
	static class UCallbackProxy_SteamAuth* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_SteamAuth>();
	}
};
static_assert(alignof(UCallbackProxy_SteamAuth) == 0x000008, "Wrong alignment on UCallbackProxy_SteamAuth");
static_assert(sizeof(UCallbackProxy_SteamAuth) == 0x000068, "Wrong size on UCallbackProxy_SteamAuth");
static_assert(offsetof(UCallbackProxy_SteamAuth, WorldContextObject) == 0x000040, "Member 'UCallbackProxy_SteamAuth::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_SteamAuth, onSuccess) == 0x000048, "Member 'UCallbackProxy_SteamAuth::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_SteamAuth, onFailure) == 0x000058, "Member 'UCallbackProxy_SteamAuth::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_SubmitReport
// 0x0058 (0x0088 - 0x0030)
class UCallbackProxy_SubmitReport final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x30];                                      // 0x0030(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0068(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0078(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_SubmitReport* SubmitReport(class UObject* WorldContext, EModioResourceType Resource, int32 ID, EModioReportType Report, const class FString& Name_0, const class FString& Summary);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_SubmitReport">();
	}
	static class UCallbackProxy_SubmitReport* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_SubmitReport>();
	}
};
static_assert(alignof(UCallbackProxy_SubmitReport) == 0x000008, "Wrong alignment on UCallbackProxy_SubmitReport");
static_assert(sizeof(UCallbackProxy_SubmitReport) == 0x000088, "Wrong size on UCallbackProxy_SubmitReport");
static_assert(offsetof(UCallbackProxy_SubmitReport, WorldContextObject) == 0x000060, "Member 'UCallbackProxy_SubmitReport::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_SubmitReport, onSuccess) == 0x000068, "Member 'UCallbackProxy_SubmitReport::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_SubmitReport, onFailure) == 0x000078, "Member 'UCallbackProxy_SubmitReport::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_SubscribeToMod
// 0x0030 (0x0060 - 0x0030)
class UCallbackProxy_SubscribeToMod final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, const struct FModioMod& Mod)> onSuccess;                                         // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response, const struct FModioMod& Mod)> onFailure;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_SubscribeToMod* SubscribeToMod(class UObject* WorldContext, int32 ModId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_SubscribeToMod">();
	}
	static class UCallbackProxy_SubscribeToMod* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_SubscribeToMod>();
	}
};
static_assert(alignof(UCallbackProxy_SubscribeToMod) == 0x000008, "Wrong alignment on UCallbackProxy_SubscribeToMod");
static_assert(sizeof(UCallbackProxy_SubscribeToMod) == 0x000060, "Wrong size on UCallbackProxy_SubscribeToMod");
static_assert(offsetof(UCallbackProxy_SubscribeToMod, WorldContextObject) == 0x000038, "Member 'UCallbackProxy_SubscribeToMod::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_SubscribeToMod, onSuccess) == 0x000040, "Member 'UCallbackProxy_SubscribeToMod::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_SubscribeToMod, onFailure) == 0x000050, "Member 'UCallbackProxy_SubscribeToMod::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_UninstallUnavailableMods
// 0x0028 (0x0058 - 0x0030)
class UCallbackProxy_UninstallUnavailableMods final : public UOnlineBlueprintCallProxyBase
{
public:
	class UObject*                                WorldContextObject;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_UninstallUnavailableMods* UninstallUnavailableMods(class UObject* WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_UninstallUnavailableMods">();
	}
	static class UCallbackProxy_UninstallUnavailableMods* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_UninstallUnavailableMods>();
	}
};
static_assert(alignof(UCallbackProxy_UninstallUnavailableMods) == 0x000008, "Wrong alignment on UCallbackProxy_UninstallUnavailableMods");
static_assert(sizeof(UCallbackProxy_UninstallUnavailableMods) == 0x000058, "Wrong size on UCallbackProxy_UninstallUnavailableMods");
static_assert(offsetof(UCallbackProxy_UninstallUnavailableMods, WorldContextObject) == 0x000030, "Member 'UCallbackProxy_UninstallUnavailableMods::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_UninstallUnavailableMods, onSuccess) == 0x000038, "Member 'UCallbackProxy_UninstallUnavailableMods::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_UninstallUnavailableMods, onFailure) == 0x000048, "Member 'UCallbackProxy_UninstallUnavailableMods::onFailure' has a wrong offset!");

// Class modio.CallbackProxy_UnsubscribeFromMod
// 0x0030 (0x0060 - 0x0030)
class UCallbackProxy_UnsubscribeFromMod final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContextObject;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onSuccess;                                         // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FModioResponse& response)> onFailure;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UCallbackProxy_UnsubscribeFromMod* UnsubscribeFromMod(class UObject* WorldContext, int32 ModId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallbackProxy_UnsubscribeFromMod">();
	}
	static class UCallbackProxy_UnsubscribeFromMod* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallbackProxy_UnsubscribeFromMod>();
	}
};
static_assert(alignof(UCallbackProxy_UnsubscribeFromMod) == 0x000008, "Wrong alignment on UCallbackProxy_UnsubscribeFromMod");
static_assert(sizeof(UCallbackProxy_UnsubscribeFromMod) == 0x000060, "Wrong size on UCallbackProxy_UnsubscribeFromMod");
static_assert(offsetof(UCallbackProxy_UnsubscribeFromMod, WorldContextObject) == 0x000038, "Member 'UCallbackProxy_UnsubscribeFromMod::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_UnsubscribeFromMod, onSuccess) == 0x000040, "Member 'UCallbackProxy_UnsubscribeFromMod::onSuccess' has a wrong offset!");
static_assert(offsetof(UCallbackProxy_UnsubscribeFromMod, onFailure) == 0x000050, "Member 'UCallbackProxy_UnsubscribeFromMod::onFailure' has a wrong offset!");

// Class modio.ModioActorComponent
// 0x0010 (0x00C0 - 0x00B0)
class UModioActorComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B0[0x10];                                      // 0x00B0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioActorComponent">();
	}
	static class UModioActorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioActorComponent>();
	}
};
static_assert(alignof(UModioActorComponent) == 0x000008, "Wrong alignment on UModioActorComponent");
static_assert(sizeof(UModioActorComponent) == 0x0000C0, "Wrong size on UModioActorComponent");

// Class modio.ModioFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UModioFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void AuthenticateViaToken(class UObject* WorldContextObject, const class FString& AccessToken);
	static void ModioAddModfile(class UObject* WorldContextObject, int32 ModId, const struct FModioModfileCreator& ModfileCreator);
	static void ModioCancelModDownload(class UObject* WorldContextObject, int32 ModId);
	static void ModioCurrentUser(class UObject* WorldContextObject, struct FModioUser* User);
	static void ModioDownloadMod(class UObject* WorldContextObject, int32 ModId);
	static void ModioGetAllDownloadedMods(class UObject* WorldContextObject, TArray<int32>* DownloadedMods);
	static void ModioGetAllInstalledMods(class UObject* WorldContextObject, TArray<struct FModioInstalledMod>* InstalledMods);
	static void ModioGetCurrentUserModRating(class UObject* WorldContextObject, int32 ModId, uint8* ModRating);
	static void ModioGetCurrentUserSubscriptions(class UObject* WorldContextObject, TArray<int32>* ModIds);
	static void ModioGetInstalledMod(class UObject* WorldContextObject, int32 ModId, class FString* Path, struct FModioMod* Mod);
	static void ModioGetModDownloadQueue(class UObject* WorldContextObject, TArray<struct FModioQueuedModDownload>* QueuedMods);
	static void ModioGetModfileUploadQueue(class UObject* WorldContextObject, TArray<struct FModioQueuedModfileUpload>* UploadQueue);
	static void ModioGetModState(class UObject* WorldContextObject, int32 ModId, uint8* ModState);
	static void ModioInstallDownloadedMods(class UObject* WorldContextObject);
	static void ModioIsCurrentUserSubscribed(class UObject* WorldContextObject, int32 ModId, bool* IsSubscribed);
	static void ModioIsLoggedIn(class UObject* WorldContextObject, bool* IsLoggedIn);
	static void ModioLogout(class UObject* WorldContextObject);
	static void ModioPauseDownloads(class UObject* WorldContextObject);
	static void ModioPollEvents(class UObject* WorldContextObject);
	static void ModioPrioritizeModDownload(class UObject* WorldContextObject, int32 ModId);
	static void ModioProcess(class UObject* WorldContextObject);
	static void ModioResumeDownloads(class UObject* WorldContextObject);
	static void ModioSetModEventsPollInterval(class UObject* WorldContextObject, int32 IntervalInSeconds);
	static void ModioSetUserEventsPollInterval(class UObject* WorldContextObject, int32 IntervalInSeconds);
	static void ModioUninstallMod(class UObject* WorldContextObject, int32 ModId, bool* SuccessfullyUninstalled);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioFunctionLibrary">();
	}
	static class UModioFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioFunctionLibrary>();
	}
};
static_assert(alignof(UModioFunctionLibrary) == 0x000008, "Wrong alignment on UModioFunctionLibrary");
static_assert(sizeof(UModioFunctionLibrary) == 0x000028, "Wrong size on UModioFunctionLibrary");

// Class modio.ModioSettings
// 0x0030 (0x0058 - 0x0028)
class UModioSettings final : public UObject
{
public:
	int32                                         GameId;                                            // 0x0028(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ApiKey;                                            // 0x0030(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RootDirectory;                                     // 0x0040(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bRootDirectoryIsInUserSettingsDirectory : 1;       // 0x0050(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bRunOnDedicatedServer : 1;                         // 0x0050(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsLiveEnvironment : 1;                            // 0x0050(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bInstallOnModDownload : 1;                         // 0x0050(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bRetrieveModsFromOtherGames : 1;                   // 0x0050(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEnablePolling : 1;                                // 0x0050(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioSettings">();
	}
	static class UModioSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioSettings>();
	}
};
static_assert(alignof(UModioSettings) == 0x000008, "Wrong alignment on UModioSettings");
static_assert(sizeof(UModioSettings) == 0x000058, "Wrong size on UModioSettings");
static_assert(offsetof(UModioSettings, GameId) == 0x000028, "Member 'UModioSettings::GameId' has a wrong offset!");
static_assert(offsetof(UModioSettings, ApiKey) == 0x000030, "Member 'UModioSettings::ApiKey' has a wrong offset!");
static_assert(offsetof(UModioSettings, RootDirectory) == 0x000040, "Member 'UModioSettings::RootDirectory' has a wrong offset!");

}

