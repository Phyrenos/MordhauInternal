#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Rake_DIH

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Mordhau_structs.hpp"


namespace SDK::Params
{

// Function BP_Rake_DIH.BP_Rake_DIH_C.ExecuteUbergraph_BP_Rake_DIH
// 0x0078 (0x0078 - 0x0000)
struct BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBlockResult                           K2Node_Event_Result;                               // 0x0005(0x0009)(ConstParm, NoDestructor)
	EAttackMove                                   K2Node_Event_Move;                                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BlessingComponent_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetParentCharacter_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH) == 0x000008, "Wrong alignment on BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH");
static_assert(sizeof(BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH) == 0x000078, "Wrong size on BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH");
static_assert(offsetof(BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH, EntryPoint) == 0x000000, "Member 'BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH, K2Node_Event_Result) == 0x000005, "Member 'BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH::K2Node_Event_Result' has a wrong offset!");
static_assert(offsetof(BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH, K2Node_Event_Move) == 0x00000E, "Member 'BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH::K2Node_Event_Move' has a wrong offset!");
static_assert(offsetof(BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000020, "Member 'BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH, CallFunc_GetParentCharacter_ReturnValue) == 0x000038, "Member 'BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH::CallFunc_GetParentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000040, "Member 'BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH, CallFunc_IsFalling_ReturnValue) == 0x00004C, "Member 'BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000050, "Member 'BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH, CallFunc_Multiply_VectorVector_ReturnValue) == 0x00005C, "Member 'BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000068, "Member 'BP_Rake_DIH_C_ExecuteUbergraph_BP_Rake_DIH::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function BP_Rake_DIH.BP_Rake_DIH_C.OnWasBlocked
// 0x000A (0x000A - 0x0000)
struct BP_Rake_DIH_C_OnWasBlocked final
{
public:
	struct FBlockResult                           Result;                                            // 0x0000(0x0009)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	EAttackMove                                   Move;                                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Rake_DIH_C_OnWasBlocked) == 0x000001, "Wrong alignment on BP_Rake_DIH_C_OnWasBlocked");
static_assert(sizeof(BP_Rake_DIH_C_OnWasBlocked) == 0x00000A, "Wrong size on BP_Rake_DIH_C_OnWasBlocked");
static_assert(offsetof(BP_Rake_DIH_C_OnWasBlocked, Result) == 0x000000, "Member 'BP_Rake_DIH_C_OnWasBlocked::Result' has a wrong offset!");
static_assert(offsetof(BP_Rake_DIH_C_OnWasBlocked, Move) == 0x000009, "Member 'BP_Rake_DIH_C_OnWasBlocked::Move' has a wrong offset!");

}

