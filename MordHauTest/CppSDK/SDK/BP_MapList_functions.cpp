#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapList

#include "Basic.hpp"

#include "BP_MapList_classes.hpp"
#include "BP_MapList_parameters.hpp"


namespace SDK
{

// Function BP_MapList.BP_MapList_C.ExecuteUbergraph_BP_MapList
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapList_C::ExecuteUbergraph_BP_MapList(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapList_C", "ExecuteUbergraph_BP_MapList");

	Params::BP_MapList_C_ExecuteUbergraph_BP_MapList Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapList.BP_MapList_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_MapList_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapList_C", "OnMouseLeave");

	Params::BP_MapList_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapList.BP_MapList_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_MapList_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapList_C", "OnMouseEnter");

	Params::BP_MapList_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapList.BP_MapList_C.ClearEntries
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapList_C::ClearEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapList_C", "ClearEntries");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapList.BP_MapList_C.AddEntry
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           GameModeMapName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UGameModeMetadata*                GameModeMetadata                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMapMetadata*                     MapMetadata                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapList_C::AddEntry(const class FString& GameModeMapName, class UGameModeMetadata* GameModeMetadata, class UMapMetadata* MapMetadata)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapList_C", "AddEntry");

	Params::BP_MapList_C_AddEntry Parms{};

	Parms.GameModeMapName = std::move(GameModeMapName);
	Parms.GameModeMetadata = GameModeMetadata;
	Parms.MapMetadata = MapMetadata;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapList.BP_MapList_C.OnEntrySelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MapEntryLocalPlay_C*          Entry                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapList_C::OnEntrySelected(class UBP_MapEntryLocalPlay_C* Entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapList_C", "OnEntrySelected");

	Params::BP_MapList_C_OnEntrySelected Parms{};

	Parms.Entry = Entry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapList.BP_MapList_C.SelectFirstEntry
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapList_C::SelectFirstEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapList_C", "SelectFirstEntry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapList.BP_MapList_C.GetSelectedEntry
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MapEntryLocalPlay_C*          SelectedEntry_0                                        (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapList_C::GetSelectedEntry(class UBP_MapEntryLocalPlay_C** SelectedEntry_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapList_C", "GetSelectedEntry");

	Params::BP_MapList_C_GetSelectedEntry Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SelectedEntry_0 != nullptr)
		*SelectedEntry_0 = Parms.SelectedEntry_0;
}

}

