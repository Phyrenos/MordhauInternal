#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ScoreFeed

#include "Basic.hpp"

#include "BP_ScoreFeed_classes.hpp"
#include "BP_ScoreFeed_parameters.hpp"


namespace SDK
{

// Function BP_ScoreFeed.BP_ScoreFeed_C.ExecuteUbergraph_BP_ScoreFeed
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::ExecuteUbergraph_BP_ScoreFeed(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "ExecuteUbergraph_BP_ScoreFeed");

	Params::BP_ScoreFeed_C_ExecuteUbergraph_BP_ScoreFeed Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.WidgetAnimationEvt_FadeAnim_K2Node_WidgetAnimationEvent_0
// (BlueprintEvent)

void UBP_ScoreFeed_C::WidgetAnimationEvt_FadeAnim_K2Node_WidgetAnimationEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "WidgetAnimationEvt_FadeAnim_K2Node_WidgetAnimationEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_ScoreFeed_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddEntry
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FText                             Label                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    CanGroup                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ScoreFeed_C::AddEntry(float Points, const class FString& PlayerName, const class FText& Label, bool CanGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddEntry");

	Params::BP_ScoreFeed_C_AddEntry Parms{};

	Parms.Points = Points;
	Parms.PlayerName = std::move(PlayerName);
	Parms.Label = std::move(Label);
	Parms.CanGroup = CanGroup;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddKill
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddKill(float Points, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddKill");

	Params::BP_ScoreFeed_C_AddKill Parms{};

	Parms.Points = Points;
	Parms.Name_0 = std::move(Name_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddAssist
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddAssist(float Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddAssist");

	Params::BP_ScoreFeed_C_AddAssist Parms{};

	Parms.Points = Points;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddTeamKill
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddTeamKill(float Points, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddTeamKill");

	Params::BP_ScoreFeed_C_AddTeamKill Parms{};

	Parms.Points = Points;
	Parms.Name_0 = std::move(Name_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddSuicide
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddSuicide(float Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddSuicide");

	Params::BP_ScoreFeed_C_AddSuicide Parms{};

	Parms.Points = Points;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.CollectPoints
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::CollectPoints(float Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "CollectPoints");

	Params::BP_ScoreFeed_C_CollectPoints Parms{};

	Parms.Points = Points;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   HitZone                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddDamage(float Points, int32 HitZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddDamage");

	Params::BP_ScoreFeed_C_AddDamage Parms{};

	Parms.Points = Points;
	Parms.HitZone = HitZone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddTeamDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddTeamDamage(float Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddTeamDamage");

	Params::BP_ScoreFeed_C_AddTeamDamage Parms{};

	Parms.Points = Points;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.RemoveFromFeed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_ScoreEntry_C*                 ToRemove                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::RemoveFromFeed(class UBP_ScoreEntry_C* ToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "RemoveFromFeed");

	Params::BP_ScoreFeed_C_RemoveFromFeed Parms{};

	Parms.ToRemove = ToRemove;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.UpdateComboVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldHide                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ScoreFeed_C::UpdateComboVisibility(bool ShouldHide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "UpdateComboVisibility");

	Params::BP_ScoreFeed_C_UpdateComboVisibility Parms{};

	Parms.ShouldHide = ShouldHide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.UpdateCurrentPointsText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ScoreFeed_C::UpdateCurrentPointsText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "UpdateCurrentPointsText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddHeadshot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddHeadshot(float Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddHeadshot");

	Params::BP_ScoreFeed_C_AddHeadshot Parms{};

	Parms.Points = Points;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddCapturing
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddCapturing(float Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddCapturing");

	Params::BP_ScoreFeed_C_AddCapturing Parms{};

	Parms.Points = Points;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddCaptured
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddCaptured(float Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddCaptured");

	Params::BP_ScoreFeed_C_AddCaptured Parms{};

	Parms.Points = Points;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddNeutralizing
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddNeutralizing(float Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddNeutralizing");

	Params::BP_ScoreFeed_C_AddNeutralizing Parms{};

	Parms.Points = Points;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddNeutralized
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddNeutralized(float Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddNeutralized");

	Params::BP_ScoreFeed_C_AddNeutralized Parms{};

	Parms.Points = Points;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddHeal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddHeal(float Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddHeal");

	Params::BP_ScoreFeed_C_AddHeal Parms{};

	Parms.Points = Points;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddWaveCleared
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddWaveCleared(float Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddWaveCleared");

	Params::BP_ScoreFeed_C_AddWaveCleared Parms{};

	Parms.Points = Points;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddObjective
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddObjective(float Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddObjective");

	Params::BP_ScoreFeed_C_AddObjective Parms{};

	Parms.Points = Points;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddRepair
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddRepair(float Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddRepair");

	Params::BP_ScoreFeed_C_AddRepair Parms{};

	Parms.Points = Points;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddVehicleTeamDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddVehicleTeamDamage(float Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddVehicleTeamDamage");

	Params::BP_ScoreFeed_C_AddVehicleTeamDamage Parms{};

	Parms.Points = Points;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddVehicleDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddVehicleDamage(float Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddVehicleDamage");

	Params::BP_ScoreFeed_C_AddVehicleDamage Parms{};

	Parms.Points = Points;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddStructureDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Points                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddStructureDamage(float Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddStructureDamage");

	Params::BP_ScoreFeed_C_AddStructureDamage Parms{};

	Parms.Points = Points;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScoreFeed.BP_ScoreFeed_C.AddSpawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Score                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ScoreFeed_C::AddSpawn(float Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScoreFeed_C", "AddSpawn");

	Params::BP_ScoreFeed_C_AddSpawn Parms{};

	Parms.Score = Score;

	UObject::ProcessEvent(Func, &Parms);
}

}

