#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MordhauML_ItemWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MordhauML_ItemWidget.MordhauML_ItemWidget_C
// 0x00D0 (0x0330 - 0x0260)
class UMordhauML_ItemWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UOverlay*                               MLImageOverlay;                                    // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               MLTextOverlay;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         PlainText;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         Subtitle;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxMultilineText;                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WebImage;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              WebImageScaleBox;                                  // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FMordhauMLWidget                       MordhauMLWidgetData;                               // 0x02A0(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBP_MordhauNewsWidget_C*                News_Widget;                                       // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MordhauML_ItemWidget(int32 EntryPoint);
	void SetDataAndUpdateUI(const struct FMordhauMLWidget& MordhauMLWidgetData_0, class UBP_MordhauNewsWidget_C* NewsWidget);
	void UpdateUI();
	void UpdateImageUI(const struct FMordhauMLImage& MordhauMLImage);
	void Update_Text_UI(const class FString& Data, const class FString& FontStyle);
	void UpdateMultilineTextUI(TArray<class FString>& Data, const class FString& FontStyle);
	void GetFontStyle(const class FString& FontStyleName, class UDataTable** FontStlyeData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MordhauML_ItemWidget_C">();
	}
	static class UMordhauML_ItemWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMordhauML_ItemWidget_C>();
	}
};
static_assert(alignof(UMordhauML_ItemWidget_C) == 0x000008, "Wrong alignment on UMordhauML_ItemWidget_C");
static_assert(sizeof(UMordhauML_ItemWidget_C) == 0x000330, "Wrong size on UMordhauML_ItemWidget_C");
static_assert(offsetof(UMordhauML_ItemWidget_C, UberGraphFrame) == 0x000260, "Member 'UMordhauML_ItemWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMordhauML_ItemWidget_C, MLImageOverlay) == 0x000268, "Member 'UMordhauML_ItemWidget_C::MLImageOverlay' has a wrong offset!");
static_assert(offsetof(UMordhauML_ItemWidget_C, MLTextOverlay) == 0x000270, "Member 'UMordhauML_ItemWidget_C::MLTextOverlay' has a wrong offset!");
static_assert(offsetof(UMordhauML_ItemWidget_C, PlainText) == 0x000278, "Member 'UMordhauML_ItemWidget_C::PlainText' has a wrong offset!");
static_assert(offsetof(UMordhauML_ItemWidget_C, Subtitle) == 0x000280, "Member 'UMordhauML_ItemWidget_C::Subtitle' has a wrong offset!");
static_assert(offsetof(UMordhauML_ItemWidget_C, VerticalBoxMultilineText) == 0x000288, "Member 'UMordhauML_ItemWidget_C::VerticalBoxMultilineText' has a wrong offset!");
static_assert(offsetof(UMordhauML_ItemWidget_C, WebImage) == 0x000290, "Member 'UMordhauML_ItemWidget_C::WebImage' has a wrong offset!");
static_assert(offsetof(UMordhauML_ItemWidget_C, WebImageScaleBox) == 0x000298, "Member 'UMordhauML_ItemWidget_C::WebImageScaleBox' has a wrong offset!");
static_assert(offsetof(UMordhauML_ItemWidget_C, MordhauMLWidgetData) == 0x0002A0, "Member 'UMordhauML_ItemWidget_C::MordhauMLWidgetData' has a wrong offset!");
static_assert(offsetof(UMordhauML_ItemWidget_C, News_Widget) == 0x000328, "Member 'UMordhauML_ItemWidget_C::News_Widget' has a wrong offset!");

}

