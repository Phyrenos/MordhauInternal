#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VideoSettings

#include "Basic.hpp"

#include "E_MainMenuAction_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_MordhauSlider_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_VideoSettings.BP_VideoSettings_C.ExecuteUbergraph_BP_VideoSettings
// 0x0068 (0x0068 - 0x0000)
struct BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue_1; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ChoiceDialog_C*                     CallFunc_CreateChoiceDialog_ChoiceDialog;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauHUD_C*                       K2Node_DynamicCast_AsBP_Mordhau_HUD;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings");
static_assert(sizeof(BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings) == 0x000068, "Wrong size on BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings");
static_assert(offsetof(BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings, EntryPoint) == 0x000000, "Member 'BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings, K2Node_ComponentBoundEvent_Value) == 0x000030, "Member 'BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings, CallFunc_GetMordhauGameUserSettings_ReturnValue_1) == 0x000038, "Member 'BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings::CallFunc_GetMordhauGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings, CallFunc_CreateChoiceDialog_ChoiceDialog) == 0x000048, "Member 'BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings::CallFunc_CreateChoiceDialog_ChoiceDialog' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings, CallFunc_GetHUD_ReturnValue) == 0x000050, "Member 'BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings, K2Node_DynamicCast_AsBP_Mordhau_HUD) == 0x000058, "Member 'BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings::K2Node_DynamicCast_AsBP_Mordhau_HUD' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_VideoSettings_C_ExecuteUbergraph_BP_VideoSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.BndEvt__GammaSlider_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_VideoSettings_C_BndEvt__GammaSlider_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_BndEvt__GammaSlider_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on BP_VideoSettings_C_BndEvt__GammaSlider_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature");
static_assert(sizeof(BP_VideoSettings_C_BndEvt__GammaSlider_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on BP_VideoSettings_C_BndEvt__GammaSlider_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature");
static_assert(offsetof(BP_VideoSettings_C_BndEvt__GammaSlider_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'BP_VideoSettings_C_BndEvt__GammaSlider_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateFovSlider
// 0x0038 (0x0038 - 0x0000)
struct BP_VideoSettings_C_UpdateFovSlider final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFieldOfView_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetFieldOfViewLimits_ReturnValue;         // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MordhauSlider                       K2Node_MakeStruct_S_MordhauSlider;                 // 0x0020(0x0014)(IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_UpdateFovSlider) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateFovSlider");
static_assert(sizeof(BP_VideoSettings_C_UpdateFovSlider) == 0x000038, "Wrong size on BP_VideoSettings_C_UpdateFovSlider");
static_assert(offsetof(BP_VideoSettings_C_UpdateFovSlider, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateFovSlider::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateFovSlider, CallFunc_GetFieldOfView_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateFovSlider::CallFunc_GetFieldOfView_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateFovSlider, CallFunc_GetFieldOfViewLimits_ReturnValue) == 0x00000C, "Member 'BP_VideoSettings_C_UpdateFovSlider::CallFunc_GetFieldOfViewLimits_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateFovSlider, CallFunc_BreakVector2D_X) == 0x000014, "Member 'BP_VideoSettings_C_UpdateFovSlider::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateFovSlider, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'BP_VideoSettings_C_UpdateFovSlider::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateFovSlider, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'BP_VideoSettings_C_UpdateFovSlider::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateFovSlider, K2Node_MakeStruct_S_MordhauSlider) == 0x000020, "Member 'BP_VideoSettings_C_UpdateFovSlider::K2Node_MakeStruct_S_MordhauSlider' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateFramerateSlider
// 0x0038 (0x0038 - 0x0000)
struct BP_VideoSettings_C_UpdateFramerateSlider final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFrameRateLimit_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetFrameRateLimits_ReturnValue;           // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MordhauSlider                       K2Node_MakeStruct_S_MordhauSlider;                 // 0x0020(0x0014)(IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_UpdateFramerateSlider) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateFramerateSlider");
static_assert(sizeof(BP_VideoSettings_C_UpdateFramerateSlider) == 0x000038, "Wrong size on BP_VideoSettings_C_UpdateFramerateSlider");
static_assert(offsetof(BP_VideoSettings_C_UpdateFramerateSlider, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateFramerateSlider::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateFramerateSlider, CallFunc_GetFrameRateLimit_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateFramerateSlider::CallFunc_GetFrameRateLimit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateFramerateSlider, CallFunc_GetFrameRateLimits_ReturnValue) == 0x00000C, "Member 'BP_VideoSettings_C_UpdateFramerateSlider::CallFunc_GetFrameRateLimits_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateFramerateSlider, CallFunc_BreakVector2D_X) == 0x000014, "Member 'BP_VideoSettings_C_UpdateFramerateSlider::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateFramerateSlider, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'BP_VideoSettings_C_UpdateFramerateSlider::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateFramerateSlider, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'BP_VideoSettings_C_UpdateFramerateSlider::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateFramerateSlider, K2Node_MakeStruct_S_MordhauSlider) == 0x000020, "Member 'BP_VideoSettings_C_UpdateFramerateSlider::K2Node_MakeStruct_S_MordhauSlider' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateCharacterQualityDropdown
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoSettings_C_UpdateCharacterQualityDropdown final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterFidelity_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetOptionAtIndex_ReturnValue;             // 0x0010(0x0018)()
};
static_assert(alignof(BP_VideoSettings_C_UpdateCharacterQualityDropdown) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateCharacterQualityDropdown");
static_assert(sizeof(BP_VideoSettings_C_UpdateCharacterQualityDropdown) == 0x000028, "Wrong size on BP_VideoSettings_C_UpdateCharacterQualityDropdown");
static_assert(offsetof(BP_VideoSettings_C_UpdateCharacterQualityDropdown, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateCharacterQualityDropdown::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateCharacterQualityDropdown, CallFunc_GetCharacterFidelity_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateCharacterQualityDropdown::CallFunc_GetCharacterFidelity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateCharacterQualityDropdown, CallFunc_GetOptionAtIndex_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_UpdateCharacterQualityDropdown::CallFunc_GetOptionAtIndex_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateRagdollQualityDropdown
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoSettings_C_UpdateRagdollQualityDropdown final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRagdollFidelity_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetOptionAtIndex_ReturnValue;             // 0x0010(0x0018)()
};
static_assert(alignof(BP_VideoSettings_C_UpdateRagdollQualityDropdown) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateRagdollQualityDropdown");
static_assert(sizeof(BP_VideoSettings_C_UpdateRagdollQualityDropdown) == 0x000028, "Wrong size on BP_VideoSettings_C_UpdateRagdollQualityDropdown");
static_assert(offsetof(BP_VideoSettings_C_UpdateRagdollQualityDropdown, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateRagdollQualityDropdown::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateRagdollQualityDropdown, CallFunc_GetRagdollFidelity_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateRagdollQualityDropdown::CallFunc_GetRagdollFidelity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateRagdollQualityDropdown, CallFunc_GetOptionAtIndex_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_UpdateRagdollQualityDropdown::CallFunc_GetOptionAtIndex_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateCameraDistanceSlider
// 0x0038 (0x0038 - 0x0000)
struct BP_VideoSettings_C_UpdateCameraDistanceSlider final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCameraDistance_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCameraDistanceLimits_ReturnValue;      // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MordhauSlider                       K2Node_MakeStruct_S_MordhauSlider;                 // 0x0020(0x0014)(IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_UpdateCameraDistanceSlider) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateCameraDistanceSlider");
static_assert(sizeof(BP_VideoSettings_C_UpdateCameraDistanceSlider) == 0x000038, "Wrong size on BP_VideoSettings_C_UpdateCameraDistanceSlider");
static_assert(offsetof(BP_VideoSettings_C_UpdateCameraDistanceSlider, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateCameraDistanceSlider::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateCameraDistanceSlider, CallFunc_GetCameraDistance_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateCameraDistanceSlider::CallFunc_GetCameraDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateCameraDistanceSlider, CallFunc_GetCameraDistanceLimits_ReturnValue) == 0x00000C, "Member 'BP_VideoSettings_C_UpdateCameraDistanceSlider::CallFunc_GetCameraDistanceLimits_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateCameraDistanceSlider, CallFunc_BreakVector2D_X) == 0x000014, "Member 'BP_VideoSettings_C_UpdateCameraDistanceSlider::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateCameraDistanceSlider, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'BP_VideoSettings_C_UpdateCameraDistanceSlider::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateCameraDistanceSlider, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'BP_VideoSettings_C_UpdateCameraDistanceSlider::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateCameraDistanceSlider, K2Node_MakeStruct_S_MordhauSlider) == 0x000020, "Member 'BP_VideoSettings_C_UpdateCameraDistanceSlider::K2Node_MakeStruct_S_MordhauSlider' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateIndirectShadowsCheckbox
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoSettings_C_UpdateIndirectShadowsCheckbox final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndirectCapsuleShadows_ReturnValue;    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VideoSettings_C_UpdateIndirectShadowsCheckbox) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateIndirectShadowsCheckbox");
static_assert(sizeof(BP_VideoSettings_C_UpdateIndirectShadowsCheckbox) == 0x000010, "Wrong size on BP_VideoSettings_C_UpdateIndirectShadowsCheckbox");
static_assert(offsetof(BP_VideoSettings_C_UpdateIndirectShadowsCheckbox, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateIndirectShadowsCheckbox::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateIndirectShadowsCheckbox, CallFunc_GetIndirectCapsuleShadows_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateIndirectShadowsCheckbox::CallFunc_GetIndirectCapsuleShadows_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateIndirectShadowsCheckbox, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'BP_VideoSettings_C_UpdateIndirectShadowsCheckbox::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateResolutionDropdown
// 0x00C0 (0x00C0 - 0x0000)
struct BP_VideoSettings_C_UpdateResolutionDropdown final
{
public:
	TArray<class FString>                         Resolutions;                                       // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Index_0;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	class FString                                 CallFunc_Split_LeftS;                              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetSupportedScreenResolutions_Resolutions; // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetSupportedScreenResolutions_ReturnValue; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetScreenResolution_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Int_ReturnValue;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VideoSettings_C_UpdateResolutionDropdown) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateResolutionDropdown");
static_assert(sizeof(BP_VideoSettings_C_UpdateResolutionDropdown) == 0x0000C0, "Wrong size on BP_VideoSettings_C_UpdateResolutionDropdown");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, Resolutions) == 0x000000, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::Resolutions' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, Index_0) == 0x000010, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::Index_0' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, CallFunc_Split_LeftS) == 0x000048, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, CallFunc_Split_RightS) == 0x000058, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, CallFunc_Split_ReturnValue) == 0x000068, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, CallFunc_GetSupportedScreenResolutions_Resolutions) == 0x000070, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::CallFunc_GetSupportedScreenResolutions_Resolutions' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, CallFunc_GetSupportedScreenResolutions_ReturnValue) == 0x000080, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::CallFunc_GetSupportedScreenResolutions_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, CallFunc_Less_IntInt_ReturnValue) == 0x000081, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000088, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, CallFunc_GetScreenResolution_ReturnValue) == 0x000090, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::CallFunc_GetScreenResolution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, CallFunc_Conv_IntToString_ReturnValue) == 0x000098, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, CallFunc_BuildString_Int_ReturnValue) == 0x0000A8, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::CallFunc_BuildString_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionDropdown, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000B8, "Member 'BP_VideoSettings_C_UpdateResolutionDropdown::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyResolution
// 0x0088 (0x0088 - 0x0000)
struct BP_VideoSettings_C_ApplyResolution final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetSelectedOption_ReturnValue;            // 0x0008(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS_1;                            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_1;                           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_1;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyResolution) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyResolution");
static_assert(sizeof(BP_VideoSettings_C_ApplyResolution) == 0x000088, "Wrong size on BP_VideoSettings_C_ApplyResolution");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolution, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyResolution::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolution, CallFunc_GetSelectedOption_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_ApplyResolution::CallFunc_GetSelectedOption_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolution, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'BP_VideoSettings_C_ApplyResolution::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolution, CallFunc_Split_LeftS) == 0x000030, "Member 'BP_VideoSettings_C_ApplyResolution::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolution, CallFunc_Split_RightS) == 0x000040, "Member 'BP_VideoSettings_C_ApplyResolution::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolution, CallFunc_Split_ReturnValue) == 0x000050, "Member 'BP_VideoSettings_C_ApplyResolution::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolution, CallFunc_Conv_StringToInt_ReturnValue) == 0x000054, "Member 'BP_VideoSettings_C_ApplyResolution::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolution, CallFunc_Split_LeftS_1) == 0x000058, "Member 'BP_VideoSettings_C_ApplyResolution::CallFunc_Split_LeftS_1' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolution, CallFunc_Split_RightS_1) == 0x000068, "Member 'BP_VideoSettings_C_ApplyResolution::CallFunc_Split_RightS_1' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolution, CallFunc_Split_ReturnValue_1) == 0x000078, "Member 'BP_VideoSettings_C_ApplyResolution::CallFunc_Split_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolution, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x00007C, "Member 'BP_VideoSettings_C_ApplyResolution::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolution, K2Node_MakeStruct_IntPoint) == 0x000080, "Member 'BP_VideoSettings_C_ApplyResolution::K2Node_MakeStruct_IntPoint' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyFov
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoSettings_C_ApplyFov final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetFieldOfViewLimits_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_Value;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyFov) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyFov");
static_assert(sizeof(BP_VideoSettings_C_ApplyFov) == 0x000028, "Wrong size on BP_VideoSettings_C_ApplyFov");
static_assert(offsetof(BP_VideoSettings_C_ApplyFov, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyFov::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyFov, CallFunc_GetFieldOfViewLimits_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_ApplyFov::CallFunc_GetFieldOfViewLimits_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyFov, CallFunc_GetValue_Value) == 0x000010, "Member 'BP_VideoSettings_C_ApplyFov::CallFunc_GetValue_Value' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyFov, CallFunc_BreakVector2D_X) == 0x000014, "Member 'BP_VideoSettings_C_ApplyFov::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyFov, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'BP_VideoSettings_C_ApplyFov::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyFov, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'BP_VideoSettings_C_ApplyFov::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyFov, CallFunc_Round_ReturnValue) == 0x000020, "Member 'BP_VideoSettings_C_ApplyFov::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyFov, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'BP_VideoSettings_C_ApplyFov::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyFramerate
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoSettings_C_ApplyFramerate final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetFrameRateLimits_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_Value;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyFramerate) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyFramerate");
static_assert(sizeof(BP_VideoSettings_C_ApplyFramerate) == 0x000028, "Wrong size on BP_VideoSettings_C_ApplyFramerate");
static_assert(offsetof(BP_VideoSettings_C_ApplyFramerate, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyFramerate::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyFramerate, CallFunc_GetFrameRateLimits_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_ApplyFramerate::CallFunc_GetFrameRateLimits_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyFramerate, CallFunc_GetValue_Value) == 0x000010, "Member 'BP_VideoSettings_C_ApplyFramerate::CallFunc_GetValue_Value' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyFramerate, CallFunc_BreakVector2D_X) == 0x000014, "Member 'BP_VideoSettings_C_ApplyFramerate::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyFramerate, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'BP_VideoSettings_C_ApplyFramerate::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyFramerate, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'BP_VideoSettings_C_ApplyFramerate::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyFramerate, CallFunc_Round_ReturnValue) == 0x000020, "Member 'BP_VideoSettings_C_ApplyFramerate::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyFramerate, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'BP_VideoSettings_C_ApplyFramerate::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyCharacterQuality
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoSettings_C_ApplyCharacterQuality final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyCharacterQuality) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyCharacterQuality");
static_assert(sizeof(BP_VideoSettings_C_ApplyCharacterQuality) == 0x000010, "Wrong size on BP_VideoSettings_C_ApplyCharacterQuality");
static_assert(offsetof(BP_VideoSettings_C_ApplyCharacterQuality, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyCharacterQuality::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyCharacterQuality, CallFunc_GetSelectedIndex_SelectedIndex) == 0x000008, "Member 'BP_VideoSettings_C_ApplyCharacterQuality::CallFunc_GetSelectedIndex_SelectedIndex' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyRagdollQuality
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoSettings_C_ApplyRagdollQuality final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyRagdollQuality) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyRagdollQuality");
static_assert(sizeof(BP_VideoSettings_C_ApplyRagdollQuality) == 0x000010, "Wrong size on BP_VideoSettings_C_ApplyRagdollQuality");
static_assert(offsetof(BP_VideoSettings_C_ApplyRagdollQuality, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyRagdollQuality::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyRagdollQuality, CallFunc_GetSelectedIndex_SelectedIndex) == 0x000008, "Member 'BP_VideoSettings_C_ApplyRagdollQuality::CallFunc_GetSelectedIndex_SelectedIndex' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyCameraDistance
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoSettings_C_ApplyCameraDistance final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_Value;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCameraDistanceLimits_ReturnValue;      // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyCameraDistance) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyCameraDistance");
static_assert(sizeof(BP_VideoSettings_C_ApplyCameraDistance) == 0x000028, "Wrong size on BP_VideoSettings_C_ApplyCameraDistance");
static_assert(offsetof(BP_VideoSettings_C_ApplyCameraDistance, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyCameraDistance::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyCameraDistance, CallFunc_GetValue_Value) == 0x000008, "Member 'BP_VideoSettings_C_ApplyCameraDistance::CallFunc_GetValue_Value' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyCameraDistance, CallFunc_GetCameraDistanceLimits_ReturnValue) == 0x00000C, "Member 'BP_VideoSettings_C_ApplyCameraDistance::CallFunc_GetCameraDistanceLimits_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyCameraDistance, CallFunc_BreakVector2D_X) == 0x000014, "Member 'BP_VideoSettings_C_ApplyCameraDistance::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyCameraDistance, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'BP_VideoSettings_C_ApplyCameraDistance::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyCameraDistance, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'BP_VideoSettings_C_ApplyCameraDistance::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyCameraDistance, CallFunc_Round_ReturnValue) == 0x000020, "Member 'BP_VideoSettings_C_ApplyCameraDistance::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyCameraDistance, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'BP_VideoSettings_C_ApplyCameraDistance::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyIndirectShadows
// 0x0020 (0x0020 - 0x0000)
struct BP_VideoSettings_C_ApplyIndirectShadows final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChecked_Value;                          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyIndirectShadows) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyIndirectShadows");
static_assert(sizeof(BP_VideoSettings_C_ApplyIndirectShadows) == 0x000020, "Wrong size on BP_VideoSettings_C_ApplyIndirectShadows");
static_assert(offsetof(BP_VideoSettings_C_ApplyIndirectShadows, Temp_bool_Variable) == 0x000000, "Member 'BP_VideoSettings_C_ApplyIndirectShadows::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyIndirectShadows, Temp_int_Variable) == 0x000004, "Member 'BP_VideoSettings_C_ApplyIndirectShadows::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyIndirectShadows, Temp_int_Variable_1) == 0x000008, "Member 'BP_VideoSettings_C_ApplyIndirectShadows::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyIndirectShadows, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_ApplyIndirectShadows::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyIndirectShadows, CallFunc_IsChecked_Value) == 0x000018, "Member 'BP_VideoSettings_C_ApplyIndirectShadows::CallFunc_IsChecked_Value' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyIndirectShadows, K2Node_Select_Default) == 0x00001C, "Member 'BP_VideoSettings_C_ApplyIndirectShadows::K2Node_Select_Default' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateVsyncCheckbox
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoSettings_C_UpdateVsyncCheckbox final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVSyncEnabled_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VideoSettings_C_UpdateVsyncCheckbox) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateVsyncCheckbox");
static_assert(sizeof(BP_VideoSettings_C_UpdateVsyncCheckbox) == 0x000010, "Wrong size on BP_VideoSettings_C_UpdateVsyncCheckbox");
static_assert(offsetof(BP_VideoSettings_C_UpdateVsyncCheckbox, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateVsyncCheckbox::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateVsyncCheckbox, CallFunc_IsVSyncEnabled_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateVsyncCheckbox::CallFunc_IsVSyncEnabled_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyVsync
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoSettings_C_ApplyVsync final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChecked_Value;                          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VideoSettings_C_ApplyVsync) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyVsync");
static_assert(sizeof(BP_VideoSettings_C_ApplyVsync) == 0x000010, "Wrong size on BP_VideoSettings_C_ApplyVsync");
static_assert(offsetof(BP_VideoSettings_C_ApplyVsync, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyVsync::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyVsync, CallFunc_IsChecked_Value) == 0x000008, "Member 'BP_VideoSettings_C_ApplyVsync::CallFunc_IsChecked_Value' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateWindowModeDropdown
// 0x0038 (0x0038 - 0x0000)
struct BP_VideoSettings_C_UpdateWindowModeDropdown final
{
public:
	EWindowMode                                   Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWindowMode                                   CallFunc_GetFullscreenMode_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetOptionAtIndex_ReturnValue;             // 0x0020(0x0018)()
};
static_assert(alignof(BP_VideoSettings_C_UpdateWindowModeDropdown) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateWindowModeDropdown");
static_assert(sizeof(BP_VideoSettings_C_UpdateWindowModeDropdown) == 0x000038, "Wrong size on BP_VideoSettings_C_UpdateWindowModeDropdown");
static_assert(offsetof(BP_VideoSettings_C_UpdateWindowModeDropdown, Temp_byte_Variable) == 0x000000, "Member 'BP_VideoSettings_C_UpdateWindowModeDropdown::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateWindowModeDropdown, Temp_int_Variable) == 0x000004, "Member 'BP_VideoSettings_C_UpdateWindowModeDropdown::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateWindowModeDropdown, Temp_int_Variable_1) == 0x000008, "Member 'BP_VideoSettings_C_UpdateWindowModeDropdown::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateWindowModeDropdown, Temp_int_Variable_2) == 0x00000C, "Member 'BP_VideoSettings_C_UpdateWindowModeDropdown::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateWindowModeDropdown, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_UpdateWindowModeDropdown::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateWindowModeDropdown, CallFunc_GetFullscreenMode_ReturnValue) == 0x000018, "Member 'BP_VideoSettings_C_UpdateWindowModeDropdown::CallFunc_GetFullscreenMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateWindowModeDropdown, K2Node_Select_Default) == 0x00001C, "Member 'BP_VideoSettings_C_UpdateWindowModeDropdown::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateWindowModeDropdown, CallFunc_GetOptionAtIndex_ReturnValue) == 0x000020, "Member 'BP_VideoSettings_C_UpdateWindowModeDropdown::CallFunc_GetOptionAtIndex_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyWindowMode
// 0x0018 (0x0018 - 0x0000)
struct BP_VideoSettings_C_ApplyWindowMode final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWindowMode                                   Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWindowMode                                   Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWindowMode                                   Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWindowMode                                   K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyWindowMode) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyWindowMode");
static_assert(sizeof(BP_VideoSettings_C_ApplyWindowMode) == 0x000018, "Wrong size on BP_VideoSettings_C_ApplyWindowMode");
static_assert(offsetof(BP_VideoSettings_C_ApplyWindowMode, Temp_int_Variable) == 0x000000, "Member 'BP_VideoSettings_C_ApplyWindowMode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyWindowMode, Temp_byte_Variable) == 0x000004, "Member 'BP_VideoSettings_C_ApplyWindowMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyWindowMode, Temp_byte_Variable_1) == 0x000005, "Member 'BP_VideoSettings_C_ApplyWindowMode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyWindowMode, Temp_byte_Variable_2) == 0x000006, "Member 'BP_VideoSettings_C_ApplyWindowMode::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyWindowMode, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_ApplyWindowMode::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyWindowMode, CallFunc_GetSelectedIndex_SelectedIndex) == 0x000010, "Member 'BP_VideoSettings_C_ApplyWindowMode::CallFunc_GetSelectedIndex_SelectedIndex' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyWindowMode, K2Node_Select_Default) == 0x000014, "Member 'BP_VideoSettings_C_ApplyWindowMode::K2Node_Select_Default' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateResolutionScaleSlider
// 0x0040 (0x0040 - 0x0000)
struct BP_VideoSettings_C_UpdateResolutionScaleSlider final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetScreenPercentageLimits_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScreenPercentage_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MordhauSlider                       K2Node_MakeStruct_S_MordhauSlider;                 // 0x0028(0x0014)(IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_UpdateResolutionScaleSlider) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateResolutionScaleSlider");
static_assert(sizeof(BP_VideoSettings_C_UpdateResolutionScaleSlider) == 0x000040, "Wrong size on BP_VideoSettings_C_UpdateResolutionScaleSlider");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionScaleSlider, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateResolutionScaleSlider::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionScaleSlider, CallFunc_GetScreenPercentageLimits_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateResolutionScaleSlider::CallFunc_GetScreenPercentageLimits_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionScaleSlider, CallFunc_GetScreenPercentage_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_UpdateResolutionScaleSlider::CallFunc_GetScreenPercentage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionScaleSlider, CallFunc_BreakVector2D_X) == 0x000014, "Member 'BP_VideoSettings_C_UpdateResolutionScaleSlider::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionScaleSlider, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'BP_VideoSettings_C_UpdateResolutionScaleSlider::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionScaleSlider, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x00001C, "Member 'BP_VideoSettings_C_UpdateResolutionScaleSlider::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionScaleSlider, CallFunc_MapRangeClamped_ReturnValue) == 0x000024, "Member 'BP_VideoSettings_C_UpdateResolutionScaleSlider::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateResolutionScaleSlider, K2Node_MakeStruct_S_MordhauSlider) == 0x000028, "Member 'BP_VideoSettings_C_UpdateResolutionScaleSlider::K2Node_MakeStruct_S_MordhauSlider' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyResolutionScale
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoSettings_C_ApplyResolutionScale final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetScreenPercentageLimits_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_Value;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyResolutionScale) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyResolutionScale");
static_assert(sizeof(BP_VideoSettings_C_ApplyResolutionScale) == 0x000028, "Wrong size on BP_VideoSettings_C_ApplyResolutionScale");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolutionScale, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyResolutionScale::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolutionScale, CallFunc_GetScreenPercentageLimits_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_ApplyResolutionScale::CallFunc_GetScreenPercentageLimits_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolutionScale, CallFunc_GetValue_Value) == 0x000010, "Member 'BP_VideoSettings_C_ApplyResolutionScale::CallFunc_GetValue_Value' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolutionScale, CallFunc_BreakVector2D_X) == 0x000014, "Member 'BP_VideoSettings_C_ApplyResolutionScale::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolutionScale, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'BP_VideoSettings_C_ApplyResolutionScale::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolutionScale, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'BP_VideoSettings_C_ApplyResolutionScale::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolutionScale, CallFunc_Round_ReturnValue) == 0x000020, "Member 'BP_VideoSettings_C_ApplyResolutionScale::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyResolutionScale, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'BP_VideoSettings_C_ApplyResolutionScale::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateAAMethodDropdown
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoSettings_C_UpdateAAMethodDropdown final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAntiAliasing_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetOptionAtIndex_ReturnValue;             // 0x0010(0x0018)()
};
static_assert(alignof(BP_VideoSettings_C_UpdateAAMethodDropdown) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateAAMethodDropdown");
static_assert(sizeof(BP_VideoSettings_C_UpdateAAMethodDropdown) == 0x000028, "Wrong size on BP_VideoSettings_C_UpdateAAMethodDropdown");
static_assert(offsetof(BP_VideoSettings_C_UpdateAAMethodDropdown, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateAAMethodDropdown::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateAAMethodDropdown, CallFunc_GetAntiAliasing_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateAAMethodDropdown::CallFunc_GetAntiAliasing_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateAAMethodDropdown, CallFunc_GetOptionAtIndex_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_UpdateAAMethodDropdown::CallFunc_GetOptionAtIndex_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyAAMethod
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoSettings_C_ApplyAAMethod final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyAAMethod) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyAAMethod");
static_assert(sizeof(BP_VideoSettings_C_ApplyAAMethod) == 0x000010, "Wrong size on BP_VideoSettings_C_ApplyAAMethod");
static_assert(offsetof(BP_VideoSettings_C_ApplyAAMethod, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyAAMethod::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyAAMethod, CallFunc_GetSelectedIndex_SelectedIndex) == 0x000008, "Member 'BP_VideoSettings_C_ApplyAAMethod::CallFunc_GetSelectedIndex_SelectedIndex' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateAAQualityDropdown
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoSettings_C_UpdateAAQualityDropdown final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAntiAliasingQuality_ReturnValue;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetOptionAtIndex_ReturnValue;             // 0x0010(0x0018)()
};
static_assert(alignof(BP_VideoSettings_C_UpdateAAQualityDropdown) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateAAQualityDropdown");
static_assert(sizeof(BP_VideoSettings_C_UpdateAAQualityDropdown) == 0x000028, "Wrong size on BP_VideoSettings_C_UpdateAAQualityDropdown");
static_assert(offsetof(BP_VideoSettings_C_UpdateAAQualityDropdown, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateAAQualityDropdown::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateAAQualityDropdown, CallFunc_GetAntiAliasingQuality_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateAAQualityDropdown::CallFunc_GetAntiAliasingQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateAAQualityDropdown, CallFunc_GetOptionAtIndex_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_UpdateAAQualityDropdown::CallFunc_GetOptionAtIndex_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyAAQuality
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoSettings_C_ApplyAAQuality final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyAAQuality) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyAAQuality");
static_assert(sizeof(BP_VideoSettings_C_ApplyAAQuality) == 0x000010, "Wrong size on BP_VideoSettings_C_ApplyAAQuality");
static_assert(offsetof(BP_VideoSettings_C_ApplyAAQuality, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyAAQuality::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyAAQuality, CallFunc_GetSelectedIndex_SelectedIndex) == 0x000008, "Member 'BP_VideoSettings_C_ApplyAAQuality::CallFunc_GetSelectedIndex_SelectedIndex' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateTextureQualityDropdown
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoSettings_C_UpdateTextureQualityDropdown final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTextureQuality_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetOptionAtIndex_ReturnValue;             // 0x0010(0x0018)()
};
static_assert(alignof(BP_VideoSettings_C_UpdateTextureQualityDropdown) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateTextureQualityDropdown");
static_assert(sizeof(BP_VideoSettings_C_UpdateTextureQualityDropdown) == 0x000028, "Wrong size on BP_VideoSettings_C_UpdateTextureQualityDropdown");
static_assert(offsetof(BP_VideoSettings_C_UpdateTextureQualityDropdown, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateTextureQualityDropdown::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateTextureQualityDropdown, CallFunc_GetTextureQuality_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateTextureQualityDropdown::CallFunc_GetTextureQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateTextureQualityDropdown, CallFunc_GetOptionAtIndex_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_UpdateTextureQualityDropdown::CallFunc_GetOptionAtIndex_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyTextureQuality
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoSettings_C_ApplyTextureQuality final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyTextureQuality) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyTextureQuality");
static_assert(sizeof(BP_VideoSettings_C_ApplyTextureQuality) == 0x000010, "Wrong size on BP_VideoSettings_C_ApplyTextureQuality");
static_assert(offsetof(BP_VideoSettings_C_ApplyTextureQuality, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyTextureQuality::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyTextureQuality, CallFunc_GetSelectedIndex_SelectedIndex) == 0x000008, "Member 'BP_VideoSettings_C_ApplyTextureQuality::CallFunc_GetSelectedIndex_SelectedIndex' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateShadowQualityDropdown
// 0x0030 (0x0030 - 0x0000)
struct BP_VideoSettings_C_UpdateShadowQualityDropdown final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetShadowQuality_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetOptionAtIndex_ReturnValue;             // 0x0018(0x0018)()
};
static_assert(alignof(BP_VideoSettings_C_UpdateShadowQualityDropdown) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateShadowQualityDropdown");
static_assert(sizeof(BP_VideoSettings_C_UpdateShadowQualityDropdown) == 0x000030, "Wrong size on BP_VideoSettings_C_UpdateShadowQualityDropdown");
static_assert(offsetof(BP_VideoSettings_C_UpdateShadowQualityDropdown, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateShadowQualityDropdown::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateShadowQualityDropdown, CallFunc_GetShadowQuality_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateShadowQualityDropdown::CallFunc_GetShadowQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateShadowQualityDropdown, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_VideoSettings_C_UpdateShadowQualityDropdown::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateShadowQualityDropdown, CallFunc_Clamp_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_UpdateShadowQualityDropdown::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateShadowQualityDropdown, CallFunc_GetOptionAtIndex_ReturnValue) == 0x000018, "Member 'BP_VideoSettings_C_UpdateShadowQualityDropdown::CallFunc_GetOptionAtIndex_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyShadowQuality
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoSettings_C_ApplyShadowQuality final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyShadowQuality) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyShadowQuality");
static_assert(sizeof(BP_VideoSettings_C_ApplyShadowQuality) == 0x000010, "Wrong size on BP_VideoSettings_C_ApplyShadowQuality");
static_assert(offsetof(BP_VideoSettings_C_ApplyShadowQuality, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyShadowQuality::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyShadowQuality, CallFunc_GetSelectedIndex_SelectedIndex) == 0x000008, "Member 'BP_VideoSettings_C_ApplyShadowQuality::CallFunc_GetSelectedIndex_SelectedIndex' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyShadowQuality, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_VideoSettings_C_ApplyShadowQuality::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateEffectsQualityDropdown
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoSettings_C_UpdateEffectsQualityDropdown final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVisualEffectQuality_ReturnValue;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetOptionAtIndex_ReturnValue;             // 0x0010(0x0018)()
};
static_assert(alignof(BP_VideoSettings_C_UpdateEffectsQualityDropdown) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateEffectsQualityDropdown");
static_assert(sizeof(BP_VideoSettings_C_UpdateEffectsQualityDropdown) == 0x000028, "Wrong size on BP_VideoSettings_C_UpdateEffectsQualityDropdown");
static_assert(offsetof(BP_VideoSettings_C_UpdateEffectsQualityDropdown, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateEffectsQualityDropdown::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateEffectsQualityDropdown, CallFunc_GetVisualEffectQuality_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateEffectsQualityDropdown::CallFunc_GetVisualEffectQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateEffectsQualityDropdown, CallFunc_GetOptionAtIndex_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_UpdateEffectsQualityDropdown::CallFunc_GetOptionAtIndex_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyEffectsQuality
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoSettings_C_ApplyEffectsQuality final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyEffectsQuality) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyEffectsQuality");
static_assert(sizeof(BP_VideoSettings_C_ApplyEffectsQuality) == 0x000010, "Wrong size on BP_VideoSettings_C_ApplyEffectsQuality");
static_assert(offsetof(BP_VideoSettings_C_ApplyEffectsQuality, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyEffectsQuality::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyEffectsQuality, CallFunc_GetSelectedIndex_SelectedIndex) == 0x000008, "Member 'BP_VideoSettings_C_ApplyEffectsQuality::CallFunc_GetSelectedIndex_SelectedIndex' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateViewDistanceDropdown
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoSettings_C_UpdateViewDistanceDropdown final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewDistanceQuality_ReturnValue;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetOptionAtIndex_ReturnValue;             // 0x0010(0x0018)()
};
static_assert(alignof(BP_VideoSettings_C_UpdateViewDistanceDropdown) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateViewDistanceDropdown");
static_assert(sizeof(BP_VideoSettings_C_UpdateViewDistanceDropdown) == 0x000028, "Wrong size on BP_VideoSettings_C_UpdateViewDistanceDropdown");
static_assert(offsetof(BP_VideoSettings_C_UpdateViewDistanceDropdown, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateViewDistanceDropdown::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateViewDistanceDropdown, CallFunc_GetViewDistanceQuality_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateViewDistanceDropdown::CallFunc_GetViewDistanceQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateViewDistanceDropdown, CallFunc_GetOptionAtIndex_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_UpdateViewDistanceDropdown::CallFunc_GetOptionAtIndex_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyViewDistance
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoSettings_C_ApplyViewDistance final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyViewDistance) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyViewDistance");
static_assert(sizeof(BP_VideoSettings_C_ApplyViewDistance) == 0x000010, "Wrong size on BP_VideoSettings_C_ApplyViewDistance");
static_assert(offsetof(BP_VideoSettings_C_ApplyViewDistance, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyViewDistance::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyViewDistance, CallFunc_GetSelectedIndex_SelectedIndex) == 0x000008, "Member 'BP_VideoSettings_C_ApplyViewDistance::CallFunc_GetSelectedIndex_SelectedIndex' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdatePPQualityDropdown
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoSettings_C_UpdatePPQualityDropdown final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPostProcessingQuality_ReturnValue;     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetOptionAtIndex_ReturnValue;             // 0x0010(0x0018)()
};
static_assert(alignof(BP_VideoSettings_C_UpdatePPQualityDropdown) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdatePPQualityDropdown");
static_assert(sizeof(BP_VideoSettings_C_UpdatePPQualityDropdown) == 0x000028, "Wrong size on BP_VideoSettings_C_UpdatePPQualityDropdown");
static_assert(offsetof(BP_VideoSettings_C_UpdatePPQualityDropdown, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdatePPQualityDropdown::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdatePPQualityDropdown, CallFunc_GetPostProcessingQuality_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdatePPQualityDropdown::CallFunc_GetPostProcessingQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdatePPQualityDropdown, CallFunc_GetOptionAtIndex_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_UpdatePPQualityDropdown::CallFunc_GetOptionAtIndex_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyPPQuality
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoSettings_C_ApplyPPQuality final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyPPQuality) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyPPQuality");
static_assert(sizeof(BP_VideoSettings_C_ApplyPPQuality) == 0x000010, "Wrong size on BP_VideoSettings_C_ApplyPPQuality");
static_assert(offsetof(BP_VideoSettings_C_ApplyPPQuality, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyPPQuality::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyPPQuality, CallFunc_GetSelectedIndex_SelectedIndex) == 0x000008, "Member 'BP_VideoSettings_C_ApplyPPQuality::CallFunc_GetSelectedIndex_SelectedIndex' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateFoliageDensityDropdown
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoSettings_C_UpdateFoliageDensityDropdown final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFoliageQuality_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetOptionAtIndex_ReturnValue;             // 0x0010(0x0018)()
};
static_assert(alignof(BP_VideoSettings_C_UpdateFoliageDensityDropdown) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateFoliageDensityDropdown");
static_assert(sizeof(BP_VideoSettings_C_UpdateFoliageDensityDropdown) == 0x000028, "Wrong size on BP_VideoSettings_C_UpdateFoliageDensityDropdown");
static_assert(offsetof(BP_VideoSettings_C_UpdateFoliageDensityDropdown, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateFoliageDensityDropdown::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateFoliageDensityDropdown, CallFunc_GetFoliageQuality_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateFoliageDensityDropdown::CallFunc_GetFoliageQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateFoliageDensityDropdown, CallFunc_GetOptionAtIndex_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_UpdateFoliageDensityDropdown::CallFunc_GetOptionAtIndex_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyFoliageDensity
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoSettings_C_ApplyFoliageDensity final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyFoliageDensity) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyFoliageDensity");
static_assert(sizeof(BP_VideoSettings_C_ApplyFoliageDensity) == 0x000010, "Wrong size on BP_VideoSettings_C_ApplyFoliageDensity");
static_assert(offsetof(BP_VideoSettings_C_ApplyFoliageDensity, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyFoliageDensity::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyFoliageDensity, CallFunc_GetSelectedIndex_SelectedIndex) == 0x000008, "Member 'BP_VideoSettings_C_ApplyFoliageDensity::CallFunc_GetSelectedIndex_SelectedIndex' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateGammaSlider
// 0x0038 (0x0038 - 0x0000)
struct BP_VideoSettings_C_UpdateGammaSlider final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGamma_ReturnValue;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetGammaLimits_ReturnValue;               // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MordhauSlider                       K2Node_MakeStruct_S_MordhauSlider;                 // 0x0020(0x0014)(IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_UpdateGammaSlider) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateGammaSlider");
static_assert(sizeof(BP_VideoSettings_C_UpdateGammaSlider) == 0x000038, "Wrong size on BP_VideoSettings_C_UpdateGammaSlider");
static_assert(offsetof(BP_VideoSettings_C_UpdateGammaSlider, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateGammaSlider::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateGammaSlider, CallFunc_GetGamma_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateGammaSlider::CallFunc_GetGamma_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateGammaSlider, CallFunc_GetGammaLimits_ReturnValue) == 0x00000C, "Member 'BP_VideoSettings_C_UpdateGammaSlider::CallFunc_GetGammaLimits_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateGammaSlider, CallFunc_BreakVector2D_X) == 0x000014, "Member 'BP_VideoSettings_C_UpdateGammaSlider::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateGammaSlider, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'BP_VideoSettings_C_UpdateGammaSlider::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateGammaSlider, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'BP_VideoSettings_C_UpdateGammaSlider::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateGammaSlider, K2Node_MakeStruct_S_MordhauSlider) == 0x000020, "Member 'BP_VideoSettings_C_UpdateGammaSlider::K2Node_MakeStruct_S_MordhauSlider' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyGamma
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoSettings_C_ApplyGamma final
{
public:
	bool                                          IsOnUserApply;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_Value;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetGammaLimits_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyGamma) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyGamma");
static_assert(sizeof(BP_VideoSettings_C_ApplyGamma) == 0x000028, "Wrong size on BP_VideoSettings_C_ApplyGamma");
static_assert(offsetof(BP_VideoSettings_C_ApplyGamma, IsOnUserApply) == 0x000000, "Member 'BP_VideoSettings_C_ApplyGamma::IsOnUserApply' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyGamma, CallFunc_GetValue_Value) == 0x000004, "Member 'BP_VideoSettings_C_ApplyGamma::CallFunc_GetValue_Value' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyGamma, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_ApplyGamma::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyGamma, CallFunc_GetGammaLimits_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_ApplyGamma::CallFunc_GetGammaLimits_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyGamma, CallFunc_BreakVector2D_X) == 0x000018, "Member 'BP_VideoSettings_C_ApplyGamma::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyGamma, CallFunc_BreakVector2D_Y) == 0x00001C, "Member 'BP_VideoSettings_C_ApplyGamma::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyGamma, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'BP_VideoSettings_C_ApplyGamma::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateSSRDropdown
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoSettings_C_UpdateSSRDropdown final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetScreenSpaceReflections_ReturnValue;    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetOptionAtIndex_ReturnValue;             // 0x0010(0x0018)()
};
static_assert(alignof(BP_VideoSettings_C_UpdateSSRDropdown) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateSSRDropdown");
static_assert(sizeof(BP_VideoSettings_C_UpdateSSRDropdown) == 0x000028, "Wrong size on BP_VideoSettings_C_UpdateSSRDropdown");
static_assert(offsetof(BP_VideoSettings_C_UpdateSSRDropdown, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateSSRDropdown::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateSSRDropdown, CallFunc_GetScreenSpaceReflections_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateSSRDropdown::CallFunc_GetScreenSpaceReflections_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateSSRDropdown, CallFunc_GetOptionAtIndex_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_UpdateSSRDropdown::CallFunc_GetOptionAtIndex_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplySSR
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoSettings_C_ApplySSR final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplySSR) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplySSR");
static_assert(sizeof(BP_VideoSettings_C_ApplySSR) == 0x000010, "Wrong size on BP_VideoSettings_C_ApplySSR");
static_assert(offsetof(BP_VideoSettings_C_ApplySSR, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplySSR::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplySSR, CallFunc_GetSelectedIndex_SelectedIndex) == 0x000008, "Member 'BP_VideoSettings_C_ApplySSR::CallFunc_GetSelectedIndex_SelectedIndex' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateBloomSlider
// 0x0038 (0x0038 - 0x0000)
struct BP_VideoSettings_C_UpdateBloomSlider final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBloom_ReturnValue;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetBloomLimits_ReturnValue;               // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MordhauSlider                       K2Node_MakeStruct_S_MordhauSlider;                 // 0x0020(0x0014)(IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_UpdateBloomSlider) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateBloomSlider");
static_assert(sizeof(BP_VideoSettings_C_UpdateBloomSlider) == 0x000038, "Wrong size on BP_VideoSettings_C_UpdateBloomSlider");
static_assert(offsetof(BP_VideoSettings_C_UpdateBloomSlider, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateBloomSlider::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateBloomSlider, CallFunc_GetBloom_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateBloomSlider::CallFunc_GetBloom_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateBloomSlider, CallFunc_GetBloomLimits_ReturnValue) == 0x00000C, "Member 'BP_VideoSettings_C_UpdateBloomSlider::CallFunc_GetBloomLimits_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateBloomSlider, CallFunc_BreakVector2D_X) == 0x000014, "Member 'BP_VideoSettings_C_UpdateBloomSlider::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateBloomSlider, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'BP_VideoSettings_C_UpdateBloomSlider::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateBloomSlider, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'BP_VideoSettings_C_UpdateBloomSlider::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateBloomSlider, K2Node_MakeStruct_S_MordhauSlider) == 0x000020, "Member 'BP_VideoSettings_C_UpdateBloomSlider::K2Node_MakeStruct_S_MordhauSlider' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyBloom
// 0x0020 (0x0020 - 0x0000)
struct BP_VideoSettings_C_ApplyBloom final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_Value;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetBloomLimits_ReturnValue;               // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyBloom) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyBloom");
static_assert(sizeof(BP_VideoSettings_C_ApplyBloom) == 0x000020, "Wrong size on BP_VideoSettings_C_ApplyBloom");
static_assert(offsetof(BP_VideoSettings_C_ApplyBloom, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyBloom::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyBloom, CallFunc_GetValue_Value) == 0x000008, "Member 'BP_VideoSettings_C_ApplyBloom::CallFunc_GetValue_Value' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyBloom, CallFunc_GetBloomLimits_ReturnValue) == 0x00000C, "Member 'BP_VideoSettings_C_ApplyBloom::CallFunc_GetBloomLimits_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyBloom, CallFunc_BreakVector2D_X) == 0x000014, "Member 'BP_VideoSettings_C_ApplyBloom::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyBloom, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'BP_VideoSettings_C_ApplyBloom::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyBloom, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'BP_VideoSettings_C_ApplyBloom::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateMotionBlurSlider
// 0x0038 (0x0038 - 0x0000)
struct BP_VideoSettings_C_UpdateMotionBlurSlider final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMotionBlurLimits_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMotionBlur_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MordhauSlider                       K2Node_MakeStruct_S_MordhauSlider;                 // 0x0020(0x0014)(IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_UpdateMotionBlurSlider) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateMotionBlurSlider");
static_assert(sizeof(BP_VideoSettings_C_UpdateMotionBlurSlider) == 0x000038, "Wrong size on BP_VideoSettings_C_UpdateMotionBlurSlider");
static_assert(offsetof(BP_VideoSettings_C_UpdateMotionBlurSlider, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateMotionBlurSlider::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateMotionBlurSlider, CallFunc_GetMotionBlurLimits_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateMotionBlurSlider::CallFunc_GetMotionBlurLimits_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateMotionBlurSlider, CallFunc_GetMotionBlur_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_UpdateMotionBlurSlider::CallFunc_GetMotionBlur_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateMotionBlurSlider, CallFunc_BreakVector2D_X) == 0x000014, "Member 'BP_VideoSettings_C_UpdateMotionBlurSlider::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateMotionBlurSlider, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'BP_VideoSettings_C_UpdateMotionBlurSlider::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateMotionBlurSlider, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'BP_VideoSettings_C_UpdateMotionBlurSlider::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateMotionBlurSlider, K2Node_MakeStruct_S_MordhauSlider) == 0x000020, "Member 'BP_VideoSettings_C_UpdateMotionBlurSlider::K2Node_MakeStruct_S_MordhauSlider' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyMotionBlur
// 0x0020 (0x0020 - 0x0000)
struct BP_VideoSettings_C_ApplyMotionBlur final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_Value;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMotionBlurLimits_ReturnValue;          // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyMotionBlur) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyMotionBlur");
static_assert(sizeof(BP_VideoSettings_C_ApplyMotionBlur) == 0x000020, "Wrong size on BP_VideoSettings_C_ApplyMotionBlur");
static_assert(offsetof(BP_VideoSettings_C_ApplyMotionBlur, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyMotionBlur::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyMotionBlur, CallFunc_GetValue_Value) == 0x000008, "Member 'BP_VideoSettings_C_ApplyMotionBlur::CallFunc_GetValue_Value' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyMotionBlur, CallFunc_GetMotionBlurLimits_ReturnValue) == 0x00000C, "Member 'BP_VideoSettings_C_ApplyMotionBlur::CallFunc_GetMotionBlurLimits_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyMotionBlur, CallFunc_BreakVector2D_X) == 0x000014, "Member 'BP_VideoSettings_C_ApplyMotionBlur::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyMotionBlur, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'BP_VideoSettings_C_ApplyMotionBlur::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyMotionBlur, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'BP_VideoSettings_C_ApplyMotionBlur::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateAmbientOcclusionCheckbox
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoSettings_C_UpdateAmbientOcclusionCheckbox final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAmbientOcclusion_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VideoSettings_C_UpdateAmbientOcclusionCheckbox) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateAmbientOcclusionCheckbox");
static_assert(sizeof(BP_VideoSettings_C_UpdateAmbientOcclusionCheckbox) == 0x000010, "Wrong size on BP_VideoSettings_C_UpdateAmbientOcclusionCheckbox");
static_assert(offsetof(BP_VideoSettings_C_UpdateAmbientOcclusionCheckbox, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateAmbientOcclusionCheckbox::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateAmbientOcclusionCheckbox, CallFunc_GetAmbientOcclusion_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateAmbientOcclusionCheckbox::CallFunc_GetAmbientOcclusion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateAmbientOcclusionCheckbox, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'BP_VideoSettings_C_UpdateAmbientOcclusionCheckbox::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyAmbientOcclusion
// 0x0020 (0x0020 - 0x0000)
struct BP_VideoSettings_C_ApplyAmbientOcclusion final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChecked_Value;                          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyAmbientOcclusion) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyAmbientOcclusion");
static_assert(sizeof(BP_VideoSettings_C_ApplyAmbientOcclusion) == 0x000020, "Wrong size on BP_VideoSettings_C_ApplyAmbientOcclusion");
static_assert(offsetof(BP_VideoSettings_C_ApplyAmbientOcclusion, Temp_bool_Variable) == 0x000000, "Member 'BP_VideoSettings_C_ApplyAmbientOcclusion::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyAmbientOcclusion, Temp_int_Variable) == 0x000004, "Member 'BP_VideoSettings_C_ApplyAmbientOcclusion::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyAmbientOcclusion, Temp_int_Variable_1) == 0x000008, "Member 'BP_VideoSettings_C_ApplyAmbientOcclusion::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyAmbientOcclusion, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_ApplyAmbientOcclusion::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyAmbientOcclusion, CallFunc_IsChecked_Value) == 0x000018, "Member 'BP_VideoSettings_C_ApplyAmbientOcclusion::CallFunc_IsChecked_Value' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyAmbientOcclusion, K2Node_Select_Default) == 0x00001C, "Member 'BP_VideoSettings_C_ApplyAmbientOcclusion::K2Node_Select_Default' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateLensFlaresCheckbox
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoSettings_C_UpdateLensFlaresCheckbox final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLensFlares_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VideoSettings_C_UpdateLensFlaresCheckbox) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateLensFlaresCheckbox");
static_assert(sizeof(BP_VideoSettings_C_UpdateLensFlaresCheckbox) == 0x000010, "Wrong size on BP_VideoSettings_C_UpdateLensFlaresCheckbox");
static_assert(offsetof(BP_VideoSettings_C_UpdateLensFlaresCheckbox, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateLensFlaresCheckbox::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateLensFlaresCheckbox, CallFunc_GetLensFlares_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateLensFlaresCheckbox::CallFunc_GetLensFlares_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateLensFlaresCheckbox, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'BP_VideoSettings_C_UpdateLensFlaresCheckbox::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyLensFlares
// 0x0020 (0x0020 - 0x0000)
struct BP_VideoSettings_C_ApplyLensFlares final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChecked_Value;                          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyLensFlares) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyLensFlares");
static_assert(sizeof(BP_VideoSettings_C_ApplyLensFlares) == 0x000020, "Wrong size on BP_VideoSettings_C_ApplyLensFlares");
static_assert(offsetof(BP_VideoSettings_C_ApplyLensFlares, Temp_bool_Variable) == 0x000000, "Member 'BP_VideoSettings_C_ApplyLensFlares::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyLensFlares, Temp_int_Variable) == 0x000004, "Member 'BP_VideoSettings_C_ApplyLensFlares::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyLensFlares, Temp_int_Variable_1) == 0x000008, "Member 'BP_VideoSettings_C_ApplyLensFlares::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyLensFlares, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_ApplyLensFlares::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyLensFlares, CallFunc_IsChecked_Value) == 0x000018, "Member 'BP_VideoSettings_C_ApplyLensFlares::CallFunc_IsChecked_Value' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyLensFlares, K2Node_Select_Default) == 0x00001C, "Member 'BP_VideoSettings_C_ApplyLensFlares::K2Node_Select_Default' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyCharacterCloth
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoSettings_C_ApplyCharacterCloth final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyCharacterCloth) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyCharacterCloth");
static_assert(sizeof(BP_VideoSettings_C_ApplyCharacterCloth) == 0x000010, "Wrong size on BP_VideoSettings_C_ApplyCharacterCloth");
static_assert(offsetof(BP_VideoSettings_C_ApplyCharacterCloth, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyCharacterCloth::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyCharacterCloth, CallFunc_GetSelectedIndex_SelectedIndex) == 0x000008, "Member 'BP_VideoSettings_C_ApplyCharacterCloth::CallFunc_GetSelectedIndex_SelectedIndex' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateCharacterClothDropdown
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoSettings_C_UpdateCharacterClothDropdown final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterCloth_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetOptionAtIndex_ReturnValue;             // 0x0010(0x0018)()
};
static_assert(alignof(BP_VideoSettings_C_UpdateCharacterClothDropdown) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateCharacterClothDropdown");
static_assert(sizeof(BP_VideoSettings_C_UpdateCharacterClothDropdown) == 0x000028, "Wrong size on BP_VideoSettings_C_UpdateCharacterClothDropdown");
static_assert(offsetof(BP_VideoSettings_C_UpdateCharacterClothDropdown, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateCharacterClothDropdown::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateCharacterClothDropdown, CallFunc_GetCharacterCloth_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateCharacterClothDropdown::CallFunc_GetCharacterCloth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateCharacterClothDropdown, CallFunc_GetOptionAtIndex_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_UpdateCharacterClothDropdown::CallFunc_GetOptionAtIndex_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.Get_ReflexDropdown_Visibility_0
// 0x0002 (0x0002 - 0x0000)
struct BP_VideoSettings_C_Get_ReflexDropdown_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflexAvailable_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VideoSettings_C_Get_ReflexDropdown_Visibility_0) == 0x000001, "Wrong alignment on BP_VideoSettings_C_Get_ReflexDropdown_Visibility_0");
static_assert(sizeof(BP_VideoSettings_C_Get_ReflexDropdown_Visibility_0) == 0x000002, "Wrong size on BP_VideoSettings_C_Get_ReflexDropdown_Visibility_0");
static_assert(offsetof(BP_VideoSettings_C_Get_ReflexDropdown_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_Get_ReflexDropdown_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_Get_ReflexDropdown_Visibility_0, CallFunc_IsReflexAvailable_ReturnValue) == 0x000001, "Member 'BP_VideoSettings_C_Get_ReflexDropdown_Visibility_0::CallFunc_IsReflexAvailable_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.UpdateReflexDropdown
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoSettings_C_UpdateReflexDropdown final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNvidiaReflex_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetOptionAtIndex_ReturnValue;             // 0x0010(0x0018)()
};
static_assert(alignof(BP_VideoSettings_C_UpdateReflexDropdown) == 0x000008, "Wrong alignment on BP_VideoSettings_C_UpdateReflexDropdown");
static_assert(sizeof(BP_VideoSettings_C_UpdateReflexDropdown) == 0x000028, "Wrong size on BP_VideoSettings_C_UpdateReflexDropdown");
static_assert(offsetof(BP_VideoSettings_C_UpdateReflexDropdown, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_UpdateReflexDropdown::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateReflexDropdown, CallFunc_GetNvidiaReflex_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_UpdateReflexDropdown::CallFunc_GetNvidiaReflex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_UpdateReflexDropdown, CallFunc_GetOptionAtIndex_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_UpdateReflexDropdown::CallFunc_GetOptionAtIndex_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.ApplyReflex
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoSettings_C_ApplyReflex final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_ApplyReflex) == 0x000008, "Wrong alignment on BP_VideoSettings_C_ApplyReflex");
static_assert(sizeof(BP_VideoSettings_C_ApplyReflex) == 0x000010, "Wrong size on BP_VideoSettings_C_ApplyReflex");
static_assert(offsetof(BP_VideoSettings_C_ApplyReflex, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_ApplyReflex::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_ApplyReflex, CallFunc_GetSelectedIndex_SelectedIndex) == 0x000008, "Member 'BP_VideoSettings_C_ApplyReflex::CallFunc_GetSelectedIndex_SelectedIndex' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.GetVisibility_0
// 0x0006 (0x0006 - 0x0000)
struct BP_VideoSettings_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_GetVisibility_0) == 0x000001, "Wrong alignment on BP_VideoSettings_C_GetVisibility_0");
static_assert(sizeof(BP_VideoSettings_C_GetVisibility_0) == 0x000006, "Wrong size on BP_VideoSettings_C_GetVisibility_0");
static_assert(offsetof(BP_VideoSettings_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_VideoSettings_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_VideoSettings_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_VideoSettings_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_GetVisibility_0, CallFunc_IsConsolePlatform_ReturnValue) == 0x000004, "Member 'BP_VideoSettings_C_GetVisibility_0::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_GetVisibility_0, K2Node_Select_Default) == 0x000005, "Member 'BP_VideoSettings_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.SaveSettings
// 0x0018 (0x0018 - 0x0000)
struct BP_VideoSettings_C_SaveSettings final
{
public:
	E_MainMenuAction                              Action;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoSettings_C_SaveSettings) == 0x000008, "Wrong alignment on BP_VideoSettings_C_SaveSettings");
static_assert(sizeof(BP_VideoSettings_C_SaveSettings) == 0x000018, "Wrong size on BP_VideoSettings_C_SaveSettings");
static_assert(offsetof(BP_VideoSettings_C_SaveSettings, Action) == 0x000000, "Member 'BP_VideoSettings_C_SaveSettings::Action' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_SaveSettings, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_VideoSettings_C_SaveSettings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_SaveSettings, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_VideoSettings_C_SaveSettings::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_SaveSettings, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_SaveSettings::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");

// Function BP_VideoSettings.BP_VideoSettings_C.RevertGammaSettingIfNeeded
// 0x0020 (0x0020 - 0x0000)
struct BP_VideoSettings_C_RevertGammaSettingIfNeeded final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGamma_ReturnValue;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VideoSettings_C_RevertGammaSettingIfNeeded) == 0x000008, "Wrong alignment on BP_VideoSettings_C_RevertGammaSettingIfNeeded");
static_assert(sizeof(BP_VideoSettings_C_RevertGammaSettingIfNeeded) == 0x000020, "Wrong size on BP_VideoSettings_C_RevertGammaSettingIfNeeded");
static_assert(offsetof(BP_VideoSettings_C_RevertGammaSettingIfNeeded, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_VideoSettings_C_RevertGammaSettingIfNeeded::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_RevertGammaSettingIfNeeded, CallFunc_GetMordhauGameUserSettings_ReturnValue_1) == 0x000008, "Member 'BP_VideoSettings_C_RevertGammaSettingIfNeeded::CallFunc_GetMordhauGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_RevertGammaSettingIfNeeded, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'BP_VideoSettings_C_RevertGammaSettingIfNeeded::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_RevertGammaSettingIfNeeded, CallFunc_GetGamma_ReturnValue) == 0x000014, "Member 'BP_VideoSettings_C_RevertGammaSettingIfNeeded::CallFunc_GetGamma_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_RevertGammaSettingIfNeeded, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_VideoSettings_C_RevertGammaSettingIfNeeded::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_RevertGammaSettingIfNeeded, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_VideoSettings_C_RevertGammaSettingIfNeeded::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoSettings_C_RevertGammaSettingIfNeeded, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'BP_VideoSettings_C_RevertGammaSettingIfNeeded::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

