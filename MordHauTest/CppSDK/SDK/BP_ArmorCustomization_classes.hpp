#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ArmorCustomization

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_ArmoryStates_structs.hpp"
#include "Mordhau_structs.hpp"
#include "UMG_structs.hpp"
#include "S_WearableData_structs.hpp"
#include "SlateCore_structs.hpp"
#include "BP_CustomizationTab_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_ArmorCustomization.BP_ArmorCustomization_C
// 0x0200 (0x05A0 - 0x03A0)
class UBP_ArmorCustomization_C final : public UBP_CustomizationTab_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ArmorCustomization_C;            // 0x03A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       EntryAnimInPlace;                                  // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EntryAnimLeftToRight;                              // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EntryAnimRightToLeft;                              // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBP_WearableSlotCustomization_C*        ArmsSlot;                                          // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ArmorTierTabs_Vertical_C*           BP_ArmorTierTabs_Vertical;                         // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ButtonPrompt_C*                     BP_ButtonPrompt;                                   // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ButtonPrompt_C*                     BP_ButtonPrompt_1;                                 // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ColorSelectionMenu_Right_C*         BP_ColorSelectionMenu_Right;                       // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CustomizationTopBar_C*              BP_CustomizationTopBar;                            // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ColorEntry_C*                       BP_EmblemColorEntry1;                              // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ColorEntry_C*                       BP_EmblemColorEntry2;                              // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_EmblemDisplayEntry_C*               BP_EmblemDisplayEntry;                             // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_EmblemSelectionMenu_C*              BP_EmblemSelectionMenu;                            // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MordhauSlider_C*                    BP_MordhauSlider;                                  // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PatternSelectionMenu_Right_C*       BP_PatternSelectionMenu_Right;                     // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PromptButton_New_C*                 BP_PromptButton_Back;                              // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SmallTopLabel_C*                    BP_SmallTopLabel_Armor;                            // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SmallTopLabel_C*                    BP_SmallTopLabel_Emblem;                           // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SmallTopLabel_C*                    BP_SmallTopLabel_MetalRoughness;                   // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SmallTopLabel_C*                    BP_SmallTopLabel_MetalRoughness_1;                 // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SmallTopLabel_C*                    BP_SmallTopLabel_MetalTint;                        // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ColorEntry_C*                       BP_TintColorEntry;                                 // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_WearableSelectionMenu_C*            BP_WearableSelectionMenu;                          // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_Slots;                                 // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_WearableSlotCustomization_C*        CoifSlot;                                          // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DownArrow;                                         // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           DropdownGamepadControls;                           // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_WearableSlotCustomization_C*        FeetSlot;                                          // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_WearableSlotCustomization_C*        HandsSlot;                                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_WearableSlotCustomization_C*        HeadSlot;                                          // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_7;                                   // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_WearableSlotCustomization_C*        LegsSlot;                                          // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_WearableSlotCustomization_C*        LowerChestSlot;                                    // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_WearableSlotCustomization_C*        ShouldersSlot;                                     // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxText*                          TeamColorPreviewDropdown;                          // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_WearableSlotCustomization_C*        UpperChestSlot;                                    // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Main;                               // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UBP_WearableSlotCustomization_C*> SlotWidgets;                                       // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	EWearableSlot                                 Current_Slot_;                                     // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1[0x3];                                      // 0x04F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EditingDefaultTier;                                // 0x04F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         HeadDefaultCustomizationDefaults;                  // 0x04F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UClass*>                         ChestDefaultCustomizationDefaults;                 // 0x0508(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UClass*>                         LegsDefaultCustomizationDefaults;                  // 0x0518(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBP_WearableSlotCustomization_C*        HoveredSlot;                                       // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauCharacter_C*                 Mordhau_Character_Doll;                            // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ArmorTooltip_C*                     Armor_Tooltip;                                     // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Wearable_Selection_Menu_Header;                    // 0x0540(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               Highlight_Mat;                                     // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_WearableData>                WearableUIData_;                                   // 0x0560(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Current_Item_ID;                                   // 0x0570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Hover_Preview_Cost;                                // 0x0574(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Last_Item_ID;                                      // 0x0578(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57C[0x4];                                      // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Last_Selected_Item;                                // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           TeamColorPreviewOptions;                           // 0x0588(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         TeamColorsPreviewMode;                             // 0x0598(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ArmorCustomization(int32 EntryPoint);
	void OnDLCUpdateRecevied(const struct FPlayFabEntitlements& UpdatedEntitlements);
	void BndEvt__BP_ArmorCustomization_TeamColorPreviewDropdown_K2Node_ComponentBoundEvent_11_OnSelectionChangedEvent__DelegateSignature(const class FText& SelectedItem, ESelectInfo SelectionType);
	void BndEvt__BP_ArmorCustomization_BP_WearableSelectionMenu_K2Node_ComponentBoundEvent_9_Fetch_New_Data__DelegateSignature();
	void BndEvt__BP_ArmorCustomization_BP_PatternSelectionMenu_Right_K2Node_ComponentBoundEvent_7_Back_Button_Clicked__DelegateSignature();
	void PSM_Back();
	void BndEvt__BP_ArmorCustomization_BP_WearableSelectionMenu_K2Node_ComponentBoundEvent_5_Pattern_Clicked__DelegateSignature(int32 Pattern_Id);
	void Switch_Slot(int32 Direction);
	void BndEvt__BP_ArmorCustomization_BP_WearableSelectionMenu_K2Node_ComponentBoundEvent_6_SwitchSlotClicked__DelegateSignature(int32 Direction);
	void Repeat_Key_Down(const struct FKey& Key);
	void List_Unhovered();
	void On_Slot_Unequip();
	void BndEvt__BP_ArmorCustomization_BP_ColorSelectionMenu_Right_K2Node_ComponentBoundEvent_3_Back_Button_Clicked__DelegateSignature();
	void BndEvt__BP_ArmorCustomization_BP_CustomizationTopBar_K2Node_ComponentBoundEvent_2_Breadcrumb_Clicked__DelegateSignature(const class FString& Breadcrumb);
	void BndEvt__BP_ArmorCustomization_BP_EmblemDisplayEntry_K2Node_ComponentBoundEvent_1_OnClick__DelegateSignature(class UBP_CustomizationItemEntry_C* Entry);
	void BndEvt__BP_ArmorCustomization_BP_PromptButton_Back_K2Node_ComponentBoundEvent_4_onClicked__DelegateSignature();
	void CSM_Back();
	void ESM_Back();
	void WSM_Back();
	void Key_Down(const struct FKey& KeyName);
	void BndEvt__BP_MordhauSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature(float Value);
	void Return_to_Landing_page();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnDrag(float DeltaDistance);
	void BndEvt__BP_TintColorEntry_K2Node_ComponentBoundEvent_15_OnClick__DelegateSignature(class UBP_CustomizationItemEntry_C* Entry);
	void BndEvt__BP_EmblemColorEntry2_K2Node_ComponentBoundEvent_14_OnClick__DelegateSignature(class UBP_CustomizationItemEntry_C* Entry);
	void BndEvt__BP_EmblemColorEntry1_K2Node_ComponentBoundEvent_13_OnClick__DelegateSignature(class UBP_CustomizationItemEntry_C* Entry);
	void BndEvt__BP_EmblemSelectionMenu_K2Node_ComponentBoundEvent_10_Back_Button_Clicked__DelegateSignature();
	void RegisterPreviewEvents();
	void BndEvt__BP_WearableSelectionMenu_K2Node_ComponentBoundEvent_8_Back_Button_Clicked__DelegateSignature();
	void OnScroll(float ScrollDelta);
	void Construct();
	void OnProfileChanged();
	void SetActive();
	void UpdateWidgets();
	void GetValues(int32* Emblem, int32* EmblemColor1, int32* EmblemColor2, int32* MetalRoughnesScale, int32* MetalTint, TArray<class UClass*>* EmblemColors, int32* metalroughnessscaleLength, TArray<class UClass*>* MetalTintColors);
	void ShowWearableChoiceList(int32 Armor_Tier_Filter, EWearableSlot Wearable_Slot, bool bInPlaceAnim);
	void SelectionCanceled(bool Restore_Original_Profile, bool SkipAnim);
	float Get_MovementSpeedBar_Percent_0();
	ESlateVisibility GetVisibility_0();
	void ResetWrapperToTierDefault();
	void ShowEmblemChoiceList();
	void EmblemSelectionHovered(class UBP_CustomizationItemEntry_C* Entry);
	void EmblemSelectionClicked(class UBP_CustomizationItemEntry_C* Entry);
	void EmblemColorHovered(int32 Idx, int32 ColorId);
	void MetalTintColorHovered(int32 ColorId);
	void UpdateCharacterDollWrapped(bool OnlyUpdateMaterials, bool InstantEquipmentSwitch);
	void SetEditingDefaultTier(int32 NewTier);
	ESlateVisibility Get_BackButton_Visibility_0();
	void WearableSlotClicked(class UBP_WearableSlotCustomization_C* Entry);
	void Armor_Tier_Clicked(class UBP_CustomizationItemEntry_C* Armor_Button);
	void Generate_Emblem_Entries();
	void Show_Armor_Color_Picker(TArray<class UClass*>& Colors, int32 Color_Slot, EWearableSlot Wearable_Slot, int32 Current_Color_Index, class UWidget* Source_Widget);
	void Armor_Color_Entry_Clicked(class UBP_CustomizationItemEntry_C* Entry);
	void Armor_Color_Entry_Hovered(class UBP_CustomizationItemEntry_C* Entry);
	void Show_Emblem_Color_Picker(TArray<class UClass*>& Colors, int32 Color_Slot, int32 Current_Color_Index, class UWidget* Source_Widget);
	void Get_Emblem_Colors(int32 Slot_0, TArray<class UClass*>* Entries, class UClass** Color, int32* Color_Index);
	void Emblem_Color_Entry_Clicked(class UBP_CustomizationItemEntry_C* Entry);
	void Emblem_Color_Entry_Hovered(class UBP_CustomizationItemEntry_C* Entry);
	void Get_Metal_Tint_Colors(TArray<class UClass*>* Colors, class UClass** Color, int32* Color_Index);
	void Show_Metal_Tint_Color_Picker(TArray<class UClass*>& Colors, int32 Color_Slot, int32 Current_Color_Index, class UWidget* Source_Widget);
	void Metal_Tint_Color_Entry_Clicked(class UBP_CustomizationItemEntry_C* Entry);
	void Metal_Tint_Color_Entry_Hovered(class UBP_CustomizationItemEntry_C* Entry);
	void Color_Slot_Clicked(int32 Color_Slot);
	void Update_Pattern(int32 Pattern);
	ESlateVisibility GetVisibility_1();
	void UpdateWidgetPositions();
	class FText GetText_0();
	class FText GetText_1();
	void Generate_Armor_Item_Entries();
	void Horde_Armor_Tier_Clicked(int32 Tier);
	ESlateVisibility GetVisibility_2();
	void Select_New_Wearable(class UObject* Item);
	void Wearable_Clicked(class UObject* Item);
	void Wearable_Hovered(class UObject* Item, bool bIsHovered);
	void Handle_Key_Shortcuts(const struct FKey& Key);
	void Update_Breadcrumb_Header();
	void Show_Master_Armor_Color_Picker(TArray<class UClass*>& Colors, int32 Color_Slot, EWearableSlot Wearable_Slot, int32 Current_Color_Index, class UWidget* Source_Widget);
	void Wearable_UnHovered();
	void Master_Armor_Color_Entry_Clicked(class UBP_CustomizationItemEntry_C* Entry);
	void Master_Armor_Color_Entry_Hovered(class UBP_CustomizationItemEntry_C* Entry);
	void Create_Master_Color_Entries();
	void Master_Color_Slot_Clicked();
	void Get_Master_colors();
	ESlateVisibility GetVisibility_3();
	ESlateVisibility GetVisibility_4();
	ESlateVisibility GetVisibility_5();
	void Set_Wearable_in_Profile_and_Update_Doll(int32 ID);
	void Handle_Gamepad_Camera_Controls(const struct FKey& Key);
	void _Pattern_Selection_Canceled(bool Restore_Original_Profile);
	void GetArmorTierForSlot(EWearableSlot Slot_0, int32* Armor_Tier);
	void Play_Entry_Anim(bool bLeftToRight, bool bInPlace);
	void Reset_Doll_to_Selection_Original_Profile();
	void Show_Pattern_Selection_Menu(EWearableSlot Wearable_Slot, int32 Current_Pattern_Id);
	void Pattern_Entry_Clicked(class UBP_CustomizationItemEntry_C* Entry);
	void Pattern_Entry_Hovered(class UBP_CustomizationItemEntry_C* Entry);
	void On_Wearable_Unlocked(int32 ID);
	void On_Wearable_Item_Entry_Generated(class UUserWidget* Widget);
	void Get_Original_Profile_Slot_Cost(EWearableSlot Slot_0, int32* Cost);
	void WearableUnlockRequestCancelled();
	void On_Wearable_Selection_Changed(class UObject* Item, bool bIsSelected);
	void Refresh_Wearable_TileView();
	void UpdateTeamColorsPreview();
	ESlateVisibility Get_DropdownGamepadControls_Visibility_0();
	void OnStoreDialogAction();
	void HandleDLCUpdate(const struct FPlayFabEntitlements& UpdatedData);

	void OnPaint(struct FPaintContext& Context) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ArmorCustomization_C">();
	}
	static class UBP_ArmorCustomization_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ArmorCustomization_C>();
	}
};
static_assert(alignof(UBP_ArmorCustomization_C) == 0x000008, "Wrong alignment on UBP_ArmorCustomization_C");
static_assert(sizeof(UBP_ArmorCustomization_C) == 0x0005A0, "Wrong size on UBP_ArmorCustomization_C");
static_assert(offsetof(UBP_ArmorCustomization_C, UberGraphFrame_BP_ArmorCustomization_C) == 0x0003A0, "Member 'UBP_ArmorCustomization_C::UberGraphFrame_BP_ArmorCustomization_C' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, EntryAnimInPlace) == 0x0003A8, "Member 'UBP_ArmorCustomization_C::EntryAnimInPlace' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, EntryAnimLeftToRight) == 0x0003B0, "Member 'UBP_ArmorCustomization_C::EntryAnimLeftToRight' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, EntryAnimRightToLeft) == 0x0003B8, "Member 'UBP_ArmorCustomization_C::EntryAnimRightToLeft' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, ArmsSlot) == 0x0003C0, "Member 'UBP_ArmorCustomization_C::ArmsSlot' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_ArmorTierTabs_Vertical) == 0x0003C8, "Member 'UBP_ArmorCustomization_C::BP_ArmorTierTabs_Vertical' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_ButtonPrompt) == 0x0003D0, "Member 'UBP_ArmorCustomization_C::BP_ButtonPrompt' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_ButtonPrompt_1) == 0x0003D8, "Member 'UBP_ArmorCustomization_C::BP_ButtonPrompt_1' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_ColorSelectionMenu_Right) == 0x0003E0, "Member 'UBP_ArmorCustomization_C::BP_ColorSelectionMenu_Right' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_CustomizationTopBar) == 0x0003E8, "Member 'UBP_ArmorCustomization_C::BP_CustomizationTopBar' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_EmblemColorEntry1) == 0x0003F0, "Member 'UBP_ArmorCustomization_C::BP_EmblemColorEntry1' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_EmblemColorEntry2) == 0x0003F8, "Member 'UBP_ArmorCustomization_C::BP_EmblemColorEntry2' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_EmblemDisplayEntry) == 0x000400, "Member 'UBP_ArmorCustomization_C::BP_EmblemDisplayEntry' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_EmblemSelectionMenu) == 0x000408, "Member 'UBP_ArmorCustomization_C::BP_EmblemSelectionMenu' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_MordhauSlider) == 0x000410, "Member 'UBP_ArmorCustomization_C::BP_MordhauSlider' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_PatternSelectionMenu_Right) == 0x000418, "Member 'UBP_ArmorCustomization_C::BP_PatternSelectionMenu_Right' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_PromptButton_Back) == 0x000420, "Member 'UBP_ArmorCustomization_C::BP_PromptButton_Back' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_SmallTopLabel_Armor) == 0x000428, "Member 'UBP_ArmorCustomization_C::BP_SmallTopLabel_Armor' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_SmallTopLabel_Emblem) == 0x000430, "Member 'UBP_ArmorCustomization_C::BP_SmallTopLabel_Emblem' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_SmallTopLabel_MetalRoughness) == 0x000438, "Member 'UBP_ArmorCustomization_C::BP_SmallTopLabel_MetalRoughness' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_SmallTopLabel_MetalRoughness_1) == 0x000440, "Member 'UBP_ArmorCustomization_C::BP_SmallTopLabel_MetalRoughness_1' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_SmallTopLabel_MetalTint) == 0x000448, "Member 'UBP_ArmorCustomization_C::BP_SmallTopLabel_MetalTint' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_TintColorEntry) == 0x000450, "Member 'UBP_ArmorCustomization_C::BP_TintColorEntry' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, BP_WearableSelectionMenu) == 0x000458, "Member 'UBP_ArmorCustomization_C::BP_WearableSelectionMenu' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, CanvasPanel_Slots) == 0x000460, "Member 'UBP_ArmorCustomization_C::CanvasPanel_Slots' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, CoifSlot) == 0x000468, "Member 'UBP_ArmorCustomization_C::CoifSlot' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, DownArrow) == 0x000470, "Member 'UBP_ArmorCustomization_C::DownArrow' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, DropdownGamepadControls) == 0x000478, "Member 'UBP_ArmorCustomization_C::DropdownGamepadControls' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, FeetSlot) == 0x000480, "Member 'UBP_ArmorCustomization_C::FeetSlot' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, HandsSlot) == 0x000488, "Member 'UBP_ArmorCustomization_C::HandsSlot' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, HeadSlot) == 0x000490, "Member 'UBP_ArmorCustomization_C::HeadSlot' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, HorizontalBox_7) == 0x000498, "Member 'UBP_ArmorCustomization_C::HorizontalBox_7' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, Image) == 0x0004A0, "Member 'UBP_ArmorCustomization_C::Image' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, Image_0) == 0x0004A8, "Member 'UBP_ArmorCustomization_C::Image_0' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, LegsSlot) == 0x0004B0, "Member 'UBP_ArmorCustomization_C::LegsSlot' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, LowerChestSlot) == 0x0004B8, "Member 'UBP_ArmorCustomization_C::LowerChestSlot' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, ShouldersSlot) == 0x0004C0, "Member 'UBP_ArmorCustomization_C::ShouldersSlot' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, TeamColorPreviewDropdown) == 0x0004C8, "Member 'UBP_ArmorCustomization_C::TeamColorPreviewDropdown' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, UpperChestSlot) == 0x0004D0, "Member 'UBP_ArmorCustomization_C::UpperChestSlot' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, WidgetSwitcher_Main) == 0x0004D8, "Member 'UBP_ArmorCustomization_C::WidgetSwitcher_Main' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, SlotWidgets) == 0x0004E0, "Member 'UBP_ArmorCustomization_C::SlotWidgets' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, Current_Slot_) == 0x0004F0, "Member 'UBP_ArmorCustomization_C::Current_Slot_' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, EditingDefaultTier) == 0x0004F4, "Member 'UBP_ArmorCustomization_C::EditingDefaultTier' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, HeadDefaultCustomizationDefaults) == 0x0004F8, "Member 'UBP_ArmorCustomization_C::HeadDefaultCustomizationDefaults' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, ChestDefaultCustomizationDefaults) == 0x000508, "Member 'UBP_ArmorCustomization_C::ChestDefaultCustomizationDefaults' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, LegsDefaultCustomizationDefaults) == 0x000518, "Member 'UBP_ArmorCustomization_C::LegsDefaultCustomizationDefaults' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, HoveredSlot) == 0x000528, "Member 'UBP_ArmorCustomization_C::HoveredSlot' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, Mordhau_Character_Doll) == 0x000530, "Member 'UBP_ArmorCustomization_C::Mordhau_Character_Doll' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, Armor_Tooltip) == 0x000538, "Member 'UBP_ArmorCustomization_C::Armor_Tooltip' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, Wearable_Selection_Menu_Header) == 0x000540, "Member 'UBP_ArmorCustomization_C::Wearable_Selection_Menu_Header' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, Highlight_Mat) == 0x000558, "Member 'UBP_ArmorCustomization_C::Highlight_Mat' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, WearableUIData_) == 0x000560, "Member 'UBP_ArmorCustomization_C::WearableUIData_' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, Current_Item_ID) == 0x000570, "Member 'UBP_ArmorCustomization_C::Current_Item_ID' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, Hover_Preview_Cost) == 0x000574, "Member 'UBP_ArmorCustomization_C::Hover_Preview_Cost' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, Last_Item_ID) == 0x000578, "Member 'UBP_ArmorCustomization_C::Last_Item_ID' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, Last_Selected_Item) == 0x000580, "Member 'UBP_ArmorCustomization_C::Last_Selected_Item' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, TeamColorPreviewOptions) == 0x000588, "Member 'UBP_ArmorCustomization_C::TeamColorPreviewOptions' has a wrong offset!");
static_assert(offsetof(UBP_ArmorCustomization_C, TeamColorsPreviewMode) == 0x000598, "Member 'UBP_ArmorCustomization_C::TeamColorsPreviewMode' has a wrong offset!");

}

