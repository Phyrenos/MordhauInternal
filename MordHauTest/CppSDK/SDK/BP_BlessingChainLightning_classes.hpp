#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BlessingChainLightning

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BlessingChainLightning.BP_BlessingChainLightning_C
// 0x0040 (0x0260 - 0x0220)
class ABP_BlessingChainLightning_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class USphereComponent*                       Sphere;                                            // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AAdvancedCharacter*                     DamagedChar;                                       // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauCharacter*                      OwningChar;                                        // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         JumpChance;                                        // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAdvancedCharacter*                     NewDamagedChar;                                    // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         JumpDelay;                                         // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BlessingChainLightning(int32 EntryPoint);
	void LightningEffectsMulti(class AAdvancedCharacter* Source, class AAdvancedCharacter* Target);
	void ReceiveBeginPlay();
	void GetNewTarget(class AAdvancedCharacter** NewTarget);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BlessingChainLightning_C">();
	}
	static class ABP_BlessingChainLightning_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BlessingChainLightning_C>();
	}
};
static_assert(alignof(ABP_BlessingChainLightning_C) == 0x000008, "Wrong alignment on ABP_BlessingChainLightning_C");
static_assert(sizeof(ABP_BlessingChainLightning_C) == 0x000260, "Wrong size on ABP_BlessingChainLightning_C");
static_assert(offsetof(ABP_BlessingChainLightning_C, UberGraphFrame) == 0x000220, "Member 'ABP_BlessingChainLightning_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BlessingChainLightning_C, Sphere) == 0x000228, "Member 'ABP_BlessingChainLightning_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_BlessingChainLightning_C, DefaultSceneRoot) == 0x000230, "Member 'ABP_BlessingChainLightning_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BlessingChainLightning_C, DamagedChar) == 0x000238, "Member 'ABP_BlessingChainLightning_C::DamagedChar' has a wrong offset!");
static_assert(offsetof(ABP_BlessingChainLightning_C, OwningChar) == 0x000240, "Member 'ABP_BlessingChainLightning_C::OwningChar' has a wrong offset!");
static_assert(offsetof(ABP_BlessingChainLightning_C, JumpChance) == 0x000248, "Member 'ABP_BlessingChainLightning_C::JumpChance' has a wrong offset!");
static_assert(offsetof(ABP_BlessingChainLightning_C, NewDamagedChar) == 0x000250, "Member 'ABP_BlessingChainLightning_C::NewDamagedChar' has a wrong offset!");
static_assert(offsetof(ABP_BlessingChainLightning_C, JumpDelay) == 0x000258, "Member 'ABP_BlessingChainLightning_C::JumpDelay' has a wrong offset!");
static_assert(offsetof(ABP_BlessingChainLightning_C, Damage) == 0x00025C, "Member 'ABP_BlessingChainLightning_C::Damage' has a wrong offset!");

}

