#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ControlsSettings

#include "Basic.hpp"

#include "BP_ControlsSettings_classes.hpp"
#include "BP_ControlsSettings_parameters.hpp"


namespace SDK
{

// Function BP_ControlsSettings.BP_ControlsSettings_C.ExecuteUbergraph_BP_ControlsSettings
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ControlsSettings_C::ExecuteUbergraph_BP_ControlsSettings(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ExecuteUbergraph_BP_ControlsSettings");

	Params::BP_ControlsSettings_C_ExecuteUbergraph_BP_ControlsSettings Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__BP_ControlsSettings_ToggleCrouchCheckbox_K2Node_ComponentBoundEvent_8_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__BP_ControlsSettings_ToggleCrouchCheckbox_K2Node_ComponentBoundEvent_8_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__BP_ControlsSettings_ToggleCrouchCheckbox_K2Node_ComponentBoundEvent_8_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.Reset Settings
// (BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::Reset_Settings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "Reset Settings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ResetCancel
// (BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ResetCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ResetCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ResetConfirm
// (BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ResetConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ResetConfirm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__GameoadRangedSensitivitySlider_K2Node_ComponentBoundEvent_7_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__GameoadRangedSensitivitySlider_K2Node_ComponentBoundEvent_7_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__GameoadRangedSensitivitySlider_K2Node_ComponentBoundEvent_7_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.CancelButtonClicked
// (BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::CancelButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "CancelButtonClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ContinueButtonClicked
// (BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ContinueButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ContinueButtonClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__ControlSchemeDropdown_K2Node_ComponentBoundEvent_5_OnSelectionChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FText                             SelectedItem                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// ESelectInfo                             SelectionType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ControlsSettings_C::BndEvt__ControlSchemeDropdown_K2Node_ComponentBoundEvent_5_OnSelectionChanged__DelegateSignature(const class FText& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__ControlSchemeDropdown_K2Node_ComponentBoundEvent_5_OnSelectionChanged__DelegateSignature");

	Params::BP_ControlsSettings_C_BndEvt__ControlSchemeDropdown_K2Node_ComponentBoundEvent_5_OnSelectionChanged__DelegateSignature Parms{};

	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__ControlSchemeDropdown_K2Node_ComponentBoundEvent_3_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__ControlSchemeDropdown_K2Node_ComponentBoundEvent_3_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__ControlSchemeDropdown_K2Node_ComponentBoundEvent_3_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__AngleAttacksWithMovementCheckbox_K2Node_ComponentBoundEvent_2_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__AngleAttacksWithMovementCheckbox_K2Node_ComponentBoundEvent_2_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__AngleAttacksWithMovementCheckbox_K2Node_ComponentBoundEvent_2_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__InverseAttackDirectionYCheckbox_K2Node_ComponentBoundEvent_1_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__InverseAttackDirectionYCheckbox_K2Node_ComponentBoundEvent_1_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__InverseAttackDirectionYCheckbox_K2Node_ComponentBoundEvent_1_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__applyButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__applyButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__applyButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__GamepadRightYDeadzoneSlider_K2Node_ComponentBoundEvent_329_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__GamepadRightYDeadzoneSlider_K2Node_ComponentBoundEvent_329_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__GamepadRightYDeadzoneSlider_K2Node_ComponentBoundEvent_329_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__GamepadRightYSensitivitySlider_K2Node_ComponentBoundEvent_303_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__GamepadRightYSensitivitySlider_K2Node_ComponentBoundEvent_303_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__GamepadRightYSensitivitySlider_K2Node_ComponentBoundEvent_303_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__InvertGamepadRightYCheckbox_K2Node_ComponentBoundEvent_278_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__InvertGamepadRightYCheckbox_K2Node_ComponentBoundEvent_278_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__InvertGamepadRightYCheckbox_K2Node_ComponentBoundEvent_278_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__GamepadRightXDeadzoneSlider_K2Node_ComponentBoundEvent_254_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__GamepadRightXDeadzoneSlider_K2Node_ComponentBoundEvent_254_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__GamepadRightXDeadzoneSlider_K2Node_ComponentBoundEvent_254_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__GamepadRightXSensitivitySlider_K2Node_ComponentBoundEvent_231_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__GamepadRightXSensitivitySlider_K2Node_ComponentBoundEvent_231_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__GamepadRightXSensitivitySlider_K2Node_ComponentBoundEvent_231_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__InvertGamepadRightXCheckbox_K2Node_ComponentBoundEvent_209_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__InvertGamepadRightXCheckbox_K2Node_ComponentBoundEvent_209_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__InvertGamepadRightXCheckbox_K2Node_ComponentBoundEvent_209_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__GamepadLeftYDeadzoneSlider_K2Node_ComponentBoundEvent_188_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__GamepadLeftYDeadzoneSlider_K2Node_ComponentBoundEvent_188_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__GamepadLeftYDeadzoneSlider_K2Node_ComponentBoundEvent_188_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__GamepadLeftYSensitivitySlider_K2Node_ComponentBoundEvent_168_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__GamepadLeftYSensitivitySlider_K2Node_ComponentBoundEvent_168_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__GamepadLeftYSensitivitySlider_K2Node_ComponentBoundEvent_168_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__InvertGamepadLeftYCheckbox_K2Node_ComponentBoundEvent_149_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__InvertGamepadLeftYCheckbox_K2Node_ComponentBoundEvent_149_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__InvertGamepadLeftYCheckbox_K2Node_ComponentBoundEvent_149_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__GamepadLeftXDeadzoneSlider_K2Node_ComponentBoundEvent_131_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__GamepadLeftXDeadzoneSlider_K2Node_ComponentBoundEvent_131_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__GamepadLeftXDeadzoneSlider_K2Node_ComponentBoundEvent_131_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__GamepadLeftXSensitivitySlider_K2Node_ComponentBoundEvent_114_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__GamepadLeftXSensitivitySlider_K2Node_ComponentBoundEvent_114_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__GamepadLeftXSensitivitySlider_K2Node_ComponentBoundEvent_114_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__InvertGamepadLeftXCheckbox_K2Node_ComponentBoundEvent_98_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__InvertGamepadLeftXCheckbox_K2Node_ComponentBoundEvent_98_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__InvertGamepadLeftXCheckbox_K2Node_ComponentBoundEvent_98_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__MouseYSensitivitySlider_K2Node_ComponentBoundEvent_83_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__MouseYSensitivitySlider_K2Node_ComponentBoundEvent_83_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__MouseYSensitivitySlider_K2Node_ComponentBoundEvent_83_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__InvertMouseYCheckbox_K2Node_ComponentBoundEvent_69_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__InvertMouseYCheckbox_K2Node_ComponentBoundEvent_69_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__InvertMouseYCheckbox_K2Node_ComponentBoundEvent_69_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__MouseXSensitivitySlider_K2Node_ComponentBoundEvent_56_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__MouseXSensitivitySlider_K2Node_ComponentBoundEvent_56_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__MouseXSensitivitySlider_K2Node_ComponentBoundEvent_56_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__InvertMouseXCheckbox_K2Node_ComponentBoundEvent_44_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__InvertMouseXCheckbox_K2Node_ComponentBoundEvent_44_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__InvertMouseXCheckbox_K2Node_ComponentBoundEvent_44_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__FlipAttackSideCheckbox_K2Node_ComponentBoundEvent_33_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__FlipAttackSideCheckbox_K2Node_ComponentBoundEvent_33_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__FlipAttackSideCheckbox_K2Node_ComponentBoundEvent_33_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__AngleAttackAfterPressCheckbox_K2Node_ComponentBoundEvent_23_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__AngleAttackAfterPressCheckbox_K2Node_ComponentBoundEvent_23_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__AngleAttackAfterPressCheckbox_K2Node_ComponentBoundEvent_23_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__InverseAttackDirectionCheckbox_K2Node_ComponentBoundEvent_14_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__InverseAttackDirectionCheckbox_K2Node_ComponentBoundEvent_14_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__InverseAttackDirectionCheckbox_K2Node_ComponentBoundEvent_14_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__ToggleSprintCheckbox_K2Node_ComponentBoundEvent_6_OnHovered__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__ToggleSprintCheckbox_K2Node_ComponentBoundEvent_6_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__ToggleSprintCheckbox_K2Node_ComponentBoundEvent_6_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateWidgets
// (BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.OnShown
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::OnShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "OnShown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.BndEvt__resetButton_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_ControlsSettings_C::BndEvt__resetButton_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "BndEvt__resetButton_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateInvertMouseXCheckbox
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateInvertMouseXCheckbox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateInvertMouseXCheckbox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyInvertMouseX
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyInvertMouseX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyInvertMouseX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateInvertMouseYCheckbox
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateInvertMouseYCheckbox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateInvertMouseYCheckbox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyInvertMouseY
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyInvertMouseY()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyInvertMouseY");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateInvertGamepadLeftXCheckbox
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateInvertGamepadLeftXCheckbox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateInvertGamepadLeftXCheckbox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateInvertGamepadLeftYCheckbox
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateInvertGamepadLeftYCheckbox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateInvertGamepadLeftYCheckbox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyInvertGamepadLeftX
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyInvertGamepadLeftX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyInvertGamepadLeftX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyInvertGamepadLeftY
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyInvertGamepadLeftY()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyInvertGamepadLeftY");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateFlipAttackSideCheckbox
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateFlipAttackSideCheckbox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateFlipAttackSideCheckbox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyFlipAttackSide
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyFlipAttackSide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyFlipAttackSide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateMouseXSensitivitySlider
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateMouseXSensitivitySlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateMouseXSensitivitySlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateMouseYSensitivitySlider
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateMouseYSensitivitySlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateMouseYSensitivitySlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateGamepadLeftXSensitivitySlider
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateGamepadLeftXSensitivitySlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateGamepadLeftXSensitivitySlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateGamepadLeftYSensitivitySlider
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateGamepadLeftYSensitivitySlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateGamepadLeftYSensitivitySlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateGamepadRightXSensitivitySlider
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateGamepadRightXSensitivitySlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateGamepadRightXSensitivitySlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateGamepadRightYSensitivitySlider
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateGamepadRightYSensitivitySlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateGamepadRightYSensitivitySlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyMouseXSensitivity
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyMouseXSensitivity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyMouseXSensitivity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyMouseYSensitivity
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyMouseYSensitivity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyMouseYSensitivity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyGamepadLeftXSensitivity
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyGamepadLeftXSensitivity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyGamepadLeftXSensitivity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyGamepadLeftYSensitivity
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyGamepadLeftYSensitivity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyGamepadLeftYSensitivity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyGamepadRightXSensitivity
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyGamepadRightXSensitivity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyGamepadRightXSensitivity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyGamepadRightYSensitivity
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyGamepadRightYSensitivity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyGamepadRightYSensitivity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateGamepadLeftXDeadzoneSlider
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateGamepadLeftXDeadzoneSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateGamepadLeftXDeadzoneSlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateGamepadLeftYDeadzoneSlider
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateGamepadLeftYDeadzoneSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateGamepadLeftYDeadzoneSlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateGamepadRightXDeadzoneSlider
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateGamepadRightXDeadzoneSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateGamepadRightXDeadzoneSlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateGamepadRightYDeadzoneSlider
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateGamepadRightYDeadzoneSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateGamepadRightYDeadzoneSlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateInvertGamepadRightXCheckbox
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateInvertGamepadRightXCheckbox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateInvertGamepadRightXCheckbox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateInvertGamepadRightYCheckbox
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateInvertGamepadRightYCheckbox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateInvertGamepadRightYCheckbox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyInvertGamepadRightX
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyInvertGamepadRightX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyInvertGamepadRightX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyInvertGamepadRightY
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyInvertGamepadRightY()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyInvertGamepadRightY");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyGamepadLeftXDeadzone
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyGamepadLeftXDeadzone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyGamepadLeftXDeadzone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyGamepadLeftYDeadzone
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyGamepadLeftYDeadzone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyGamepadLeftYDeadzone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyGamepadRightXDeadzone
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyGamepadRightXDeadzone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyGamepadRightXDeadzone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyGamepadRightYDeadzone
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyGamepadRightYDeadzone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyGamepadRightYDeadzone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateSlider
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_SliderEntry_C*                Slider                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Limits                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ControlsSettings_C::UpdateSlider(class UBP_SliderEntry_C* Slider, float Value, const struct FVector2D& Limits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateSlider");

	Params::BP_ControlsSettings_C_UpdateSlider Parms{};

	Parms.Slider = Slider;
	Parms.Value = Value;
	Parms.Limits = std::move(Limits);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateToggleSprintCheckbox
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateToggleSprintCheckbox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateToggleSprintCheckbox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.GetSliderValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_SliderEntry_C*                Slider                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Limits                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ControlsSettings_C::GetSliderValue(class UBP_SliderEntry_C* Slider, const struct FVector2D& Limits, float* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "GetSliderValue");

	Params::BP_ControlsSettings_C_GetSliderValue Parms{};

	Parms.Slider = Slider;
	Parms.Limits = std::move(Limits);

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyToggleSprint
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyToggleSprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyToggleSprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateInverseAttackDirectionCheckbox
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateInverseAttackDirectionCheckbox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateInverseAttackDirectionCheckbox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyInverseAttackDirection
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyInverseAttackDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyInverseAttackDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyAngleAttackAfterPress
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyAngleAttackAfterPress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyAngleAttackAfterPress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateAngleAttackAfterPressCheckbox
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateAngleAttackAfterPressCheckbox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateAngleAttackAfterPressCheckbox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateAngleAttacksWithMovementCheckbox
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateAngleAttacksWithMovementCheckbox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateAngleAttacksWithMovementCheckbox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyAngleAttacksWithMovement
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyAngleAttacksWithMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyAngleAttacksWithMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateControlSchemeDropdown
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateControlSchemeDropdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateControlSchemeDropdown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateGamepadRangedSensititySlider
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateGamepadRangedSensititySlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateGamepadRangedSensititySlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyGamepadRangedSensitivity
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyGamepadRangedSensitivity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyGamepadRangedSensitivity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.CollapseVisibilityIfConsole
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_ControlsSettings_C::CollapseVisibilityIfConsole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "CollapseVisibilityIfConsole");

	Params::BP_ControlsSettings_C_CollapseVisibilityIfConsole Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.SaveSettings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_MainMenuAction                        Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ControlsSettings_C::SaveSettings(E_MainMenuAction Action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "SaveSettings");

	Params::BP_ControlsSettings_C_SaveSettings Parms{};

	Parms.Action = Action;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.UpdateToggleCrouchCheckbox
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::UpdateToggleCrouchCheckbox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "UpdateToggleCrouchCheckbox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ControlsSettings.BP_ControlsSettings_C.ApplyToggleCrouch
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ControlsSettings_C::ApplyToggleCrouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ControlsSettings_C", "ApplyToggleCrouch");

	UObject::ProcessEvent(Func, nullptr);
}

}

