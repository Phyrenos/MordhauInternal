#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_RandomAroundTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTTask_RandomAroundTarget.BTTask_RandomAroundTarget_C.ExecuteUbergraph_BTTask_RandomAroundTarget
// 0x0048 (0x0048 - 0x0000)
struct BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauAIController_C*              K2Node_DynamicCast_AsBP_Mordhau_AIController;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetTeamFilterClass_FilterClass;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation; // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue; // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget) == 0x000008, "Wrong alignment on BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget");
static_assert(sizeof(BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget) == 0x000048, "Wrong size on BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget");
static_assert(offsetof(BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget, EntryPoint) == 0x000000, "Member 'BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x000004, "Member 'BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget, K2Node_Event_OwnerController) == 0x000010, "Member 'BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget, K2Node_Event_ControlledPawn) == 0x000018, "Member 'BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget, K2Node_DynamicCast_AsBP_Mordhau_AIController) == 0x000020, "Member 'BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget::K2Node_DynamicCast_AsBP_Mordhau_AIController' has a wrong offset!");
static_assert(offsetof(BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget, CallFunc_GetTeamFilterClass_FilterClass) == 0x000030, "Member 'BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget::CallFunc_GetTeamFilterClass_FilterClass' has a wrong offset!");
static_assert(offsetof(BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget, CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation) == 0x000038, "Member 'BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget::CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget, CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue) == 0x000044, "Member 'BTTask_RandomAroundTarget_C_ExecuteUbergraph_BTTask_RandomAroundTarget::CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue' has a wrong offset!");

// Function BTTask_RandomAroundTarget.BTTask_RandomAroundTarget_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_RandomAroundTarget_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_RandomAroundTarget_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTTask_RandomAroundTarget_C_ReceiveExecuteAI");
static_assert(sizeof(BTTask_RandomAroundTarget_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTTask_RandomAroundTarget_C_ReceiveExecuteAI");
static_assert(offsetof(BTTask_RandomAroundTarget_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTTask_RandomAroundTarget_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_RandomAroundTarget_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTTask_RandomAroundTarget_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

