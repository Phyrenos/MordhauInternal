#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordeDefendWidgetFloater

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HordeDefendWidgetFloater.BP_HordeDefendWidgetFloater_C.ExecuteUbergraph_BP_HordeDefendWidgetFloater
// 0x0050 (0x0050 - 0x0000)
struct BP_HordeDefendWidgetFloater_C_ExecuteUbergraph_BP_HordeDefendWidgetFloater final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeDefendWidgetFloater_C_ExecuteUbergraph_BP_HordeDefendWidgetFloater) == 0x000004, "Wrong alignment on BP_HordeDefendWidgetFloater_C_ExecuteUbergraph_BP_HordeDefendWidgetFloater");
static_assert(sizeof(BP_HordeDefendWidgetFloater_C_ExecuteUbergraph_BP_HordeDefendWidgetFloater) == 0x000050, "Wrong size on BP_HordeDefendWidgetFloater_C_ExecuteUbergraph_BP_HordeDefendWidgetFloater");
static_assert(offsetof(BP_HordeDefendWidgetFloater_C_ExecuteUbergraph_BP_HordeDefendWidgetFloater, EntryPoint) == 0x000000, "Member 'BP_HordeDefendWidgetFloater_C_ExecuteUbergraph_BP_HordeDefendWidgetFloater::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HordeDefendWidgetFloater_C_ExecuteUbergraph_BP_HordeDefendWidgetFloater, K2Node_Event_MyGeometry) == 0x000004, "Member 'BP_HordeDefendWidgetFloater_C_ExecuteUbergraph_BP_HordeDefendWidgetFloater::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_HordeDefendWidgetFloater_C_ExecuteUbergraph_BP_HordeDefendWidgetFloater, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'BP_HordeDefendWidgetFloater_C_ExecuteUbergraph_BP_HordeDefendWidgetFloater::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_HordeDefendWidgetFloater_C_ExecuteUbergraph_BP_HordeDefendWidgetFloater, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'BP_HordeDefendWidgetFloater_C_ExecuteUbergraph_BP_HordeDefendWidgetFloater::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeDefendWidgetFloater_C_ExecuteUbergraph_BP_HordeDefendWidgetFloater, CallFunc_Lerp_ReturnValue) == 0x000044, "Member 'BP_HordeDefendWidgetFloater_C_ExecuteUbergraph_BP_HordeDefendWidgetFloater::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeDefendWidgetFloater_C_ExecuteUbergraph_BP_HordeDefendWidgetFloater, CallFunc_MakeVector2D_ReturnValue) == 0x000048, "Member 'BP_HordeDefendWidgetFloater_C_ExecuteUbergraph_BP_HordeDefendWidgetFloater::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function BP_HordeDefendWidgetFloater.BP_HordeDefendWidgetFloater_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_HordeDefendWidgetFloater_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeDefendWidgetFloater_C_Tick) == 0x000004, "Wrong alignment on BP_HordeDefendWidgetFloater_C_Tick");
static_assert(sizeof(BP_HordeDefendWidgetFloater_C_Tick) == 0x00003C, "Wrong size on BP_HordeDefendWidgetFloater_C_Tick");
static_assert(offsetof(BP_HordeDefendWidgetFloater_C_Tick, MyGeometry) == 0x000000, "Member 'BP_HordeDefendWidgetFloater_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_HordeDefendWidgetFloater_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_HordeDefendWidgetFloater_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_HordeDefendWidgetFloater.BP_HordeDefendWidgetFloater_C.UpdateHealth
// 0x0020 (0x0020 - 0x0000)
struct BP_HordeDefendWidgetFloater_C_UpdateHealth final
{
public:
	float                                         NewHealth;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeDefendWidgetFloater_C_UpdateHealth) == 0x000008, "Wrong alignment on BP_HordeDefendWidgetFloater_C_UpdateHealth");
static_assert(sizeof(BP_HordeDefendWidgetFloater_C_UpdateHealth) == 0x000020, "Wrong size on BP_HordeDefendWidgetFloater_C_UpdateHealth");
static_assert(offsetof(BP_HordeDefendWidgetFloater_C_UpdateHealth, NewHealth) == 0x000000, "Member 'BP_HordeDefendWidgetFloater_C_UpdateHealth::NewHealth' has a wrong offset!");
static_assert(offsetof(BP_HordeDefendWidgetFloater_C_UpdateHealth, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'BP_HordeDefendWidgetFloater_C_UpdateHealth::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeDefendWidgetFloater_C_UpdateHealth, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000008, "Member 'BP_HordeDefendWidgetFloater_C_UpdateHealth::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeDefendWidgetFloater_C_UpdateHealth, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_HordeDefendWidgetFloater_C_UpdateHealth::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeDefendWidgetFloater_C_UpdateHealth, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'BP_HordeDefendWidgetFloater_C_UpdateHealth::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeDefendWidgetFloater_C_UpdateHealth, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000018, "Member 'BP_HordeDefendWidgetFloater_C_UpdateHealth::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeDefendWidgetFloater_C_UpdateHealth, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_HordeDefendWidgetFloater_C_UpdateHealth::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeDefendWidgetFloater_C_UpdateHealth, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'BP_HordeDefendWidgetFloater_C_UpdateHealth::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

