#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ProgressDriver

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ProgressDriver.BP_ProgressDriver_C.ExecuteUbergraph_BP_ProgressDriver
// 0x00D8 (0x00D8 - 0x0000)
struct BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseProgressActor_C*                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpConstantToSeparate_ReturnValue;    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseProgressActor_C*                CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SlaveProgressDriver_C*              CallFunc_Array_Get_Item_2;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SlaveProgressDriver_C*              CallFunc_Array_Get_Item_3;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver) == 0x000008, "Wrong alignment on BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver");
static_assert(sizeof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver) == 0x0000D8, "Wrong size on BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, EntryPoint) == 0x000000, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_IsDedicatedServer_ReturnValue) == 0x00000C, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, Temp_int_Array_Index_Variable_2) == 0x00001C, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, Temp_int_Loop_Counter_Variable_2) == 0x00002C, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Add_IntInt_ReturnValue_2) == 0x000034, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, Temp_int_Array_Index_Variable_3) == 0x000038, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, Temp_int_Loop_Counter_Variable_3) == 0x00003C, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Add_IntInt_ReturnValue_3) == 0x000048, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, K2Node_Event_DeltaSeconds) == 0x00004C, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000050, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_IsValid_ReturnValue_1) == 0x000055, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_FInterpConstantToSeparate_ReturnValue) == 0x000058, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_FInterpConstantToSeparate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_IsValid_ReturnValue_2) == 0x00005C, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_IsValid_ReturnValue_3) == 0x00005D, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_GetSocketLocation_ReturnValue) == 0x000060, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_MapRangeClamped_ReturnValue) == 0x00006C, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_FMin_ReturnValue) == 0x000070, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000078, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_IsValid_ReturnValue_4) == 0x00008C, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Less_IntInt_ReturnValue_1) == 0x00008D, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Array_Get_Item_2) == 0x000090, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Array_Get_Item_3) == 0x000098, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Array_Length_ReturnValue_2) == 0x0000A0, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Array_Length_ReturnValue_3) == 0x0000A4, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000A8, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000A9, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000AA, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_GetMaterial_ReturnValue) == 0x0000B0, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000B8, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_IsValid_ReturnValue_5) == 0x0000C0, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C4, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_GetFloatValue_ReturnValue) == 0x0000C8, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Not_PreBool_ReturnValue) == 0x0000CC, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_BooleanAND_ReturnValue) == 0x0000CD, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x0000D0, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D4, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x0000D5, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_BooleanOR_ReturnValue) == 0x0000D6, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver, CallFunc_BooleanAND_ReturnValue_2) == 0x0000D7, "Member 'BP_ProgressDriver_C_ExecuteUbergraph_BP_ProgressDriver::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_ProgressDriver.BP_ProgressDriver_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ProgressDriver_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProgressDriver_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ProgressDriver_C_ReceiveTick");
static_assert(sizeof(BP_ProgressDriver_C_ReceiveTick) == 0x000004, "Wrong size on BP_ProgressDriver_C_ReceiveTick");
static_assert(offsetof(BP_ProgressDriver_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ProgressDriver_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ProgressDriver.BP_ProgressDriver_C.CanInteract
// 0x0020 (0x0020 - 0x0000)
struct BP_ProgressDriver_C_CanInteract final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanInteract_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ProgressDriver_C_CanInteract) == 0x000008, "Wrong alignment on BP_ProgressDriver_C_CanInteract");
static_assert(sizeof(BP_ProgressDriver_C_CanInteract) == 0x000020, "Wrong size on BP_ProgressDriver_C_CanInteract");
static_assert(offsetof(BP_ProgressDriver_C_CanInteract, Character) == 0x000000, "Member 'BP_ProgressDriver_C_CanInteract::Character' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_CanInteract, ReturnValue) == 0x000008, "Member 'BP_ProgressDriver_C_CanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_CanInteract, CallFunc_CanInteract_ReturnValue) == 0x000009, "Member 'BP_ProgressDriver_C_CanInteract::CallFunc_CanInteract_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_CanInteract, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'BP_ProgressDriver_C_CanInteract::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_CanInteract, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'BP_ProgressDriver_C_CanInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_CanInteract, CallFunc_BooleanAND_ReturnValue_1) == 0x00000C, "Member 'BP_ProgressDriver_C_CanInteract::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_CanInteract, CallFunc_BooleanAND_ReturnValue_2) == 0x00000D, "Member 'BP_ProgressDriver_C_CanInteract::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_CanInteract, CallFunc_BooleanAND_ReturnValue_3) == 0x00000E, "Member 'BP_ProgressDriver_C_CanInteract::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_CanInteract, CallFunc_BooleanOR_ReturnValue) == 0x00000F, "Member 'BP_ProgressDriver_C_CanInteract::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_CanInteract, CallFunc_BooleanOR_ReturnValue_1) == 0x000010, "Member 'BP_ProgressDriver_C_CanInteract::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_CanInteract, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000014, "Member 'BP_ProgressDriver_C_CanInteract::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProgressDriver_C_CanInteract, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_ProgressDriver_C_CanInteract::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

