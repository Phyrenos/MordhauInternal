#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DummyObjective

#include "Basic.hpp"

#include "BP_DummyObjective_classes.hpp"
#include "BP_DummyObjective_parameters.hpp"


namespace SDK
{

// Function BP_DummyObjective.BP_DummyObjective_C.ExecuteUbergraph_BP_DummyObjective
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DummyObjective_C::ExecuteUbergraph_BP_DummyObjective(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DummyObjective_C", "ExecuteUbergraph_BP_DummyObjective");

	Params::BP_DummyObjective_C_ExecuteUbergraph_BP_DummyObjective Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DummyObjective.BP_DummyObjective_C.OnAnyObjectiveProgressChanged
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DummyObjective_C::OnAnyObjectiveProgressChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DummyObjective_C", "OnAnyObjectiveProgressChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DummyObjective.BP_DummyObjective_C.OnUpdateUIWidgets
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DummyObjective_C::OnUpdateUIWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DummyObjective_C", "OnUpdateUIWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DummyObjective.BP_DummyObjective_C.OnEnemyLostPrerequisites
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DummyObjective_C::OnEnemyLostPrerequisites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DummyObjective_C", "OnEnemyLostPrerequisites");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DummyObjective.BP_DummyObjective_C.OnEnemyGainedPrerequisites
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DummyObjective_C::OnEnemyGainedPrerequisites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DummyObjective_C", "OnEnemyGainedPrerequisites");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DummyObjective.BP_DummyObjective_C.OnInitialize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_CapturePoint_C*               Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DummyObjective_C::OnInitialize(class ABP_CapturePoint_C* Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DummyObjective_C", "OnInitialize");

	Params::BP_DummyObjective_C_OnInitialize Parms{};

	Parms.Point = Point;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DummyObjective.BP_DummyObjective_C.Activate
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DummyObjective_C::Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DummyObjective_C", "Activate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DummyObjective.BP_DummyObjective_C.Disable
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DummyObjective_C::Disable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DummyObjective_C", "Disable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DummyObjective.BP_DummyObjective_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_CapturePoint_C*               CapturePoint_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DummyObjective_C::Initialize(class ABP_CapturePoint_C* CapturePoint_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DummyObjective_C", "Initialize");

	Params::BP_DummyObjective_C_Initialize Parms{};

	Parms.CapturePoint_0 = CapturePoint_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DummyObjective.BP_DummyObjective_C.EnemyGainedPrerequisites
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DummyObjective_C::EnemyGainedPrerequisites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DummyObjective_C", "EnemyGainedPrerequisites");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DummyObjective.BP_DummyObjective_C.EnemyLostPrerequisites
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DummyObjective_C::EnemyLostPrerequisites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DummyObjective_C", "EnemyLostPrerequisites");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DummyObjective.BP_DummyObjective_C.IsCapturePointDone
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDone                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DummyObjective_C::IsCapturePointDone(bool* IsDone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DummyObjective_C", "IsCapturePointDone");

	Params::BP_DummyObjective_C_IsCapturePointDone Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDone != nullptr)
		*IsDone = Parms.IsDone;
}


// Function BP_DummyObjective.BP_DummyObjective_C.AnyObjectiveProgressChanged
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DummyObjective_C::AnyObjectiveProgressChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DummyObjective_C", "AnyObjectiveProgressChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DummyObjective.BP_DummyObjective_C.IsCompleted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Completed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DummyObjective_C::IsCompleted(bool* Completed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DummyObjective_C", "IsCompleted");

	Params::BP_DummyObjective_C_IsCompleted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Completed != nullptr)
		*Completed = Parms.Completed;
}


// Function BP_DummyObjective.BP_DummyObjective_C.IsInObjectiveArea
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InArea                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DummyObjective_C::IsInObjectiveArea(const struct FVector& Location, bool* InArea)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DummyObjective_C", "IsInObjectiveArea");

	Params::BP_DummyObjective_C_IsInObjectiveArea Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (InArea != nullptr)
		*InArea = Parms.InArea;
}


// Function BP_DummyObjective.BP_DummyObjective_C.GetObjectiveProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Progress                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DummyObjective_C::GetObjectiveProgress(float* Progress) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DummyObjective_C", "GetObjectiveProgress");

	Params::BP_DummyObjective_C_GetObjectiveProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Progress != nullptr)
		*Progress = Parms.Progress;
}

}

