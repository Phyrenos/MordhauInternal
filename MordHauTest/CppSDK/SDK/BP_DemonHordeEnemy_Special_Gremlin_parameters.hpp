#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DemonHordeEnemy_Special_Gremlin

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Mordhau_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_DemonHordeEnemy_Special_Gremlin.BP_DemonHordeEnemy_Special_Gremlin_C.ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin
// 0x0310 (0x0310 - 0x0000)
struct BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Angle;                                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            K2Node_Event_Type;                                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SubType;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Bone;                                 // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Point;                                // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Source;                               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Agent;                                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauActor*                          K2Node_DynamicCast_AsMordhau_Actor;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAB_MordhauCharacterAnimation_Gremlin_C* K2Node_DynamicCast_AsAB_Mordhau_Character_Animation_Gremlin; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAdvancedCharacter*                     K2Node_DynamicCast_AsAdvanced_Character;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLeg_ReturnValue;                        // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Percent_ByteByte_ReturnValue;             // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBeenReallyRecentlyRendered_ReturnValue; // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAB_MordhauCharacterAnimation_Gremlin_C* K2Node_DynamicCast_AsAB_Mordhau_Character_Animation_Gremlin_1; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauVehicleComponent*               CallFunc_GetLastUsedVehicle_ReturnValue;           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauMotion*                         CallFunc_GetMotion_ReturnValue;                    // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetClosestPlayer_ClosestPlayer;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetClosestPlayer_NearbyPlayerCount;       // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UIdleMotion*                            K2Node_DynamicCast_AsIdle_Motion;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_1;               // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x016F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0170(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x01FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x01FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0206(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_207[0x1];                                      // 0x0207(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0238(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector_X_1;                          // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DemonHordeCharacter_C*              K2Node_DynamicCast_AsBP_Demon_Horde_Character;     // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x02DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EB[0x5];                                      // 0x02EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAB_MordhauCharacterAnimation_Gremlin_C* K2Node_DynamicCast_AsAB_Mordhau_Character_Animation_Gremlin_2; // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0303(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAirborne_ReturnValue;                   // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin) == 0x000008, "Wrong alignment on BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin");
static_assert(sizeof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin) == 0x000310, "Wrong size on BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, EntryPoint) == 0x000000, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_Normal_ReturnValue) == 0x000014, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_MakeRotFromX_ReturnValue) == 0x000028, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_MakeLiteralByte_ReturnValue) == 0x000034, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BreakRotator_Roll) == 0x000038, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BreakRotator_Pitch) == 0x00003C, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BreakRotator_Yaw) == 0x000040, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_MakeRotator_ReturnValue) == 0x000044, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000050, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_HasAuthority_ReturnValue) == 0x000051, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_HasAuthority_ReturnValue_1) == 0x000052, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_Event_Angle) == 0x000054, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_Event_Angle' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_Event_Type) == 0x000058, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_Event_SubType) == 0x000059, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_Event_SubType' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_Event_Bone) == 0x00005C, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_Event_Bone' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_Event_Point) == 0x000064, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_Event_Point' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_Event_Source) == 0x000070, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_Event_Source' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_Event_Agent) == 0x000078, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_Event_Agent' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_DynamicCast_AsMordhau_Actor) == 0x000080, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_DynamicCast_AsMordhau_Actor' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_GetAnimInstance_ReturnValue) == 0x000090, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_DynamicCast_AsAB_Mordhau_Character_Animation_Gremlin) == 0x000098, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_DynamicCast_AsAB_Mordhau_Character_Animation_Gremlin' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_DynamicCast_AsAdvanced_Character) == 0x0000A8, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_DynamicCast_AsAdvanced_Character' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_IsLeg_ReturnValue) == 0x0000B1, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_IsLeg_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x0000B2, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x0000B3, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B4, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000B5, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_Percent_ByteByte_ReturnValue) == 0x0000B6, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_Percent_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_Less_ByteByte_ReturnValue) == 0x0000B7, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_HasBeenReallyRecentlyRendered_ReturnValue) == 0x0000B8, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_HasBeenReallyRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_Not_PreBool_ReturnValue) == 0x0000B9, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_GetAnimInstance_ReturnValue_1) == 0x0000C0, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_DynamicCast_AsAB_Mordhau_Character_Animation_Gremlin_1) == 0x0000C8, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_DynamicCast_AsAB_Mordhau_Character_Animation_Gremlin_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_DynamicCast_bSuccess_3) == 0x0000D0, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_VSize_ReturnValue) == 0x0000D4, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BooleanOR_ReturnValue) == 0x0000D8, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000D9, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BooleanOR_ReturnValue_1) == 0x0000DA, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BooleanOR_ReturnValue_2) == 0x0000DB, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_GetLastUsedVehicle_ReturnValue) == 0x0000E0, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_GetLastUsedVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_GetMotion_ReturnValue) == 0x0000F0, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_GetMotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_GetClosestPlayer_ClosestPlayer) == 0x0000F8, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_GetClosestPlayer_ClosestPlayer' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_GetClosestPlayer_NearbyPlayerCount) == 0x000100, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_GetClosestPlayer_NearbyPlayerCount' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_DynamicCast_AsIdle_Motion) == 0x000108, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_DynamicCast_AsIdle_Motion' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_DynamicCast_bSuccess_4) == 0x000110, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_IsValid_ReturnValue_1) == 0x000111, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000114, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000120, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x00012C, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_Vector_Distance_ReturnValue) == 0x000138, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_MakeRotFromX_ReturnValue_1) == 0x00013C, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_MakeRotFromX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_MapRangeClamped_ReturnValue) == 0x000148, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x00014C, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_MakeVector_ReturnValue) == 0x000150, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00015C, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000160, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_Less_FloatFloat_ReturnValue) == 0x00016C, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BooleanAND_ReturnValue) == 0x00016D, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BooleanOR_ReturnValue_3) == 0x00016E, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x00016F, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_Event_Hit) == 0x000170, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0001FC, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BooleanAND_ReturnValue_1) == 0x0001FD, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BooleanOR_ReturnValue_4) == 0x0001FE, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BooleanOR_ReturnValue_5) == 0x0001FF, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_Event_DeltaSeconds) == 0x000200, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BooleanOR_ReturnValue_6) == 0x000204, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BooleanOR_ReturnValue_7) == 0x000205, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_HasAuthority_ReturnValue_2) == 0x000206, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BreakVector_X) == 0x000208, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BreakVector_Y) == 0x00020C, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BreakVector_Z) == 0x000210, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000218, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_ComponentBoundEvent_OtherActor) == 0x000220, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_ComponentBoundEvent_OtherComp) == 0x000228, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000230, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_ComponentBoundEvent_bFromSweep) == 0x000234, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_ComponentBoundEvent_SweepResult) == 0x000238, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BreakVector_X_1) == 0x0002C4, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BreakVector_Y_1) == 0x0002C8, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BreakVector_Z_1) == 0x0002CC, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_DynamicCast_AsBP_Demon_Horde_Character) == 0x0002D0, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_DynamicCast_AsBP_Demon_Horde_Character' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_DynamicCast_bSuccess_5) == 0x0002D8, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_MakeVector_ReturnValue_1) == 0x0002DC, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_IsValid_ReturnValue_2) == 0x0002E8, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002E9, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BooleanAND_ReturnValue_2) == 0x0002EA, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_GetAnimInstance_ReturnValue_2) == 0x0002F0, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_DynamicCast_AsAB_Mordhau_Character_Animation_Gremlin_2) == 0x0002F8, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_DynamicCast_AsAB_Mordhau_Character_Animation_Gremlin_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, K2Node_DynamicCast_bSuccess_6) == 0x000300, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_HasAuthority_ReturnValue_3) == 0x000301, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_BooleanOR_ReturnValue_8) == 0x000302, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_IsValid_ReturnValue_3) == 0x000303, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_IsAirborne_ReturnValue) == 0x000304, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_IsAirborne_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin, CallFunc_ApplyDamage_ReturnValue) == 0x000308, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ExecuteUbergraph_BP_DemonHordeEnemy_Special_Gremlin::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");

// Function BP_DemonHordeEnemy_Special_Gremlin.BP_DemonHordeEnemy_Special_Gremlin_C.BndEvt__BP_DemonHordeEnemy_Special_Gremlin_GrappleSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_DemonHordeEnemy_Special_Gremlin_C_BndEvt__BP_DemonHordeEnemy_Special_Gremlin_GrappleSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DemonHordeEnemy_Special_Gremlin_C_BndEvt__BP_DemonHordeEnemy_Special_Gremlin_GrappleSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_DemonHordeEnemy_Special_Gremlin_C_BndEvt__BP_DemonHordeEnemy_Special_Gremlin_GrappleSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_DemonHordeEnemy_Special_Gremlin_C_BndEvt__BP_DemonHordeEnemy_Special_Gremlin_GrappleSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_DemonHordeEnemy_Special_Gremlin_C_BndEvt__BP_DemonHordeEnemy_Special_Gremlin_GrappleSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_BndEvt__BP_DemonHordeEnemy_Special_Gremlin_GrappleSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_BndEvt__BP_DemonHordeEnemy_Special_Gremlin_GrappleSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_BndEvt__BP_DemonHordeEnemy_Special_Gremlin_GrappleSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_BndEvt__BP_DemonHordeEnemy_Special_Gremlin_GrappleSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_BndEvt__BP_DemonHordeEnemy_Special_Gremlin_GrappleSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_BndEvt__BP_DemonHordeEnemy_Special_Gremlin_GrappleSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_BndEvt__BP_DemonHordeEnemy_Special_Gremlin_GrappleSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_BndEvt__BP_DemonHordeEnemy_Special_Gremlin_GrappleSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_BndEvt__BP_DemonHordeEnemy_Special_Gremlin_GrappleSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_BndEvt__BP_DemonHordeEnemy_Special_Gremlin_GrappleSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_BndEvt__BP_DemonHordeEnemy_Special_Gremlin_GrappleSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_BndEvt__BP_DemonHordeEnemy_Special_Gremlin_GrappleSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_DemonHordeEnemy_Special_Gremlin.BP_DemonHordeEnemy_Special_Gremlin_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_DemonHordeEnemy_Special_Gremlin_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeEnemy_Special_Gremlin_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_DemonHordeEnemy_Special_Gremlin_C_ReceiveTick");
static_assert(sizeof(BP_DemonHordeEnemy_Special_Gremlin_C_ReceiveTick) == 0x000004, "Wrong size on BP_DemonHordeEnemy_Special_Gremlin_C_ReceiveTick");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_DemonHordeEnemy_Special_Gremlin.BP_DemonHordeEnemy_Special_Gremlin_C.OnLanded
// 0x008C (0x008C - 0x0000)
struct BP_DemonHordeEnemy_Special_Gremlin_C_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DemonHordeEnemy_Special_Gremlin_C_OnLanded) == 0x000004, "Wrong alignment on BP_DemonHordeEnemy_Special_Gremlin_C_OnLanded");
static_assert(sizeof(BP_DemonHordeEnemy_Special_Gremlin_C_OnLanded) == 0x00008C, "Wrong size on BP_DemonHordeEnemy_Special_Gremlin_C_OnLanded");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_OnLanded, Hit) == 0x000000, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_OnLanded::Hit' has a wrong offset!");

// Function BP_DemonHordeEnemy_Special_Gremlin.BP_DemonHordeEnemy_Special_Gremlin_C.ModifyDamage
// 0x00C8 (0x00C8 - 0x0000)
struct BP_DemonHordeEnemy_Special_Gremlin_C_ModifyDamage final
{
public:
	float                                         DamageAmount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMordhauDamageInfo                     DamageInfo;                                        // 0x0008(0x00A8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	class AController*                            EventInstigator;                                   // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x00B8(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ModifyDamage_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DemonHordeEnemy_Special_Gremlin_C_ModifyDamage) == 0x000008, "Wrong alignment on BP_DemonHordeEnemy_Special_Gremlin_C_ModifyDamage");
static_assert(sizeof(BP_DemonHordeEnemy_Special_Gremlin_C_ModifyDamage) == 0x0000C8, "Wrong size on BP_DemonHordeEnemy_Special_Gremlin_C_ModifyDamage");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ModifyDamage, DamageAmount) == 0x000000, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ModifyDamage::DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ModifyDamage, DamageInfo) == 0x000008, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ModifyDamage::DamageInfo' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ModifyDamage, EventInstigator) == 0x0000B0, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ModifyDamage::EventInstigator' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ModifyDamage, ReturnValue) == 0x0000B8, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ModifyDamage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ModifyDamage, CallFunc_ModifyDamage_ReturnValue) == 0x0000BC, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ModifyDamage::CallFunc_ModifyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_ModifyDamage, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000C0, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_ModifyDamage::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_DemonHordeEnemy_Special_Gremlin.BP_DemonHordeEnemy_Special_Gremlin_C.OnDied
// 0x0030 (0x0030 - 0x0000)
struct BP_DemonHordeEnemy_Special_Gremlin_C_OnDied final
{
public:
	float                                         Angle;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SubType;                                           // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   bone;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Agent;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeEnemy_Special_Gremlin_C_OnDied) == 0x000008, "Wrong alignment on BP_DemonHordeEnemy_Special_Gremlin_C_OnDied");
static_assert(sizeof(BP_DemonHordeEnemy_Special_Gremlin_C_OnDied) == 0x000030, "Wrong size on BP_DemonHordeEnemy_Special_Gremlin_C_OnDied");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_OnDied, Angle) == 0x000000, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_OnDied::Angle' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_OnDied, Type) == 0x000004, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_OnDied::Type' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_OnDied, SubType) == 0x000005, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_OnDied::SubType' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_OnDied, bone) == 0x000008, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_OnDied::bone' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_OnDied, Point) == 0x000010, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_OnDied::Point' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_OnDied, Source) == 0x000020, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_OnDied::Source' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeEnemy_Special_Gremlin_C_OnDied, Agent) == 0x000028, "Member 'BP_DemonHordeEnemy_Special_Gremlin_C_OnDied::Agent' has a wrong offset!");

}

