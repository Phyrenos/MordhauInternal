#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KeyBindingsSettings

#include "Basic.hpp"

#include "BP_KeyBindingsSettings_classes.hpp"
#include "BP_KeyBindingsSettings_parameters.hpp"


namespace SDK
{

// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.ExecuteUbergraph_BP_KeyBindingsSettings
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_KeyBindingsSettings_C::ExecuteUbergraph_BP_KeyBindingsSettings(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "ExecuteUbergraph_BP_KeyBindingsSettings");

	Params::BP_KeyBindingsSettings_C_ExecuteUbergraph_BP_KeyBindingsSettings Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.HideEditingPopup
// (BlueprintCallable, BlueprintEvent)

void UBP_KeyBindingsSettings_C::HideEditingPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "HideEditingPopup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.ShowEditingPopup
// (BlueprintCallable, BlueprintEvent)

void UBP_KeyBindingsSettings_C::ShowEditingPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "ShowEditingPopup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.OnEditButtonNo
// (BlueprintCallable, BlueprintEvent)

void UBP_KeyBindingsSettings_C::OnEditButtonNo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "OnEditButtonNo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.OnEditButtonYes
// (BlueprintCallable, BlueprintEvent)

void UBP_KeyBindingsSettings_C::OnEditButtonYes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "OnEditButtonYes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.ShowEditDialog
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_KeyBindingElementWidget_C*    KeyBindingWidgetElement                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_KeyBindingsSettings_C::ShowEditDialog(class UBP_KeyBindingElementWidget_C* KeyBindingWidgetElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "ShowEditDialog");

	Params::BP_KeyBindingsSettings_C_ShowEditDialog Parms{};

	Parms.KeyBindingWidgetElement = KeyBindingWidgetElement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.Reset Settings
// (BlueprintCallable, BlueprintEvent)

void UBP_KeyBindingsSettings_C::Reset_Settings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "Reset Settings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.ResetCancel
// (BlueprintCallable, BlueprintEvent)

void UBP_KeyBindingsSettings_C::ResetCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "ResetCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.ResetConfirm
// (BlueprintCallable, BlueprintEvent)

void UBP_KeyBindingsSettings_C::ResetConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "ResetConfirm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.ApplyKeyBindings
// (BlueprintCallable, BlueprintEvent)

void UBP_KeyBindingsSettings_C::ApplyKeyBindings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "ApplyKeyBindings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.OnNoClicked
// (BlueprintCallable, BlueprintEvent)

void UBP_KeyBindingsSettings_C::OnNoClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "OnNoClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.OnYesClicked
// (BlueprintCallable, BlueprintEvent)

void UBP_KeyBindingsSettings_C::OnYesClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "OnYesClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_KeyBindingsSettings_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.BndEvt__ControlsButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_KeyBindingsSettings_C::BndEvt__ControlsButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "BndEvt__ControlsButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.BndEvt__resetButton_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_KeyBindingsSettings_C::BndEvt__resetButton_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "BndEvt__resetButton_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.BndEvt__applyButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_KeyBindingsSettings_C::BndEvt__applyButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "BndEvt__applyButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.OnPreviewKeyDown
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_KeyBindingsSettings_C::OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "OnPreviewKeyDown");

	Params::BP_KeyBindingsSettings_C_OnPreviewKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.OnAnalogValueChanged
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FAnalogInputEvent                InAnalogInputEvent                                     (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_KeyBindingsSettings_C::OnAnalogValueChanged(const struct FGeometry& MyGeometry, const struct FAnalogInputEvent& InAnalogInputEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "OnAnalogValueChanged");

	Params::BP_KeyBindingsSettings_C_OnAnalogValueChanged Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InAnalogInputEvent = std::move(InAnalogInputEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.HandleInputEvent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    bIsAxis                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FEventReply                      _Handled                                               (Parm, OutParm)

void UBP_KeyBindingsSettings_C::HandleInputEvent(const struct FKey& Key, bool bIsAxis, struct FEventReply* _Handled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "HandleInputEvent");

	Params::BP_KeyBindingsSettings_C_HandleInputEvent Parms{};

	Parms.Key = std::move(Key);
	Parms.bIsAxis = bIsAxis;

	UObject::ProcessEvent(Func, &Parms);

	if (_Handled != nullptr)
		*_Handled = std::move(Parms._Handled);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.PopulateCustomBindings
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SourceScheme                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_KeyBindingsSettings_C::PopulateCustomBindings(int32 SourceScheme)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "PopulateCustomBindings");

	Params::BP_KeyBindingsSettings_C_PopulateCustomBindings Parms{};

	Parms.SourceScheme = SourceScheme;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.FindWidgetByName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ActionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_KeyBindingElementWidget_C*    Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_KeyBindingsSettings_C::FindWidgetByName(class FName ActionName, class UBP_KeyBindingElementWidget_C** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "FindWidgetByName");

	Params::BP_KeyBindingsSettings_C_FindWidgetByName Parms{};

	Parms.ActionName = ActionName;

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.OnMouseMove
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_KeyBindingsSettings_C::OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "OnMouseMove");

	Params::BP_KeyBindingsSettings_C_OnMouseMove Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.OnPreviewMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_KeyBindingsSettings_C::OnPreviewMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "OnPreviewMouseButtonDown");

	Params::BP_KeyBindingsSettings_C_OnPreviewMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.OnMouseWheel
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_KeyBindingsSettings_C::OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "OnMouseWheel");

	Params::BP_KeyBindingsSettings_C_OnMouseWheel Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.SelectWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_KeyBindingElementWidget_C*    Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_KeyBindingsSettings_C::SelectWidget(class UBP_KeyBindingElementWidget_C* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "SelectWidget");

	Params::BP_KeyBindingsSettings_C_SelectWidget Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.FindDuplicateBindingWidget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    bIsPrimary                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UBP_KeyBindingElementWidget_C*    Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_KeyBindingsSettings_C::FindDuplicateBindingWidget(const struct FKey& Key, bool bIsPrimary, class UBP_KeyBindingElementWidget_C** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "FindDuplicateBindingWidget");

	Params::BP_KeyBindingsSettings_C_FindDuplicateBindingWidget Parms{};

	Parms.Key = std::move(Key);
	Parms.bIsPrimary = bIsPrimary;

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.SetWidgetBinding
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_KeyBindingElementWidget_C*    Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    bIsPrimary                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_KeyBindingsSettings_C::SetWidgetBinding(class UBP_KeyBindingElementWidget_C* Widget, const struct FKey& Key, bool bIsPrimary)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "SetWidgetBinding");

	Params::BP_KeyBindingsSettings_C_SetWidgetBinding Parms{};

	Parms.Widget = Widget;
	Parms.Key = std::move(Key);
	Parms.bIsPrimary = bIsPrimary;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.CollapseIfConsole
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_KeyBindingsSettings_C::CollapseIfConsole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "CollapseIfConsole");

	Params::BP_KeyBindingsSettings_C_CollapseIfConsole Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.Refresh all button prompts
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_KeyBindingsSettings_C::Refresh_all_button_prompts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "Refresh all button prompts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.SaveSettings
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_MainMenuAction                        Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_KeyBindingsSettings_C::SaveSettings(E_MainMenuAction Action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "SaveSettings");

	Params::BP_KeyBindingsSettings_C_SaveSettings Parms{};

	Parms.Action = Action;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.Set Warning Dialog Content
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FName                             ActionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_KeyBindWarningPopupContent_C* WarningPopupContent                                    (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_KeyBindingsSettings_C::Set_Warning_Dialog_Content(const struct FKey& Key, class FName ActionName, class UBP_KeyBindWarningPopupContent_C** WarningPopupContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "Set Warning Dialog Content");

	Params::BP_KeyBindingsSettings_C_Set_Warning_Dialog_Content Parms{};

	Parms.Key = std::move(Key);
	Parms.ActionName = ActionName;

	UObject::ProcessEvent(Func, &Parms);

	if (WarningPopupContent != nullptr)
		*WarningPopupContent = Parms.WarningPopupContent;
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.SetKeyBindPopup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Title                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Content                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_KeyBindingsSettings_C::SetKeyBindPopup(const class FText& Title, const class FText& Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "SetKeyBindPopup");

	Params::BP_KeyBindingsSettings_C_SetKeyBindPopup Parms{};

	Parms.Title = std::move(Title);
	Parms.Content = std::move(Content);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.OnEditPopupTimeout
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_KeyBindingsSettings_C::OnEditPopupTimeout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "OnEditPopupTimeout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.OnShown
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_KeyBindingsSettings_C::OnShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "OnShown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KeyBindingsSettings.BP_KeyBindingsSettings_C.RefreshAll
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_KeyBindingsSettings_C::RefreshAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KeyBindingsSettings_C", "RefreshAll");

	UObject::ProcessEvent(Func, nullptr);
}

}

