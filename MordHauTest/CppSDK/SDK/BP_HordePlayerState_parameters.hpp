#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordePlayerState

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_HordePlayerState.BP_HordePlayerState_C.ExecuteUbergraph_BP_HordePlayerState
// 0x0020 (0x0020 - 0x0000)
struct BP_HordePlayerState_C_ExecuteUbergraph_BP_HordePlayerState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_Event_NewPlayerState;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerState_C_ExecuteUbergraph_BP_HordePlayerState) == 0x000008, "Wrong alignment on BP_HordePlayerState_C_ExecuteUbergraph_BP_HordePlayerState");
static_assert(sizeof(BP_HordePlayerState_C_ExecuteUbergraph_BP_HordePlayerState) == 0x000020, "Wrong size on BP_HordePlayerState_C_ExecuteUbergraph_BP_HordePlayerState");
static_assert(offsetof(BP_HordePlayerState_C_ExecuteUbergraph_BP_HordePlayerState, EntryPoint) == 0x000000, "Member 'BP_HordePlayerState_C_ExecuteUbergraph_BP_HordePlayerState::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_ExecuteUbergraph_BP_HordePlayerState, K2Node_Event_NewPlayerState) == 0x000008, "Member 'BP_HordePlayerState_C_ExecuteUbergraph_BP_HordePlayerState::K2Node_Event_NewPlayerState' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_ExecuteUbergraph_BP_HordePlayerState, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x000010, "Member 'BP_HordePlayerState_C_ExecuteUbergraph_BP_HordePlayerState::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_ExecuteUbergraph_BP_HordePlayerState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HordePlayerState_C_ExecuteUbergraph_BP_HordePlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HordePlayerState.BP_HordePlayerState_C.ReceiveCopyProperties
// 0x0008 (0x0008 - 0x0000)
struct BP_HordePlayerState_C_ReceiveCopyProperties final
{
public:
	class APlayerState*                           NewPlayerState;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerState_C_ReceiveCopyProperties) == 0x000008, "Wrong alignment on BP_HordePlayerState_C_ReceiveCopyProperties");
static_assert(sizeof(BP_HordePlayerState_C_ReceiveCopyProperties) == 0x000008, "Wrong size on BP_HordePlayerState_C_ReceiveCopyProperties");
static_assert(offsetof(BP_HordePlayerState_C_ReceiveCopyProperties, NewPlayerState) == 0x000000, "Member 'BP_HordePlayerState_C_ReceiveCopyProperties::NewPlayerState' has a wrong offset!");

// Function BP_HordePlayerState.BP_HordePlayerState_C.UserConstructionScript
// 0x001C (0x001C - 0x0000)
struct BP_HordePlayerState_C_UserConstructionScript final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Temp_byte_Variable;                                // 0x0015(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerState_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_HordePlayerState_C_UserConstructionScript");
static_assert(sizeof(BP_HordePlayerState_C_UserConstructionScript) == 0x00001C, "Wrong size on BP_HordePlayerState_C_UserConstructionScript");
static_assert(offsetof(BP_HordePlayerState_C_UserConstructionScript, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'BP_HordePlayerState_C_UserConstructionScript::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_UserConstructionScript, Temp_int_Variable) == 0x000004, "Member 'BP_HordePlayerState_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_UserConstructionScript, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BP_HordePlayerState_C_UserConstructionScript::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_HordePlayerState_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BP_HordePlayerState_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_HordePlayerState_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_UserConstructionScript, Temp_byte_Variable) == 0x000015, "Member 'BP_HordePlayerState_C_UserConstructionScript::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'BP_HordePlayerState_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_HordePlayerState.BP_HordePlayerState_C.GetDiscountedPrice
// 0x0030 (0x0030 - 0x0000)
struct BP_HordePlayerState_C_GetDiscountedPrice final
{
public:
	int32                                         BasePrice;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Horde_Purchasable;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DiscountedPrice;                                   // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordePlayerController_C*            K2Node_DynamicCast_AsBP_Horde_Player_Controller;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDiscountedPrice_DiscountedPrice;       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerState_C_GetDiscountedPrice) == 0x000008, "Wrong alignment on BP_HordePlayerState_C_GetDiscountedPrice");
static_assert(sizeof(BP_HordePlayerState_C_GetDiscountedPrice) == 0x000030, "Wrong size on BP_HordePlayerState_C_GetDiscountedPrice");
static_assert(offsetof(BP_HordePlayerState_C_GetDiscountedPrice, BasePrice) == 0x000000, "Member 'BP_HordePlayerState_C_GetDiscountedPrice::BasePrice' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_GetDiscountedPrice, Horde_Purchasable) == 0x000008, "Member 'BP_HordePlayerState_C_GetDiscountedPrice::Horde_Purchasable' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_GetDiscountedPrice, DiscountedPrice) == 0x000010, "Member 'BP_HordePlayerState_C_GetDiscountedPrice::DiscountedPrice' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_GetDiscountedPrice, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_HordePlayerState_C_GetDiscountedPrice::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_GetDiscountedPrice, K2Node_DynamicCast_AsBP_Horde_Player_Controller) == 0x000020, "Member 'BP_HordePlayerState_C_GetDiscountedPrice::K2Node_DynamicCast_AsBP_Horde_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_GetDiscountedPrice, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_HordePlayerState_C_GetDiscountedPrice::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_GetDiscountedPrice, CallFunc_GetDiscountedPrice_DiscountedPrice) == 0x00002C, "Member 'BP_HordePlayerState_C_GetDiscountedPrice::CallFunc_GetDiscountedPrice_DiscountedPrice' has a wrong offset!");

// Function BP_HordePlayerState.BP_HordePlayerState_C.OnRep_SkillPoints
// 0x0018 (0x0018 - 0x0000)
struct BP_HordePlayerState_C_OnRep_SkillPoints final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordePlayerController_C*            K2Node_DynamicCast_AsBP_Horde_Player_Controller;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerState_C_OnRep_SkillPoints) == 0x000008, "Wrong alignment on BP_HordePlayerState_C_OnRep_SkillPoints");
static_assert(sizeof(BP_HordePlayerState_C_OnRep_SkillPoints) == 0x000018, "Wrong size on BP_HordePlayerState_C_OnRep_SkillPoints");
static_assert(offsetof(BP_HordePlayerState_C_OnRep_SkillPoints, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_HordePlayerState_C_OnRep_SkillPoints::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_OnRep_SkillPoints, K2Node_DynamicCast_AsBP_Horde_Player_Controller) == 0x000008, "Member 'BP_HordePlayerState_C_OnRep_SkillPoints::K2Node_DynamicCast_AsBP_Horde_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_OnRep_SkillPoints, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_HordePlayerState_C_OnRep_SkillPoints::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HordePlayerState.BP_HordePlayerState_C.CopyFromOtherState
// 0x0008 (0x0008 - 0x0000)
struct BP_HordePlayerState_C_CopyFromOtherState final
{
public:
	class ABP_HordePlayerState_C*                 OtherState;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordePlayerState_C_CopyFromOtherState) == 0x000008, "Wrong alignment on BP_HordePlayerState_C_CopyFromOtherState");
static_assert(sizeof(BP_HordePlayerState_C_CopyFromOtherState) == 0x000008, "Wrong size on BP_HordePlayerState_C_CopyFromOtherState");
static_assert(offsetof(BP_HordePlayerState_C_CopyFromOtherState, OtherState) == 0x000000, "Member 'BP_HordePlayerState_C_CopyFromOtherState::OtherState' has a wrong offset!");

// Function BP_HordePlayerState.BP_HordePlayerState_C.OnRep_ReplicatedSkills
// 0x0018 (0x0018 - 0x0000)
struct BP_HordePlayerState_C_OnRep_ReplicatedSkills final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordePlayerController_C*            K2Node_DynamicCast_AsBP_Horde_Player_Controller;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordePlayerState_C_OnRep_ReplicatedSkills) == 0x000008, "Wrong alignment on BP_HordePlayerState_C_OnRep_ReplicatedSkills");
static_assert(sizeof(BP_HordePlayerState_C_OnRep_ReplicatedSkills) == 0x000018, "Wrong size on BP_HordePlayerState_C_OnRep_ReplicatedSkills");
static_assert(offsetof(BP_HordePlayerState_C_OnRep_ReplicatedSkills, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_HordePlayerState_C_OnRep_ReplicatedSkills::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_OnRep_ReplicatedSkills, K2Node_DynamicCast_AsBP_Horde_Player_Controller) == 0x000008, "Member 'BP_HordePlayerState_C_OnRep_ReplicatedSkills::K2Node_DynamicCast_AsBP_Horde_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_HordePlayerState_C_OnRep_ReplicatedSkills, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_HordePlayerState_C_OnRep_ReplicatedSkills::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

