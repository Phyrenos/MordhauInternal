#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Warhammer_DIH

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Mordhau_structs.hpp"


namespace SDK::Params
{

// Function BP_Warhammer_DIH.BP_Warhammer_DIH_C.ExecuteUbergraph_BP_Warhammer_DIH
// 0x0088 (0x0088 - 0x0000)
struct BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackMove                                   K2Node_Event_Move;                                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Bone;                                 // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_WorldLocation;                        // 0x001C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_Tier;                                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SurfaceType;                          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BlessingComponent_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAdvancedCharacter*                     K2Node_DynamicCast_AsAdvanced_Character;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetParentCharacter_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH) == 0x000008, "Wrong alignment on BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH");
static_assert(sizeof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH) == 0x000088, "Wrong size on BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, EntryPoint) == 0x000000, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, K2Node_Event_Actor) == 0x000008, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, K2Node_Event_Move) == 0x000010, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::K2Node_Event_Move' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, K2Node_Event_Bone) == 0x000014, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::K2Node_Event_Bone' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, K2Node_Event_WorldLocation) == 0x00001C, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::K2Node_Event_WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, K2Node_Event_Tier) == 0x000028, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::K2Node_Event_Tier' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, K2Node_Event_SurfaceType) == 0x000029, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::K2Node_Event_SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, K2Node_DynamicCast_AsAdvanced_Character) == 0x000040, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::K2Node_DynamicCast_AsAdvanced_Character' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, CallFunc_HasAuthority_ReturnValue) == 0x000049, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, CallFunc_GetParentCharacter_ReturnValue) == 0x000050, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::CallFunc_GetParentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, K2Node_CustomEvent_Location) == 0x000058, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x000068, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000078, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000084, "Member 'BP_Warhammer_DIH_C_ExecuteUbergraph_BP_Warhammer_DIH::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Warhammer_DIH.BP_Warhammer_DIH_C.HitEffectsMulti
// 0x000C (0x000C - 0x0000)
struct BP_Warhammer_DIH_C_HitEffectsMulti final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Warhammer_DIH_C_HitEffectsMulti) == 0x000004, "Wrong alignment on BP_Warhammer_DIH_C_HitEffectsMulti");
static_assert(sizeof(BP_Warhammer_DIH_C_HitEffectsMulti) == 0x00000C, "Wrong size on BP_Warhammer_DIH_C_HitEffectsMulti");
static_assert(offsetof(BP_Warhammer_DIH_C_HitEffectsMulti, Location) == 0x000000, "Member 'BP_Warhammer_DIH_C_HitEffectsMulti::Location' has a wrong offset!");

// Function BP_Warhammer_DIH.BP_Warhammer_DIH_C.OnHit
// 0x0028 (0x0028 - 0x0000)
struct BP_Warhammer_DIH_C_OnHit final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackMove                                   Move;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   bone;                                              // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldLocation;                                     // 0x0014(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Tier;                                              // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SurfaceType;                                       // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Warhammer_DIH_C_OnHit) == 0x000008, "Wrong alignment on BP_Warhammer_DIH_C_OnHit");
static_assert(sizeof(BP_Warhammer_DIH_C_OnHit) == 0x000028, "Wrong size on BP_Warhammer_DIH_C_OnHit");
static_assert(offsetof(BP_Warhammer_DIH_C_OnHit, Actor) == 0x000000, "Member 'BP_Warhammer_DIH_C_OnHit::Actor' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_OnHit, Move) == 0x000008, "Member 'BP_Warhammer_DIH_C_OnHit::Move' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_OnHit, bone) == 0x00000C, "Member 'BP_Warhammer_DIH_C_OnHit::bone' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_OnHit, WorldLocation) == 0x000014, "Member 'BP_Warhammer_DIH_C_OnHit::WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_OnHit, Tier) == 0x000020, "Member 'BP_Warhammer_DIH_C_OnHit::Tier' has a wrong offset!");
static_assert(offsetof(BP_Warhammer_DIH_C_OnHit, SurfaceType) == 0x000021, "Member 'BP_Warhammer_DIH_C_OnHit::SurfaceType' has a wrong offset!");

}

