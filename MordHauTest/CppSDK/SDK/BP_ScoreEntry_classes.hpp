#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ScoreEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_ScoreEntry.BP_ScoreEntry_C
// 0x0080 (0x02E0 - 0x0260)
class UBP_ScoreEntry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       FadeOut;                                           // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeIn;                                            // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             Name_0;                                            // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Pointblock;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_2;                                       // 0x0288(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Label;                                             // 0x0290(0x0018)(Edit, BlueprintVisible)
	float                                         Points;                                            // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PlayerName;                                        // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FText                                   PointsText;                                        // 0x02C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBP_ScoreFeed_C*                        ScoreFeed;                                         // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ScoreEntry(int32 EntryPoint);
	void WidgetAnimationEvt_FadeOut_K2Node_WidgetAnimationEvent_0();
	void AddPoints(float InPoints);
	void Initialize(float StartingPoints, const class FString& InPlayerName, const class FText& InLabel, class UBP_ScoreFeed_C* InScoreFeed);
	void UpdatePointsText();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ScoreEntry_C">();
	}
	static class UBP_ScoreEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ScoreEntry_C>();
	}
};
static_assert(alignof(UBP_ScoreEntry_C) == 0x000008, "Wrong alignment on UBP_ScoreEntry_C");
static_assert(sizeof(UBP_ScoreEntry_C) == 0x0002E0, "Wrong size on UBP_ScoreEntry_C");
static_assert(offsetof(UBP_ScoreEntry_C, UberGraphFrame) == 0x000260, "Member 'UBP_ScoreEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ScoreEntry_C, FadeOut) == 0x000268, "Member 'UBP_ScoreEntry_C::FadeOut' has a wrong offset!");
static_assert(offsetof(UBP_ScoreEntry_C, FadeIn) == 0x000270, "Member 'UBP_ScoreEntry_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UBP_ScoreEntry_C, Name_0) == 0x000278, "Member 'UBP_ScoreEntry_C::Name_0' has a wrong offset!");
static_assert(offsetof(UBP_ScoreEntry_C, Pointblock) == 0x000280, "Member 'UBP_ScoreEntry_C::Pointblock' has a wrong offset!");
static_assert(offsetof(UBP_ScoreEntry_C, TextBlock_2) == 0x000288, "Member 'UBP_ScoreEntry_C::TextBlock_2' has a wrong offset!");
static_assert(offsetof(UBP_ScoreEntry_C, Label) == 0x000290, "Member 'UBP_ScoreEntry_C::Label' has a wrong offset!");
static_assert(offsetof(UBP_ScoreEntry_C, Points) == 0x0002A8, "Member 'UBP_ScoreEntry_C::Points' has a wrong offset!");
static_assert(offsetof(UBP_ScoreEntry_C, PlayerName) == 0x0002B0, "Member 'UBP_ScoreEntry_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UBP_ScoreEntry_C, PointsText) == 0x0002C0, "Member 'UBP_ScoreEntry_C::PointsText' has a wrong offset!");
static_assert(offsetof(UBP_ScoreEntry_C, ScoreFeed) == 0x0002D8, "Member 'UBP_ScoreEntry_C::ScoreFeed' has a wrong offset!");

}

