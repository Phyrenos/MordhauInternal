#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BreakdownPerkEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BreakdownPerkEntry.BP_BreakdownPerkEntry_C.ExecuteUbergraph_BP_BreakdownPerkEntry
// 0x0010 (0x0010 - 0x0000)
struct BP_BreakdownPerkEntry_C_ExecuteUbergraph_BP_BreakdownPerkEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PerkTooltip_C*                      CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreakdownPerkEntry_C_ExecuteUbergraph_BP_BreakdownPerkEntry) == 0x000008, "Wrong alignment on BP_BreakdownPerkEntry_C_ExecuteUbergraph_BP_BreakdownPerkEntry");
static_assert(sizeof(BP_BreakdownPerkEntry_C_ExecuteUbergraph_BP_BreakdownPerkEntry) == 0x000010, "Wrong size on BP_BreakdownPerkEntry_C_ExecuteUbergraph_BP_BreakdownPerkEntry");
static_assert(offsetof(BP_BreakdownPerkEntry_C_ExecuteUbergraph_BP_BreakdownPerkEntry, EntryPoint) == 0x000000, "Member 'BP_BreakdownPerkEntry_C_ExecuteUbergraph_BP_BreakdownPerkEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_ExecuteUbergraph_BP_BreakdownPerkEntry, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_BreakdownPerkEntry_C_ExecuteUbergraph_BP_BreakdownPerkEntry::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_BreakdownPerkEntry.BP_BreakdownPerkEntry_C.Update
// 0x0010 (0x0010 - 0x0000)
struct BP_BreakdownPerkEntry_C_Update final
{
public:
	class UClass*                                 Perk_Class_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BreakdownPerkEntry_C_Update) == 0x000008, "Wrong alignment on BP_BreakdownPerkEntry_C_Update");
static_assert(sizeof(BP_BreakdownPerkEntry_C_Update) == 0x000010, "Wrong size on BP_BreakdownPerkEntry_C_Update");
static_assert(offsetof(BP_BreakdownPerkEntry_C_Update, Perk_Class_0) == 0x000000, "Member 'BP_BreakdownPerkEntry_C_Update::Perk_Class_0' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_Update, CallFunc_IsValidClass_ReturnValue) == 0x000008, "Member 'BP_BreakdownPerkEntry_C_Update::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_BreakdownPerkEntry.BP_BreakdownPerkEntry_C.GetToolTipWidget_0
// 0x0008 (0x0008 - 0x0000)
struct BP_BreakdownPerkEntry_C_GetToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreakdownPerkEntry_C_GetToolTipWidget_0) == 0x000008, "Wrong alignment on BP_BreakdownPerkEntry_C_GetToolTipWidget_0");
static_assert(sizeof(BP_BreakdownPerkEntry_C_GetToolTipWidget_0) == 0x000008, "Wrong size on BP_BreakdownPerkEntry_C_GetToolTipWidget_0");
static_assert(offsetof(BP_BreakdownPerkEntry_C_GetToolTipWidget_0, ReturnValue) == 0x000000, "Member 'BP_BreakdownPerkEntry_C_GetToolTipWidget_0::ReturnValue' has a wrong offset!");

// Function BP_BreakdownPerkEntry.BP_BreakdownPerkEntry_C.Update Tooltip
// 0x0008 (0x0008 - 0x0000)
struct BP_BreakdownPerkEntry_C_Update_Tooltip final
{
public:
	class UBP_PerkTooltip_C*                      Perk_Tooltip_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreakdownPerkEntry_C_Update_Tooltip) == 0x000008, "Wrong alignment on BP_BreakdownPerkEntry_C_Update_Tooltip");
static_assert(sizeof(BP_BreakdownPerkEntry_C_Update_Tooltip) == 0x000008, "Wrong size on BP_BreakdownPerkEntry_C_Update_Tooltip");
static_assert(offsetof(BP_BreakdownPerkEntry_C_Update_Tooltip, Perk_Tooltip_0) == 0x000000, "Member 'BP_BreakdownPerkEntry_C_Update_Tooltip::Perk_Tooltip_0' has a wrong offset!");

// Function BP_BreakdownPerkEntry.BP_BreakdownPerkEntry_C.GetColorAndOpacity_0
// 0x0048 (0x0048 - 0x0000)
struct BP_BreakdownPerkEntry_C_GetColorAndOpacity_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreakdownPerkEntry_C_GetColorAndOpacity_0) == 0x000004, "Wrong alignment on BP_BreakdownPerkEntry_C_GetColorAndOpacity_0");
static_assert(sizeof(BP_BreakdownPerkEntry_C_GetColorAndOpacity_0) == 0x000048, "Wrong size on BP_BreakdownPerkEntry_C_GetColorAndOpacity_0");
static_assert(offsetof(BP_BreakdownPerkEntry_C_GetColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'BP_BreakdownPerkEntry_C_GetColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_GetColorAndOpacity_0, Temp_bool_Variable) == 0x000010, "Member 'BP_BreakdownPerkEntry_C_GetColorAndOpacity_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_GetColorAndOpacity_0, Temp_struct_Variable) == 0x000014, "Member 'BP_BreakdownPerkEntry_C_GetColorAndOpacity_0::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_GetColorAndOpacity_0, CallFunc_SelectColor_ReturnValue) == 0x000024, "Member 'BP_BreakdownPerkEntry_C_GetColorAndOpacity_0::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_GetColorAndOpacity_0, CallFunc_IsHovered_ReturnValue) == 0x000034, "Member 'BP_BreakdownPerkEntry_C_GetColorAndOpacity_0::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_GetColorAndOpacity_0, K2Node_Select_Default) == 0x000038, "Member 'BP_BreakdownPerkEntry_C_GetColorAndOpacity_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_BreakdownPerkEntry.BP_BreakdownPerkEntry_C.Get_Overlay_Banned_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct BP_BreakdownPerkEntry_C_Get_Overlay_Banned_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreakdownPerkEntry_C_Get_Overlay_Banned_Visibility_0) == 0x000001, "Wrong alignment on BP_BreakdownPerkEntry_C_Get_Overlay_Banned_Visibility_0");
static_assert(sizeof(BP_BreakdownPerkEntry_C_Get_Overlay_Banned_Visibility_0) == 0x000005, "Wrong size on BP_BreakdownPerkEntry_C_Get_Overlay_Banned_Visibility_0");
static_assert(offsetof(BP_BreakdownPerkEntry_C_Get_Overlay_Banned_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_BreakdownPerkEntry_C_Get_Overlay_Banned_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_Get_Overlay_Banned_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_BreakdownPerkEntry_C_Get_Overlay_Banned_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_Get_Overlay_Banned_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_BreakdownPerkEntry_C_Get_Overlay_Banned_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_Get_Overlay_Banned_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_BreakdownPerkEntry_C_Get_Overlay_Banned_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_Get_Overlay_Banned_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'BP_BreakdownPerkEntry_C_Get_Overlay_Banned_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_BreakdownPerkEntry.BP_BreakdownPerkEntry_C.OnMouseButtonDown
// 0x02F0 (0x02F0 - 0x0000)
struct BP_BreakdownPerkEntry_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0160(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0180(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0238(0x00B8)()
};
static_assert(alignof(BP_BreakdownPerkEntry_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on BP_BreakdownPerkEntry_C_OnMouseButtonDown");
static_assert(sizeof(BP_BreakdownPerkEntry_C_OnMouseButtonDown) == 0x0002F0, "Wrong size on BP_BreakdownPerkEntry_C_OnMouseButtonDown");
static_assert(offsetof(BP_BreakdownPerkEntry_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'BP_BreakdownPerkEntry_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'BP_BreakdownPerkEntry_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'BP_BreakdownPerkEntry_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_OnMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000160, "Member 'BP_BreakdownPerkEntry_C_OnMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_OnMouseButtonDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000178, "Member 'BP_BreakdownPerkEntry_C_OnMouseButtonDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_OnMouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x000180, "Member 'BP_BreakdownPerkEntry_C_OnMouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000238, "Member 'BP_BreakdownPerkEntry_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function BP_BreakdownPerkEntry.BP_BreakdownPerkEntry_C.GetVisibility_0
// 0x0005 (0x0005 - 0x0000)
struct BP_BreakdownPerkEntry_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreakdownPerkEntry_C_GetVisibility_0) == 0x000001, "Wrong alignment on BP_BreakdownPerkEntry_C_GetVisibility_0");
static_assert(sizeof(BP_BreakdownPerkEntry_C_GetVisibility_0) == 0x000005, "Wrong size on BP_BreakdownPerkEntry_C_GetVisibility_0");
static_assert(offsetof(BP_BreakdownPerkEntry_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_BreakdownPerkEntry_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_BreakdownPerkEntry_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_BreakdownPerkEntry_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_BreakdownPerkEntry_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BreakdownPerkEntry_C_GetVisibility_0, K2Node_Select_Default) == 0x000004, "Member 'BP_BreakdownPerkEntry_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

}

