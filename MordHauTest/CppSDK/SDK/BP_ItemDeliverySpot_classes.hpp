#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemDeliverySpot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ItemDeliverySpot.BP_ItemDeliverySpot_C
// 0x00A0 (0x0480 - 0x03E0)
class ABP_ItemDeliverySpot_C : public AMordhauActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UMordhauWidgetComponent*                MordhauWidget;                                     // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UDecalComponent*                        Decal;                                             // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Area;                                              // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Deliverables;                                      // 0x0400(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         RequiredDeliveries;                                // 0x0401(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402[0x6];                                      // 0x0402(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CapturePoint_C*                     CapturePoint;                                      // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ItemDeliverySpawn_C*>        DeliverySpawns;                                    // 0x0410(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AActor*>                         DeliveryProgressSpots;                             // 0x0420(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class USoundCue*>                      DeliveryProgressSound;                             // 0x0430(0x0010)(Edit, BlueprintVisible)
	TArray<class UParticleSystem*>                DeliveryProgressParticles;                         // 0x0440(0x0010)(Edit, BlueprintVisible)
	int32                                         VisualStage;                                       // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxVisualStage;                                    // 0x0454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             DeliverySpotDeliverIcon;                           // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScoreAwardPerDelivery;                             // 0x0460(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlipProgressBar;                                   // 0x0464(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_465[0x3];                                      // 0x0465(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ObjectiveWeight;                                   // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x046C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OriginalFlipProgressBar;                           // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Show_Widget_Height_Indicator;                      // 0x0471(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_472[0x2];                                      // 0x0472(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Widget_Height_Tolerance;                           // 0x0474(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Type;                                              // 0x0478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ItemDeliverySpot(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OnAnyObjectiveProgressChanged();
	void ProgressVisualStage();
	void OnDeliverablesChanged();
	void OnUpdateUIWidgets();
	void OnEnemyLostPrerequisites();
	void OnEnemyGainedPrerequisites();
	void OnInitialize(class ABP_CapturePoint_C* Point);
	void BndEvt__Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void UserConstructionScript();
	void OnRep_Deliverables();
	void Activate();
	void Disable(bool SlowDisable);
	void Initialize(class ABP_CapturePoint_C* CapturePoint_0);
	void EnemyGainedPrerequisites();
	void EnemyLostPrerequisites();
	void UpdateDeliverySpotVisuals();
	void DisableSpawns();
	void ActivateSpawns();
	void IsCapturePointDone(bool* IsDone);
	void AnyObjectiveProgressChanged();
	void UpdateFloater();
	void UpdateFlipProgressBarState();
	void IsCompleted(bool* Completed);
	void IsInObjectiveArea(const struct FVector& Location, bool* InArea);

	void GetObjectiveProgress(float* Progress_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ItemDeliverySpot_C">();
	}
	static class ABP_ItemDeliverySpot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ItemDeliverySpot_C>();
	}
};
static_assert(alignof(ABP_ItemDeliverySpot_C) == 0x000010, "Wrong alignment on ABP_ItemDeliverySpot_C");
static_assert(sizeof(ABP_ItemDeliverySpot_C) == 0x000480, "Wrong size on ABP_ItemDeliverySpot_C");
static_assert(offsetof(ABP_ItemDeliverySpot_C, UberGraphFrame) == 0x0003E0, "Member 'ABP_ItemDeliverySpot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, MordhauWidget) == 0x0003E8, "Member 'ABP_ItemDeliverySpot_C::MordhauWidget' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, Decal) == 0x0003F0, "Member 'ABP_ItemDeliverySpot_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, Area) == 0x0003F8, "Member 'ABP_ItemDeliverySpot_C::Area' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, Deliverables) == 0x000400, "Member 'ABP_ItemDeliverySpot_C::Deliverables' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, RequiredDeliveries) == 0x000401, "Member 'ABP_ItemDeliverySpot_C::RequiredDeliveries' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, CapturePoint) == 0x000408, "Member 'ABP_ItemDeliverySpot_C::CapturePoint' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, DeliverySpawns) == 0x000410, "Member 'ABP_ItemDeliverySpot_C::DeliverySpawns' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, DeliveryProgressSpots) == 0x000420, "Member 'ABP_ItemDeliverySpot_C::DeliveryProgressSpots' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, DeliveryProgressSound) == 0x000430, "Member 'ABP_ItemDeliverySpot_C::DeliveryProgressSound' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, DeliveryProgressParticles) == 0x000440, "Member 'ABP_ItemDeliverySpot_C::DeliveryProgressParticles' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, VisualStage) == 0x000450, "Member 'ABP_ItemDeliverySpot_C::VisualStage' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, MaxVisualStage) == 0x000454, "Member 'ABP_ItemDeliverySpot_C::MaxVisualStage' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, DeliverySpotDeliverIcon) == 0x000458, "Member 'ABP_ItemDeliverySpot_C::DeliverySpotDeliverIcon' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, ScoreAwardPerDelivery) == 0x000460, "Member 'ABP_ItemDeliverySpot_C::ScoreAwardPerDelivery' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, FlipProgressBar) == 0x000464, "Member 'ABP_ItemDeliverySpot_C::FlipProgressBar' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, ObjectiveWeight) == 0x000468, "Member 'ABP_ItemDeliverySpot_C::ObjectiveWeight' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, Progress) == 0x00046C, "Member 'ABP_ItemDeliverySpot_C::Progress' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, OriginalFlipProgressBar) == 0x000470, "Member 'ABP_ItemDeliverySpot_C::OriginalFlipProgressBar' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, Show_Widget_Height_Indicator) == 0x000471, "Member 'ABP_ItemDeliverySpot_C::Show_Widget_Height_Indicator' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, Widget_Height_Tolerance) == 0x000474, "Member 'ABP_ItemDeliverySpot_C::Widget_Height_Tolerance' has a wrong offset!");
static_assert(offsetof(ABP_ItemDeliverySpot_C, Type) == 0x000478, "Member 'ABP_ItemDeliverySpot_C::Type' has a wrong offset!");

}

