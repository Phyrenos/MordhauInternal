#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SeparatedBodyPart

#include "Basic.hpp"

#include "BP_SeparatedBodyPart_classes.hpp"
#include "BP_SeparatedBodyPart_parameters.hpp"


namespace SDK
{

// Function BP_SeparatedBodyPart.BP_SeparatedBodyPart_C.ExecuteUbergraph_BP_SeparatedBodyPart
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SeparatedBodyPart_C::ExecuteUbergraph_BP_SeparatedBodyPart(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SeparatedBodyPart_C", "ExecuteUbergraph_BP_SeparatedBodyPart");

	Params::BP_SeparatedBodyPart_C_ExecuteUbergraph_BP_SeparatedBodyPart Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SeparatedBodyPart.BP_SeparatedBodyPart_C.InitializeDismemberment
// (Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       SourceBoneTransform                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// bool                                    bIsPartial                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsBluntForce                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SeparatedBodyPart_C::InitializeDismemberment(class AMordhauCharacter* Source, class FName bone, const struct FTransform& SourceBoneTransform, bool bIsPartial, bool bIsBluntForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SeparatedBodyPart_C", "InitializeDismemberment");

	Params::BP_SeparatedBodyPart_C_InitializeDismemberment Parms{};

	Parms.Source = Source;
	Parms.bone = bone;
	Parms.SourceBoneTransform = std::move(SourceBoneTransform);
	Parms.bIsPartial = bIsPartial;
	Parms.bIsBluntForce = bIsBluntForce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SeparatedBodyPart.BP_SeparatedBodyPart_C.BndEvt__Thudder_K2Node_ComponentBoundEvent_1_ComponentThudSignature__DelegateSignature
// (BlueprintEvent)

void ABP_SeparatedBodyPart_C::BndEvt__Thudder_K2Node_ComponentBoundEvent_1_ComponentThudSignature__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SeparatedBodyPart_C", "BndEvt__Thudder_K2Node_ComponentBoundEvent_1_ComponentThudSignature__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SeparatedBodyPart.BP_SeparatedBodyPart_C.OnCosmeticHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// EMordhauDamageType                      DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   SubType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AActor*                           Agent                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SeparatedBodyPart_C::OnCosmeticHit(EMordhauDamageType DamageType, uint8 SubType, const struct FHitResult& Hit, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SeparatedBodyPart_C", "OnCosmeticHit");

	Params::BP_SeparatedBodyPart_C_OnCosmeticHit Parms{};

	Parms.DamageType = DamageType;
	Parms.SubType = SubType;
	Parms.Hit = std::move(Hit);
	Parms.Agent = Agent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SeparatedBodyPart.BP_SeparatedBodyPart_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_SeparatedBodyPart_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SeparatedBodyPart_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

