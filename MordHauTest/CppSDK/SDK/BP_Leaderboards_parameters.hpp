#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Leaderboards

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "MordhauOnlineSubsystem_structs.hpp"


namespace SDK::Params
{

// Function BP_Leaderboards.BP_Leaderboards_C.ExecuteUbergraph_BP_Leaderboards
// 0x01C8 (0x01C8 - 0x0000)
struct BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_LeaderboardEntry_C*                 CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabAPI*                            CallFunc_GetPlayFabAPI_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerLoggedIn_ReturnValue;             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayFabAPI*                            CallFunc_GetPlayFabAPI_ReturnValue_1;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bWasSuccessful, struct FPlayFabApiError& Error, const class FString& LeaderboardName, TArray<struct FLeaderboardEntry>& Entries, struct FLeaderboardEntry& SelfEntry)> K2Node_CreateDelegate_OutputDelegate;              // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasSuccessful;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayFabApiError                       K2Node_CustomEvent_Error;                          // 0x0090(0x0038)(ConstParm)
	class FString                                 K2Node_CustomEvent_LeaderboardName;                // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FLeaderboardEntry>              K2Node_CustomEvent_Entries;                        // 0x00D8(0x0010)(ConstParm, ReferenceParm)
	struct FLeaderboardEntry                      K2Node_CustomEvent_SelfEntry;                      // 0x00E8(0x0068)(ConstParm)
	struct FLeaderboardEntry                      CallFunc_Array_Get_Item;                           // 0x0150(0x0068)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BF[0x1];                                      // 0x01BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards) == 0x000008, "Wrong alignment on BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards");
static_assert(sizeof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards) == 0x0001C8, "Wrong size on BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, EntryPoint) == 0x000000, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, K2Node_Event_MyGeometry) == 0x000010, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, K2Node_Event_InDeltaTime) == 0x000048, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, CallFunc_GetPlayFabAPI_ReturnValue) == 0x000050, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::CallFunc_GetPlayFabAPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, CallFunc_Not_PreBool_ReturnValue) == 0x000058, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, CallFunc_IsPlayerLoggedIn_ReturnValue) == 0x000059, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::CallFunc_IsPlayerLoggedIn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, CallFunc_AddChild_ReturnValue) == 0x000060, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, CallFunc_GetPlayFabAPI_ReturnValue_1) == 0x000068, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::CallFunc_GetPlayFabAPI_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, K2Node_CreateDelegate_OutputDelegate) == 0x000074, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, K2Node_CustomEvent_bWasSuccessful) == 0x000088, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::K2Node_CustomEvent_bWasSuccessful' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, K2Node_CustomEvent_Error) == 0x000090, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::K2Node_CustomEvent_Error' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, K2Node_CustomEvent_LeaderboardName) == 0x0000C8, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::K2Node_CustomEvent_LeaderboardName' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, K2Node_CustomEvent_Entries) == 0x0000D8, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::K2Node_CustomEvent_Entries' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, K2Node_CustomEvent_SelfEntry) == 0x0000E8, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::K2Node_CustomEvent_SelfEntry' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, CallFunc_Array_Get_Item) == 0x000150, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, CallFunc_Array_Length_ReturnValue) == 0x0001B8, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, CallFunc_Less_IntInt_ReturnValue) == 0x0001BC, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0001BD, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, CallFunc_BooleanAND_ReturnValue_1) == 0x0001BE, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards, CallFunc_Add_IntInt_ReturnValue) == 0x0001C0, "Member 'BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Leaderboards.BP_Leaderboards_C.OnGetLeaderboardComplete
// 0x00C8 (0x00C8 - 0x0000)
struct BP_Leaderboards_C_OnGetLeaderboardComplete final
{
public:
	bool                                          bWasSuccessful;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayFabApiError                       Error;                                             // 0x0008(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 LeaderboardName;                                   // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FLeaderboardEntry>              Entries;                                           // 0x0050(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FLeaderboardEntry                      SelfEntry;                                         // 0x0060(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Leaderboards_C_OnGetLeaderboardComplete) == 0x000008, "Wrong alignment on BP_Leaderboards_C_OnGetLeaderboardComplete");
static_assert(sizeof(BP_Leaderboards_C_OnGetLeaderboardComplete) == 0x0000C8, "Wrong size on BP_Leaderboards_C_OnGetLeaderboardComplete");
static_assert(offsetof(BP_Leaderboards_C_OnGetLeaderboardComplete, bWasSuccessful) == 0x000000, "Member 'BP_Leaderboards_C_OnGetLeaderboardComplete::bWasSuccessful' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_OnGetLeaderboardComplete, Error) == 0x000008, "Member 'BP_Leaderboards_C_OnGetLeaderboardComplete::Error' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_OnGetLeaderboardComplete, LeaderboardName) == 0x000040, "Member 'BP_Leaderboards_C_OnGetLeaderboardComplete::LeaderboardName' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_OnGetLeaderboardComplete, Entries) == 0x000050, "Member 'BP_Leaderboards_C_OnGetLeaderboardComplete::Entries' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_OnGetLeaderboardComplete, SelfEntry) == 0x000060, "Member 'BP_Leaderboards_C_OnGetLeaderboardComplete::SelfEntry' has a wrong offset!");

// Function BP_Leaderboards.BP_Leaderboards_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_Leaderboards_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leaderboards_C_Tick) == 0x000004, "Wrong alignment on BP_Leaderboards_C_Tick");
static_assert(sizeof(BP_Leaderboards_C_Tick) == 0x00003C, "Wrong size on BP_Leaderboards_C_Tick");
static_assert(offsetof(BP_Leaderboards_C_Tick, MyGeometry) == 0x000000, "Member 'BP_Leaderboards_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Leaderboards_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_Leaderboards_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_Leaderboards.BP_Leaderboards_C.Update
// 0x0008 (0x0008 - 0x0000)
struct BP_Leaderboards_C_Update final
{
public:
	class UPlayFabAPI*                            CallFunc_GetPlayFabAPI_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leaderboards_C_Update) == 0x000008, "Wrong alignment on BP_Leaderboards_C_Update");
static_assert(sizeof(BP_Leaderboards_C_Update) == 0x000008, "Wrong size on BP_Leaderboards_C_Update");
static_assert(offsetof(BP_Leaderboards_C_Update, CallFunc_GetPlayFabAPI_ReturnValue) == 0x000000, "Member 'BP_Leaderboards_C_Update::CallFunc_GetPlayFabAPI_ReturnValue' has a wrong offset!");

}

