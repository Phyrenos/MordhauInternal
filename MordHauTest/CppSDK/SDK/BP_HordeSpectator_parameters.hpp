#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordeSpectator

#include "Basic.hpp"

#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_HordeSpectator.BP_HordeSpectator_C.ExecuteUbergraph_BP_HordeSpectator
// 0x0088 (0x0088 - 0x0000)
struct BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0020(0x0018)(HasGetValueTypeHash)
	class ABP_HordePlayerGrave_C*                 CallFunc_GetGrave_Grave;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0040(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCameraManager*                  K2Node_DynamicCast_AsMordhau_Camera_Manager;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator) == 0x000008, "Wrong alignment on BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator");
static_assert(sizeof(BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator) == 0x000088, "Wrong size on BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator");
static_assert(offsetof(BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator, EntryPoint) == 0x000000, "Member 'BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator, K2Node_InputActionEvent_Key_2) == 0x000008, "Member 'BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator, K2Node_InputActionEvent_Key) == 0x000020, "Member 'BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator, CallFunc_GetGrave_Grave) == 0x000038, "Member 'BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator::CallFunc_GetGrave_Grave' has a wrong offset!");
static_assert(offsetof(BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator, K2Node_InputActionEvent_Key_1) == 0x000040, "Member 'BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator, CallFunc_GetController_ReturnValue) == 0x000060, "Member 'BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator, K2Node_DynamicCast_AsPlayer_Controller) == 0x000068, "Member 'BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator, K2Node_DynamicCast_AsMordhau_Camera_Manager) == 0x000078, "Member 'BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator::K2Node_DynamicCast_AsMordhau_Camera_Manager' has a wrong offset!");
static_assert(offsetof(BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_HordeSpectator_C_ExecuteUbergraph_BP_HordeSpectator::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_HordeSpectator.BP_HordeSpectator_C.InpActEvt_Primary Spectator Action_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_HordeSpectator_C_InpActEvt_Primary_Spectator_Action_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeSpectator_C_InpActEvt_Primary_Spectator_Action_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_HordeSpectator_C_InpActEvt_Primary_Spectator_Action_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_HordeSpectator_C_InpActEvt_Primary_Spectator_Action_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_HordeSpectator_C_InpActEvt_Primary_Spectator_Action_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_HordeSpectator_C_InpActEvt_Primary_Spectator_Action_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_HordeSpectator_C_InpActEvt_Primary_Spectator_Action_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_HordeSpectator.BP_HordeSpectator_C.InpActEvt_Tertiary Spectator Action_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_HordeSpectator_C_InpActEvt_Tertiary_Spectator_Action_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeSpectator_C_InpActEvt_Tertiary_Spectator_Action_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_HordeSpectator_C_InpActEvt_Tertiary_Spectator_Action_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_HordeSpectator_C_InpActEvt_Tertiary_Spectator_Action_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_HordeSpectator_C_InpActEvt_Tertiary_Spectator_Action_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_HordeSpectator_C_InpActEvt_Tertiary_Spectator_Action_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_HordeSpectator_C_InpActEvt_Tertiary_Spectator_Action_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_HordeSpectator.BP_HordeSpectator_C.InpActEvt_Secondary Spectator Action_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_HordeSpectator_C_InpActEvt_Secondary_Spectator_Action_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeSpectator_C_InpActEvt_Secondary_Spectator_Action_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_HordeSpectator_C_InpActEvt_Secondary_Spectator_Action_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_HordeSpectator_C_InpActEvt_Secondary_Spectator_Action_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_HordeSpectator_C_InpActEvt_Secondary_Spectator_Action_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_HordeSpectator_C_InpActEvt_Secondary_Spectator_Action_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_HordeSpectator_C_InpActEvt_Secondary_Spectator_Action_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_HordeSpectator.BP_HordeSpectator_C.GetGrave
// 0x0028 (0x0028 - 0x0000)
struct BP_HordeSpectator_C_GetGrave final
{
public:
	class ABP_HordePlayerGrave_C*                 Grave;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeSpectator_C_GetGrave) == 0x000008, "Wrong alignment on BP_HordeSpectator_C_GetGrave");
static_assert(sizeof(BP_HordeSpectator_C_GetGrave) == 0x000028, "Wrong size on BP_HordeSpectator_C_GetGrave");
static_assert(offsetof(BP_HordeSpectator_C_GetGrave, Grave) == 0x000000, "Member 'BP_HordeSpectator_C_GetGrave::Grave' has a wrong offset!");
static_assert(offsetof(BP_HordeSpectator_C_GetGrave, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_HordeSpectator_C_GetGrave::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSpectator_C_GetGrave, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_HordeSpectator_C_GetGrave::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeSpectator_C_GetGrave, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x000018, "Member 'BP_HordeSpectator_C_GetGrave::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordeSpectator_C_GetGrave, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_HordeSpectator_C_GetGrave::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeSpectator_C_GetGrave, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_HordeSpectator_C_GetGrave::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

