#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Chickenator

#include "Basic.hpp"

#include "BP_Chickenator_classes.hpp"
#include "BP_Chickenator_parameters.hpp"


namespace SDK
{

// Function BP_Chickenator.BP_Chickenator_C.ExecuteUbergraph_BP_Chickenator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chickenator_C::ExecuteUbergraph_BP_Chickenator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chickenator_C", "ExecuteUbergraph_BP_Chickenator");

	Params::BP_Chickenator_C_ExecuteUbergraph_BP_Chickenator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chickenator.BP_Chickenator_C.SetupBlessingStats
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Chickenator_C::SetupBlessingStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chickenator_C", "SetupBlessingStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chickenator.BP_Chickenator_C.OnAmmoChanged
// (Event, Public, BlueprintEvent)

void ABP_Chickenator_C::OnAmmoChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chickenator_C", "OnAmmoChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chickenator.BP_Chickenator_C.BeginRestocking
// (BlueprintCallable, BlueprintEvent)

void ABP_Chickenator_C::BeginRestocking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chickenator_C", "BeginRestocking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chickenator.BP_Chickenator_C.AutoRestock
// (BlueprintCallable, BlueprintEvent)

void ABP_Chickenator_C::AutoRestock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chickenator_C", "AutoRestock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chickenator.BP_Chickenator_C.IdleAnimLoop
// (BlueprintCallable, BlueprintEvent)

void ABP_Chickenator_C::IdleAnimLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chickenator_C", "IdleAnimLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chickenator.BP_Chickenator_C.DropEffectsMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Chickenator_C::DropEffectsMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chickenator_C", "DropEffectsMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chickenator.BP_Chickenator_C.OnDropped
// (Event, Public, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chickenator_C::OnDropped(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chickenator_C", "OnDropped");

	Params::BP_Chickenator_C_OnDropped Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chickenator.BP_Chickenator_C.FireProjectile
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Origin                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Orientation                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class AController*                      OwningController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ExpectedDelay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chickenator_C::FireProjectile(const struct FVector& Origin, const struct FRotator& Orientation, class AController* OwningController, float ExpectedDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chickenator_C", "FireProjectile");

	Params::BP_Chickenator_C_FireProjectile Parms{};

	Parms.Origin = std::move(Origin);
	Parms.Orientation = std::move(Orientation);
	Parms.OwningController = OwningController;
	Parms.ExpectedDelay = ExpectedDelay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chickenator.BP_Chickenator_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Chickenator_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chickenator_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

