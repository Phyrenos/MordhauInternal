#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentTraitInfo

#include "Basic.hpp"

#include "BP_EquipmentTraitInfo_classes.hpp"
#include "BP_EquipmentTraitInfo_parameters.hpp"


namespace SDK
{

// Function BP_EquipmentTraitInfo.BP_EquipmentTraitInfo_C.ExecuteUbergraph_BP_EquipmentTraitInfo
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EquipmentTraitInfo_C::ExecuteUbergraph_BP_EquipmentTraitInfo(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentTraitInfo_C", "ExecuteUbergraph_BP_EquipmentTraitInfo");

	Params::BP_EquipmentTraitInfo_C_ExecuteUbergraph_BP_EquipmentTraitInfo Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentTraitInfo.BP_EquipmentTraitInfo_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_EquipmentTraitInfo_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentTraitInfo_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentTraitInfo.BP_EquipmentTraitInfo_C.Update
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauEquipment*                MordhauEquipment                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EquipmentTraitInfo_C::Update(class AMordhauEquipment* MordhauEquipment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentTraitInfo_C", "Update");

	Params::BP_EquipmentTraitInfo_C_Update Parms{};

	Parms.MordhauEquipment = MordhauEquipment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentTraitInfo.BP_EquipmentTraitInfo_C.Add Trait Entry
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_EquipmentTraitInfo_C::Add_Trait_Entry(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentTraitInfo_C", "Add Trait Entry");

	Params::BP_EquipmentTraitInfo_C_Add_Trait_Entry Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentTraitInfo.BP_EquipmentTraitInfo_C.Clear
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_EquipmentTraitInfo_C::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentTraitInfo_C", "Clear");

	UObject::ProcessEvent(Func, nullptr);
}

}

