#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ArmorTierFilterTooltip

#include "Basic.hpp"

#include "BP_Tooltip_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_ArmorTierFilterTooltip.BP_ArmorTierFilterTooltip_C
// 0x0050 (0x02B0 - 0x0260)
class UBP_ArmorTierFilterTooltip_C final : public UBP_Tooltip_C
{
public:
	class UBP_ArmorLevelIndicator_C*              BP_ArmorLevelIndicator;                            // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_FilterTooltipHasSelectedItem_C*     BP_FilterTooltipHasSelectedItem_237;               // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ItemPointCost_C*                    BP_ItemPointCost;                                  // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_NoPeasantsTooltip_C*                BP_NoPeasantsTooltip;                              // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_TooltipPointCost_C*                 BP_TooltipPointCost;                               // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_89;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_316;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         TextBlock_Description;                             // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Name_1;                                  // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Update_Tooltip(uint8 Armor_Class, bool bCanAfford, bool bHasSelectedItem, const class FText& Description, bool bIsUnavailableAsPeasant, int32 ItemCost);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ArmorTierFilterTooltip_C">();
	}
	static class UBP_ArmorTierFilterTooltip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ArmorTierFilterTooltip_C>();
	}
};
static_assert(alignof(UBP_ArmorTierFilterTooltip_C) == 0x000008, "Wrong alignment on UBP_ArmorTierFilterTooltip_C");
static_assert(sizeof(UBP_ArmorTierFilterTooltip_C) == 0x0002B0, "Wrong size on UBP_ArmorTierFilterTooltip_C");
static_assert(offsetof(UBP_ArmorTierFilterTooltip_C, BP_ArmorLevelIndicator) == 0x000260, "Member 'UBP_ArmorTierFilterTooltip_C::BP_ArmorLevelIndicator' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTooltip_C, BP_FilterTooltipHasSelectedItem_237) == 0x000268, "Member 'UBP_ArmorTierFilterTooltip_C::BP_FilterTooltipHasSelectedItem_237' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTooltip_C, BP_ItemPointCost) == 0x000270, "Member 'UBP_ArmorTierFilterTooltip_C::BP_ItemPointCost' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTooltip_C, BP_NoPeasantsTooltip) == 0x000278, "Member 'UBP_ArmorTierFilterTooltip_C::BP_NoPeasantsTooltip' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTooltip_C, BP_TooltipPointCost) == 0x000280, "Member 'UBP_ArmorTierFilterTooltip_C::BP_TooltipPointCost' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTooltip_C, Image) == 0x000288, "Member 'UBP_ArmorTierFilterTooltip_C::Image' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTooltip_C, Image_89) == 0x000290, "Member 'UBP_ArmorTierFilterTooltip_C::Image_89' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTooltip_C, Image_316) == 0x000298, "Member 'UBP_ArmorTierFilterTooltip_C::Image_316' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTooltip_C, TextBlock_Description) == 0x0002A0, "Member 'UBP_ArmorTierFilterTooltip_C::TextBlock_Description' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTooltip_C, TextBlock_Name_1) == 0x0002A8, "Member 'UBP_ArmorTierFilterTooltip_C::TextBlock_Name_1' has a wrong offset!");

}

