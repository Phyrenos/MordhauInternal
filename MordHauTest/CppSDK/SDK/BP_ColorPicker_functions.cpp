#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ColorPicker

#include "Basic.hpp"

#include "BP_ColorPicker_classes.hpp"
#include "BP_ColorPicker_parameters.hpp"


namespace SDK
{

// Function BP_ColorPicker.BP_ColorPicker_C.ExecuteUbergraph_BP_ColorPicker
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ColorPicker_C::ExecuteUbergraph_BP_ColorPicker(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPicker_C", "ExecuteUbergraph_BP_ColorPicker");

	Params::BP_ColorPicker_C_ExecuteUbergraph_BP_ColorPicker Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ColorPicker.BP_ColorPicker_C.OnColsed
// (BlueprintCallable, BlueprintEvent)

void UBP_ColorPicker_C::OnColsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPicker_C", "OnColsed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ColorPicker.BP_ColorPicker_C.UpdatePreviewColor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ColorPicker_C::UpdatePreviewColor(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPicker_C", "UpdatePreviewColor");

	Params::BP_ColorPicker_C_UpdatePreviewColor Parms{};

	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ColorPicker.BP_ColorPicker_C.OnHovered
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ColorPicker_C::OnHovered(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPicker_C", "OnHovered");

	Params::BP_ColorPicker_C_OnHovered Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ColorPicker.BP_ColorPicker_C.BndEvt__ImageButton_K2Node_ComponentBoundEvent_10201_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_ColorPicker_C::BndEvt__ImageButton_K2Node_ComponentBoundEvent_10201_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPicker_C", "BndEvt__ImageButton_K2Node_ComponentBoundEvent_10201_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ColorPicker.BP_ColorPicker_C.OnClicked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ColorIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ColorPicker_C::OnClicked(int32 ColorIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPicker_C", "OnClicked");

	Params::BP_ColorPicker_C_OnClicked Parms{};

	Parms.ColorIndex = ColorIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ColorPicker.BP_ColorPicker_C.SetColors
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   Colors_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_ColorPicker_C::SetColors(TArray<class UClass*>& Colors_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPicker_C", "SetColors");

	Params::BP_ColorPicker_C_SetColors Parms{};

	Parms.Colors_0 = std::move(Colors_0);

	UObject::ProcessEvent(Func, &Parms);

	Colors_0 = std::move(Parms.Colors_0);
}


// Function BP_ColorPicker.BP_ColorPicker_C.GetSelectedIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ColorPicker_C::GetSelectedIndex(int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPicker_C", "GetSelectedIndex");

	Params::BP_ColorPicker_C_GetSelectedIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function BP_ColorPicker.BP_ColorPicker_C.SetIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ColorPicker_C::SetIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPicker_C", "SetIndex");

	Params::BP_ColorPicker_C_SetIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ColorPicker.BP_ColorPicker_C.GetSelectedColors
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   Colors_0                                               (Parm, OutParm)

void UBP_ColorPicker_C::GetSelectedColors(TArray<class UClass*>* Colors_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPicker_C", "GetSelectedColors");

	Params::BP_ColorPicker_C_GetSelectedColors Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Colors_0 != nullptr)
		*Colors_0 = std::move(Parms.Colors_0);
}


// Function BP_ColorPicker.BP_ColorPicker_C.SetColorsAndIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   Colors_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ColorPicker_C::SetColorsAndIndex(TArray<class UClass*>& Colors_0, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPicker_C", "SetColorsAndIndex");

	Params::BP_ColorPicker_C_SetColorsAndIndex Parms{};

	Parms.Colors_0 = std::move(Colors_0);
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	Colors_0 = std::move(Parms.Colors_0);
}


// Function BP_ColorPicker.BP_ColorPicker_C.CloseColorPicker
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ColorPicker_C::CloseColorPicker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ColorPicker_C", "CloseColorPicker");

	UObject::ProcessEvent(Func, nullptr);
}

}

