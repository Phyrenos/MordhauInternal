#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ContextPopup_Interface

#include "Basic.hpp"

#include "BP_ContextPopup_Interface_classes.hpp"
#include "BP_ContextPopup_Interface_parameters.hpp"


namespace SDK
{

// Function BP_ContextPopup_Interface.BP_ContextPopup_Interface_C.AddButtonEntry
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBP_ContextPopupInterface_C>Interface                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           ButtonOption                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FText                             HoverText                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class UBP_ContextPopupWrapper_Interface_C*Wrapper                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ContextPopup_Interface_C::AddButtonEntry(TScriptInterface<class IBP_ContextPopupInterface_C> Interface, const class FString& ButtonOption, const class FText& HoverText, class UBP_ContextPopupWrapper_Interface_C* Wrapper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ContextPopup_Interface_C", "AddButtonEntry");

	Params::BP_ContextPopup_Interface_C_AddButtonEntry Parms{};

	Parms.Interface = Interface;
	Parms.ButtonOption = std::move(ButtonOption);
	Parms.HoverText = std::move(HoverText);
	Parms.Wrapper = Wrapper;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ContextPopup_Interface.BP_ContextPopup_Interface_C.ClearEntries
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ContextPopup_Interface_C::ClearEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ContextPopup_Interface_C", "ClearEntries");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ContextPopup_Interface.BP_ContextPopup_Interface_C.AddButtonEntry_Complex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBP_ContextPopupInterface_C>Interface                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           ButtonOption                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FText                             HoverText                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class UBP_ContextPopupWrapper_Interface_C*Wrapper                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ContextPopup_Interface_C::AddButtonEntry_Complex(TScriptInterface<class IBP_ContextPopupInterface_C> Interface, const class FString& ButtonOption, const class FText& HoverText, class UBP_ContextPopupWrapper_Interface_C* Wrapper, class UTexture2D* Icon, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ContextPopup_Interface_C", "AddButtonEntry_Complex");

	Params::BP_ContextPopup_Interface_C_AddButtonEntry_Complex Parms{};

	Parms.Interface = Interface;
	Parms.ButtonOption = std::move(ButtonOption);
	Parms.HoverText = std::move(HoverText);
	Parms.Wrapper = Wrapper;
	Parms.Icon = Icon;
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ContextPopup_Interface.BP_ContextPopup_Interface_C.Get_Overlay_Title_Visibility_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_ContextPopup_Interface_C::Get_Overlay_Title_Visibility_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ContextPopup_Interface_C", "Get_Overlay_Title_Visibility_0");

	Params::BP_ContextPopup_Interface_C_Get_Overlay_Title_Visibility_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

