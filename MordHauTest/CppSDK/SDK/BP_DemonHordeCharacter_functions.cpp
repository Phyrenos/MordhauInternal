#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DemonHordeCharacter

#include "Basic.hpp"

#include "BP_DemonHordeCharacter_classes.hpp"
#include "BP_DemonHordeCharacter_parameters.hpp"


namespace SDK
{

// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.ExecuteUbergraph_BP_DemonHordeCharacter
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeCharacter_C::ExecuteUbergraph_BP_DemonHordeCharacter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "ExecuteUbergraph_BP_DemonHordeCharacter");

	Params::BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.StageComplete
// (BlueprintCallable, BlueprintEvent)

void ABP_DemonHordeCharacter_C::StageComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "StageComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.DelayedLaunch
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LaunchVelocity                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bXYOverride                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bZOverride                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DemonHordeCharacter_C::DelayedLaunch(float Delay, const struct FVector& LaunchVelocity, bool bXYOverride, bool bZOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "DelayedLaunch");

	Params::BP_DemonHordeCharacter_C_DelayedLaunch Parms{};

	Parms.Delay = Delay;
	Parms.LaunchVelocity = std::move(LaunchVelocity);
	Parms.bXYOverride = bXYOverride;
	Parms.bZOverride = bZOverride;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeCharacter_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "ReceiveTick");

	Params::BP_DemonHordeCharacter_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.ReceiveActorEndOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeCharacter_C::ReceiveActorEndOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "ReceiveActorEndOverlap");

	Params::BP_DemonHordeCharacter_C_ReceiveActorEndOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeCharacter_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "ReceiveActorBeginOverlap");

	Params::BP_DemonHordeCharacter_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.BloatedPukeLoop
// (BlueprintCallable, BlueprintEvent)

void ABP_DemonHordeCharacter_C::BloatedPukeLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "BloatedPukeLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.GremlinStealLoop
// (BlueprintCallable, BlueprintEvent)

void ABP_DemonHordeCharacter_C::GremlinStealLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "GremlinStealLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.StartSpecialDamageCooldown
// (BlueprintCallable, BlueprintEvent)

void ABP_DemonHordeCharacter_C::StartSpecialDamageCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "StartSpecialDamageCooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.OnBlockedMelee
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AMordhauCharacter*                Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeCharacter_C::OnBlockedMelee(const struct FHitResult& HitResult, class AMordhauCharacter* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "OnBlockedMelee");

	Params::BP_DemonHordeCharacter_C_OnBlockedMelee Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.FrenzyEffectsMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_DemonHordeCharacter_C::FrenzyEffectsMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "FrenzyEffectsMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.EnableFrenzyPP
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_DemonHordeCharacter_C::EnableFrenzyPP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "EnableFrenzyPP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.ReceiveMordhauDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// EMordhauDamageType                      DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   SubDamageType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Agent                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeCharacter_C::ReceiveMordhauDamage(float Damage, const struct FHitResult& HitResult, EMordhauDamageType DamageType, uint8 SubDamageType, class AActor* Source, class AActor* Agent, class AController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "ReceiveMordhauDamage");

	Params::BP_DemonHordeCharacter_C_ReceiveMordhauDamage Parms{};

	Parms.Damage = Damage;
	Parms.HitResult = std::move(HitResult);
	Parms.DamageType = DamageType;
	Parms.SubDamageType = SubDamageType;
	Parms.Source = Source;
	Parms.Agent = Agent;
	Parms.EventInstigator = EventInstigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.BlessedFistLoop
// (BlueprintCallable, BlueprintEvent)

void ABP_DemonHordeCharacter_C::BlessedFistLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "BlessedFistLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.MeleeReleaseStarted
// (BlueprintCallable, BlueprintEvent)

void ABP_DemonHordeCharacter_C::MeleeReleaseStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "MeleeReleaseStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.OnAttackStarted
// (Event, Public, BlueprintEvent)

void ABP_DemonHordeCharacter_C::OnAttackStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "OnAttackStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.UpdateRespawnCrossLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DemonHordeCharacter_C::UpdateRespawnCrossLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "UpdateRespawnCrossLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.OnKilled
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeCharacter_C::OnKilled(class AController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "OnKilled");

	Params::BP_DemonHordeCharacter_C_OnKilled Parms{};

	Parms.EventInstigator = EventInstigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.ModifyOutgoingDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Receiver                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMordhauDamageType                      DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AActor*                           Agent                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InDamage                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutDamage                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeCharacter_C::ModifyOutgoingDamage(class AActor* Receiver, EMordhauDamageType DamageType, struct FHitResult& HitInfo, class AActor* Agent, float InDamage, float* OutDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "ModifyOutgoingDamage");

	Params::BP_DemonHordeCharacter_C_ModifyOutgoingDamage Parms{};

	Parms.Receiver = Receiver;
	Parms.DamageType = DamageType;
	Parms.HitInfo = std::move(HitInfo);
	Parms.Agent = Agent;
	Parms.InDamage = InDamage;

	UObject::ProcessEvent(Func, &Parms);

	HitInfo = std::move(Parms.HitInfo);

	if (OutDamage != nullptr)
		*OutDamage = Parms.OutDamage;
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.ModifyDamage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DamageAmount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FMordhauDamageInfo               DamageInfo                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_DemonHordeCharacter_C::ModifyDamage(float DamageAmount, const struct FMordhauDamageInfo& DamageInfo, class AController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "ModifyDamage");

	Params::BP_DemonHordeCharacter_C_ModifyDamage Parms{};

	Parms.DamageAmount = DamageAmount;
	Parms.DamageInfo = std::move(DamageInfo);
	Parms.EventInstigator = EventInstigator;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.OnKilledEnemy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_HordeEnemy_C*                 Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeCharacter_C::OnKilledEnemy(class ABP_HordeEnemy_C* Enemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "OnKilledEnemy");

	Params::BP_DemonHordeCharacter_C_OnKilledEnemy Parms{};

	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DemonHordeCharacter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.OnDied
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMordhauDamageType                      Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   SubType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Agent                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DemonHordeCharacter_C::OnDied(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DemonHordeCharacter_C", "OnDied");

	Params::BP_DemonHordeCharacter_C_OnDied Parms{};

	Parms.Angle = Angle;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Source = Source;
	Parms.Agent = Agent;

	UObject::ProcessEvent(Func, &Parms);
}

}

