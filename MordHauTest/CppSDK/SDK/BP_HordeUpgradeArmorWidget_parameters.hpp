#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordeUpgradeArmorWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "S_WearableTier_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_HordeUpgradeArmorWidget.BP_HordeUpgradeArmorWidget_C.ExecuteUbergraph_BP_HordeUpgradeArmorWidget
// 0x0040 (0x0040 - 0x0000)
struct BP_HordeUpgradeArmorWidget_C_ExecuteUbergraph_BP_HordeUpgradeArmorWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Title_ReturnValue;                    // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeUpgradeArmorWidget_C_ExecuteUbergraph_BP_HordeUpgradeArmorWidget) == 0x000008, "Wrong alignment on BP_HordeUpgradeArmorWidget_C_ExecuteUbergraph_BP_HordeUpgradeArmorWidget");
static_assert(sizeof(BP_HordeUpgradeArmorWidget_C_ExecuteUbergraph_BP_HordeUpgradeArmorWidget) == 0x000040, "Wrong size on BP_HordeUpgradeArmorWidget_C_ExecuteUbergraph_BP_HordeUpgradeArmorWidget");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_ExecuteUbergraph_BP_HordeUpgradeArmorWidget, EntryPoint) == 0x000000, "Member 'BP_HordeUpgradeArmorWidget_C_ExecuteUbergraph_BP_HordeUpgradeArmorWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_ExecuteUbergraph_BP_HordeUpgradeArmorWidget, CallFunc_Get_Title_ReturnValue) == 0x000004, "Member 'BP_HordeUpgradeArmorWidget_C_ExecuteUbergraph_BP_HordeUpgradeArmorWidget::CallFunc_Get_Title_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_ExecuteUbergraph_BP_HordeUpgradeArmorWidget, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'BP_HordeUpgradeArmorWidget_C_ExecuteUbergraph_BP_HordeUpgradeArmorWidget::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_ExecuteUbergraph_BP_HordeUpgradeArmorWidget, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'BP_HordeUpgradeArmorWidget_C_ExecuteUbergraph_BP_HordeUpgradeArmorWidget::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_ExecuteUbergraph_BP_HordeUpgradeArmorWidget, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000038, "Member 'BP_HordeUpgradeArmorWidget_C_ExecuteUbergraph_BP_HordeUpgradeArmorWidget::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_ExecuteUbergraph_BP_HordeUpgradeArmorWidget, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'BP_HordeUpgradeArmorWidget_C_ExecuteUbergraph_BP_HordeUpgradeArmorWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_HordeUpgradeArmorWidget.BP_HordeUpgradeArmorWidget_C.Get Price Text
// 0x00A0 (0x00A0 - 0x0000)
struct BP_HordeUpgradeArmorWidget_C_Get_Price_Text final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         FoundCost;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeUpgradeVendorBase_C*           K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordePlayerController_C*            K2Node_DynamicCast_AsBP_Horde_Player_Controller;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNextArmorUpgrade_IsMaxedOut;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WearableTier                        CallFunc_GetNextArmorUpgrade_ArmorToEquip;         // 0x0050(0x0030)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_GetDiscountedPrice_DiscountedPrice;       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0088(0x0018)()
};
static_assert(alignof(BP_HordeUpgradeArmorWidget_C_Get_Price_Text) == 0x000008, "Wrong alignment on BP_HordeUpgradeArmorWidget_C_Get_Price_Text");
static_assert(sizeof(BP_HordeUpgradeArmorWidget_C_Get_Price_Text) == 0x0000A0, "Wrong size on BP_HordeUpgradeArmorWidget_C_Get_Price_Text");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Price_Text, ReturnValue) == 0x000000, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Price_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Price_Text, FoundCost) == 0x000018, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Price_Text::FoundCost' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Price_Text, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Price_Text::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Price_Text, K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base) == 0x000028, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Price_Text::K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Price_Text, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Price_Text::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Price_Text, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Price_Text::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Price_Text, K2Node_DynamicCast_AsBP_Horde_Player_Controller) == 0x000040, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Price_Text::K2Node_DynamicCast_AsBP_Horde_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Price_Text, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Price_Text::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Price_Text, CallFunc_GetNextArmorUpgrade_IsMaxedOut) == 0x000049, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Price_Text::CallFunc_GetNextArmorUpgrade_IsMaxedOut' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Price_Text, CallFunc_GetNextArmorUpgrade_ArmorToEquip) == 0x000050, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Price_Text::CallFunc_GetNextArmorUpgrade_ArmorToEquip' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Price_Text, CallFunc_GetDiscountedPrice_DiscountedPrice) == 0x000080, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Price_Text::CallFunc_GetDiscountedPrice_DiscountedPrice' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Price_Text, CallFunc_Conv_IntToText_ReturnValue) == 0x000088, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Price_Text::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function BP_HordeUpgradeArmorWidget.BP_HordeUpgradeArmorWidget_C.Get Text Color And Opacity
// 0x0080 (0x0080 - 0x0000)
struct BP_HordeUpgradeArmorWidget_C_Get_Text_Color_And_Opacity final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsArmorUpgradePurchasable_IsPurchasable;  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0028)(UObjectWrapper)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0058(0x0028)()
};
static_assert(alignof(BP_HordeUpgradeArmorWidget_C_Get_Text_Color_And_Opacity) == 0x000008, "Wrong alignment on BP_HordeUpgradeArmorWidget_C_Get_Text_Color_And_Opacity");
static_assert(sizeof(BP_HordeUpgradeArmorWidget_C_Get_Text_Color_And_Opacity) == 0x000080, "Wrong size on BP_HordeUpgradeArmorWidget_C_Get_Text_Color_And_Opacity");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Text_Color_And_Opacity, ReturnValue) == 0x000000, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Text_Color_And_Opacity::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Text_Color_And_Opacity, CallFunc_IsArmorUpgradePurchasable_IsPurchasable) == 0x000028, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Text_Color_And_Opacity::CallFunc_IsArmorUpgradePurchasable_IsPurchasable' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Text_Color_And_Opacity, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Text_Color_And_Opacity::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Text_Color_And_Opacity, K2Node_MakeStruct_SlateColor_1) == 0x000058, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Text_Color_And_Opacity::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function BP_HordeUpgradeArmorWidget.BP_HordeUpgradeArmorWidget_C.GetVisibleIfArmorIsPurchasable
// 0x0058 (0x0058 - 0x0000)
struct BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeUpgradeVendorBase_C*           K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNextArmorUpgrade_IsMaxedOut;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WearableTier                        CallFunc_GetNextArmorUpgrade_ArmorToEquip;         // 0x0020(0x0030)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_CanAffordUpgrade_CanAfford;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable) == 0x000008, "Wrong alignment on BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable");
static_assert(sizeof(BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable) == 0x000058, "Wrong size on BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable, ReturnValue) == 0x000000, "Member 'BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable, K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base) == 0x000010, "Member 'BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable::K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable, CallFunc_GetNextArmorUpgrade_IsMaxedOut) == 0x000019, "Member 'BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable::CallFunc_GetNextArmorUpgrade_IsMaxedOut' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable, CallFunc_GetNextArmorUpgrade_ArmorToEquip) == 0x000020, "Member 'BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable::CallFunc_GetNextArmorUpgrade_ArmorToEquip' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable, CallFunc_CanAffordUpgrade_CanAfford) == 0x000050, "Member 'BP_HordeUpgradeArmorWidget_C_GetVisibleIfArmorIsPurchasable::CallFunc_CanAffordUpgrade_CanAfford' has a wrong offset!");

// Function BP_HordeUpgradeArmorWidget.BP_HordeUpgradeArmorWidget_C.Get Armor Text
// 0x0060 (0x0060 - 0x0000)
struct BP_HordeUpgradeArmorWidget_C_Get_Armor_Text final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeUpgradeVendorBase_C*           K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNextArmorUpgrade_IsMaxedOut;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WearableTier                        CallFunc_GetNextArmorUpgrade_ArmorToEquip;         // 0x0030(0x0030)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeUpgradeArmorWidget_C_Get_Armor_Text) == 0x000008, "Wrong alignment on BP_HordeUpgradeArmorWidget_C_Get_Armor_Text");
static_assert(sizeof(BP_HordeUpgradeArmorWidget_C_Get_Armor_Text) == 0x000060, "Wrong size on BP_HordeUpgradeArmorWidget_C_Get_Armor_Text");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Armor_Text, ReturnValue) == 0x000000, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Armor_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Armor_Text, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Armor_Text::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Armor_Text, K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base) == 0x000020, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Armor_Text::K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Armor_Text, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Armor_Text::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Armor_Text, CallFunc_GetNextArmorUpgrade_IsMaxedOut) == 0x000029, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Armor_Text::CallFunc_GetNextArmorUpgrade_IsMaxedOut' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Armor_Text, CallFunc_GetNextArmorUpgrade_ArmorToEquip) == 0x000030, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Armor_Text::CallFunc_GetNextArmorUpgrade_ArmorToEquip' has a wrong offset!");

// Function BP_HordeUpgradeArmorWidget.BP_HordeUpgradeArmorWidget_C.Get_Title
// 0x0020 (0x0020 - 0x0000)
struct BP_HordeUpgradeArmorWidget_C_Get_Title final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeUpgradeVendorBase_C*           K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeUpgradeArmorWidget_C_Get_Title) == 0x000008, "Wrong alignment on BP_HordeUpgradeArmorWidget_C_Get_Title");
static_assert(sizeof(BP_HordeUpgradeArmorWidget_C_Get_Title) == 0x000020, "Wrong size on BP_HordeUpgradeArmorWidget_C_Get_Title");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Title, ReturnValue) == 0x000000, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Title::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Title, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Title::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Title, K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base) == 0x000010, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Title::K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Title, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Title::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HordeUpgradeArmorWidget.BP_HordeUpgradeArmorWidget_C.Get Marker Color And Opacity
// 0x0080 (0x0080 - 0x0000)
struct BP_HordeUpgradeArmorWidget_C_Get_Marker_Color_And_Opacity final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsArmorUpgradePurchasable_IsPurchasable;  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0058(0x0028)()
};
static_assert(alignof(BP_HordeUpgradeArmorWidget_C_Get_Marker_Color_And_Opacity) == 0x000008, "Wrong alignment on BP_HordeUpgradeArmorWidget_C_Get_Marker_Color_And_Opacity");
static_assert(sizeof(BP_HordeUpgradeArmorWidget_C_Get_Marker_Color_And_Opacity) == 0x000080, "Wrong size on BP_HordeUpgradeArmorWidget_C_Get_Marker_Color_And_Opacity");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Marker_Color_And_Opacity, ReturnValue) == 0x000000, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Marker_Color_And_Opacity::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Marker_Color_And_Opacity, CallFunc_IsArmorUpgradePurchasable_IsPurchasable) == 0x000028, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Marker_Color_And_Opacity::CallFunc_IsArmorUpgradePurchasable_IsPurchasable' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Marker_Color_And_Opacity, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Marker_Color_And_Opacity::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_Get_Marker_Color_And_Opacity, K2Node_MakeStruct_SlateColor_1) == 0x000058, "Member 'BP_HordeUpgradeArmorWidget_C_Get_Marker_Color_And_Opacity::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function BP_HordeUpgradeArmorWidget.BP_HordeUpgradeArmorWidget_C.IsArmorUpgradePurchasable
// 0x0058 (0x0058 - 0x0000)
struct BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable final
{
public:
	bool                                          IsPurchasable;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeUpgradeVendorBase_C*           K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNextArmorUpgrade_IsMaxedOut;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WearableTier                        CallFunc_GetNextArmorUpgrade_ArmorToEquip;         // 0x0020(0x0030)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_CanAffordUpgrade_CanAfford;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable) == 0x000008, "Wrong alignment on BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable");
static_assert(sizeof(BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable) == 0x000058, "Wrong size on BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable, IsPurchasable) == 0x000000, "Member 'BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable::IsPurchasable' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable, K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base) == 0x000010, "Member 'BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable::K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable, CallFunc_GetNextArmorUpgrade_IsMaxedOut) == 0x000019, "Member 'BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable::CallFunc_GetNextArmorUpgrade_IsMaxedOut' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable, CallFunc_GetNextArmorUpgrade_ArmorToEquip) == 0x000020, "Member 'BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable::CallFunc_GetNextArmorUpgrade_ArmorToEquip' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable, CallFunc_CanAffordUpgrade_CanAfford) == 0x000050, "Member 'BP_HordeUpgradeArmorWidget_C_IsArmorUpgradePurchasable::CallFunc_CanAffordUpgrade_CanAfford' has a wrong offset!");

// Function BP_HordeUpgradeArmorWidget.BP_HordeUpgradeArmorWidget_C.GetArmorUpgradeIcon
// 0x0158 (0x0158 - 0x0000)
struct BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0088)(Parm, OutParm, ReturnParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeUpgradeVendorBase_C*           K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNextArmorUpgrade_IsMaxedOut;           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WearableTier                        CallFunc_GetNextArmorUpgrade_ArmorToEquip;         // 0x00A0(0x0030)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00D0(0x0088)(UObjectWrapper)
};
static_assert(alignof(BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon) == 0x000008, "Wrong alignment on BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon");
static_assert(sizeof(BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon) == 0x000158, "Wrong size on BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon, ReturnValue) == 0x000000, "Member 'BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon, CallFunc_GetOwner_ReturnValue) == 0x000088, "Member 'BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon, K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base) == 0x000090, "Member 'BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon::K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon, CallFunc_GetNextArmorUpgrade_IsMaxedOut) == 0x000099, "Member 'BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon::CallFunc_GetNextArmorUpgrade_IsMaxedOut' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon, CallFunc_GetNextArmorUpgrade_ArmorToEquip) == 0x0000A0, "Member 'BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon::CallFunc_GetNextArmorUpgrade_ArmorToEquip' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon, K2Node_MakeStruct_SlateBrush) == 0x0000D0, "Member 'BP_HordeUpgradeArmorWidget_C_GetArmorUpgradeIcon::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function BP_HordeUpgradeArmorWidget.BP_HordeUpgradeArmorWidget_C.GetVisibilityMaxedOut
// 0x0050 (0x0050 - 0x0000)
struct BP_HordeUpgradeArmorWidget_C_GetVisibilityMaxedOut final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeUpgradeVendorBase_C*           K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNextArmorUpgrade_IsMaxedOut;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WearableTier                        CallFunc_GetNextArmorUpgrade_ArmorToEquip;         // 0x0020(0x0030)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeUpgradeArmorWidget_C_GetVisibilityMaxedOut) == 0x000008, "Wrong alignment on BP_HordeUpgradeArmorWidget_C_GetVisibilityMaxedOut");
static_assert(sizeof(BP_HordeUpgradeArmorWidget_C_GetVisibilityMaxedOut) == 0x000050, "Wrong size on BP_HordeUpgradeArmorWidget_C_GetVisibilityMaxedOut");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetVisibilityMaxedOut, ReturnValue) == 0x000000, "Member 'BP_HordeUpgradeArmorWidget_C_GetVisibilityMaxedOut::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetVisibilityMaxedOut, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_HordeUpgradeArmorWidget_C_GetVisibilityMaxedOut::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetVisibilityMaxedOut, K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base) == 0x000010, "Member 'BP_HordeUpgradeArmorWidget_C_GetVisibilityMaxedOut::K2Node_DynamicCast_AsBP_Horde_Upgrade_Vendor_Base' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetVisibilityMaxedOut, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HordeUpgradeArmorWidget_C_GetVisibilityMaxedOut::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetVisibilityMaxedOut, CallFunc_GetNextArmorUpgrade_IsMaxedOut) == 0x000019, "Member 'BP_HordeUpgradeArmorWidget_C_GetVisibilityMaxedOut::CallFunc_GetNextArmorUpgrade_IsMaxedOut' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeArmorWidget_C_GetVisibilityMaxedOut, CallFunc_GetNextArmorUpgrade_ArmorToEquip) == 0x000020, "Member 'BP_HordeUpgradeArmorWidget_C_GetVisibilityMaxedOut::CallFunc_GetNextArmorUpgrade_ArmorToEquip' has a wrong offset!");

}

