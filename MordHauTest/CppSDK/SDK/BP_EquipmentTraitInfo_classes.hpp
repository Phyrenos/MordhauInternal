#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentTraitInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_EquipmentTraitInfo.BP_EquipmentTraitInfo_C
// 0x00A8 (0x0308 - 0x0260)
class UBP_EquipmentTraitInfo_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UTextBlock*                             TextBlock_2;                                       // 0x0268(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_1;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Traits_Negative;                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Traits_Positive;                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Description;                                       // 0x0288(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FText>                Equipment_Trait_Map;                               // 0x02A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          TraitInfoEntry;                                    // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_TraitInfoEntry_C*>           Trait_Entries;                                     // 0x02F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_BP_EquipmentTraitInfo(int32 EntryPoint);
	void Construct();
	void Update(class AMordhauEquipment* MordhauEquipment);
	void Add_Trait_Entry(const class FText& Text);
	void Clear();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EquipmentTraitInfo_C">();
	}
	static class UBP_EquipmentTraitInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_EquipmentTraitInfo_C>();
	}
};
static_assert(alignof(UBP_EquipmentTraitInfo_C) == 0x000008, "Wrong alignment on UBP_EquipmentTraitInfo_C");
static_assert(sizeof(UBP_EquipmentTraitInfo_C) == 0x000308, "Wrong size on UBP_EquipmentTraitInfo_C");
static_assert(offsetof(UBP_EquipmentTraitInfo_C, UberGraphFrame) == 0x000260, "Member 'UBP_EquipmentTraitInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentTraitInfo_C, TextBlock_2) == 0x000268, "Member 'UBP_EquipmentTraitInfo_C::TextBlock_2' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentTraitInfo_C, VerticalBox_1) == 0x000270, "Member 'UBP_EquipmentTraitInfo_C::VerticalBox_1' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentTraitInfo_C, VerticalBox_Traits_Negative) == 0x000278, "Member 'UBP_EquipmentTraitInfo_C::VerticalBox_Traits_Negative' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentTraitInfo_C, VerticalBox_Traits_Positive) == 0x000280, "Member 'UBP_EquipmentTraitInfo_C::VerticalBox_Traits_Positive' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentTraitInfo_C, Description) == 0x000288, "Member 'UBP_EquipmentTraitInfo_C::Description' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentTraitInfo_C, Equipment_Trait_Map) == 0x0002A0, "Member 'UBP_EquipmentTraitInfo_C::Equipment_Trait_Map' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentTraitInfo_C, TraitInfoEntry) == 0x0002F0, "Member 'UBP_EquipmentTraitInfo_C::TraitInfoEntry' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentTraitInfo_C, Trait_Entries) == 0x0002F8, "Member 'UBP_EquipmentTraitInfo_C::Trait_Entries' has a wrong offset!");

}

