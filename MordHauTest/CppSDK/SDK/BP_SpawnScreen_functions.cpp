#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpawnScreen

#include "Basic.hpp"

#include "BP_SpawnScreen_classes.hpp"
#include "BP_SpawnScreen_parameters.hpp"


namespace SDK
{

// Function BP_SpawnScreen.BP_SpawnScreen_C.ExecuteUbergraph_BP_SpawnScreen
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SpawnScreen_C::ExecuteUbergraph_BP_SpawnScreen(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreen_C", "ExecuteUbergraph_BP_SpawnScreen");

	Params::BP_SpawnScreen_C_ExecuteUbergraph_BP_SpawnScreen Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpawnScreen.BP_SpawnScreen_C.Hide
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SpawnScreen_C::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreen_C", "Hide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnScreen.BP_SpawnScreen_C.Show
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SpawnScreen_C::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreen_C", "Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnScreen.BP_SpawnScreen_C.UpdateSpawnPointWidgets
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SpawnScreen_C::UpdateSpawnPointWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreen_C", "UpdateSpawnPointWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnScreen.BP_SpawnScreen_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_SpawnScreen_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreen_C", "OnKeyDown");

	Params::BP_SpawnScreen_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SpawnScreen.BP_SpawnScreen_C.UpdateSpawnScreenIcons
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvasPanel*                     Canvas_Panel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SpawnScreen_C::UpdateSpawnScreenIcons(class UCanvasPanel* Canvas_Panel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreen_C", "UpdateSpawnScreenIcons");

	Params::BP_SpawnScreen_C_UpdateSpawnScreenIcons Parms{};

	Parms.Canvas_Panel = Canvas_Panel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpawnScreen.BP_SpawnScreen_C.SetColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           Image                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FLinearColor>             Team_Color_Array                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// uint8                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SpawnScreen_C::SetColor(class UImage* Image, const TArray<struct FLinearColor>& Team_Color_Array, uint8 Team, class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreen_C", "SetColor");

	Params::BP_SpawnScreen_C_SetColor Parms{};

	Parms.Image = Image;
	Parms.Team_Color_Array = std::move(Team_Color_Array);
	Parms.Team = Team;
	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpawnScreen.BP_SpawnScreen_C.GetText_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_SpawnScreen_C::GetText_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreen_C", "GetText_0");

	Params::BP_SpawnScreen_C_GetText_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SpawnScreen.BP_SpawnScreen_C.SelectNextSpawnPoint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bReverse                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SpawnScreen_C::SelectNextSpawnPoint(bool bReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreen_C", "SelectNextSpawnPoint");

	Params::BP_SpawnScreen_C_SelectNextSpawnPoint Parms{};

	Parms.bReverse = bReverse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpawnScreen.BP_SpawnScreen_C.GetSelectedSpawnPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SpawnScreen_C::GetSelectedSpawnPoint(int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnScreen_C", "GetSelectedSpawnPoint");

	Params::BP_SpawnScreen_C_GetSelectedSpawnPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}

}

