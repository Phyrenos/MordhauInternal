#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lute_DIH

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Lute_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Lute_DIH.BP_Lute_DIH_C
// 0x0010 (0x1D50 - 0x1D40)
class ABP_Lute_DIH_C final : public ABP_Lute_C
{
public:
	uint8                                         Pad_1D31[0x7];                                     // 0x1D31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Lute_DIH_C;                      // 0x1D38(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class USphereComponent*                       Sphere;                                            // 0x1D40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowHealPulse;                                    // 0x1D48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Lute_DIH(int32 EntryPoint);
	void SetHealPulseAllowedServer();
	void BardHealEffectMulti(const struct FVector& Location);
	void SetHealPulseAllowedMulti();
	void MarkBardHealLoop();
	void ReceiveBeginPlay();
	void ServerSetToneAndPlay(uint8 Tone);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Lute_DIH_C">();
	}
	static class ABP_Lute_DIH_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Lute_DIH_C>();
	}
};
static_assert(alignof(ABP_Lute_DIH_C) == 0x000010, "Wrong alignment on ABP_Lute_DIH_C");
static_assert(sizeof(ABP_Lute_DIH_C) == 0x001D50, "Wrong size on ABP_Lute_DIH_C");
static_assert(offsetof(ABP_Lute_DIH_C, UberGraphFrame_BP_Lute_DIH_C) == 0x001D38, "Member 'ABP_Lute_DIH_C::UberGraphFrame_BP_Lute_DIH_C' has a wrong offset!");
static_assert(offsetof(ABP_Lute_DIH_C, Sphere) == 0x001D40, "Member 'ABP_Lute_DIH_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_Lute_DIH_C, AllowHealPulse) == 0x001D48, "Member 'ABP_Lute_DIH_C::AllowHealPulse' has a wrong offset!");

}

