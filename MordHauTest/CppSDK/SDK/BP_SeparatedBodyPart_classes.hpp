#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SeparatedBodyPart

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_structs.hpp"
#include "Mordhau_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SeparatedBodyPart.BP_SeparatedBodyPart_C
// 0x0010 (0x0348 - 0x0338)
class ABP_SeparatedBodyPart_C : public ASeparatedBodyPart
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UThudderComponent*                      Thudder;                                           // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SeparatedBodyPart(int32 EntryPoint);
	void InitializeDismemberment(class AMordhauCharacter* Source, class FName bone, const struct FTransform& SourceBoneTransform, bool bIsPartial, bool bIsBluntForce);
	void BndEvt__Thudder_K2Node_ComponentBoundEvent_1_ComponentThudSignature__DelegateSignature();
	void OnCosmeticHit(EMordhauDamageType DamageType, uint8 SubType, const struct FHitResult& Hit, class AActor* Agent);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SeparatedBodyPart_C">();
	}
	static class ABP_SeparatedBodyPart_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SeparatedBodyPart_C>();
	}
};
static_assert(alignof(ABP_SeparatedBodyPart_C) == 0x000008, "Wrong alignment on ABP_SeparatedBodyPart_C");
static_assert(sizeof(ABP_SeparatedBodyPart_C) == 0x000348, "Wrong size on ABP_SeparatedBodyPart_C");
static_assert(offsetof(ABP_SeparatedBodyPart_C, UberGraphFrame) == 0x000338, "Member 'ABP_SeparatedBodyPart_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SeparatedBodyPart_C, Thudder) == 0x000340, "Member 'ABP_SeparatedBodyPart_C::Thudder' has a wrong offset!");

}

