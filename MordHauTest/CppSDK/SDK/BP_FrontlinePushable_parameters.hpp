#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrontlinePushable

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_FrontlinePushable.BP_FrontlinePushable_C.ExecuteUbergraph_BP_FrontlinePushable
// 0x0060 (0x0060 - 0x0000)
struct BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauHUD*                            CallFunc_GetMordhauHUD_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FrontlineHUD_C*                     K2Node_DynamicCast_AsBP_Frontline_HUD;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_OldProgress;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CapturePoint_C*                     K2Node_Event_Point;                                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PushableWidgetFloater_C*            K2Node_DynamicCast_AsBP_Pushable_Widget_Floater;   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PushableWidgetFloater_C*            K2Node_DynamicCast_AsBP_Pushable_Widget_Floater_1; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable) == 0x000008, "Wrong alignment on BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable");
static_assert(sizeof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable) == 0x000060, "Wrong size on BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable");
static_assert(offsetof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable, EntryPoint) == 0x000000, "Member 'BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable, CallFunc_GetMordhauHUD_ReturnValue) == 0x000008, "Member 'BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable::CallFunc_GetMordhauHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable, K2Node_DynamicCast_AsBP_Frontline_HUD) == 0x000010, "Member 'BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable::K2Node_DynamicCast_AsBP_Frontline_HUD' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable, K2Node_Event_OldProgress) == 0x00001C, "Member 'BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable::K2Node_Event_OldProgress' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable, K2Node_Event_Point) == 0x000020, "Member 'BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable::K2Node_Event_Point' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000029, "Member 'BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000030, "Member 'BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable, K2Node_DynamicCast_AsBP_Pushable_Widget_Floater) == 0x000038, "Member 'BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable::K2Node_DynamicCast_AsBP_Pushable_Widget_Floater' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000042, "Member 'BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable, CallFunc_IsValid_ReturnValue_2) == 0x000043, "Member 'BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x000048, "Member 'BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable, K2Node_DynamicCast_AsBP_Pushable_Widget_Floater_1) == 0x000050, "Member 'BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable::K2Node_DynamicCast_AsBP_Pushable_Widget_Floater_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_FrontlinePushable_C_ExecuteUbergraph_BP_FrontlinePushable::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_FrontlinePushable.BP_FrontlinePushable_C.OnInitialize
// 0x0008 (0x0008 - 0x0000)
struct BP_FrontlinePushable_C_OnInitialize final
{
public:
	class ABP_CapturePoint_C*                     Point;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontlinePushable_C_OnInitialize) == 0x000008, "Wrong alignment on BP_FrontlinePushable_C_OnInitialize");
static_assert(sizeof(BP_FrontlinePushable_C_OnInitialize) == 0x000008, "Wrong size on BP_FrontlinePushable_C_OnInitialize");
static_assert(offsetof(BP_FrontlinePushable_C_OnInitialize, Point) == 0x000000, "Member 'BP_FrontlinePushable_C_OnInitialize::Point' has a wrong offset!");

// Function BP_FrontlinePushable.BP_FrontlinePushable_C.OnProgressUpdated
// 0x0004 (0x0004 - 0x0000)
struct BP_FrontlinePushable_C_OnProgressUpdated final
{
public:
	float                                         OldProgress;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontlinePushable_C_OnProgressUpdated) == 0x000004, "Wrong alignment on BP_FrontlinePushable_C_OnProgressUpdated");
static_assert(sizeof(BP_FrontlinePushable_C_OnProgressUpdated) == 0x000004, "Wrong size on BP_FrontlinePushable_C_OnProgressUpdated");
static_assert(offsetof(BP_FrontlinePushable_C_OnProgressUpdated, OldProgress) == 0x000000, "Member 'BP_FrontlinePushable_C_OnProgressUpdated::OldProgress' has a wrong offset!");

// Function BP_FrontlinePushable.BP_FrontlinePushable_C.Initialize
// 0x0008 (0x0008 - 0x0000)
struct BP_FrontlinePushable_C_Initialize final
{
public:
	class ABP_CapturePoint_C*                     CapturePoint_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontlinePushable_C_Initialize) == 0x000008, "Wrong alignment on BP_FrontlinePushable_C_Initialize");
static_assert(sizeof(BP_FrontlinePushable_C_Initialize) == 0x000008, "Wrong size on BP_FrontlinePushable_C_Initialize");
static_assert(offsetof(BP_FrontlinePushable_C_Initialize, CapturePoint_0) == 0x000000, "Member 'BP_FrontlinePushable_C_Initialize::CapturePoint_0' has a wrong offset!");

// Function BP_FrontlinePushable.BP_FrontlinePushable_C.EnemyGainedPrerequisites
// 0x0003 (0x0003 - 0x0000)
struct BP_FrontlinePushable_C_EnemyGainedPrerequisites final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FrontlinePushable_C_EnemyGainedPrerequisites) == 0x000001, "Wrong alignment on BP_FrontlinePushable_C_EnemyGainedPrerequisites");
static_assert(sizeof(BP_FrontlinePushable_C_EnemyGainedPrerequisites) == 0x000003, "Wrong size on BP_FrontlinePushable_C_EnemyGainedPrerequisites");
static_assert(offsetof(BP_FrontlinePushable_C_EnemyGainedPrerequisites, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_FrontlinePushable_C_EnemyGainedPrerequisites::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_EnemyGainedPrerequisites, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_FrontlinePushable_C_EnemyGainedPrerequisites::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_EnemyGainedPrerequisites, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000002, "Member 'BP_FrontlinePushable_C_EnemyGainedPrerequisites::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_FrontlinePushable.BP_FrontlinePushable_C.UpdateUIWidgets
// 0x01A0 (0x01A0 - 0x0000)
struct BP_FrontlinePushable_C_UpdateUIWidgets final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerState*                    K2Node_DynamicCast_AsMordhau_Player_State;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0058(0x0088)(UObjectWrapper)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x00E8(0x0088)(UObjectWrapper)
	class AMordhauGameState*                      K2Node_DynamicCast_AsMordhau_Game_State;           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PushableWidgetFloater_C*            K2Node_DynamicCast_AsBP_Pushable_Widget_Floater;   // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FrontlinePushable_C_UpdateUIWidgets) == 0x000008, "Wrong alignment on BP_FrontlinePushable_C_UpdateUIWidgets");
static_assert(sizeof(BP_FrontlinePushable_C_UpdateUIWidgets) == 0x0001A0, "Wrong size on BP_FrontlinePushable_C_UpdateUIWidgets");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, K2Node_DynamicCast_AsMordhau_Player_State) == 0x000038, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::K2Node_DynamicCast_AsMordhau_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, CallFunc_Conv_IntToByte_ReturnValue) == 0x000041, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000042, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000043, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, CallFunc_GetPlayerController_ReturnValue_1) == 0x000048, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, K2Node_MakeStruct_SlateBrush) == 0x000058, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, CallFunc_GetGameState_ReturnValue) == 0x0000E0, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, K2Node_MakeStruct_SlateBrush_1) == 0x0000E8, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, K2Node_DynamicCast_AsMordhau_Game_State) == 0x000170, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::K2Node_DynamicCast_AsMordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, K2Node_DynamicCast_bSuccess_1) == 0x000178, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000180, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, CallFunc_IsValid_ReturnValue_2) == 0x000188, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, K2Node_DynamicCast_AsBP_Pushable_Widget_Floater) == 0x000190, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::K2Node_DynamicCast_AsBP_Pushable_Widget_Floater' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_UpdateUIWidgets, K2Node_DynamicCast_bSuccess_2) == 0x000198, "Member 'BP_FrontlinePushable_C_UpdateUIWidgets::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_FrontlinePushable.BP_FrontlinePushable_C.IsCompleted
// 0x0002 (0x0002 - 0x0000)
struct BP_FrontlinePushable_C_IsCompleted final
{
public:
	bool                                          Completed;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FrontlinePushable_C_IsCompleted) == 0x000001, "Wrong alignment on BP_FrontlinePushable_C_IsCompleted");
static_assert(sizeof(BP_FrontlinePushable_C_IsCompleted) == 0x000002, "Wrong size on BP_FrontlinePushable_C_IsCompleted");
static_assert(offsetof(BP_FrontlinePushable_C_IsCompleted, Completed) == 0x000000, "Member 'BP_FrontlinePushable_C_IsCompleted::Completed' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_IsCompleted, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_FrontlinePushable_C_IsCompleted::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_FrontlinePushable.BP_FrontlinePushable_C.IsInObjectiveArea
// 0x0030 (0x0030 - 0x0000)
struct BP_FrontlinePushable_C_IsInObjectiveArea final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InArea;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeXY_ReturnValue;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FrontlinePushable_C_IsInObjectiveArea) == 0x000004, "Wrong alignment on BP_FrontlinePushable_C_IsInObjectiveArea");
static_assert(sizeof(BP_FrontlinePushable_C_IsInObjectiveArea) == 0x000030, "Wrong size on BP_FrontlinePushable_C_IsInObjectiveArea");
static_assert(offsetof(BP_FrontlinePushable_C_IsInObjectiveArea, Location) == 0x000000, "Member 'BP_FrontlinePushable_C_IsInObjectiveArea::Location' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_IsInObjectiveArea, InArea) == 0x00000C, "Member 'BP_FrontlinePushable_C_IsInObjectiveArea::InArea' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_IsInObjectiveArea, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_FrontlinePushable_C_IsInObjectiveArea::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_IsInObjectiveArea, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00001C, "Member 'BP_FrontlinePushable_C_IsInObjectiveArea::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_IsInObjectiveArea, CallFunc_VSizeXY_ReturnValue) == 0x000028, "Member 'BP_FrontlinePushable_C_IsInObjectiveArea::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_IsInObjectiveArea, CallFunc_Less_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_FrontlinePushable_C_IsInObjectiveArea::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_FrontlinePushable.BP_FrontlinePushable_C.GetObjectiveProgress
// 0x0008 (0x0008 - 0x0000)
struct BP_FrontlinePushable_C_GetObjectiveProgress final
{
public:
	float                                         Progress_0;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontlinePushable_C_GetObjectiveProgress) == 0x000004, "Wrong alignment on BP_FrontlinePushable_C_GetObjectiveProgress");
static_assert(sizeof(BP_FrontlinePushable_C_GetObjectiveProgress) == 0x000008, "Wrong size on BP_FrontlinePushable_C_GetObjectiveProgress");
static_assert(offsetof(BP_FrontlinePushable_C_GetObjectiveProgress, Progress_0) == 0x000000, "Member 'BP_FrontlinePushable_C_GetObjectiveProgress::Progress_0' has a wrong offset!");
static_assert(offsetof(BP_FrontlinePushable_C_GetObjectiveProgress, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_FrontlinePushable_C_GetObjectiveProgress::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

}

