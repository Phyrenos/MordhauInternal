#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordePlayerState

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MordhauPlayerState_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HordePlayerState.BP_HordePlayerState_C
// 0x0068 (0x0480 - 0x0418)
class ABP_HordePlayerState_C : public ABP_MordhauPlayerState_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0418(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	int32                                         Coins;                                             // 0x0420(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         SkillPoints;                                       // 0x0424(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_425[0x3];                                      // 0x0425(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerGrave_C*                 Grave;                                             // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LastHeadArmor;                                     // 0x0430(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LastChestArmor;                                    // 0x0438(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LastLegArmor;                                      // 0x0440(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         LastEquipment;                                     // 0x0448(0x0010)(Edit, BlueprintVisible)
	TArray<uint8>                                 LastEquipmentAmmo;                                 // 0x0458(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<uint8>                                 ReplicatedSkills;                                  // 0x0468(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	bool                                          NeedsWearableDataAssignment;                       // 0x0478(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_HordePlayerState(int32 EntryPoint);
	void ReceiveCopyProperties(class APlayerState* NewPlayerState);
	void UserConstructionScript();
	void OnRep_Coins();
	void GetDiscountedPrice(int32 BasePrice, class UClass* Horde_Purchasable, int32* DiscountedPrice);
	void OnRep_SkillPoints();
	void CopyFromOtherState(class ABP_HordePlayerState_C* OtherState);
	void OnRep_ReplicatedSkills();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HordePlayerState_C">();
	}
	static class ABP_HordePlayerState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HordePlayerState_C>();
	}
};
static_assert(alignof(ABP_HordePlayerState_C) == 0x000008, "Wrong alignment on ABP_HordePlayerState_C");
static_assert(sizeof(ABP_HordePlayerState_C) == 0x000480, "Wrong size on ABP_HordePlayerState_C");
static_assert(offsetof(ABP_HordePlayerState_C, UberGraphFrame) == 0x000418, "Member 'ABP_HordePlayerState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HordePlayerState_C, Coins) == 0x000420, "Member 'ABP_HordePlayerState_C::Coins' has a wrong offset!");
static_assert(offsetof(ABP_HordePlayerState_C, SkillPoints) == 0x000424, "Member 'ABP_HordePlayerState_C::SkillPoints' has a wrong offset!");
static_assert(offsetof(ABP_HordePlayerState_C, Grave) == 0x000428, "Member 'ABP_HordePlayerState_C::Grave' has a wrong offset!");
static_assert(offsetof(ABP_HordePlayerState_C, LastHeadArmor) == 0x000430, "Member 'ABP_HordePlayerState_C::LastHeadArmor' has a wrong offset!");
static_assert(offsetof(ABP_HordePlayerState_C, LastChestArmor) == 0x000438, "Member 'ABP_HordePlayerState_C::LastChestArmor' has a wrong offset!");
static_assert(offsetof(ABP_HordePlayerState_C, LastLegArmor) == 0x000440, "Member 'ABP_HordePlayerState_C::LastLegArmor' has a wrong offset!");
static_assert(offsetof(ABP_HordePlayerState_C, LastEquipment) == 0x000448, "Member 'ABP_HordePlayerState_C::LastEquipment' has a wrong offset!");
static_assert(offsetof(ABP_HordePlayerState_C, LastEquipmentAmmo) == 0x000458, "Member 'ABP_HordePlayerState_C::LastEquipmentAmmo' has a wrong offset!");
static_assert(offsetof(ABP_HordePlayerState_C, ReplicatedSkills) == 0x000468, "Member 'ABP_HordePlayerState_C::ReplicatedSkills' has a wrong offset!");
static_assert(offsetof(ABP_HordePlayerState_C, NeedsWearableDataAssignment) == 0x000478, "Member 'ABP_HordePlayerState_C::NeedsWearableDataAssignment' has a wrong offset!");

}

