#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SetupDemonHorde

#include "Basic.hpp"

#include "BP_SetupDemonHorde_classes.hpp"
#include "BP_SetupDemonHorde_parameters.hpp"


namespace SDK
{

// Function BP_SetupDemonHorde.BP_SetupDemonHorde_C.ExecuteUbergraph_BP_SetupDemonHorde
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SetupDemonHorde_C::ExecuteUbergraph_BP_SetupDemonHorde(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SetupDemonHorde_C", "ExecuteUbergraph_BP_SetupDemonHorde");

	Params::BP_SetupDemonHorde_C_ExecuteUbergraph_BP_SetupDemonHorde Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SetupDemonHorde.BP_SetupDemonHorde_C.ResetPrestige
// (BlueprintCallable, BlueprintEvent)

void ABP_SetupDemonHorde_C::ResetPrestige()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SetupDemonHorde_C", "ResetPrestige");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SetupDemonHorde.BP_SetupDemonHorde_C.ApplyDemonVoices
// (BlueprintCallable, BlueprintEvent)

void ABP_SetupDemonHorde_C::ApplyDemonVoices()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SetupDemonHorde_C", "ApplyDemonVoices");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SetupDemonHorde.BP_SetupDemonHorde_C.CountEnemiesLoop
// (BlueprintCallable, BlueprintEvent)

void ABP_SetupDemonHorde_C::CountEnemiesLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SetupDemonHorde_C", "CountEnemiesLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SetupDemonHorde.BP_SetupDemonHorde_C.StartGame
// (BlueprintCallable, BlueprintEvent)

void ABP_SetupDemonHorde_C::StartGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SetupDemonHorde_C", "StartGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SetupDemonHorde.BP_SetupDemonHorde_C.TESTSPAWNLOOP
// (BlueprintCallable, BlueprintEvent)

void ABP_SetupDemonHorde_C::TESTSPAWNLOOP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SetupDemonHorde_C", "TESTSPAWNLOOP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SetupDemonHorde.BP_SetupDemonHorde_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SetupDemonHorde_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SetupDemonHorde_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SetupDemonHorde.BP_SetupDemonHorde_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_SetupDemonHorde_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SetupDemonHorde_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SetupDemonHorde.BP_SetupDemonHorde_C.NewVoicesArray
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FCharacterProfile>        LoadoutsIn                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FCharacterProfile>        LoadoutsOut                                            (Parm, OutParm)

void ABP_SetupDemonHorde_C::NewVoicesArray(TArray<struct FCharacterProfile>& LoadoutsIn, TArray<struct FCharacterProfile>* LoadoutsOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SetupDemonHorde_C", "NewVoicesArray");

	Params::BP_SetupDemonHorde_C_NewVoicesArray Parms{};

	Parms.LoadoutsIn = std::move(LoadoutsIn);

	UObject::ProcessEvent(Func, &Parms);

	LoadoutsIn = std::move(Parms.LoadoutsIn);

	if (LoadoutsOut != nullptr)
		*LoadoutsOut = std::move(Parms.LoadoutsOut);
}

}

