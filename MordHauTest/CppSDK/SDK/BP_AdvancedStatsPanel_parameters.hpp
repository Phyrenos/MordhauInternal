#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AdvancedStatsPanel

#include "Basic.hpp"

#include "Mordhau_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_AdvancedStatsPanel.BP_AdvancedStatsPanel_C.ExecuteUbergraph_BP_AdvancedStatsPanel
// 0x0040 (0x0040 - 0x0000)
struct BP_AdvancedStatsPanel_C_ExecuteUbergraph_BP_AdvancedStatsPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AMordhauEquipment* Equipment)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_StatAttackTypeTabs_C*               K2Node_ComponentBoundEvent_Button_1;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_StatAttackTypeTabs_C*>       K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_StatAttackTypeTabs_C*               K2Node_ComponentBoundEvent_Button;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AdvancedStatsPanel_C_ExecuteUbergraph_BP_AdvancedStatsPanel) == 0x000008, "Wrong alignment on BP_AdvancedStatsPanel_C_ExecuteUbergraph_BP_AdvancedStatsPanel");
static_assert(sizeof(BP_AdvancedStatsPanel_C_ExecuteUbergraph_BP_AdvancedStatsPanel) == 0x000040, "Wrong size on BP_AdvancedStatsPanel_C_ExecuteUbergraph_BP_AdvancedStatsPanel");
static_assert(offsetof(BP_AdvancedStatsPanel_C_ExecuteUbergraph_BP_AdvancedStatsPanel, EntryPoint) == 0x000000, "Member 'BP_AdvancedStatsPanel_C_ExecuteUbergraph_BP_AdvancedStatsPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_ExecuteUbergraph_BP_AdvancedStatsPanel, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_AdvancedStatsPanel_C_ExecuteUbergraph_BP_AdvancedStatsPanel::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_ExecuteUbergraph_BP_AdvancedStatsPanel, K2Node_ComponentBoundEvent_Button_1) == 0x000018, "Member 'BP_AdvancedStatsPanel_C_ExecuteUbergraph_BP_AdvancedStatsPanel::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_ExecuteUbergraph_BP_AdvancedStatsPanel, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_AdvancedStatsPanel_C_ExecuteUbergraph_BP_AdvancedStatsPanel::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_ExecuteUbergraph_BP_AdvancedStatsPanel, K2Node_ComponentBoundEvent_Button) == 0x000030, "Member 'BP_AdvancedStatsPanel_C_ExecuteUbergraph_BP_AdvancedStatsPanel::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_ExecuteUbergraph_BP_AdvancedStatsPanel, K2Node_ComponentBoundEvent_bIsChecked) == 0x000038, "Member 'BP_AdvancedStatsPanel_C_ExecuteUbergraph_BP_AdvancedStatsPanel::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");

// Function BP_AdvancedStatsPanel.BP_AdvancedStatsPanel_C.BndEvt__BP_AdvancedStatsPanel_BP_Checkbox_new_191_K2Node_ComponentBoundEvent_6_OnCheckStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_AdvancedStatsPanel_C_BndEvt__BP_AdvancedStatsPanel_BP_Checkbox_new_191_K2Node_ComponentBoundEvent_6_OnCheckStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AdvancedStatsPanel_C_BndEvt__BP_AdvancedStatsPanel_BP_Checkbox_new_191_K2Node_ComponentBoundEvent_6_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on BP_AdvancedStatsPanel_C_BndEvt__BP_AdvancedStatsPanel_BP_Checkbox_new_191_K2Node_ComponentBoundEvent_6_OnCheckStateChanged__DelegateSignature");
static_assert(sizeof(BP_AdvancedStatsPanel_C_BndEvt__BP_AdvancedStatsPanel_BP_Checkbox_new_191_K2Node_ComponentBoundEvent_6_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong size on BP_AdvancedStatsPanel_C_BndEvt__BP_AdvancedStatsPanel_BP_Checkbox_new_191_K2Node_ComponentBoundEvent_6_OnCheckStateChanged__DelegateSignature");
static_assert(offsetof(BP_AdvancedStatsPanel_C_BndEvt__BP_AdvancedStatsPanel_BP_Checkbox_new_191_K2Node_ComponentBoundEvent_6_OnCheckStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'BP_AdvancedStatsPanel_C_BndEvt__BP_AdvancedStatsPanel_BP_Checkbox_new_191_K2Node_ComponentBoundEvent_6_OnCheckStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function BP_AdvancedStatsPanel.BP_AdvancedStatsPanel_C.BndEvt__BP_StatAttackTypeTab_Strike_K2Node_ComponentBoundEvent_5_On Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_AdvancedStatsPanel_C_BndEvt__BP_StatAttackTypeTab_Strike_K2Node_ComponentBoundEvent_5_On_Clicked__DelegateSignature final
{
public:
	class UBP_StatAttackTypeTabs_C*               Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AdvancedStatsPanel_C_BndEvt__BP_StatAttackTypeTab_Strike_K2Node_ComponentBoundEvent_5_On_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on BP_AdvancedStatsPanel_C_BndEvt__BP_StatAttackTypeTab_Strike_K2Node_ComponentBoundEvent_5_On_Clicked__DelegateSignature");
static_assert(sizeof(BP_AdvancedStatsPanel_C_BndEvt__BP_StatAttackTypeTab_Strike_K2Node_ComponentBoundEvent_5_On_Clicked__DelegateSignature) == 0x000008, "Wrong size on BP_AdvancedStatsPanel_C_BndEvt__BP_StatAttackTypeTab_Strike_K2Node_ComponentBoundEvent_5_On_Clicked__DelegateSignature");
static_assert(offsetof(BP_AdvancedStatsPanel_C_BndEvt__BP_StatAttackTypeTab_Strike_K2Node_ComponentBoundEvent_5_On_Clicked__DelegateSignature, Button) == 0x000000, "Member 'BP_AdvancedStatsPanel_C_BndEvt__BP_StatAttackTypeTab_Strike_K2Node_ComponentBoundEvent_5_On_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function BP_AdvancedStatsPanel.BP_AdvancedStatsPanel_C.BndEvt__BP_StatAttackTypeTab_Stab_K2Node_ComponentBoundEvent_4_On Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_AdvancedStatsPanel_C_BndEvt__BP_StatAttackTypeTab_Stab_K2Node_ComponentBoundEvent_4_On_Clicked__DelegateSignature final
{
public:
	class UBP_StatAttackTypeTabs_C*               Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AdvancedStatsPanel_C_BndEvt__BP_StatAttackTypeTab_Stab_K2Node_ComponentBoundEvent_4_On_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on BP_AdvancedStatsPanel_C_BndEvt__BP_StatAttackTypeTab_Stab_K2Node_ComponentBoundEvent_4_On_Clicked__DelegateSignature");
static_assert(sizeof(BP_AdvancedStatsPanel_C_BndEvt__BP_StatAttackTypeTab_Stab_K2Node_ComponentBoundEvent_4_On_Clicked__DelegateSignature) == 0x000008, "Wrong size on BP_AdvancedStatsPanel_C_BndEvt__BP_StatAttackTypeTab_Stab_K2Node_ComponentBoundEvent_4_On_Clicked__DelegateSignature");
static_assert(offsetof(BP_AdvancedStatsPanel_C_BndEvt__BP_StatAttackTypeTab_Stab_K2Node_ComponentBoundEvent_4_On_Clicked__DelegateSignature, Button) == 0x000000, "Member 'BP_AdvancedStatsPanel_C_BndEvt__BP_StatAttackTypeTab_Stab_K2Node_ComponentBoundEvent_4_On_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function BP_AdvancedStatsPanel.BP_AdvancedStatsPanel_C.Update Advanced Stats
// 0x0188 (0x0188 - 0x0000)
struct BP_AdvancedStatsPanel_C_Update_Advanced_Stats final
{
public:
	class AMordhauEquipment*                      Equipment_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEquipmentType                                Temp_byte_Variable_7;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEquipmentType                                Temp_byte_Variable_16;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_17;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_18;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_19;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_20;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_21;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_22;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_23;                             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_24;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEquipmentType                                Temp_byte_Variable_25;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_26;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_27;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_28;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_29;                             // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_30;                             // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_31;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_32;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_33;                             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEquipmentType                                Temp_byte_Variable_34;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_35;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_36;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_37;                             // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_38;                             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_39;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_40;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_41;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_42;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEquipmentType                                Temp_byte_Variable_43;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_44;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_45;                             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_46;                             // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_47;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_48;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_49;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_50;                             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_51;                             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauWeapon*                         K2Node_DynamicCast_AsMordhau_Weapon;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_52;                             // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEquipmentType                                Temp_byte_Variable_53;                             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttackInfo                            CallFunc_Get_Melee_Attack_Info_Attack_Info;        // 0x0058(0x0128)()
	class AMordhauWeapon*                         CallFunc_Get_Melee_Attack_Info_AsMordhau_Weapon;   // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats) == 0x000008, "Wrong alignment on BP_AdvancedStatsPanel_C_Update_Advanced_Stats");
static_assert(sizeof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats) == 0x000188, "Wrong size on BP_AdvancedStatsPanel_C_Update_Advanced_Stats");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Equipment_0) == 0x000000, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Equipment_0' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable) == 0x000008, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_1) == 0x000009, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_2) == 0x00000A, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_3) == 0x00000B, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_4) == 0x00000C, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_5) == 0x00000D, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_6) == 0x00000E, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_7) == 0x00000F, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_8) == 0x000010, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_9) == 0x000011, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_10) == 0x000012, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_11) == 0x000013, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_12) == 0x000014, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_13) == 0x000015, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_14) == 0x000016, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_15) == 0x000017, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_16) == 0x000018, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_17) == 0x000019, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_18) == 0x00001A, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_19) == 0x00001B, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_20) == 0x00001C, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_21) == 0x00001D, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_22) == 0x00001E, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_23) == 0x00001F, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_24) == 0x000020, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_25) == 0x000021, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, K2Node_SwitchEnum_CmpSuccess) == 0x000022, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_26) == 0x000023, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_27) == 0x000024, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_28) == 0x000025, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_29) == 0x000026, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_30) == 0x000027, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_31) == 0x000028, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_32) == 0x000029, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_33) == 0x00002A, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_34) == 0x00002B, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_35) == 0x00002C, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_36) == 0x00002D, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_37) == 0x00002E, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_38) == 0x00002F, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_39) == 0x000030, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_40) == 0x000031, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_41) == 0x000032, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_42) == 0x000033, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_42' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_43) == 0x000034, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_43' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_44) == 0x000035, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_44' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_45) == 0x000036, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_45' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_46) == 0x000037, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_46' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_47) == 0x000038, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_47' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_48) == 0x000039, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_48' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_49) == 0x00003A, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_49' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_50) == 0x00003B, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_50' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_51) == 0x00003C, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_51' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, K2Node_DynamicCast_AsMordhau_Weapon) == 0x000040, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::K2Node_DynamicCast_AsMordhau_Weapon' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, K2Node_Select_Default) == 0x000049, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, K2Node_Select_Default_1) == 0x00004A, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004B, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, K2Node_Select_Default_2) == 0x00004C, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, K2Node_Select_Default_3) == 0x00004D, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, K2Node_Select_Default_4) == 0x00004E, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_52) == 0x00004F, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_52' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, CallFunc_BooleanAND_ReturnValue) == 0x000050, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, Temp_byte_Variable_53) == 0x000051, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::Temp_byte_Variable_53' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, K2Node_Select_Default_5) == 0x000052, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, CallFunc_Get_Melee_Attack_Info_Attack_Info) == 0x000058, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::CallFunc_Get_Melee_Attack_Info_Attack_Info' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Advanced_Stats, CallFunc_Get_Melee_Attack_Info_AsMordhau_Weapon) == 0x000180, "Member 'BP_AdvancedStatsPanel_C_Update_Advanced_Stats::CallFunc_Get_Melee_Attack_Info_AsMordhau_Weapon' has a wrong offset!");

// Function BP_AdvancedStatsPanel.BP_AdvancedStatsPanel_C.Update Attack Type Tabs
// 0x0028 (0x0028 - 0x0000)
struct BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs final
{
public:
	class UBP_StatAttackTypeTabs_C*               Clicked;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_StatAttackTypeTabs_C*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs) == 0x000008, "Wrong alignment on BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs");
static_assert(sizeof(BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs) == 0x000028, "Wrong size on BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs, Clicked) == 0x000000, "Member 'BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs::Clicked' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000021, "Member 'BP_AdvancedStatsPanel_C_Update_Attack_Type_Tabs::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

}

