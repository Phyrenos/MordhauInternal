#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseProgressActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BaseProgressActor.BP_BaseProgressActor_C
// 0x0050 (0x0270 - 0x0220)
class ABP_BaseProgressActor_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UAudioComponent*                        Audio;                                             // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              EndSound;                                          // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              StartSound;                                        // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartSoundTriggerTime;                             // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndSoundTriggerTime;                               // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastProgress;                                      // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            ProgressCurveRaise;                                // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            ProgressCurveLower;                                // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ProgressDriver_C*                   Driver;                                            // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BaseProgressActor(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ProgressUpdated(float Progress);
	void ProgressUpdatedInternal(float Progress);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BaseProgressActor_C">();
	}
	static class ABP_BaseProgressActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BaseProgressActor_C>();
	}
};
static_assert(alignof(ABP_BaseProgressActor_C) == 0x000008, "Wrong alignment on ABP_BaseProgressActor_C");
static_assert(sizeof(ABP_BaseProgressActor_C) == 0x000270, "Wrong size on ABP_BaseProgressActor_C");
static_assert(offsetof(ABP_BaseProgressActor_C, UberGraphFrame) == 0x000220, "Member 'ABP_BaseProgressActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BaseProgressActor_C, Audio) == 0x000228, "Member 'ABP_BaseProgressActor_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_BaseProgressActor_C, DefaultSceneRoot) == 0x000230, "Member 'ABP_BaseProgressActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BaseProgressActor_C, EndSound) == 0x000238, "Member 'ABP_BaseProgressActor_C::EndSound' has a wrong offset!");
static_assert(offsetof(ABP_BaseProgressActor_C, StartSound) == 0x000240, "Member 'ABP_BaseProgressActor_C::StartSound' has a wrong offset!");
static_assert(offsetof(ABP_BaseProgressActor_C, StartSoundTriggerTime) == 0x000248, "Member 'ABP_BaseProgressActor_C::StartSoundTriggerTime' has a wrong offset!");
static_assert(offsetof(ABP_BaseProgressActor_C, EndSoundTriggerTime) == 0x00024C, "Member 'ABP_BaseProgressActor_C::EndSoundTriggerTime' has a wrong offset!");
static_assert(offsetof(ABP_BaseProgressActor_C, LastProgress) == 0x000250, "Member 'ABP_BaseProgressActor_C::LastProgress' has a wrong offset!");
static_assert(offsetof(ABP_BaseProgressActor_C, ProgressCurveRaise) == 0x000258, "Member 'ABP_BaseProgressActor_C::ProgressCurveRaise' has a wrong offset!");
static_assert(offsetof(ABP_BaseProgressActor_C, ProgressCurveLower) == 0x000260, "Member 'ABP_BaseProgressActor_C::ProgressCurveLower' has a wrong offset!");
static_assert(offsetof(ABP_BaseProgressActor_C, Driver) == 0x000268, "Member 'ABP_BaseProgressActor_C::Driver' has a wrong offset!");

}

