#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Door

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_DestroyableActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Door.BP_Door_C
// 0x0080 (0x0560 - 0x04E0)
class ABP_Door_C final : public ABP_DestroyableActor_C
{
public:
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Door_C;                          // 0x04D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UAudioComponent*                        Audio;                                             // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         DoorState;                                         // 0x04E8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E9[0x3];                                      // 0x04E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SmoothedDoorRotation;                              // 0x04EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmoothedDoorRotationTarget;                        // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmoothedDoorRotationSpeed;                         // 0x04F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DoorYawOpenForward;                                // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DoorYawOpenBackward;                               // 0x04FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DoorYawClosed;                                     // 0x0500(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DoorOpenSpeed;                                     // 0x0504(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DoorCloseSpeed;                                    // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DoorOpenSpeedFast;                                 // 0x050C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         LastCompletedDoorState;                            // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         StartingState;                                     // 0x0511(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanBeKickedOpen;                                   // 0x0512(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_513[0x1];                                      // 0x0513(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FastOpenStart;                                     // 0x0514(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectsThatPreventMovement;                        // 0x0518(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundCue*                              UseSound;                                          // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              CloseSound;                                        // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasBegunPlay;                                      // 0x0538(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              FastOpenStopSound;                                 // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanOpenForwards;                                   // 0x0548(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanOpenBackwards;                                  // 0x0549(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54A[0x6];                                      // 0x054A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      Kicker;                                            // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastAIInteractTime;                                // 0x0558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WillRagdoll;                                       // 0x055C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Door(int32 EntryPoint);
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnInteractionStart(class AMordhauCharacter* Character);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void OnRep_DoorState();
	void GetDoorForwardVector(struct FVector* Out);
	void GetDoorToActorAngle(class AActor* Actor, float* AngleDegrees);
	void ConvertStartingStateToDoorState(uint8 InStartingState, uint8* ToDoorState);
	void IsClosed(bool* Result);
	void HandleFastOpen(class AMordhauCharacter* Char, bool WantsRagdoll, bool OnlyClosed, bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Door_C">();
	}
	static class ABP_Door_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Door_C>();
	}
};
static_assert(alignof(ABP_Door_C) == 0x000010, "Wrong alignment on ABP_Door_C");
static_assert(sizeof(ABP_Door_C) == 0x000560, "Wrong size on ABP_Door_C");
static_assert(offsetof(ABP_Door_C, UberGraphFrame_BP_Door_C) == 0x0004D8, "Member 'ABP_Door_C::UberGraphFrame_BP_Door_C' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, Audio) == 0x0004E0, "Member 'ABP_Door_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, DoorState) == 0x0004E8, "Member 'ABP_Door_C::DoorState' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, SmoothedDoorRotation) == 0x0004EC, "Member 'ABP_Door_C::SmoothedDoorRotation' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, SmoothedDoorRotationTarget) == 0x0004F0, "Member 'ABP_Door_C::SmoothedDoorRotationTarget' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, SmoothedDoorRotationSpeed) == 0x0004F4, "Member 'ABP_Door_C::SmoothedDoorRotationSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, DoorYawOpenForward) == 0x0004F8, "Member 'ABP_Door_C::DoorYawOpenForward' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, DoorYawOpenBackward) == 0x0004FC, "Member 'ABP_Door_C::DoorYawOpenBackward' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, DoorYawClosed) == 0x000500, "Member 'ABP_Door_C::DoorYawClosed' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, DoorOpenSpeed) == 0x000504, "Member 'ABP_Door_C::DoorOpenSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, DoorCloseSpeed) == 0x000508, "Member 'ABP_Door_C::DoorCloseSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, DoorOpenSpeedFast) == 0x00050C, "Member 'ABP_Door_C::DoorOpenSpeedFast' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, LastCompletedDoorState) == 0x000510, "Member 'ABP_Door_C::LastCompletedDoorState' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, StartingState) == 0x000511, "Member 'ABP_Door_C::StartingState' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, CanBeKickedOpen) == 0x000512, "Member 'ABP_Door_C::CanBeKickedOpen' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, FastOpenStart) == 0x000514, "Member 'ABP_Door_C::FastOpenStart' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, ObjectsThatPreventMovement) == 0x000518, "Member 'ABP_Door_C::ObjectsThatPreventMovement' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, UseSound) == 0x000528, "Member 'ABP_Door_C::UseSound' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, CloseSound) == 0x000530, "Member 'ABP_Door_C::CloseSound' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, HasBegunPlay) == 0x000538, "Member 'ABP_Door_C::HasBegunPlay' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, FastOpenStopSound) == 0x000540, "Member 'ABP_Door_C::FastOpenStopSound' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, CanOpenForwards) == 0x000548, "Member 'ABP_Door_C::CanOpenForwards' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, CanOpenBackwards) == 0x000549, "Member 'ABP_Door_C::CanOpenBackwards' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, Kicker) == 0x000550, "Member 'ABP_Door_C::Kicker' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, LastAIInteractTime) == 0x000558, "Member 'ABP_Door_C::LastAIInteractTime' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, WillRagdoll) == 0x00055C, "Member 'ABP_Door_C::WillRagdoll' has a wrong offset!");

}

