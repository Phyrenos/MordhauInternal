#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioSettings

#include "Basic.hpp"

#include "E_MainMenuAction_structs.hpp"
#include "S_MordhauSlider_structs.hpp"


namespace SDK::Params
{

// Function BP_AudioSettings.BP_AudioSettings_C.ExecuteUbergraph_BP_AudioSettings
// 0x00D0 (0x00D0 - 0x0000)
struct BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_4;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_3;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue_1; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_2;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue_2; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue_3; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMusicVolume_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMasterVolume_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValueDifferenceValid_IsValid;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValueDifferenceValid_IsValid_1;         // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue_4; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEffectsVolume_ReturnValue;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ChoiceDialog_C*                     CallFunc_CreateChoiceDialog_ChoiceDialog;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValueDifferenceValid_IsValid_2;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauHUD_C*                       K2Node_DynamicCast_AsBP_Mordhau_HUD;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value_1;                // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue_5; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVoiceVolume_ReturnValue;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValueDifferenceValid_IsValid_3;         // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue_6; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstrumentsVolume_ReturnValue;         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValueDifferenceValid_IsValid_4;         // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings) == 0x000008, "Wrong alignment on BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings");
static_assert(sizeof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings) == 0x0000D0, "Wrong size on BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, EntryPoint) == 0x000000, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000028, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_ComponentBoundEvent_Value_4) == 0x000030, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_ComponentBoundEvent_Value_4' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_ComponentBoundEvent_Value_3) == 0x000034, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_ComponentBoundEvent_Value_3' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_GetMordhauGameUserSettings_ReturnValue_1) == 0x000038, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_GetMordhauGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_ComponentBoundEvent_Value_2) == 0x000040, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_ComponentBoundEvent_Value_2' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_GetMordhauGameUserSettings_ReturnValue_2) == 0x000048, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_GetMordhauGameUserSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_GetMordhauGameUserSettings_ReturnValue_3) == 0x000050, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_GetMordhauGameUserSettings_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_GetMusicVolume_ReturnValue) == 0x000058, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_GetMusicVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_GetMasterVolume_ReturnValue) == 0x00005C, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_GetMasterVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_IsValueDifferenceValid_IsValid) == 0x000060, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_IsValueDifferenceValid_IsValid' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_IsValueDifferenceValid_IsValid_1) == 0x000061, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_IsValueDifferenceValid_IsValid_1' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_GetMordhauGameUserSettings_ReturnValue_4) == 0x000068, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_GetMordhauGameUserSettings_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_GetPlayerController_ReturnValue) == 0x000070, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_GetEffectsVolume_ReturnValue) == 0x000078, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_GetEffectsVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_CreateChoiceDialog_ChoiceDialog) == 0x000080, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_CreateChoiceDialog_ChoiceDialog' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_IsValueDifferenceValid_IsValid_2) == 0x000088, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_IsValueDifferenceValid_IsValid_2' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_GetHUD_ReturnValue) == 0x000090, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_DynamicCast_AsBP_Mordhau_HUD) == 0x000098, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_DynamicCast_AsBP_Mordhau_HUD' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_ComponentBoundEvent_Value_1) == 0x0000A4, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_ComponentBoundEvent_Value_1' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_GetMordhauGameUserSettings_ReturnValue_5) == 0x0000A8, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_GetMordhauGameUserSettings_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_GetVoiceVolume_ReturnValue) == 0x0000B0, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_GetVoiceVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_IsValueDifferenceValid_IsValid_3) == 0x0000B4, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_IsValueDifferenceValid_IsValid_3' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_ComponentBoundEvent_Value) == 0x0000B8, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_GetMordhauGameUserSettings_ReturnValue_6) == 0x0000C0, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_GetMordhauGameUserSettings_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_GetInstrumentsVolume_ReturnValue) == 0x0000C8, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_GetInstrumentsVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_IsValueDifferenceValid_IsValid_4) == 0x0000CC, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_IsValueDifferenceValid_IsValid_4' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__InstrumentVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_AudioSettings_C_BndEvt__InstrumentVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_BndEvt__InstrumentVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on BP_AudioSettings_C_BndEvt__InstrumentVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature");
static_assert(sizeof(BP_AudioSettings_C_BndEvt__InstrumentVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on BP_AudioSettings_C_BndEvt__InstrumentVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature");
static_assert(offsetof(BP_AudioSettings_C_BndEvt__InstrumentVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'BP_AudioSettings_C_BndEvt__InstrumentVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__VoiceVolumeSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_AudioSettings_C_BndEvt__VoiceVolumeSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_BndEvt__VoiceVolumeSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on BP_AudioSettings_C_BndEvt__VoiceVolumeSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature");
static_assert(sizeof(BP_AudioSettings_C_BndEvt__VoiceVolumeSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on BP_AudioSettings_C_BndEvt__VoiceVolumeSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature");
static_assert(offsetof(BP_AudioSettings_C_BndEvt__VoiceVolumeSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'BP_AudioSettings_C_BndEvt__VoiceVolumeSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__EffectsVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_AudioSettings_C_BndEvt__EffectsVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_BndEvt__EffectsVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on BP_AudioSettings_C_BndEvt__EffectsVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature");
static_assert(sizeof(BP_AudioSettings_C_BndEvt__EffectsVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on BP_AudioSettings_C_BndEvt__EffectsVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature");
static_assert(offsetof(BP_AudioSettings_C_BndEvt__EffectsVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'BP_AudioSettings_C_BndEvt__EffectsVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_AudioSettings_C_BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on BP_AudioSettings_C_BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature");
static_assert(sizeof(BP_AudioSettings_C_BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on BP_AudioSettings_C_BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature");
static_assert(offsetof(BP_AudioSettings_C_BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'BP_AudioSettings_C_BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_AudioSettings_C_BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on BP_AudioSettings_C_BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature");
static_assert(sizeof(BP_AudioSettings_C_BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on BP_AudioSettings_C_BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature");
static_assert(offsetof(BP_AudioSettings_C_BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'BP_AudioSettings_C_BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.UpdateAudioQualityDropdown
// 0x0028 (0x0028 - 0x0000)
struct BP_AudioSettings_C_UpdateAudioQualityDropdown final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAudioQualityLevel_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetOptionAtIndex_ReturnValue;             // 0x0010(0x0018)()
};
static_assert(alignof(BP_AudioSettings_C_UpdateAudioQualityDropdown) == 0x000008, "Wrong alignment on BP_AudioSettings_C_UpdateAudioQualityDropdown");
static_assert(sizeof(BP_AudioSettings_C_UpdateAudioQualityDropdown) == 0x000028, "Wrong size on BP_AudioSettings_C_UpdateAudioQualityDropdown");
static_assert(offsetof(BP_AudioSettings_C_UpdateAudioQualityDropdown, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_AudioSettings_C_UpdateAudioQualityDropdown::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_UpdateAudioQualityDropdown, CallFunc_GetAudioQualityLevel_ReturnValue) == 0x000008, "Member 'BP_AudioSettings_C_UpdateAudioQualityDropdown::CallFunc_GetAudioQualityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_UpdateAudioQualityDropdown, CallFunc_GetOptionAtIndex_ReturnValue) == 0x000010, "Member 'BP_AudioSettings_C_UpdateAudioQualityDropdown::CallFunc_GetOptionAtIndex_ReturnValue' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.ApplyAudioQuality
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioSettings_C_ApplyAudioQuality final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_ApplyAudioQuality) == 0x000008, "Wrong alignment on BP_AudioSettings_C_ApplyAudioQuality");
static_assert(sizeof(BP_AudioSettings_C_ApplyAudioQuality) == 0x000010, "Wrong size on BP_AudioSettings_C_ApplyAudioQuality");
static_assert(offsetof(BP_AudioSettings_C_ApplyAudioQuality, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_AudioSettings_C_ApplyAudioQuality::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ApplyAudioQuality, CallFunc_GetSelectedIndex_SelectedIndex) == 0x000008, "Member 'BP_AudioSettings_C_ApplyAudioQuality::CallFunc_GetSelectedIndex_SelectedIndex' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.UpdateMasterVolumeSlider
// 0x0020 (0x0020 - 0x0000)
struct BP_AudioSettings_C_UpdateMasterVolumeSlider final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMasterVolume_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MordhauSlider                       K2Node_MakeStruct_S_MordhauSlider;                 // 0x000C(0x0014)(IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_UpdateMasterVolumeSlider) == 0x000008, "Wrong alignment on BP_AudioSettings_C_UpdateMasterVolumeSlider");
static_assert(sizeof(BP_AudioSettings_C_UpdateMasterVolumeSlider) == 0x000020, "Wrong size on BP_AudioSettings_C_UpdateMasterVolumeSlider");
static_assert(offsetof(BP_AudioSettings_C_UpdateMasterVolumeSlider, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_AudioSettings_C_UpdateMasterVolumeSlider::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_UpdateMasterVolumeSlider, CallFunc_GetMasterVolume_ReturnValue) == 0x000008, "Member 'BP_AudioSettings_C_UpdateMasterVolumeSlider::CallFunc_GetMasterVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_UpdateMasterVolumeSlider, K2Node_MakeStruct_S_MordhauSlider) == 0x00000C, "Member 'BP_AudioSettings_C_UpdateMasterVolumeSlider::K2Node_MakeStruct_S_MordhauSlider' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.UpdateEffectsVolumeSlider
// 0x0020 (0x0020 - 0x0000)
struct BP_AudioSettings_C_UpdateEffectsVolumeSlider final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEffectsVolume_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MordhauSlider                       K2Node_MakeStruct_S_MordhauSlider;                 // 0x000C(0x0014)(IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_UpdateEffectsVolumeSlider) == 0x000008, "Wrong alignment on BP_AudioSettings_C_UpdateEffectsVolumeSlider");
static_assert(sizeof(BP_AudioSettings_C_UpdateEffectsVolumeSlider) == 0x000020, "Wrong size on BP_AudioSettings_C_UpdateEffectsVolumeSlider");
static_assert(offsetof(BP_AudioSettings_C_UpdateEffectsVolumeSlider, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_AudioSettings_C_UpdateEffectsVolumeSlider::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_UpdateEffectsVolumeSlider, CallFunc_GetEffectsVolume_ReturnValue) == 0x000008, "Member 'BP_AudioSettings_C_UpdateEffectsVolumeSlider::CallFunc_GetEffectsVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_UpdateEffectsVolumeSlider, K2Node_MakeStruct_S_MordhauSlider) == 0x00000C, "Member 'BP_AudioSettings_C_UpdateEffectsVolumeSlider::K2Node_MakeStruct_S_MordhauSlider' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.UpdateMusicVolumeSlider
// 0x0020 (0x0020 - 0x0000)
struct BP_AudioSettings_C_UpdateMusicVolumeSlider final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMusicVolume_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MordhauSlider                       K2Node_MakeStruct_S_MordhauSlider;                 // 0x000C(0x0014)(IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_UpdateMusicVolumeSlider) == 0x000008, "Wrong alignment on BP_AudioSettings_C_UpdateMusicVolumeSlider");
static_assert(sizeof(BP_AudioSettings_C_UpdateMusicVolumeSlider) == 0x000020, "Wrong size on BP_AudioSettings_C_UpdateMusicVolumeSlider");
static_assert(offsetof(BP_AudioSettings_C_UpdateMusicVolumeSlider, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_AudioSettings_C_UpdateMusicVolumeSlider::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_UpdateMusicVolumeSlider, CallFunc_GetMusicVolume_ReturnValue) == 0x000008, "Member 'BP_AudioSettings_C_UpdateMusicVolumeSlider::CallFunc_GetMusicVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_UpdateMusicVolumeSlider, K2Node_MakeStruct_S_MordhauSlider) == 0x00000C, "Member 'BP_AudioSettings_C_UpdateMusicVolumeSlider::K2Node_MakeStruct_S_MordhauSlider' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.ApplyMasterVolume
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioSettings_C_ApplyMasterVolume final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_Value;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_ApplyMasterVolume) == 0x000008, "Wrong alignment on BP_AudioSettings_C_ApplyMasterVolume");
static_assert(sizeof(BP_AudioSettings_C_ApplyMasterVolume) == 0x000010, "Wrong size on BP_AudioSettings_C_ApplyMasterVolume");
static_assert(offsetof(BP_AudioSettings_C_ApplyMasterVolume, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_AudioSettings_C_ApplyMasterVolume::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ApplyMasterVolume, CallFunc_GetValue_Value) == 0x000008, "Member 'BP_AudioSettings_C_ApplyMasterVolume::CallFunc_GetValue_Value' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.ApplyEffectsVolume
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioSettings_C_ApplyEffectsVolume final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_Value;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_ApplyEffectsVolume) == 0x000008, "Wrong alignment on BP_AudioSettings_C_ApplyEffectsVolume");
static_assert(sizeof(BP_AudioSettings_C_ApplyEffectsVolume) == 0x000010, "Wrong size on BP_AudioSettings_C_ApplyEffectsVolume");
static_assert(offsetof(BP_AudioSettings_C_ApplyEffectsVolume, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_AudioSettings_C_ApplyEffectsVolume::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ApplyEffectsVolume, CallFunc_GetValue_Value) == 0x000008, "Member 'BP_AudioSettings_C_ApplyEffectsVolume::CallFunc_GetValue_Value' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.ApplyMusicVolume
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioSettings_C_ApplyMusicVolume final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_Value;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_ApplyMusicVolume) == 0x000008, "Wrong alignment on BP_AudioSettings_C_ApplyMusicVolume");
static_assert(sizeof(BP_AudioSettings_C_ApplyMusicVolume) == 0x000010, "Wrong size on BP_AudioSettings_C_ApplyMusicVolume");
static_assert(offsetof(BP_AudioSettings_C_ApplyMusicVolume, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_AudioSettings_C_ApplyMusicVolume::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ApplyMusicVolume, CallFunc_GetValue_Value) == 0x000008, "Member 'BP_AudioSettings_C_ApplyMusicVolume::CallFunc_GetValue_Value' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ApplyMusicVolume, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'BP_AudioSettings_C_ApplyMusicVolume::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.UpdateVideoVolumeSlider
// 0x0020 (0x0020 - 0x0000)
struct BP_AudioSettings_C_UpdateVideoVolumeSlider final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVideoVolume_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MordhauSlider                       K2Node_MakeStruct_S_MordhauSlider;                 // 0x000C(0x0014)(IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_UpdateVideoVolumeSlider) == 0x000008, "Wrong alignment on BP_AudioSettings_C_UpdateVideoVolumeSlider");
static_assert(sizeof(BP_AudioSettings_C_UpdateVideoVolumeSlider) == 0x000020, "Wrong size on BP_AudioSettings_C_UpdateVideoVolumeSlider");
static_assert(offsetof(BP_AudioSettings_C_UpdateVideoVolumeSlider, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_AudioSettings_C_UpdateVideoVolumeSlider::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_UpdateVideoVolumeSlider, CallFunc_GetVideoVolume_ReturnValue) == 0x000008, "Member 'BP_AudioSettings_C_UpdateVideoVolumeSlider::CallFunc_GetVideoVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_UpdateVideoVolumeSlider, K2Node_MakeStruct_S_MordhauSlider) == 0x00000C, "Member 'BP_AudioSettings_C_UpdateVideoVolumeSlider::K2Node_MakeStruct_S_MordhauSlider' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.ApplyVideoVolume
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioSettings_C_ApplyVideoVolume final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_Value;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_ApplyVideoVolume) == 0x000008, "Wrong alignment on BP_AudioSettings_C_ApplyVideoVolume");
static_assert(sizeof(BP_AudioSettings_C_ApplyVideoVolume) == 0x000010, "Wrong size on BP_AudioSettings_C_ApplyVideoVolume");
static_assert(offsetof(BP_AudioSettings_C_ApplyVideoVolume, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_AudioSettings_C_ApplyVideoVolume::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ApplyVideoVolume, CallFunc_GetValue_Value) == 0x000008, "Member 'BP_AudioSettings_C_ApplyVideoVolume::CallFunc_GetValue_Value' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ApplyVideoVolume, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'BP_AudioSettings_C_ApplyVideoVolume::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.IsValueDifferenceValid
// 0x001C (0x001C - 0x0000)
struct BP_AudioSettings_C_IsValueDifferenceValid final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         prevValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         minDiff;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AudioSettings_C_IsValueDifferenceValid) == 0x000004, "Wrong alignment on BP_AudioSettings_C_IsValueDifferenceValid");
static_assert(sizeof(BP_AudioSettings_C_IsValueDifferenceValid) == 0x00001C, "Wrong size on BP_AudioSettings_C_IsValueDifferenceValid");
static_assert(offsetof(BP_AudioSettings_C_IsValueDifferenceValid, NewValue) == 0x000000, "Member 'BP_AudioSettings_C_IsValueDifferenceValid::NewValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_IsValueDifferenceValid, prevValue) == 0x000004, "Member 'BP_AudioSettings_C_IsValueDifferenceValid::prevValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_IsValueDifferenceValid, minDiff) == 0x000008, "Member 'BP_AudioSettings_C_IsValueDifferenceValid::minDiff' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_IsValueDifferenceValid, IsValid) == 0x00000C, "Member 'BP_AudioSettings_C_IsValueDifferenceValid::IsValid' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_IsValueDifferenceValid, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_AudioSettings_C_IsValueDifferenceValid::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_IsValueDifferenceValid, CallFunc_Abs_ReturnValue) == 0x000014, "Member 'BP_AudioSettings_C_IsValueDifferenceValid::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_IsValueDifferenceValid, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_AudioSettings_C_IsValueDifferenceValid::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.ApplyVoiceVolume
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioSettings_C_ApplyVoiceVolume final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_Value;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_ApplyVoiceVolume) == 0x000008, "Wrong alignment on BP_AudioSettings_C_ApplyVoiceVolume");
static_assert(sizeof(BP_AudioSettings_C_ApplyVoiceVolume) == 0x000010, "Wrong size on BP_AudioSettings_C_ApplyVoiceVolume");
static_assert(offsetof(BP_AudioSettings_C_ApplyVoiceVolume, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_AudioSettings_C_ApplyVoiceVolume::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ApplyVoiceVolume, CallFunc_GetValue_Value) == 0x000008, "Member 'BP_AudioSettings_C_ApplyVoiceVolume::CallFunc_GetValue_Value' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ApplyVoiceVolume, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'BP_AudioSettings_C_ApplyVoiceVolume::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.UpdateVoiceVolumeSlider
// 0x0020 (0x0020 - 0x0000)
struct BP_AudioSettings_C_UpdateVoiceVolumeSlider final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVoiceVolume_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MordhauSlider                       K2Node_MakeStruct_S_MordhauSlider;                 // 0x000C(0x0014)(IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_UpdateVoiceVolumeSlider) == 0x000008, "Wrong alignment on BP_AudioSettings_C_UpdateVoiceVolumeSlider");
static_assert(sizeof(BP_AudioSettings_C_UpdateVoiceVolumeSlider) == 0x000020, "Wrong size on BP_AudioSettings_C_UpdateVoiceVolumeSlider");
static_assert(offsetof(BP_AudioSettings_C_UpdateVoiceVolumeSlider, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_AudioSettings_C_UpdateVoiceVolumeSlider::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_UpdateVoiceVolumeSlider, CallFunc_GetVoiceVolume_ReturnValue) == 0x000008, "Member 'BP_AudioSettings_C_UpdateVoiceVolumeSlider::CallFunc_GetVoiceVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_UpdateVoiceVolumeSlider, K2Node_MakeStruct_S_MordhauSlider) == 0x00000C, "Member 'BP_AudioSettings_C_UpdateVoiceVolumeSlider::K2Node_MakeStruct_S_MordhauSlider' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.UpdateInstrumentVolumeSlider
// 0x0020 (0x0020 - 0x0000)
struct BP_AudioSettings_C_UpdateInstrumentVolumeSlider final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstrumentsVolume_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MordhauSlider                       K2Node_MakeStruct_S_MordhauSlider;                 // 0x000C(0x0014)(IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_UpdateInstrumentVolumeSlider) == 0x000008, "Wrong alignment on BP_AudioSettings_C_UpdateInstrumentVolumeSlider");
static_assert(sizeof(BP_AudioSettings_C_UpdateInstrumentVolumeSlider) == 0x000020, "Wrong size on BP_AudioSettings_C_UpdateInstrumentVolumeSlider");
static_assert(offsetof(BP_AudioSettings_C_UpdateInstrumentVolumeSlider, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_AudioSettings_C_UpdateInstrumentVolumeSlider::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_UpdateInstrumentVolumeSlider, CallFunc_GetInstrumentsVolume_ReturnValue) == 0x000008, "Member 'BP_AudioSettings_C_UpdateInstrumentVolumeSlider::CallFunc_GetInstrumentsVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_UpdateInstrumentVolumeSlider, K2Node_MakeStruct_S_MordhauSlider) == 0x00000C, "Member 'BP_AudioSettings_C_UpdateInstrumentVolumeSlider::K2Node_MakeStruct_S_MordhauSlider' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.ApplyInstrumentsVolume
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioSettings_C_ApplyInstrumentsVolume final
{
public:
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_Value;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_ApplyInstrumentsVolume) == 0x000008, "Wrong alignment on BP_AudioSettings_C_ApplyInstrumentsVolume");
static_assert(sizeof(BP_AudioSettings_C_ApplyInstrumentsVolume) == 0x000010, "Wrong size on BP_AudioSettings_C_ApplyInstrumentsVolume");
static_assert(offsetof(BP_AudioSettings_C_ApplyInstrumentsVolume, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_AudioSettings_C_ApplyInstrumentsVolume::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ApplyInstrumentsVolume, CallFunc_GetValue_Value) == 0x000008, "Member 'BP_AudioSettings_C_ApplyInstrumentsVolume::CallFunc_GetValue_Value' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ApplyInstrumentsVolume, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'BP_AudioSettings_C_ApplyInstrumentsVolume::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.SaveSettings
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioSettings_C_SaveSettings final
{
public:
	E_MainMenuAction                              Action;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_SaveSettings) == 0x000008, "Wrong alignment on BP_AudioSettings_C_SaveSettings");
static_assert(sizeof(BP_AudioSettings_C_SaveSettings) == 0x000018, "Wrong size on BP_AudioSettings_C_SaveSettings");
static_assert(offsetof(BP_AudioSettings_C_SaveSettings, Action) == 0x000000, "Member 'BP_AudioSettings_C_SaveSettings::Action' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_SaveSettings, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_AudioSettings_C_SaveSettings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_SaveSettings, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_AudioSettings_C_SaveSettings::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_SaveSettings, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000010, "Member 'BP_AudioSettings_C_SaveSettings::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");

}

