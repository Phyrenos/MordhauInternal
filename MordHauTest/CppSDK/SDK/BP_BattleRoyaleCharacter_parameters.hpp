#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleRoyaleCharacter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Mordhau_structs.hpp"


namespace SDK::Params
{

// Function BP_BattleRoyaleCharacter.BP_BattleRoyaleCharacter_C.ExecuteUbergraph_BP_BattleRoyaleCharacter
// 0x0050 (0x0050 - 0x0000)
struct BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_EventInstigator;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WearablePickup_C*                   K2Node_Event_WearablePickup;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TorsoPickup_C*                      K2Node_DynamicCast_AsBP_Torso_Pickup;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LegsPickup_C*                       K2Node_DynamicCast_AsBP_Legs_Pickup;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HelmetPickup_C*                     K2Node_DynamicCast_AsBP_Helmet_Pickup;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter) == 0x000008, "Wrong alignment on BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter");
static_assert(sizeof(BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter) == 0x000050, "Wrong size on BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter, EntryPoint) == 0x000000, "Member 'BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter, K2Node_Event_EventInstigator) == 0x000008, "Member 'BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter::K2Node_Event_EventInstigator' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter, K2Node_Event_WearablePickup) == 0x000010, "Member 'BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter::K2Node_Event_WearablePickup' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter, K2Node_DynamicCast_AsBP_Torso_Pickup) == 0x000018, "Member 'BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter::K2Node_DynamicCast_AsBP_Torso_Pickup' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter, K2Node_DynamicCast_AsBP_Legs_Pickup) == 0x000028, "Member 'BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter::K2Node_DynamicCast_AsBP_Legs_Pickup' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter, CallFunc_GetObjectClass_ReturnValue) == 0x000038, "Member 'BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter, K2Node_DynamicCast_AsBP_Helmet_Pickup) == 0x000040, "Member 'BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter::K2Node_DynamicCast_AsBP_Helmet_Pickup' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'BP_BattleRoyaleCharacter_C_ExecuteUbergraph_BP_BattleRoyaleCharacter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_BattleRoyaleCharacter.BP_BattleRoyaleCharacter_C.OnKilled
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleRoyaleCharacter_C_OnKilled final
{
public:
	class AController*                            EventInstigator;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleRoyaleCharacter_C_OnKilled) == 0x000008, "Wrong alignment on BP_BattleRoyaleCharacter_C_OnKilled");
static_assert(sizeof(BP_BattleRoyaleCharacter_C_OnKilled) == 0x000008, "Wrong size on BP_BattleRoyaleCharacter_C_OnKilled");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_OnKilled, EventInstigator) == 0x000000, "Member 'BP_BattleRoyaleCharacter_C_OnKilled::EventInstigator' has a wrong offset!");

// Function BP_BattleRoyaleCharacter.BP_BattleRoyaleCharacter_C.SpawnArmorPiece
// 0x0060 (0x0060 - 0x0000)
struct BP_BattleRoyaleCharacter_C_SpawnArmorPiece final
{
public:
	class UClass*                                 WearablePickupClass;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WearablePickup_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleRoyaleCharacter_C_SpawnArmorPiece) == 0x000010, "Wrong alignment on BP_BattleRoyaleCharacter_C_SpawnArmorPiece");
static_assert(sizeof(BP_BattleRoyaleCharacter_C_SpawnArmorPiece) == 0x000060, "Wrong size on BP_BattleRoyaleCharacter_C_SpawnArmorPiece");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_SpawnArmorPiece, WearablePickupClass) == 0x000000, "Member 'BP_BattleRoyaleCharacter_C_SpawnArmorPiece::WearablePickupClass' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_SpawnArmorPiece, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_BattleRoyaleCharacter_C_SpawnArmorPiece::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_SpawnArmorPiece, CallFunc_IsValidClass_ReturnValue) == 0x000040, "Member 'BP_BattleRoyaleCharacter_C_SpawnArmorPiece::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_SpawnArmorPiece, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000048, "Member 'BP_BattleRoyaleCharacter_C_SpawnArmorPiece::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_SpawnArmorPiece, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'BP_BattleRoyaleCharacter_C_SpawnArmorPiece::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_BattleRoyaleCharacter.BP_BattleRoyaleCharacter_C.PlayWearablePickupSound
// 0x0020 (0x0020 - 0x0000)
struct BP_BattleRoyaleCharacter_C_PlayWearablePickupSound final
{
public:
	class UClass*                                 Wearable;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_PlayCharacterSound_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleRoyaleCharacter_C_PlayWearablePickupSound) == 0x000008, "Wrong alignment on BP_BattleRoyaleCharacter_C_PlayWearablePickupSound");
static_assert(sizeof(BP_BattleRoyaleCharacter_C_PlayWearablePickupSound) == 0x000020, "Wrong size on BP_BattleRoyaleCharacter_C_PlayWearablePickupSound");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_PlayWearablePickupSound, Wearable) == 0x000000, "Member 'BP_BattleRoyaleCharacter_C_PlayWearablePickupSound::Wearable' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_PlayWearablePickupSound, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member 'BP_BattleRoyaleCharacter_C_PlayWearablePickupSound::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_PlayWearablePickupSound, CallFunc_PlayCharacterSound_ReturnValue) == 0x000018, "Member 'BP_BattleRoyaleCharacter_C_PlayWearablePickupSound::CallFunc_PlayCharacterSound_ReturnValue' has a wrong offset!");

// Function BP_BattleRoyaleCharacter.BP_BattleRoyaleCharacter_C.OnArmorReplicated
// 0x0050 (0x0050 - 0x0000)
struct BP_BattleRoyaleCharacter_C_OnArmorReplicated final
{
public:
	EWearableSlot                                 Slot;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauHUD*                            CallFunc_GetMordhauHUD_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordeHUD_C*                         K2Node_DynamicCast_AsBP_Horde_HUD;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattleRoyaleHUD_C*                  K2Node_DynamicCast_AsBP_Battle_Royale_HUD;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerController*               K2Node_DynamicCast_AsMordhau_Player_Controller;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleRoyaleCharacter_C_OnArmorReplicated) == 0x000008, "Wrong alignment on BP_BattleRoyaleCharacter_C_OnArmorReplicated");
static_assert(sizeof(BP_BattleRoyaleCharacter_C_OnArmorReplicated) == 0x000050, "Wrong size on BP_BattleRoyaleCharacter_C_OnArmorReplicated");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_OnArmorReplicated, Slot) == 0x000000, "Member 'BP_BattleRoyaleCharacter_C_OnArmorReplicated::Slot' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_OnArmorReplicated, CallFunc_GetMordhauHUD_ReturnValue) == 0x000008, "Member 'BP_BattleRoyaleCharacter_C_OnArmorReplicated::CallFunc_GetMordhauHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_OnArmorReplicated, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_BattleRoyaleCharacter_C_OnArmorReplicated::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_OnArmorReplicated, K2Node_DynamicCast_AsBP_Horde_HUD) == 0x000018, "Member 'BP_BattleRoyaleCharacter_C_OnArmorReplicated::K2Node_DynamicCast_AsBP_Horde_HUD' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_OnArmorReplicated, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BattleRoyaleCharacter_C_OnArmorReplicated::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_OnArmorReplicated, K2Node_DynamicCast_AsBP_Battle_Royale_HUD) == 0x000028, "Member 'BP_BattleRoyaleCharacter_C_OnArmorReplicated::K2Node_DynamicCast_AsBP_Battle_Royale_HUD' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_OnArmorReplicated, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_BattleRoyaleCharacter_C_OnArmorReplicated::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_OnArmorReplicated, K2Node_SwitchEnum_CmpSuccess_1) == 0x000031, "Member 'BP_BattleRoyaleCharacter_C_OnArmorReplicated::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_OnArmorReplicated, CallFunc_GetController_ReturnValue) == 0x000038, "Member 'BP_BattleRoyaleCharacter_C_OnArmorReplicated::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_OnArmorReplicated, K2Node_DynamicCast_AsMordhau_Player_Controller) == 0x000040, "Member 'BP_BattleRoyaleCharacter_C_OnArmorReplicated::K2Node_DynamicCast_AsMordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_OnArmorReplicated, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'BP_BattleRoyaleCharacter_C_OnArmorReplicated::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_OnArmorReplicated, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000049, "Member 'BP_BattleRoyaleCharacter_C_OnArmorReplicated::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");

// Function BP_BattleRoyaleCharacter.BP_BattleRoyaleCharacter_C.OnBeforeReceiveWearablePickup
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleRoyaleCharacter_C_OnBeforeReceiveWearablePickup final
{
public:
	class ABP_WearablePickup_C*                   WearablePickup;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleRoyaleCharacter_C_OnBeforeReceiveWearablePickup) == 0x000008, "Wrong alignment on BP_BattleRoyaleCharacter_C_OnBeforeReceiveWearablePickup");
static_assert(sizeof(BP_BattleRoyaleCharacter_C_OnBeforeReceiveWearablePickup) == 0x000008, "Wrong size on BP_BattleRoyaleCharacter_C_OnBeforeReceiveWearablePickup");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_OnBeforeReceiveWearablePickup, WearablePickup) == 0x000000, "Member 'BP_BattleRoyaleCharacter_C_OnBeforeReceiveWearablePickup::WearablePickup' has a wrong offset!");

// Function BP_BattleRoyaleCharacter.BP_BattleRoyaleCharacter_C.IsAnUpgrade
// 0x0040 (0x0040 - 0x0000)
struct BP_BattleRoyaleCharacter_C_IsAnUpgrade final
{
public:
	class ABP_WearablePickup_C*                   Wearable;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HelmetPickup_C*                     K2Node_DynamicCast_AsBP_Helmet_Pickup;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LegsPickup_C*                       K2Node_DynamicCast_AsBP_Legs_Pickup;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TorsoPickup_C*                      K2Node_DynamicCast_AsBP_Torso_Pickup;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_2;               // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleRoyaleCharacter_C_IsAnUpgrade) == 0x000008, "Wrong alignment on BP_BattleRoyaleCharacter_C_IsAnUpgrade");
static_assert(sizeof(BP_BattleRoyaleCharacter_C_IsAnUpgrade) == 0x000040, "Wrong size on BP_BattleRoyaleCharacter_C_IsAnUpgrade");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_IsAnUpgrade, Wearable) == 0x000000, "Member 'BP_BattleRoyaleCharacter_C_IsAnUpgrade::Wearable' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_IsAnUpgrade, Return) == 0x000008, "Member 'BP_BattleRoyaleCharacter_C_IsAnUpgrade::Return' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_IsAnUpgrade, K2Node_DynamicCast_AsBP_Helmet_Pickup) == 0x000010, "Member 'BP_BattleRoyaleCharacter_C_IsAnUpgrade::K2Node_DynamicCast_AsBP_Helmet_Pickup' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_IsAnUpgrade, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BattleRoyaleCharacter_C_IsAnUpgrade::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_IsAnUpgrade, CallFunc_IsValidClass_ReturnValue) == 0x000019, "Member 'BP_BattleRoyaleCharacter_C_IsAnUpgrade::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_IsAnUpgrade, CallFunc_Less_IntInt_ReturnValue) == 0x00001A, "Member 'BP_BattleRoyaleCharacter_C_IsAnUpgrade::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_IsAnUpgrade, K2Node_DynamicCast_AsBP_Legs_Pickup) == 0x000020, "Member 'BP_BattleRoyaleCharacter_C_IsAnUpgrade::K2Node_DynamicCast_AsBP_Legs_Pickup' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_IsAnUpgrade, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_BattleRoyaleCharacter_C_IsAnUpgrade::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_IsAnUpgrade, K2Node_DynamicCast_AsBP_Torso_Pickup) == 0x000030, "Member 'BP_BattleRoyaleCharacter_C_IsAnUpgrade::K2Node_DynamicCast_AsBP_Torso_Pickup' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_IsAnUpgrade, K2Node_DynamicCast_bSuccess_2) == 0x000038, "Member 'BP_BattleRoyaleCharacter_C_IsAnUpgrade::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_IsAnUpgrade, CallFunc_IsValidClass_ReturnValue_1) == 0x000039, "Member 'BP_BattleRoyaleCharacter_C_IsAnUpgrade::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_IsAnUpgrade, CallFunc_Less_IntInt_ReturnValue_1) == 0x00003A, "Member 'BP_BattleRoyaleCharacter_C_IsAnUpgrade::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_IsAnUpgrade, CallFunc_IsValidClass_ReturnValue_2) == 0x00003B, "Member 'BP_BattleRoyaleCharacter_C_IsAnUpgrade::CallFunc_IsValidClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleRoyaleCharacter_C_IsAnUpgrade, CallFunc_Less_IntInt_ReturnValue_2) == 0x00003C, "Member 'BP_BattleRoyaleCharacter_C_IsAnUpgrade::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

}

