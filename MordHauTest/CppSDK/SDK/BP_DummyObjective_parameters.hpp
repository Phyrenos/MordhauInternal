#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DummyObjective

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_DummyObjective.BP_DummyObjective_C.ExecuteUbergraph_BP_DummyObjective
// 0x0010 (0x0010 - 0x0000)
struct BP_DummyObjective_C_ExecuteUbergraph_BP_DummyObjective final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CapturePoint_C*                     K2Node_Event_Point;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DummyObjective_C_ExecuteUbergraph_BP_DummyObjective) == 0x000008, "Wrong alignment on BP_DummyObjective_C_ExecuteUbergraph_BP_DummyObjective");
static_assert(sizeof(BP_DummyObjective_C_ExecuteUbergraph_BP_DummyObjective) == 0x000010, "Wrong size on BP_DummyObjective_C_ExecuteUbergraph_BP_DummyObjective");
static_assert(offsetof(BP_DummyObjective_C_ExecuteUbergraph_BP_DummyObjective, EntryPoint) == 0x000000, "Member 'BP_DummyObjective_C_ExecuteUbergraph_BP_DummyObjective::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DummyObjective_C_ExecuteUbergraph_BP_DummyObjective, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_DummyObjective_C_ExecuteUbergraph_BP_DummyObjective::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DummyObjective_C_ExecuteUbergraph_BP_DummyObjective, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'BP_DummyObjective_C_ExecuteUbergraph_BP_DummyObjective::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DummyObjective_C_ExecuteUbergraph_BP_DummyObjective, K2Node_Event_Point) == 0x000008, "Member 'BP_DummyObjective_C_ExecuteUbergraph_BP_DummyObjective::K2Node_Event_Point' has a wrong offset!");

// Function BP_DummyObjective.BP_DummyObjective_C.OnInitialize
// 0x0008 (0x0008 - 0x0000)
struct BP_DummyObjective_C_OnInitialize final
{
public:
	class ABP_CapturePoint_C*                     Point;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DummyObjective_C_OnInitialize) == 0x000008, "Wrong alignment on BP_DummyObjective_C_OnInitialize");
static_assert(sizeof(BP_DummyObjective_C_OnInitialize) == 0x000008, "Wrong size on BP_DummyObjective_C_OnInitialize");
static_assert(offsetof(BP_DummyObjective_C_OnInitialize, Point) == 0x000000, "Member 'BP_DummyObjective_C_OnInitialize::Point' has a wrong offset!");

// Function BP_DummyObjective.BP_DummyObjective_C.Initialize
// 0x0008 (0x0008 - 0x0000)
struct BP_DummyObjective_C_Initialize final
{
public:
	class ABP_CapturePoint_C*                     CapturePoint_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DummyObjective_C_Initialize) == 0x000008, "Wrong alignment on BP_DummyObjective_C_Initialize");
static_assert(sizeof(BP_DummyObjective_C_Initialize) == 0x000008, "Wrong size on BP_DummyObjective_C_Initialize");
static_assert(offsetof(BP_DummyObjective_C_Initialize, CapturePoint_0) == 0x000000, "Member 'BP_DummyObjective_C_Initialize::CapturePoint_0' has a wrong offset!");

// Function BP_DummyObjective.BP_DummyObjective_C.EnemyGainedPrerequisites
// 0x0001 (0x0001 - 0x0000)
struct BP_DummyObjective_C_EnemyGainedPrerequisites final
{
public:
	bool                                          CallFunc_IsCapturePointDone_IsDone;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DummyObjective_C_EnemyGainedPrerequisites) == 0x000001, "Wrong alignment on BP_DummyObjective_C_EnemyGainedPrerequisites");
static_assert(sizeof(BP_DummyObjective_C_EnemyGainedPrerequisites) == 0x000001, "Wrong size on BP_DummyObjective_C_EnemyGainedPrerequisites");
static_assert(offsetof(BP_DummyObjective_C_EnemyGainedPrerequisites, CallFunc_IsCapturePointDone_IsDone) == 0x000000, "Member 'BP_DummyObjective_C_EnemyGainedPrerequisites::CallFunc_IsCapturePointDone_IsDone' has a wrong offset!");

// Function BP_DummyObjective.BP_DummyObjective_C.IsCapturePointDone
// 0x0003 (0x0003 - 0x0000)
struct BP_DummyObjective_C_IsCapturePointDone final
{
public:
	bool                                          IsDone;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DummyObjective_C_IsCapturePointDone) == 0x000001, "Wrong alignment on BP_DummyObjective_C_IsCapturePointDone");
static_assert(sizeof(BP_DummyObjective_C_IsCapturePointDone) == 0x000003, "Wrong size on BP_DummyObjective_C_IsCapturePointDone");
static_assert(offsetof(BP_DummyObjective_C_IsCapturePointDone, IsDone) == 0x000000, "Member 'BP_DummyObjective_C_IsCapturePointDone::IsDone' has a wrong offset!");
static_assert(offsetof(BP_DummyObjective_C_IsCapturePointDone, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_DummyObjective_C_IsCapturePointDone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DummyObjective_C_IsCapturePointDone, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000002, "Member 'BP_DummyObjective_C_IsCapturePointDone::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_DummyObjective.BP_DummyObjective_C.AnyObjectiveProgressChanged
// 0x0002 (0x0002 - 0x0000)
struct BP_DummyObjective_C_AnyObjectiveProgressChanged final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DummyObjective_C_AnyObjectiveProgressChanged) == 0x000001, "Wrong alignment on BP_DummyObjective_C_AnyObjectiveProgressChanged");
static_assert(sizeof(BP_DummyObjective_C_AnyObjectiveProgressChanged) == 0x000002, "Wrong size on BP_DummyObjective_C_AnyObjectiveProgressChanged");
static_assert(offsetof(BP_DummyObjective_C_AnyObjectiveProgressChanged, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_DummyObjective_C_AnyObjectiveProgressChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DummyObjective_C_AnyObjectiveProgressChanged, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_DummyObjective_C_AnyObjectiveProgressChanged::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_DummyObjective.BP_DummyObjective_C.IsCompleted
// 0x0001 (0x0001 - 0x0000)
struct BP_DummyObjective_C_IsCompleted final
{
public:
	bool                                          Completed;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DummyObjective_C_IsCompleted) == 0x000001, "Wrong alignment on BP_DummyObjective_C_IsCompleted");
static_assert(sizeof(BP_DummyObjective_C_IsCompleted) == 0x000001, "Wrong size on BP_DummyObjective_C_IsCompleted");
static_assert(offsetof(BP_DummyObjective_C_IsCompleted, Completed) == 0x000000, "Member 'BP_DummyObjective_C_IsCompleted::Completed' has a wrong offset!");

// Function BP_DummyObjective.BP_DummyObjective_C.IsInObjectiveArea
// 0x0030 (0x0030 - 0x0000)
struct BP_DummyObjective_C_IsInObjectiveArea final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InArea;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeXY_ReturnValue;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DummyObjective_C_IsInObjectiveArea) == 0x000004, "Wrong alignment on BP_DummyObjective_C_IsInObjectiveArea");
static_assert(sizeof(BP_DummyObjective_C_IsInObjectiveArea) == 0x000030, "Wrong size on BP_DummyObjective_C_IsInObjectiveArea");
static_assert(offsetof(BP_DummyObjective_C_IsInObjectiveArea, Location) == 0x000000, "Member 'BP_DummyObjective_C_IsInObjectiveArea::Location' has a wrong offset!");
static_assert(offsetof(BP_DummyObjective_C_IsInObjectiveArea, InArea) == 0x00000C, "Member 'BP_DummyObjective_C_IsInObjectiveArea::InArea' has a wrong offset!");
static_assert(offsetof(BP_DummyObjective_C_IsInObjectiveArea, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_DummyObjective_C_IsInObjectiveArea::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DummyObjective_C_IsInObjectiveArea, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00001C, "Member 'BP_DummyObjective_C_IsInObjectiveArea::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DummyObjective_C_IsInObjectiveArea, CallFunc_VSizeXY_ReturnValue) == 0x000028, "Member 'BP_DummyObjective_C_IsInObjectiveArea::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DummyObjective_C_IsInObjectiveArea, CallFunc_Less_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_DummyObjective_C_IsInObjectiveArea::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_DummyObjective.BP_DummyObjective_C.GetObjectiveProgress
// 0x0004 (0x0004 - 0x0000)
struct BP_DummyObjective_C_GetObjectiveProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DummyObjective_C_GetObjectiveProgress) == 0x000004, "Wrong alignment on BP_DummyObjective_C_GetObjectiveProgress");
static_assert(sizeof(BP_DummyObjective_C_GetObjectiveProgress) == 0x000004, "Wrong size on BP_DummyObjective_C_GetObjectiveProgress");
static_assert(offsetof(BP_DummyObjective_C_GetObjectiveProgress, Progress) == 0x000000, "Member 'BP_DummyObjective_C_GetObjectiveProgress::Progress' has a wrong offset!");

}

