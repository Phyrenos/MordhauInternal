#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CasualRankDiamond

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_CasualRankDiamond.BP_CasualRankDiamond_C.Get_RankText_Text_0
// 0x0030 (0x0030 - 0x0000)
struct BP_CasualRankDiamond_C_Get_RankText_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
};
static_assert(alignof(BP_CasualRankDiamond_C_Get_RankText_Text_0) == 0x000008, "Wrong alignment on BP_CasualRankDiamond_C_Get_RankText_Text_0");
static_assert(sizeof(BP_CasualRankDiamond_C_Get_RankText_Text_0) == 0x000030, "Wrong size on BP_CasualRankDiamond_C_Get_RankText_Text_0");
static_assert(offsetof(BP_CasualRankDiamond_C_Get_RankText_Text_0, ReturnValue) == 0x000000, "Member 'BP_CasualRankDiamond_C_Get_RankText_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CasualRankDiamond_C_Get_RankText_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'BP_CasualRankDiamond_C_Get_RankText_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function BP_CasualRankDiamond.BP_CasualRankDiamond_C.Update
// 0x0004 (0x0004 - 0x0000)
struct BP_CasualRankDiamond_C_Update final
{
public:
	int32                                         Rank_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CasualRankDiamond_C_Update) == 0x000004, "Wrong alignment on BP_CasualRankDiamond_C_Update");
static_assert(sizeof(BP_CasualRankDiamond_C_Update) == 0x000004, "Wrong size on BP_CasualRankDiamond_C_Update");
static_assert(offsetof(BP_CasualRankDiamond_C_Update, Rank_0) == 0x000000, "Member 'BP_CasualRankDiamond_C_Update::Rank_0' has a wrong offset!");

}

