#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KeyBindingElementWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_KeyBindingElementWidget.BP_KeyBindingElementWidget_C.ExecuteUbergraph_BP_KeyBindingElementWidget
// 0x0070 (0x0070 - 0x0000)
struct BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_KeyBindingsSettings_C*>      CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_KeyBindingsSettings_C*              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue_1;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue_2;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0030(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget) == 0x000008, "Wrong alignment on BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget");
static_assert(sizeof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget) == 0x000070, "Wrong size on BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget");
static_assert(offsetof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget, EntryPoint) == 0x000000, "Member 'BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget, CallFunc_IsConsolePlatform_ReturnValue) == 0x000004, "Member 'BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget, Temp_byte_Variable) == 0x000005, "Member 'BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget, Temp_byte_Variable_1) == 0x000006, "Member 'BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget, Temp_bool_Has_Been_Initd_Variable) == 0x000007, "Member 'BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget, Temp_bool_IsClosed_Variable) == 0x000008, "Member 'BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000028, "Member 'BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget, Temp_bool_Variable) == 0x000029, "Member 'BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget, CallFunc_IsConsolePlatform_ReturnValue_1) == 0x00002A, "Member 'BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget::CallFunc_IsConsolePlatform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget, CallFunc_BooleanAND_ReturnValue) == 0x00002B, "Member 'BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget, CallFunc_IsConsolePlatform_ReturnValue_2) == 0x00002C, "Member 'BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget::CallFunc_IsConsolePlatform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget, K2Node_Select_Default) == 0x00002D, "Member 'BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget, K2Node_Event_MyGeometry) == 0x000030, "Member 'BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget, K2Node_Event_InDeltaTime) == 0x000068, "Member 'BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget, CallFunc_IsHovered_ReturnValue) == 0x00006C, "Member 'BP_KeyBindingElementWidget_C_ExecuteUbergraph_BP_KeyBindingElementWidget::CallFunc_IsHovered_ReturnValue' has a wrong offset!");

// Function BP_KeyBindingElementWidget.BP_KeyBindingElementWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_KeyBindingElementWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeyBindingElementWidget_C_Tick) == 0x000004, "Wrong alignment on BP_KeyBindingElementWidget_C_Tick");
static_assert(sizeof(BP_KeyBindingElementWidget_C_Tick) == 0x00003C, "Wrong size on BP_KeyBindingElementWidget_C_Tick");
static_assert(offsetof(BP_KeyBindingElementWidget_C_Tick, MyGeometry) == 0x000000, "Member 'BP_KeyBindingElementWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_KeyBindingElementWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_KeyBindingElementWidget.BP_KeyBindingElementWidget_C.StartEditBinding
// 0x0018 (0x0018 - 0x0000)
struct BP_KeyBindingElementWidget_C_StartEditBinding final
{
public:
	bool                                          bIsPrimary;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KeyBindingElementWidget_C_StartEditBinding) == 0x000008, "Wrong alignment on BP_KeyBindingElementWidget_C_StartEditBinding");
static_assert(sizeof(BP_KeyBindingElementWidget_C_StartEditBinding) == 0x000018, "Wrong size on BP_KeyBindingElementWidget_C_StartEditBinding");
static_assert(offsetof(BP_KeyBindingElementWidget_C_StartEditBinding, bIsPrimary) == 0x000000, "Member 'BP_KeyBindingElementWidget_C_StartEditBinding::bIsPrimary' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_StartEditBinding, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_KeyBindingElementWidget_C_StartEditBinding::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_StartEditBinding, Temp_bool_Variable) == 0x000002, "Member 'BP_KeyBindingElementWidget_C_StartEditBinding::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_StartEditBinding, K2Node_Select_Default) == 0x000008, "Member 'BP_KeyBindingElementWidget_C_StartEditBinding::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_StartEditBinding, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_KeyBindingElementWidget_C_StartEditBinding::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_StartEditBinding, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_KeyBindingElementWidget_C_StartEditBinding::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_KeyBindingElementWidget.BP_KeyBindingElementWidget_C.AddCustomBinding
// 0x0040 (0x0040 - 0x0000)
struct BP_KeyBindingElementWidget_C_AddCustomBinding final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_Array_Get_Item;                           // 0x0020(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KeyBindingElementWidget_C_AddCustomBinding) == 0x000008, "Wrong alignment on BP_KeyBindingElementWidget_C_AddCustomBinding");
static_assert(sizeof(BP_KeyBindingElementWidget_C_AddCustomBinding) == 0x000040, "Wrong size on BP_KeyBindingElementWidget_C_AddCustomBinding");
static_assert(offsetof(BP_KeyBindingElementWidget_C_AddCustomBinding, Key) == 0x000000, "Member 'BP_KeyBindingElementWidget_C_AddCustomBinding::Key' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_AddCustomBinding, CallFunc_IsConsolePlatform_ReturnValue) == 0x000018, "Member 'BP_KeyBindingElementWidget_C_AddCustomBinding::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_AddCustomBinding, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_KeyBindingElementWidget_C_AddCustomBinding::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_AddCustomBinding, CallFunc_Array_LastIndex_ReturnValue) == 0x00001C, "Member 'BP_KeyBindingElementWidget_C_AddCustomBinding::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_AddCustomBinding, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_KeyBindingElementWidget_C_AddCustomBinding::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_AddCustomBinding, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000038, "Member 'BP_KeyBindingElementWidget_C_AddCustomBinding::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_AddCustomBinding, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_KeyBindingElementWidget_C_AddCustomBinding::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_KeyBindingElementWidget.BP_KeyBindingElementWidget_C.GetPrimaryKeyText
// 0x0058 (0x0058 - 0x0000)
struct BP_KeyBindingElementWidget_C_GetPrimaryKeyText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class UMordhauInput*                          CallFunc_GetMordhauInput_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetControlScheme_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_Array_Get_Item;                           // 0x0028(0x0018)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetKeyText_KeyText;                       // 0x0040(0x0018)()
};
static_assert(alignof(BP_KeyBindingElementWidget_C_GetPrimaryKeyText) == 0x000008, "Wrong alignment on BP_KeyBindingElementWidget_C_GetPrimaryKeyText");
static_assert(sizeof(BP_KeyBindingElementWidget_C_GetPrimaryKeyText) == 0x000058, "Wrong size on BP_KeyBindingElementWidget_C_GetPrimaryKeyText");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetPrimaryKeyText, ReturnValue) == 0x000000, "Member 'BP_KeyBindingElementWidget_C_GetPrimaryKeyText::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetPrimaryKeyText, CallFunc_GetMordhauInput_ReturnValue) == 0x000018, "Member 'BP_KeyBindingElementWidget_C_GetPrimaryKeyText::CallFunc_GetMordhauInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetPrimaryKeyText, CallFunc_GetControlScheme_ReturnValue) == 0x000020, "Member 'BP_KeyBindingElementWidget_C_GetPrimaryKeyText::CallFunc_GetControlScheme_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetPrimaryKeyText, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_KeyBindingElementWidget_C_GetPrimaryKeyText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetPrimaryKeyText, CallFunc_GetKeyText_KeyText) == 0x000040, "Member 'BP_KeyBindingElementWidget_C_GetPrimaryKeyText::CallFunc_GetKeyText_KeyText' has a wrong offset!");

// Function BP_KeyBindingElementWidget.BP_KeyBindingElementWidget_C.GetSecondaryKeyText
// 0x0058 (0x0058 - 0x0000)
struct BP_KeyBindingElementWidget_C_GetSecondaryKeyText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class UMordhauInput*                          CallFunc_GetMordhauInput_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetControlScheme_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_Array_Get_Item;                           // 0x0028(0x0018)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetKeyText_KeyText;                       // 0x0040(0x0018)()
};
static_assert(alignof(BP_KeyBindingElementWidget_C_GetSecondaryKeyText) == 0x000008, "Wrong alignment on BP_KeyBindingElementWidget_C_GetSecondaryKeyText");
static_assert(sizeof(BP_KeyBindingElementWidget_C_GetSecondaryKeyText) == 0x000058, "Wrong size on BP_KeyBindingElementWidget_C_GetSecondaryKeyText");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetSecondaryKeyText, ReturnValue) == 0x000000, "Member 'BP_KeyBindingElementWidget_C_GetSecondaryKeyText::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetSecondaryKeyText, CallFunc_GetMordhauInput_ReturnValue) == 0x000018, "Member 'BP_KeyBindingElementWidget_C_GetSecondaryKeyText::CallFunc_GetMordhauInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetSecondaryKeyText, CallFunc_GetControlScheme_ReturnValue) == 0x000020, "Member 'BP_KeyBindingElementWidget_C_GetSecondaryKeyText::CallFunc_GetControlScheme_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetSecondaryKeyText, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_KeyBindingElementWidget_C_GetSecondaryKeyText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetSecondaryKeyText, CallFunc_GetKeyText_KeyText) == 0x000040, "Member 'BP_KeyBindingElementWidget_C_GetSecondaryKeyText::CallFunc_GetKeyText_KeyText' has a wrong offset!");

// Function BP_KeyBindingElementWidget.BP_KeyBindingElementWidget_C.GetKeyText
// 0x00B0 (0x00B0 - 0x0000)
struct BP_KeyBindingElementWidget_C_GetKeyText final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bIsEditingBinding;                                 // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   KeyText;                                           // 0x0020(0x0018)(Parm, OutParm)
	class FText                                   EditText;                                          // 0x0038(0x0018)(Edit, BlueprintVisible)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0050(0x0018)()
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetGamepadButtonText_GamepadButtonText;   // 0x0080(0x0018)()
	class FText                                   CallFunc_GetGamepadButtonText_GamepadButtonText_1; // 0x0098(0x0018)()
};
static_assert(alignof(BP_KeyBindingElementWidget_C_GetKeyText) == 0x000008, "Wrong alignment on BP_KeyBindingElementWidget_C_GetKeyText");
static_assert(sizeof(BP_KeyBindingElementWidget_C_GetKeyText) == 0x0000B0, "Wrong size on BP_KeyBindingElementWidget_C_GetKeyText");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetKeyText, Key) == 0x000000, "Member 'BP_KeyBindingElementWidget_C_GetKeyText::Key' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetKeyText, bIsEditingBinding) == 0x000018, "Member 'BP_KeyBindingElementWidget_C_GetKeyText::bIsEditingBinding' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetKeyText, KeyText) == 0x000020, "Member 'BP_KeyBindingElementWidget_C_GetKeyText::KeyText' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetKeyText, EditText) == 0x000038, "Member 'BP_KeyBindingElementWidget_C_GetKeyText::EditText' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetKeyText, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000050, "Member 'BP_KeyBindingElementWidget_C_GetKeyText::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetKeyText, CallFunc_IsConsolePlatform_ReturnValue) == 0x000068, "Member 'BP_KeyBindingElementWidget_C_GetKeyText::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetKeyText, CallFunc_Conv_TextToString_ReturnValue) == 0x000070, "Member 'BP_KeyBindingElementWidget_C_GetKeyText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetKeyText, CallFunc_GetGamepadButtonText_GamepadButtonText) == 0x000080, "Member 'BP_KeyBindingElementWidget_C_GetKeyText::CallFunc_GetGamepadButtonText_GamepadButtonText' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetKeyText, CallFunc_GetGamepadButtonText_GamepadButtonText_1) == 0x000098, "Member 'BP_KeyBindingElementWidget_C_GetKeyText::CallFunc_GetGamepadButtonText_GamepadButtonText_1' has a wrong offset!");

// Function BP_KeyBindingElementWidget.BP_KeyBindingElementWidget_C.SetCustomBinding
// 0x0030 (0x0030 - 0x0000)
struct BP_KeyBindingElementWidget_C_SetCustomBinding final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bIsPrimary;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauInput*                          CallFunc_GetMordhauInput_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeyBindingElementWidget_C_SetCustomBinding) == 0x000008, "Wrong alignment on BP_KeyBindingElementWidget_C_SetCustomBinding");
static_assert(sizeof(BP_KeyBindingElementWidget_C_SetCustomBinding) == 0x000030, "Wrong size on BP_KeyBindingElementWidget_C_SetCustomBinding");
static_assert(offsetof(BP_KeyBindingElementWidget_C_SetCustomBinding, Key) == 0x000000, "Member 'BP_KeyBindingElementWidget_C_SetCustomBinding::Key' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_SetCustomBinding, bIsPrimary) == 0x000018, "Member 'BP_KeyBindingElementWidget_C_SetCustomBinding::bIsPrimary' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_SetCustomBinding, CallFunc_GetMordhauInput_ReturnValue) == 0x000020, "Member 'BP_KeyBindingElementWidget_C_SetCustomBinding::CallFunc_GetMordhauInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_SetCustomBinding, CallFunc_Array_LastIndex_ReturnValue) == 0x000028, "Member 'BP_KeyBindingElementWidget_C_SetCustomBinding::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");

// Function BP_KeyBindingElementWidget.BP_KeyBindingElementWidget_C.GetCustomBinding
// 0x0058 (0x0058 - 0x0000)
struct BP_KeyBindingElementWidget_C_GetCustomBinding final
{
public:
	bool                                          bIsPrimary;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Key;                                               // 0x0008(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKey>                           K2Node_Select_Default;                             // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_Array_Get_Item;                           // 0x0040(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(BP_KeyBindingElementWidget_C_GetCustomBinding) == 0x000008, "Wrong alignment on BP_KeyBindingElementWidget_C_GetCustomBinding");
static_assert(sizeof(BP_KeyBindingElementWidget_C_GetCustomBinding) == 0x000058, "Wrong size on BP_KeyBindingElementWidget_C_GetCustomBinding");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetCustomBinding, bIsPrimary) == 0x000000, "Member 'BP_KeyBindingElementWidget_C_GetCustomBinding::bIsPrimary' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetCustomBinding, Key) == 0x000008, "Member 'BP_KeyBindingElementWidget_C_GetCustomBinding::Key' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetCustomBinding, Temp_bool_Variable) == 0x000020, "Member 'BP_KeyBindingElementWidget_C_GetCustomBinding::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetCustomBinding, K2Node_Select_Default) == 0x000028, "Member 'BP_KeyBindingElementWidget_C_GetCustomBinding::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetCustomBinding, CallFunc_Array_LastIndex_ReturnValue) == 0x000038, "Member 'BP_KeyBindingElementWidget_C_GetCustomBinding::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetCustomBinding, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_KeyBindingElementWidget_C_GetCustomBinding::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_KeyBindingElementWidget.BP_KeyBindingElementWidget_C.GetActionNameText
// 0x0030 (0x0030 - 0x0000)
struct BP_KeyBindingElementWidget_C_GetActionNameText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_GetActionText_ActionText;                 // 0x0018(0x0018)()
};
static_assert(alignof(BP_KeyBindingElementWidget_C_GetActionNameText) == 0x000008, "Wrong alignment on BP_KeyBindingElementWidget_C_GetActionNameText");
static_assert(sizeof(BP_KeyBindingElementWidget_C_GetActionNameText) == 0x000030, "Wrong size on BP_KeyBindingElementWidget_C_GetActionNameText");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetActionNameText, ReturnValue) == 0x000000, "Member 'BP_KeyBindingElementWidget_C_GetActionNameText::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_GetActionNameText, CallFunc_GetActionText_ActionText) == 0x000018, "Member 'BP_KeyBindingElementWidget_C_GetActionNameText::CallFunc_GetActionText_ActionText' has a wrong offset!");

// Function BP_KeyBindingElementWidget.BP_KeyBindingElementWidget_C.EndEditBinding
// 0x0002 (0x0002 - 0x0000)
struct BP_KeyBindingElementWidget_C_EndEditBinding final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KeyBindingElementWidget_C_EndEditBinding) == 0x000001, "Wrong alignment on BP_KeyBindingElementWidget_C_EndEditBinding");
static_assert(sizeof(BP_KeyBindingElementWidget_C_EndEditBinding) == 0x000002, "Wrong size on BP_KeyBindingElementWidget_C_EndEditBinding");
static_assert(offsetof(BP_KeyBindingElementWidget_C_EndEditBinding, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_KeyBindingElementWidget_C_EndEditBinding::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_EndEditBinding, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_KeyBindingElementWidget_C_EndEditBinding::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_KeyBindingElementWidget.BP_KeyBindingElementWidget_C.UpdateGlyph
// 0x0020 (0x0020 - 0x0000)
struct BP_KeyBindingElementWidget_C_UpdateGlyph final
{
public:
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_Array_Get_Item;                           // 0x0008(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(BP_KeyBindingElementWidget_C_UpdateGlyph) == 0x000008, "Wrong alignment on BP_KeyBindingElementWidget_C_UpdateGlyph");
static_assert(sizeof(BP_KeyBindingElementWidget_C_UpdateGlyph) == 0x000020, "Wrong size on BP_KeyBindingElementWidget_C_UpdateGlyph");
static_assert(offsetof(BP_KeyBindingElementWidget_C_UpdateGlyph, CallFunc_Array_LastIndex_ReturnValue) == 0x000000, "Member 'BP_KeyBindingElementWidget_C_UpdateGlyph::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_UpdateGlyph, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_KeyBindingElementWidget_C_UpdateGlyph::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_KeyBindingElementWidget.BP_KeyBindingElementWidget_C.Get_SecondaryKeyText_Visibility_0
// 0x0009 (0x0009 - 0x0000)
struct BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0) == 0x000001, "Wrong alignment on BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0");
static_assert(sizeof(BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0) == 0x000009, "Wrong size on BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0");
static_assert(offsetof(BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0, CallFunc_IsConsolePlatform_ReturnValue) == 0x000004, "Member 'BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0, CallFunc_IsVisible_ReturnValue) == 0x000005, "Member 'BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0, CallFunc_BooleanOR_ReturnValue_1) == 0x000007, "Member 'BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0, K2Node_Select_Default) == 0x000008, "Member 'BP_KeyBindingElementWidget_C_Get_SecondaryKeyText_Visibility_0::K2Node_Select_Default' has a wrong offset!");

}

