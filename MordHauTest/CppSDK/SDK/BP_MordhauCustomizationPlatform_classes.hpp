#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MordhauCustomizationPlatform

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Mordhau_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MordhauCustomizationPlatform.BP_MordhauCustomizationPlatform_C
// 0x01A0 (0x03C0 - 0x0220)
class ABP_MordhauCustomizationPlatform_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_MordhauCustomizationObserver_C*     CustomizationObserver;                             // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauCharacter_C*                 CharacterDoll;                                     // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauEquipment*                      EquipmentDoll;                                     // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EquipmentDollRotation;                             // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ControllingWidget;                                 // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterDollRotation;                             // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EquipmentDollZoom;                                 // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterDollZoom;                                 // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentZoom;                                       // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharacterProfile                      QueuedProfileUpdate;                               // 0x0268(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         LastProfileUpdateFrame;                            // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WantsProfileUpdate;                                // 0x0324(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastEquipmentId;                                   // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterDollRotationTarget;                       // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EquipmentDollRotationTarget;                       // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastEquipmentSkin;                                 // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FastRotationUpdate;                                // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 LastShield;                                        // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LastNonShieldEquipment;                            // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CharacterInstantEquipmentSwitch;                   // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EquipmentCustomizationSpot_C*       EquipmentCustomizationSpot;                        // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CharacterDollCreatedFrame;                         // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoCharacterPreviewPose;                            // 0x0364(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PreviewPoseRandom;                                 // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceColorOverride;                                // 0x036C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D[0x3];                                      // 0x036D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ColorAOverride;                                    // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorBOverride;                                    // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MainMenu_C*                         MainMenu;                                          // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         CameraSideOffset;                                  // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Focused_Socket;                                    // 0x039C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Character_Zoom_Min;                                // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Character_Zoom_Max;                                // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Zoom_Target;                                       // 0x03AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraVerticalOffset;                              // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Equipment_Zoom_Min;                                // 0x03B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Equipment_Zoom_Max;                                // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MordhauCustomizationPlatform(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void Init();
	void SpawnEquipment(int32 EquipmentIndex, class AMordhauEquipment** Equipment);
	void DestroyDolls();
	void SpawnCharacterDollIfNone();
	void RotateEquipmentDoll(float Delta, bool Smooth);
	void DestroyEquipmentDoll();
	void DestroyCharacterDoll();
	void RotateCharacterDoll(float Delta, bool Smooth);
	void ZoomEquipmentDoll(float Delta);
	void ZoomCharacterDoll(float Delta);
	void UpdateCamera(float DeltaSeconds);
	void UpdateCharacterDoll(const struct FCharacterProfile& Profile, bool OnlyUpdateMaterials, bool InstantEquipmentSwitch, bool DoPreviewPose, int32 PreviewPoseRandom_0);
	void TryUpdateCharacterDollInternal();
	void UpdateCharacterDollRotation(float DeltaTime);
	void UpdateEquipmentDollRotation(float DeltaTime);
	void GetProfileWrapper(class UCharacterProfileBPWrapper** Wrapper);
	void Reset_Character_Camera();
	void Fully_Zoom_Character_Camera(bool Zoom_Out, bool Instant);
	void Fully_Zoom_Equipment_Camera(bool Zoom_Out, bool Instant);
	void Reset_Doll_Rotation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MordhauCustomizationPlatform_C">();
	}
	static class ABP_MordhauCustomizationPlatform_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MordhauCustomizationPlatform_C>();
	}
};
static_assert(alignof(ABP_MordhauCustomizationPlatform_C) == 0x000008, "Wrong alignment on ABP_MordhauCustomizationPlatform_C");
static_assert(sizeof(ABP_MordhauCustomizationPlatform_C) == 0x0003C0, "Wrong size on ABP_MordhauCustomizationPlatform_C");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, UberGraphFrame) == 0x000220, "Member 'ABP_MordhauCustomizationPlatform_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_MordhauCustomizationPlatform_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, CustomizationObserver) == 0x000230, "Member 'ABP_MordhauCustomizationPlatform_C::CustomizationObserver' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, CharacterDoll) == 0x000238, "Member 'ABP_MordhauCustomizationPlatform_C::CharacterDoll' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, EquipmentDoll) == 0x000240, "Member 'ABP_MordhauCustomizationPlatform_C::EquipmentDoll' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, EquipmentDollRotation) == 0x000248, "Member 'ABP_MordhauCustomizationPlatform_C::EquipmentDollRotation' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, ControllingWidget) == 0x000250, "Member 'ABP_MordhauCustomizationPlatform_C::ControllingWidget' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, CharacterDollRotation) == 0x000258, "Member 'ABP_MordhauCustomizationPlatform_C::CharacterDollRotation' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, EquipmentDollZoom) == 0x00025C, "Member 'ABP_MordhauCustomizationPlatform_C::EquipmentDollZoom' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, CharacterDollZoom) == 0x000260, "Member 'ABP_MordhauCustomizationPlatform_C::CharacterDollZoom' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, CurrentZoom) == 0x000264, "Member 'ABP_MordhauCustomizationPlatform_C::CurrentZoom' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, QueuedProfileUpdate) == 0x000268, "Member 'ABP_MordhauCustomizationPlatform_C::QueuedProfileUpdate' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, LastProfileUpdateFrame) == 0x000320, "Member 'ABP_MordhauCustomizationPlatform_C::LastProfileUpdateFrame' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, WantsProfileUpdate) == 0x000324, "Member 'ABP_MordhauCustomizationPlatform_C::WantsProfileUpdate' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, LastEquipmentId) == 0x000328, "Member 'ABP_MordhauCustomizationPlatform_C::LastEquipmentId' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, CharacterDollRotationTarget) == 0x00032C, "Member 'ABP_MordhauCustomizationPlatform_C::CharacterDollRotationTarget' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, EquipmentDollRotationTarget) == 0x000330, "Member 'ABP_MordhauCustomizationPlatform_C::EquipmentDollRotationTarget' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, LastEquipmentSkin) == 0x000334, "Member 'ABP_MordhauCustomizationPlatform_C::LastEquipmentSkin' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, FastRotationUpdate) == 0x000338, "Member 'ABP_MordhauCustomizationPlatform_C::FastRotationUpdate' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, LastShield) == 0x000340, "Member 'ABP_MordhauCustomizationPlatform_C::LastShield' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, LastNonShieldEquipment) == 0x000348, "Member 'ABP_MordhauCustomizationPlatform_C::LastNonShieldEquipment' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, CharacterInstantEquipmentSwitch) == 0x000350, "Member 'ABP_MordhauCustomizationPlatform_C::CharacterInstantEquipmentSwitch' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, EquipmentCustomizationSpot) == 0x000358, "Member 'ABP_MordhauCustomizationPlatform_C::EquipmentCustomizationSpot' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, CharacterDollCreatedFrame) == 0x000360, "Member 'ABP_MordhauCustomizationPlatform_C::CharacterDollCreatedFrame' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, DoCharacterPreviewPose) == 0x000364, "Member 'ABP_MordhauCustomizationPlatform_C::DoCharacterPreviewPose' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, PreviewPoseRandom) == 0x000368, "Member 'ABP_MordhauCustomizationPlatform_C::PreviewPoseRandom' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, ForceColorOverride) == 0x00036C, "Member 'ABP_MordhauCustomizationPlatform_C::ForceColorOverride' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, ColorAOverride) == 0x000370, "Member 'ABP_MordhauCustomizationPlatform_C::ColorAOverride' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, ColorBOverride) == 0x000380, "Member 'ABP_MordhauCustomizationPlatform_C::ColorBOverride' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, MainMenu) == 0x000390, "Member 'ABP_MordhauCustomizationPlatform_C::MainMenu' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, CameraSideOffset) == 0x000398, "Member 'ABP_MordhauCustomizationPlatform_C::CameraSideOffset' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, Focused_Socket) == 0x00039C, "Member 'ABP_MordhauCustomizationPlatform_C::Focused_Socket' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, Character_Zoom_Min) == 0x0003A4, "Member 'ABP_MordhauCustomizationPlatform_C::Character_Zoom_Min' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, Character_Zoom_Max) == 0x0003A8, "Member 'ABP_MordhauCustomizationPlatform_C::Character_Zoom_Max' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, Zoom_Target) == 0x0003AC, "Member 'ABP_MordhauCustomizationPlatform_C::Zoom_Target' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, CameraVerticalOffset) == 0x0003B0, "Member 'ABP_MordhauCustomizationPlatform_C::CameraVerticalOffset' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, Equipment_Zoom_Min) == 0x0003B4, "Member 'ABP_MordhauCustomizationPlatform_C::Equipment_Zoom_Min' has a wrong offset!");
static_assert(offsetof(ABP_MordhauCustomizationPlatform_C, Equipment_Zoom_Max) == 0x0003B8, "Member 'ABP_MordhauCustomizationPlatform_C::Equipment_Zoom_Max' has a wrong offset!");

}

