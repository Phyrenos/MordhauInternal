#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RecurveBow_DIH

#include "Basic.hpp"

#include "BP_RecurveBow_DIH_classes.hpp"
#include "BP_RecurveBow_DIH_parameters.hpp"


namespace SDK
{

// Function BP_RecurveBow_DIH.BP_RecurveBow_DIH_C.ExecuteUbergraph_BP_RecurveBow_DIH
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RecurveBow_DIH_C::ExecuteUbergraph_BP_RecurveBow_DIH(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecurveBow_DIH_C", "ExecuteUbergraph_BP_RecurveBow_DIH");

	Params::BP_RecurveBow_DIH_C_ExecuteUbergraph_BP_RecurveBow_DIH Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RecurveBow_DIH.BP_RecurveBow_DIH_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_RecurveBow_DIH_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecurveBow_DIH_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RecurveBow_DIH.BP_RecurveBow_DIH_C.OnAmmoChanged
// (Event, Public, BlueprintEvent)

void ABP_RecurveBow_DIH_C::OnAmmoChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecurveBow_DIH_C", "OnAmmoChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RecurveBow_DIH.BP_RecurveBow_DIH_C.BeginRestocking
// (BlueprintCallable, BlueprintEvent)

void ABP_RecurveBow_DIH_C::BeginRestocking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecurveBow_DIH_C", "BeginRestocking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RecurveBow_DIH.BP_RecurveBow_DIH_C.AutoRestock
// (BlueprintCallable, BlueprintEvent)

void ABP_RecurveBow_DIH_C::AutoRestock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecurveBow_DIH_C", "AutoRestock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RecurveBow_DIH.BP_RecurveBow_DIH_C.FireEffectsMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_RecurveBow_DIH_C::FireEffectsMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecurveBow_DIH_C", "FireEffectsMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RecurveBow_DIH.BP_RecurveBow_DIH_C.CreateAndFireProjectile
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Accuracy                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Projectile                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RecurveBow_DIH_C::CreateAndFireProjectile(float Accuracy, class UClass* Projectile, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecurveBow_DIH_C", "CreateAndFireProjectile");

	Params::BP_RecurveBow_DIH_C_CreateAndFireProjectile Parms{};

	Parms.Accuracy = Accuracy;
	Parms.Projectile = Projectile;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RecurveBow_DIH.BP_RecurveBow_DIH_C.FireProjectile
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Origin                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Orientation                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class AController*                      OwningController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ExpectedDelay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RecurveBow_DIH_C::FireProjectile(const struct FVector& Origin, const struct FRotator& Orientation, class AController* OwningController, float ExpectedDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecurveBow_DIH_C", "FireProjectile");

	Params::BP_RecurveBow_DIH_C_FireProjectile Parms{};

	Parms.Origin = std::move(Origin);
	Parms.Orientation = std::move(Orientation);
	Parms.OwningController = OwningController;
	Parms.ExpectedDelay = ExpectedDelay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RecurveBow_DIH.BP_RecurveBow_DIH_C.UpdateEquipmentState
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_RecurveBow_DIH_C::UpdateEquipmentState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecurveBow_DIH_C", "UpdateEquipmentState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RecurveBow_DIH.BP_RecurveBow_DIH_C.OnLoadedChanged
// (Event, Public, BlueprintEvent)

void ABP_RecurveBow_DIH_C::OnLoadedChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecurveBow_DIH_C", "OnLoadedChanged");

	UObject::ProcessEvent(Func, nullptr);
}

}

