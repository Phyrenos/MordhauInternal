#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SelectionMenu

#include "Basic.hpp"

#include "BP_SelectionMenu_classes.hpp"
#include "BP_SelectionMenu_parameters.hpp"


namespace SDK
{

// Function BP_SelectionMenu.BP_SelectionMenu_C.Add Entry
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CustomizationItemEntry_C*     Entry                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Add_to_Entries_Array                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SelectionMenu_C::Add_Entry(class UBP_CustomizationItemEntry_C* Entry, bool Add_to_Entries_Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SelectionMenu_C", "Add Entry");

	Params::BP_SelectionMenu_C_Add_Entry Parms{};

	Parms.Entry = Entry;
	Parms.Add_to_Entries_Array = Add_to_Entries_Array;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SelectionMenu.BP_SelectionMenu_C.Clear Child Entries
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Clear_Entries_Array                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Clear_Filtered_Entries_Array                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SelectionMenu_C::Clear_Child_Entries(bool Clear_Entries_Array, bool Clear_Filtered_Entries_Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SelectionMenu_C", "Clear Child Entries");

	Params::BP_SelectionMenu_C_Clear_Child_Entries Parms{};

	Parms.Clear_Entries_Array = Clear_Entries_Array;
	Parms.Clear_Filtered_Entries_Array = Clear_Filtered_Entries_Array;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SelectionMenu.BP_SelectionMenu_C.UpdateEntries
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SelectionMenu_C::UpdateEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SelectionMenu_C", "UpdateEntries");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SelectionMenu.BP_SelectionMenu_C.SortByCost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ObjA                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          ObjB                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret_Val                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SelectionMenu_C::SortByCost(class UObject* ObjA, class UObject* ObjB, bool* Ret_Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SelectionMenu_C", "SortByCost");

	Params::BP_SelectionMenu_C_SortByCost Parms{};

	Parms.ObjA = ObjA;
	Parms.ObjB = ObjB;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret_Val != nullptr)
		*Ret_Val = Parms.Ret_Val;
}


// Function BP_SelectionMenu.BP_SelectionMenu_C.SortBySelected
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ObjA                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          ObjB                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret_Val                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SelectionMenu_C::SortBySelected(class UObject* ObjA, class UObject* ObjB, bool* Ret_Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SelectionMenu_C", "SortBySelected");

	Params::BP_SelectionMenu_C_SortBySelected Parms{};

	Parms.ObjA = ObjA;
	Parms.ObjB = ObjB;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret_Val != nullptr)
		*Ret_Val = Parms.Ret_Val;
}


// Function BP_SelectionMenu.BP_SelectionMenu_C.SortByName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ObjA                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          ObjB                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret_Val                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SelectionMenu_C::SortByName(class UObject* ObjA, class UObject* ObjB, bool* Ret_Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SelectionMenu_C", "SortByName");

	Params::BP_SelectionMenu_C_SortByName Parms{};

	Parms.ObjA = ObjA;
	Parms.ObjB = ObjB;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret_Val != nullptr)
		*Ret_Val = Parms.Ret_Val;
}


// Function BP_SelectionMenu.BP_SelectionMenu_C.SortById
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ObjA                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          ObjB                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret_Val                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SelectionMenu_C::SortById(class UObject* ObjA, class UObject* ObjB, bool* Ret_Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SelectionMenu_C", "SortById");

	Params::BP_SelectionMenu_C_SortById Parms{};

	Parms.ObjA = ObjA;
	Parms.ObjB = ObjB;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret_Val != nullptr)
		*Ret_Val = Parms.Ret_Val;
}


// Function BP_SelectionMenu.BP_SelectionMenu_C.Filter and Sort Entries by Function Delegate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void(class UObject* Obj, bool* RetVal)>Filter_FuncDel                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// TDelegate<void(class UObject* ObjA, class UObject* ObjB, bool* RetVal)>Sort_FuncDel                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// bool                                    isAscending                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Filter_Recursively                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Skip_Sorting                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SelectionMenu_C::Filter_and_Sort_Entries_by_Function_Delegate(const TDelegate<void(class UObject* Obj, bool* RetVal)>& Filter_FuncDel, const TDelegate<void(class UObject* ObjA, class UObject* ObjB, bool* RetVal)>& Sort_FuncDel, bool isAscending, bool Filter_Recursively, bool Skip_Sorting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SelectionMenu_C", "Filter and Sort Entries by Function Delegate");

	Params::BP_SelectionMenu_C_Filter_and_Sort_Entries_by_Function_Delegate Parms{};

	Parms.Filter_FuncDel = Filter_FuncDel;
	Parms.Sort_FuncDel = Sort_FuncDel;
	Parms.isAscending = isAscending;
	Parms.Filter_Recursively = Filter_Recursively;
	Parms.Skip_Sorting = Skip_Sorting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SelectionMenu.BP_SelectionMenu_C.FilterByName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ObjA                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret_Val                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SelectionMenu_C::FilterByName(class UObject* ObjA, bool* Ret_Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SelectionMenu_C", "FilterByName");

	Params::BP_SelectionMenu_C_FilterByName Parms{};

	Parms.ObjA = ObjA;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret_Val != nullptr)
		*Ret_Val = Parms.Ret_Val;
}


// Function BP_SelectionMenu.BP_SelectionMenu_C.Remove Entry
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CustomizationItemEntry_C*     Entry                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SelectionMenu_C::Remove_Entry(class UBP_CustomizationItemEntry_C* Entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SelectionMenu_C", "Remove Entry");

	Params::BP_SelectionMenu_C_Remove_Entry Parms{};

	Parms.Entry = Entry;

	UObject::ProcessEvent(Func, &Parms);
}

}

