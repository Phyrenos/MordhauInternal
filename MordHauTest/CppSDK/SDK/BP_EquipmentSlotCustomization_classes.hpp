#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentSlotCustomization

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_ArmoryStates_structs.hpp"
#include "Mordhau_structs.hpp"
#include "BP_CustomizationTab_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_EquipmentSlotCustomization.BP_EquipmentSlotCustomization_C
// 0x01E0 (0x0580 - 0x03A0)
class UBP_EquipmentSlotCustomization_C final : public UBP_CustomizationTab_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_EquipmentSlotCustomization_C;    // 0x03A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       EntryAnimInPlace;                                  // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EntryAnimLeftToRight;                              // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EntryAnimRightToLeft;                              // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               AdvancedStatsButtonWrapper;                        // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AdvancedStatsPanel_C*               BP_AdvancedStatsPanel;                             // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ArrowLineDivider_C*                 BP_ArrowLineDivider;                               // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ColorEntry_C*                       BP_ColorEntry_0;                                   // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ColorEntry_C*                       BP_ColorEntry_1;                                   // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ColorEntry_C*                       BP_ColorEntry_2;                                   // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ColorSelectionMenu_C*               BP_ColorSelectionMenu;                             // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CustomizationTopBar_C*              BP_CustomizationTopBar;                            // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_EquipmentItemEntry_C*               BP_EquipmentItemEntry;                             // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_EquipmentPartSlot_C*                BP_EquipmentPartSlot_Part1;                        // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_EquipmentPartSlot_C*                BP_EquipmentPartSlot_Part2;                        // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_EquipmentPartSlot_C*                BP_EquipmentPartSlot_Part3;                        // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_EquipmentPartSlot_C*                BP_EquipmentPartSlot_Skin;                         // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_EquipmentSelectionMenu_C*           BP_EquipmentSelectionMenu;                         // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PatternEntry_C*                     BP_PatternEntry;                                   // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PatternSelectionMenu_C*             BP_PatternSelectionMenu_294;                       // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PromptButton_New_C*                 BP_PromptButton_AdvancedStats;                     // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PromptButton_New_C*                 BP_PromptButton_Back;                              // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkinSelectionMenu_C*                BP_SkinSelectionMenu;                              // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SmallTopLabel_C*                    BP_SmallTopLabel;                                  // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SmallTopLabel_C*                    BP_SmallTopLabel_1;                                // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_E;                                     // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        MainWidgetSwitcher;                                // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Colors;                                    // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Pattern;                                   // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_3;                                     // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         EquipmentSlotIndex;                                // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasSkins;                                          // 0x04AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasPart1;                                          // 0x04AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasPart2;                                          // 0x04AE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasPart3;                                          // 0x04AF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasColor1;                                         // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasColor2;                                         // 0x04B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasColor3;                                         // 0x04B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasPatterns;                                       // 0x04B3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   EquipmentName;                                     // 0x04B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Cost;                                              // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStrikeButtonActive;                              // 0x04D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          isAltMode;                                         // 0x04D5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D6[0x2];                                      // 0x04D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PartSlot;                                          // 0x04D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_EquipmentPartSlot_C*>        PartSlots;                                         // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         Points_Remaining;                                  // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_Equipment;                                   // 0x04F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F5[0x3];                                      // 0x04F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Skin_Id;                                           // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_ColorEntry_C*>               Color_Slots;                                       // 0x0500(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FEquipmentSkinEntry                    Equipment_Skin;                                    // 0x0510(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Selected_Id;                                       // 0x0568(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Hovered_Part_Slot_Id;                              // 0x056C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EquipmentTooltip_C*                 Equipment_Tooltip;                                 // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauEquipment*                      Equipment_Doll;                                    // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_EquipmentSlotCustomization(int32 EntryPoint);
	void Show_Customization_Screen();
	void BndEvt__BP_EquipmentSlotCustomization_BP_PatternSelectionMenu_294_K2Node_ComponentBoundEvent_22_Back_Button_Clicked__DelegateSignature();
	void PSM_Back();
	void BndEvt__BP_EquipmentSlotCustomization_BP_PatternEntry_K2Node_ComponentBoundEvent_12_OnClick__DelegateSignature(class UBP_CustomizationItemEntry_C* Entry);
	void BndEvt__BP_EquipmentSlotCustomization_BP_EquipmentSelectionMenu_K2Node_ComponentBoundEvent_20_PrevSlotClicked__DelegateSignature();
	void BndEvt__BP_EquipmentSlotCustomization_BP_EquipmentSelectionMenu_K2Node_ComponentBoundEvent_19_NextSlotClicked__DelegateSignature();
	void BndEvt__BP_EquipmentSlotCustomization_BP_EquipmentSelectionMenu_K2Node_ComponentBoundEvent_18_CustomizeButtonClicked__DelegateSignature();
	void PreviousSlot();
	void BndEvt__BP_EquipmentSlotCustomization_BP_AdvancedStatsPanel_K2Node_ComponentBoundEvent_11_AdvancedStatsHidden__DelegateSignature();
	void Next_Slot();
	void BndEvt__BP_EquipmentSlotCustomization_BP_EquipmentItemEntry_K2Node_ComponentBoundEvent_6_OnHover__DelegateSignature(class UBP_CustomizationItemEntry_C* Entry);
	void Repeat_Key_Down(const struct FKey& Key);
	void List_Unhovered();
	void BndEvt__BP_EquipmentSlotCustomization_BP_CustomizationTopBar_K2Node_ComponentBoundEvent_4_Breadcrumb_Clicked__DelegateSignature(const class FString& Breadcrumb);
	void BndEvt__BP_EquipmentSlotCustomization_BP_PromptButton_AdvancedStats_K2Node_ComponentBoundEvent_0_onClicked__DelegateSignature();
	void BndEvt__BP_EquipmentSlotCustomization_BP_PromptButton_Back_K2Node_ComponentBoundEvent_17_onClicked__DelegateSignature();
	void SSM_Back();
	void CSM_Back();
	void ESM_Back();
	void Back();
	void Key_Down(const struct FKey& KeyName);
	void Construct();
	void BndEvt__BP_EquipmentPartSlot_Skin_K2Node_ComponentBoundEvent_10_Button_Clicked__DelegateSignature();
	void BndEvt__BP_EquipmentPartSlot_Part3_K2Node_ComponentBoundEvent_16_Button_Clicked__DelegateSignature();
	void BndEvt__BP_EquipmentPartSlot_Part2_K2Node_ComponentBoundEvent_15_Button_Clicked__DelegateSignature();
	void BndEvt__BP_EquipmentPartSlot_Part1_K2Node_ComponentBoundEvent_5_Button_Clicked__DelegateSignature();
	void Part_Slot_Hovered(int32 Slot_Index);
	void BndEvt__BP_ColorEntry_2_K2Node_ComponentBoundEvent_14_OnClick__DelegateSignature(class UBP_CustomizationItemEntry_C* Entry);
	void BndEvt__BP_ColorEntry_1_K2Node_ComponentBoundEvent_13_OnClick__DelegateSignature(class UBP_CustomizationItemEntry_C* Entry);
	void BndEvt__BP_ColorEntry_K2Node_ComponentBoundEvent_9_OnClick__DelegateSignature(class UBP_CustomizationItemEntry_C* Entry);
	void BndEvt__BP_ColorSelectionMenu_K2Node_ComponentBoundEvent_8_Back_Button_Clicked__DelegateSignature();
	void BndEvt__BP_EquipmentSelectionMenu_K2Node_ComponentBoundEvent_7_Back_Button_Clicked__DelegateSignature();
	void BndEvt__BP_SkinSelectionMenu_K2Node_ComponentBoundEvent_2_Back_Button_Clicked__DelegateSignature();
	void BndEvt__BP_EquipmentItemEntry_K2Node_ComponentBoundEvent_1_OnClick__DelegateSignature(class UBP_CustomizationItemEntry_C* Entry);
	void OnProfileChanged();
	void SetActive();
	void Refresh(bool Skip_Update_Widgets, bool Only_Update_Meta_Widgets);
	void UpdateEquipmentColor(int32 Color_Slot, int32 ID);
	void OnScroll(float ScrollDelta);
	void RegisterPreviewEvents();
	void OnDrag(float DeltaDistance);
	void UpdateWidgets();
	void GetValues(class FText* EquipmentWearableName, int32* Part1Count, int32* Part2Count, int32* Part3Count, uint8* Part1Index, uint8* Part2Index, uint8* Part3Index, uint8* Color1Index, uint8* Color2Index, uint8* Color3Index, uint8* Pattern, int32* PatternCount, TArray<class UClass*>* EquipmentColorTable1, TArray<class UClass*>* EquipmentColorTable2, TArray<class UClass*>* EquipmentColorTable3, TArray<struct FEquipmentSkinEntry>* Skins, int32* Skin, bool* HasColor1_0, bool* HasColor2_0, bool* HasColor3_0, class FText* Part1Name, class FText* Part2Name, class FText* Part3Name, class FText* Part1Type, class FText* Part2Type, class FText* Part3Type, int32* Cost_0);
	ESlateVisibility GetSkinsVisibility();
	ESlateVisibility GetPart1Visibility();
	ESlateVisibility GetPart2Visibility();
	ESlateVisibility GetPart3Visibility();
	ESlateVisibility GetColor1Visibility();
	ESlateVisibility GetColor2Visibility();
	ESlateVisibility GetColor3Visibility();
	ESlateVisibility GetPatternsVisibility();
	void ShowEquipmentChoiceList(bool bInPlaceAnim, bool bLeftToRight);
	void EquipmentSelectionClicked(class UBP_CustomizationItemEntry_C* Entry);
	void EquipmentSelectionHovered(class UBP_CustomizationItemEntry_C* Entry);
	class FText GetToolTipText_0();
	struct FSlateColor Get_CostText_ColorAndOpacity_0();
	ESlateVisibility GetVisibility_1();
	void IsAnySkinAvailable(TArray<struct FEquipmentSkinEntry>& Skins, bool* IsAnySkinAvailable_0);
	void ShowSkinChoiceList();
	void EquipmentSelectionUnhovered();
	void SkinSelectionClicked(class UBP_CustomizationItemEntry_C* Entry);
	void SkinSelectionHovered(class UBP_CustomizationItemEntry_C* Entry);
	void ShowPartChoiceList(int32 CurrentSkinId, int32 CurrentPartType, int32 CurrentPartId, class FName SocketToFocus);
	void PartSelectionClicked(class UBP_CustomizationItemEntry_C* Entry);
	void PartSelectionHovered(class UBP_CustomizationItemEntry_C* Entry);
	void ColorHovered(class UBP_CustomizationItemEntry_C* Entry);
	ESlateVisibility GetVisibility_0();
	void GenerateEquipmentEntries();
	void Show_Customization();
	void GenerateSkinEntries();
	void GeneratePartEntries(int32 Slot_0, int32 Current_ID);
	void Show_Color_Picker(int32 Color_Slot);
	void Get_Colors(int32 Color_Slot, TArray<class UClass*>* Color_Table, class UClass** Color);
	void Color_Entry_Clicked(class UBP_CustomizationItemEntry_C* Entry);
	void Get_Current_Equipment_Info_From_Profile_Slot(class UClass** Equipment_Class, class AMordhauEquipment** AsMordhau_Equipment, int32* ID, bool* Valid, uint8* Skin_Id_0);
	void Initialize_Item_Entry(int32 ID, class UBP_EquipmentItemEntry_C* Entry);
	ESlateVisibility Get_Overlay_Colors_Visibility_0();
	ESlateVisibility Get_WidgetSwitcher_Stats_Visibility_0();
	void Handle_Key_Shortcuts(const struct FKey& Key);
	void Update_Breadcrumb_Header();
	void Update_Meta_Widgets();
	bool DisableElementIfNoneEquipped();
	void Handle_Gamepad_Camera_Controls(const struct FKey& Key);
	void Get_Current_Equipment_Info_From_Doll(class AMordhauEquipment** AsMordhau_Equipment, class UClass** Class_0);
	void Play_Entry_Anim(bool bLeftToRight, bool bInPlace);
	void Refresh_Entries(bool bSkip_Set_Active);
	void Selection_Cancelled();
	void Show_Pattern_Selection_Menu(int32 Selected_Pattern_Id);
	void Pattern_Hovered(class UBP_CustomizationItemEntry_C* Entry);
	void Pattern_Clicked(class UBP_CustomizationItemEntry_C* Entry);
	void Get_Original_Profile_Cost(int32* Cost_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EquipmentSlotCustomization_C">();
	}
	static class UBP_EquipmentSlotCustomization_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_EquipmentSlotCustomization_C>();
	}
};
static_assert(alignof(UBP_EquipmentSlotCustomization_C) == 0x000008, "Wrong alignment on UBP_EquipmentSlotCustomization_C");
static_assert(sizeof(UBP_EquipmentSlotCustomization_C) == 0x000580, "Wrong size on UBP_EquipmentSlotCustomization_C");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, UberGraphFrame_BP_EquipmentSlotCustomization_C) == 0x0003A0, "Member 'UBP_EquipmentSlotCustomization_C::UberGraphFrame_BP_EquipmentSlotCustomization_C' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, EntryAnimInPlace) == 0x0003A8, "Member 'UBP_EquipmentSlotCustomization_C::EntryAnimInPlace' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, EntryAnimLeftToRight) == 0x0003B0, "Member 'UBP_EquipmentSlotCustomization_C::EntryAnimLeftToRight' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, EntryAnimRightToLeft) == 0x0003B8, "Member 'UBP_EquipmentSlotCustomization_C::EntryAnimRightToLeft' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, AdvancedStatsButtonWrapper) == 0x0003C0, "Member 'UBP_EquipmentSlotCustomization_C::AdvancedStatsButtonWrapper' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_AdvancedStatsPanel) == 0x0003C8, "Member 'UBP_EquipmentSlotCustomization_C::BP_AdvancedStatsPanel' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_ArrowLineDivider) == 0x0003D0, "Member 'UBP_EquipmentSlotCustomization_C::BP_ArrowLineDivider' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_ColorEntry_0) == 0x0003D8, "Member 'UBP_EquipmentSlotCustomization_C::BP_ColorEntry_0' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_ColorEntry_1) == 0x0003E0, "Member 'UBP_EquipmentSlotCustomization_C::BP_ColorEntry_1' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_ColorEntry_2) == 0x0003E8, "Member 'UBP_EquipmentSlotCustomization_C::BP_ColorEntry_2' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_ColorSelectionMenu) == 0x0003F0, "Member 'UBP_EquipmentSlotCustomization_C::BP_ColorSelectionMenu' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_CustomizationTopBar) == 0x0003F8, "Member 'UBP_EquipmentSlotCustomization_C::BP_CustomizationTopBar' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_EquipmentItemEntry) == 0x000400, "Member 'UBP_EquipmentSlotCustomization_C::BP_EquipmentItemEntry' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_EquipmentPartSlot_Part1) == 0x000408, "Member 'UBP_EquipmentSlotCustomization_C::BP_EquipmentPartSlot_Part1' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_EquipmentPartSlot_Part2) == 0x000410, "Member 'UBP_EquipmentSlotCustomization_C::BP_EquipmentPartSlot_Part2' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_EquipmentPartSlot_Part3) == 0x000418, "Member 'UBP_EquipmentSlotCustomization_C::BP_EquipmentPartSlot_Part3' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_EquipmentPartSlot_Skin) == 0x000420, "Member 'UBP_EquipmentSlotCustomization_C::BP_EquipmentPartSlot_Skin' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_EquipmentSelectionMenu) == 0x000428, "Member 'UBP_EquipmentSlotCustomization_C::BP_EquipmentSelectionMenu' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_PatternEntry) == 0x000430, "Member 'UBP_EquipmentSlotCustomization_C::BP_PatternEntry' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_PatternSelectionMenu_294) == 0x000438, "Member 'UBP_EquipmentSlotCustomization_C::BP_PatternSelectionMenu_294' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_PromptButton_AdvancedStats) == 0x000440, "Member 'UBP_EquipmentSlotCustomization_C::BP_PromptButton_AdvancedStats' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_PromptButton_Back) == 0x000448, "Member 'UBP_EquipmentSlotCustomization_C::BP_PromptButton_Back' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_SkinSelectionMenu) == 0x000450, "Member 'UBP_EquipmentSlotCustomization_C::BP_SkinSelectionMenu' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_SmallTopLabel) == 0x000458, "Member 'UBP_EquipmentSlotCustomization_C::BP_SmallTopLabel' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, BP_SmallTopLabel_1) == 0x000460, "Member 'UBP_EquipmentSlotCustomization_C::BP_SmallTopLabel_1' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, CanvasPanel_E) == 0x000468, "Member 'UBP_EquipmentSlotCustomization_C::CanvasPanel_E' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, Image) == 0x000470, "Member 'UBP_EquipmentSlotCustomization_C::Image' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, Image_0) == 0x000478, "Member 'UBP_EquipmentSlotCustomization_C::Image_0' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, Image_1) == 0x000480, "Member 'UBP_EquipmentSlotCustomization_C::Image_1' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, MainWidgetSwitcher) == 0x000488, "Member 'UBP_EquipmentSlotCustomization_C::MainWidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, Overlay_Colors) == 0x000490, "Member 'UBP_EquipmentSlotCustomization_C::Overlay_Colors' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, Overlay_Pattern) == 0x000498, "Member 'UBP_EquipmentSlotCustomization_C::Overlay_Pattern' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, VerticalBox_3) == 0x0004A0, "Member 'UBP_EquipmentSlotCustomization_C::VerticalBox_3' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, EquipmentSlotIndex) == 0x0004A8, "Member 'UBP_EquipmentSlotCustomization_C::EquipmentSlotIndex' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, HasSkins) == 0x0004AC, "Member 'UBP_EquipmentSlotCustomization_C::HasSkins' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, HasPart1) == 0x0004AD, "Member 'UBP_EquipmentSlotCustomization_C::HasPart1' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, HasPart2) == 0x0004AE, "Member 'UBP_EquipmentSlotCustomization_C::HasPart2' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, HasPart3) == 0x0004AF, "Member 'UBP_EquipmentSlotCustomization_C::HasPart3' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, HasColor1) == 0x0004B0, "Member 'UBP_EquipmentSlotCustomization_C::HasColor1' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, HasColor2) == 0x0004B1, "Member 'UBP_EquipmentSlotCustomization_C::HasColor2' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, HasColor3) == 0x0004B2, "Member 'UBP_EquipmentSlotCustomization_C::HasColor3' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, HasPatterns) == 0x0004B3, "Member 'UBP_EquipmentSlotCustomization_C::HasPatterns' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, EquipmentName) == 0x0004B8, "Member 'UBP_EquipmentSlotCustomization_C::EquipmentName' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, Cost) == 0x0004D0, "Member 'UBP_EquipmentSlotCustomization_C::Cost' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, IsStrikeButtonActive) == 0x0004D4, "Member 'UBP_EquipmentSlotCustomization_C::IsStrikeButtonActive' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, isAltMode) == 0x0004D5, "Member 'UBP_EquipmentSlotCustomization_C::isAltMode' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, PartSlot) == 0x0004D8, "Member 'UBP_EquipmentSlotCustomization_C::PartSlot' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, PartSlots) == 0x0004E0, "Member 'UBP_EquipmentSlotCustomization_C::PartSlots' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, Points_Remaining) == 0x0004F0, "Member 'UBP_EquipmentSlotCustomization_C::Points_Remaining' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, Valid_Equipment) == 0x0004F4, "Member 'UBP_EquipmentSlotCustomization_C::Valid_Equipment' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, Skin_Id) == 0x0004F8, "Member 'UBP_EquipmentSlotCustomization_C::Skin_Id' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, Color_Slots) == 0x000500, "Member 'UBP_EquipmentSlotCustomization_C::Color_Slots' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, Equipment_Skin) == 0x000510, "Member 'UBP_EquipmentSlotCustomization_C::Equipment_Skin' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, Selected_Id) == 0x000568, "Member 'UBP_EquipmentSlotCustomization_C::Selected_Id' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, Hovered_Part_Slot_Id) == 0x00056C, "Member 'UBP_EquipmentSlotCustomization_C::Hovered_Part_Slot_Id' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, Equipment_Tooltip) == 0x000570, "Member 'UBP_EquipmentSlotCustomization_C::Equipment_Tooltip' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentSlotCustomization_C, Equipment_Doll) == 0x000578, "Member 'UBP_EquipmentSlotCustomization_C::Equipment_Doll' has a wrong offset!");

}

