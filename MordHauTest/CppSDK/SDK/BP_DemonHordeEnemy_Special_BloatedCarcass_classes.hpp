#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DemonHordeEnemy_Special_BloatedCarcass

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_DemonHordeEnemy_Special_classes.hpp"
#include "Mordhau_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DemonHordeEnemy_Special_BloatedCarcass.BP_DemonHordeEnemy_Special_BloatedCarcass_C
// 0x0020 (0x1550 - 0x1530)
class ABP_DemonHordeEnemy_Special_BloatedCarcass_C final : public ABP_DemonHordeEnemy_Special_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_DemonHordeEnemy_Special_BloatedCarcass_C; // 0x1530(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class USphereComponent*                       ExplodeSphere;                                     // 0x1538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStateCooldown;                                   // 0x1540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1541[0x3];                                     // 0x1541(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StateCooldown;                                     // 0x1544(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStateLaunching;                                  // 0x1548(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WantsStateLaunch;                                  // 0x1549(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_154A[0x2];                                     // 0x154A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ExplodeMaxDamage;                                  // 0x154C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DemonHordeEnemy_Special_BloatedCarcass(int32 EntryPoint);
	void ScreamingMulti(bool Active);
	void FirePukeProjectiles(float IntervalDelay, float VerticalAngle, float Accuracy, float SpeedMin, float SpeedMax, float HeightOffset);
	void ExplodeEffectsMulti();
	void ImpactKnockback(class AActor* ImpactTarget);
	void ReceiveMordhauDamage(float Damage, const struct FHitResult& HitResult, EMordhauDamageType DamageType, uint8 SubDamageType, class AActor* Source, class AActor* Agent, class AController* EventInstigator);
	void OnLanded(const struct FHitResult& Hit);
	void StartStateCooldown();
	void BehaviourLoop();
	void ReceiveBeginPlay();
	void OnDied(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source, class AActor* Agent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DemonHordeEnemy_Special_BloatedCarcass_C">();
	}
	static class ABP_DemonHordeEnemy_Special_BloatedCarcass_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DemonHordeEnemy_Special_BloatedCarcass_C>();
	}
};
static_assert(alignof(ABP_DemonHordeEnemy_Special_BloatedCarcass_C) == 0x000010, "Wrong alignment on ABP_DemonHordeEnemy_Special_BloatedCarcass_C");
static_assert(sizeof(ABP_DemonHordeEnemy_Special_BloatedCarcass_C) == 0x001550, "Wrong size on ABP_DemonHordeEnemy_Special_BloatedCarcass_C");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_BloatedCarcass_C, UberGraphFrame_BP_DemonHordeEnemy_Special_BloatedCarcass_C) == 0x001530, "Member 'ABP_DemonHordeEnemy_Special_BloatedCarcass_C::UberGraphFrame_BP_DemonHordeEnemy_Special_BloatedCarcass_C' has a wrong offset!");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_BloatedCarcass_C, ExplodeSphere) == 0x001538, "Member 'ABP_DemonHordeEnemy_Special_BloatedCarcass_C::ExplodeSphere' has a wrong offset!");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_BloatedCarcass_C, IsStateCooldown) == 0x001540, "Member 'ABP_DemonHordeEnemy_Special_BloatedCarcass_C::IsStateCooldown' has a wrong offset!");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_BloatedCarcass_C, StateCooldown) == 0x001544, "Member 'ABP_DemonHordeEnemy_Special_BloatedCarcass_C::StateCooldown' has a wrong offset!");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_BloatedCarcass_C, IsStateLaunching) == 0x001548, "Member 'ABP_DemonHordeEnemy_Special_BloatedCarcass_C::IsStateLaunching' has a wrong offset!");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_BloatedCarcass_C, WantsStateLaunch) == 0x001549, "Member 'ABP_DemonHordeEnemy_Special_BloatedCarcass_C::WantsStateLaunch' has a wrong offset!");
static_assert(offsetof(ABP_DemonHordeEnemy_Special_BloatedCarcass_C, ExplodeMaxDamage) == 0x00154C, "Member 'ABP_DemonHordeEnemy_Special_BloatedCarcass_C::ExplodeMaxDamage' has a wrong offset!");

}

