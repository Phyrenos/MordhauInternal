#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_BallistaFix

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Mordhau_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AB_BallistaFix.AB_BallistaFix_C
// 0x0700 (0x0A80 - 0x0380)
class UAB_BallistaFix_C final : public UAdvancedCharacterAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x03B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x03E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0408(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0430(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0458(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0480(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0500(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0530(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x05B0(0x0030)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x05E0(0x0050)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0630(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0660(0x00B0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0710(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0730(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0838(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0858(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0960(0x0108)()
	int32                                         State;                                             // 0x0A68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookUp;                                            // 0x0A6C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Turn;                                              // 0x0A70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnTurnValue;                                    // 0x0A74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HasDriverFloat;                                    // 0x0A78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReloadTime;                                        // 0x0A7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AB_BallistaFix(int32 EntryPoint);
	void BlueprintBeginPlay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_BallistaFix_AnimGraphNode_TransitionResult_33EE963C4FA311C985F8BA888A857377();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_BallistaFix_AnimGraphNode_TransitionResult_CA8A52954199C3DE488FC5B003D5BE99();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_BallistaFix_AnimGraphNode_TransitionResult_E274503849BC207BAA7C548DFD4347B1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_BallistaFix_AnimGraphNode_TransitionResult_3E29D7084497949F76E9F5918AF91DDC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_BallistaFix_AnimGraphNode_TransitionResult_29B281684D28C7AF35CCA0B944D2E0DD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_BallistaFix_AnimGraphNode_SequencePlayer_3CCE4D93491F6E806F32E1926BBFB355();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_BallistaFix_AnimGraphNode_ModifyBone_09BD16F548497D6A319D8E8D55BD1BEB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_BallistaFix_AnimGraphNode_ModifyBone_7BA49A1B438B3F96C4D37E80AFBE0D9C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_BallistaFix_AnimGraphNode_ModifyBone_DAB5C4564263778DC95EE09EF85BDA6B();
	void ConvertWeaponStateToBallistaState(int32 WeaponState, int32* BallistaState);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_BallistaFix_C">();
	}
	static class UAB_BallistaFix_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_BallistaFix_C>();
	}
};
static_assert(alignof(UAB_BallistaFix_C) == 0x000010, "Wrong alignment on UAB_BallistaFix_C");
static_assert(sizeof(UAB_BallistaFix_C) == 0x000A80, "Wrong size on UAB_BallistaFix_C");
static_assert(offsetof(UAB_BallistaFix_C, UberGraphFrame) == 0x000380, "Member 'UAB_BallistaFix_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, AnimGraphNode_Root) == 0x000388, "Member 'UAB_BallistaFix_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, AnimGraphNode_TransitionResult_4) == 0x0003B8, "Member 'UAB_BallistaFix_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, AnimGraphNode_TransitionResult_3) == 0x0003E0, "Member 'UAB_BallistaFix_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, AnimGraphNode_TransitionResult_2) == 0x000408, "Member 'UAB_BallistaFix_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, AnimGraphNode_TransitionResult_1) == 0x000430, "Member 'UAB_BallistaFix_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, AnimGraphNode_TransitionResult) == 0x000458, "Member 'UAB_BallistaFix_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, AnimGraphNode_SequencePlayer_1) == 0x000480, "Member 'UAB_BallistaFix_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, AnimGraphNode_StateResult_2) == 0x000500, "Member 'UAB_BallistaFix_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, AnimGraphNode_SequencePlayer) == 0x000530, "Member 'UAB_BallistaFix_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, AnimGraphNode_StateResult_1) == 0x0005B0, "Member 'UAB_BallistaFix_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, AnimGraphNode_SequenceEvaluator) == 0x0005E0, "Member 'UAB_BallistaFix_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, AnimGraphNode_StateResult) == 0x000630, "Member 'UAB_BallistaFix_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, AnimGraphNode_StateMachine) == 0x000660, "Member 'UAB_BallistaFix_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, AnimGraphNode_LocalToComponentSpace) == 0x000710, "Member 'UAB_BallistaFix_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, AnimGraphNode_ModifyBone_2) == 0x000730, "Member 'UAB_BallistaFix_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, AnimGraphNode_ComponentToLocalSpace) == 0x000838, "Member 'UAB_BallistaFix_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, AnimGraphNode_ModifyBone_1) == 0x000858, "Member 'UAB_BallistaFix_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, AnimGraphNode_ModifyBone) == 0x000960, "Member 'UAB_BallistaFix_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, State) == 0x000A68, "Member 'UAB_BallistaFix_C::State' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, LookUp) == 0x000A6C, "Member 'UAB_BallistaFix_C::LookUp' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, Turn) == 0x000A70, "Member 'UAB_BallistaFix_C::Turn' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, SpawnTurnValue) == 0x000A74, "Member 'UAB_BallistaFix_C::SpawnTurnValue' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, HasDriverFloat) == 0x000A78, "Member 'UAB_BallistaFix_C::HasDriverFloat' has a wrong offset!");
static_assert(offsetof(UAB_BallistaFix_C, ReloadTime) == 0x000A7C, "Member 'UAB_BallistaFix_C::ReloadTime' has a wrong offset!");

}

