#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Modlist

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MordhauOnlineSubsystem_structs.hpp"
#include "BP_MenuContentWidget_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_Modlist.BP_ModList_C
// 0x00B0 (0x0320 - 0x0270)
class UBP_ModList_C final : public UBP_MenuContentWidget_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UImage*                                 Image;                                             // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_4;                                           // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_8;                                           // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_39;                                          // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ModList;                                           // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             PakList;                                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_0;                                         // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextAuthor;                                        // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextDescription;                                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextDescription_1;                                 // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextName;                                          // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextVersion;                                       // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UBP_ModListEntry_C*>             EntryArray;                                        // 0x02F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UBP_ModListEntry_C*                     HoveredEntry;                                      // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FModInfo>                       InstalledMods;                                     // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_ModList(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnShown();
	void PopulateMods();
	void EntryHovered(class UBP_ModListEntry_C* Ref);
	void EntryClicked();
	void ContextButtonClicked(int32 Button_Index);
	void Update(TArray<struct FModInfo>& InMods);
	void Add_Entry_to_list(const class FText& Name_0, const class FText& Description, const class FText& Author, const struct FModInfo& Mod);
	class FText Get_TextAuthor_Text_0();
	class FText Get_TextDescription_Text_0();
	class FText Get_TextName_Text_0();
	ESlateVisibility GetVisibility_0();
	void Remove_Entry_from_list(const class UBP_ModListEntry_C*& Item);
	ESlateVisibility GetThumbnailBrowserVisibility();
	class FText Get_TextVersion_Text_0();
	void PopulatePakList();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ModList_C">();
	}
	static class UBP_ModList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ModList_C>();
	}
};
static_assert(alignof(UBP_ModList_C) == 0x000008, "Wrong alignment on UBP_ModList_C");
static_assert(sizeof(UBP_ModList_C) == 0x000320, "Wrong size on UBP_ModList_C");
static_assert(offsetof(UBP_ModList_C, UberGraphFrame) == 0x000270, "Member 'UBP_ModList_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, Image) == 0x000278, "Member 'UBP_ModList_C::Image' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, Image_0) == 0x000280, "Member 'UBP_ModList_C::Image_0' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, Image_1) == 0x000288, "Member 'UBP_ModList_C::Image_1' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, Image_2) == 0x000290, "Member 'UBP_ModList_C::Image_2' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, Image_3) == 0x000298, "Member 'UBP_ModList_C::Image_3' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, Image_4) == 0x0002A0, "Member 'UBP_ModList_C::Image_4' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, Image_8) == 0x0002A8, "Member 'UBP_ModList_C::Image_8' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, Image_39) == 0x0002B0, "Member 'UBP_ModList_C::Image_39' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, ModList) == 0x0002B8, "Member 'UBP_ModList_C::ModList' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, PakList) == 0x0002C0, "Member 'UBP_ModList_C::PakList' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, SizeBox_0) == 0x0002C8, "Member 'UBP_ModList_C::SizeBox_0' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, TextAuthor) == 0x0002D0, "Member 'UBP_ModList_C::TextAuthor' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, TextDescription) == 0x0002D8, "Member 'UBP_ModList_C::TextDescription' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, TextDescription_1) == 0x0002E0, "Member 'UBP_ModList_C::TextDescription_1' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, TextName) == 0x0002E8, "Member 'UBP_ModList_C::TextName' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, TextVersion) == 0x0002F0, "Member 'UBP_ModList_C::TextVersion' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, EntryArray) == 0x0002F8, "Member 'UBP_ModList_C::EntryArray' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, HoveredEntry) == 0x000308, "Member 'UBP_ModList_C::HoveredEntry' has a wrong offset!");
static_assert(offsetof(UBP_ModList_C, InstalledMods) == 0x000310, "Member 'UBP_ModList_C::InstalledMods' has a wrong offset!");

}

