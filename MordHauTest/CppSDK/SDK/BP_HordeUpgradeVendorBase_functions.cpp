#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordeUpgradeVendorBase

#include "Basic.hpp"

#include "BP_HordeUpgradeVendorBase_classes.hpp"
#include "BP_HordeUpgradeVendorBase_parameters.hpp"


namespace SDK
{

// Function BP_HordeUpgradeVendorBase.BP_HordeUpgradeVendorBase_C.ExecuteUbergraph_BP_HordeUpgradeVendorBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeUpgradeVendorBase_C::ExecuteUbergraph_BP_HordeUpgradeVendorBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeUpgradeVendorBase_C", "ExecuteUbergraph_BP_HordeUpgradeVendorBase");

	Params::BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeUpgradeVendorBase.BP_HordeUpgradeVendorBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_HordeUpgradeVendorBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeUpgradeVendorBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeUpgradeVendorBase.BP_HordeUpgradeVendorBase_C.OnHeldInteractionStart
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HordeUpgradeVendorBase_C::OnHeldInteractionStart(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeUpgradeVendorBase_C", "OnHeldInteractionStart");

	Params::BP_HordeUpgradeVendorBase_C_OnHeldInteractionStart Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HordeUpgradeVendorBase.BP_HordeUpgradeVendorBase_C.UpdateVisuals
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HordeUpgradeVendorBase_C::UpdateVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeUpgradeVendorBase_C", "UpdateVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HordeUpgradeVendorBase.BP_HordeUpgradeVendorBase_C.Get Equipped Armor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AMordhauCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WearableIndex                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_WearableTier                  EquippedArmor                                          (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_HordeUpgradeVendorBase_C::Get_Equipped_Armor(class AMordhauCharacter* Character, int32* WearableIndex, struct FS_WearableTier* EquippedArmor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeUpgradeVendorBase_C", "Get Equipped Armor");

	Params::BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (WearableIndex != nullptr)
		*WearableIndex = Parms.WearableIndex;

	if (EquippedArmor != nullptr)
		*EquippedArmor = std::move(Parms.EquippedArmor);
}


// Function BP_HordeUpgradeVendorBase.BP_HordeUpgradeVendorBase_C.GetNextArmorUpgrade
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AMordhauCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsMaxedOut                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FS_WearableTier                  ArmorToEquip                                           (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_HordeUpgradeVendorBase_C::GetNextArmorUpgrade(class AMordhauCharacter* Character, bool* IsMaxedOut, struct FS_WearableTier* ArmorToEquip) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeUpgradeVendorBase_C", "GetNextArmorUpgrade");

	Params::BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (IsMaxedOut != nullptr)
		*IsMaxedOut = Parms.IsMaxedOut;

	if (ArmorToEquip != nullptr)
		*ArmorToEquip = std::move(Parms.ArmorToEquip);
}


// Function BP_HordeUpgradeVendorBase.BP_HordeUpgradeVendorBase_C.CanAffordUpgrade
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AMordhauCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_WearableTier                  ArmorUpgrade                                           (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    CanAfford                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HordeUpgradeVendorBase_C::CanAffordUpgrade(class AMordhauCharacter* Character, const struct FS_WearableTier& ArmorUpgrade, bool* CanAfford) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeUpgradeVendorBase_C", "CanAffordUpgrade");

	Params::BP_HordeUpgradeVendorBase_C_CanAffordUpgrade Parms{};

	Parms.Character = Character;
	Parms.ArmorUpgrade = std::move(ArmorUpgrade);

	UObject::ProcessEvent(Func, &Parms);

	if (CanAfford != nullptr)
		*CanAfford = Parms.CanAfford;
}


// Function BP_HordeUpgradeVendorBase.BP_HordeUpgradeVendorBase_C.CanHeldInteract
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AMordhauCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_HordeUpgradeVendorBase_C::CanHeldInteract(class AMordhauCharacter* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HordeUpgradeVendorBase_C", "CanHeldInteract");

	Params::BP_HordeUpgradeVendorBase_C_CanHeldInteract Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

