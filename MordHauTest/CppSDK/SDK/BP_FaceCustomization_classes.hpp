#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FaceCustomization

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_ArmoryStates_structs.hpp"
#include "Mordhau_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_CustomizationTab_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_FaceCustomization.BP_FaceCustomization_C
// 0x0228 (0x05C8 - 0x03A0)
class UBP_FaceCustomization_C final : public UBP_CustomizationTab_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_FaceCustomization_C;             // 0x03A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       EntryAnimInPlace;                                  // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EntryAnimLeftToRight;                              // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EntryAnimRightToLeft;                              // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBP_ArmorySlider_Right_C*               BP_ArmorySlider_Age;                               // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ArmorySlider_Right_C*               BP_ArmorySlider_VoicePitch;                        // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ArrowLineDivider_C*                 BP_ArrowLineDivider;                               // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ButtonPrompt_C*                     BP_ButtonPrompt_BodyTab;                           // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ButtonPrompt_C*                     BP_ButtonPrompt_GrabBone;                          // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ButtonPrompt_C*                     BP_ButtonPrompt_MoveBone;                          // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ButtonPrompt_C*                     BP_ButtonPrompt_Rotate;                            // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ButtonPrompt_C*                     BP_ButtonPrompt_Scale;                             // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ButtonPrompt_C*                     BP_ButtonPrompt_SculptGroup_Down;                  // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ButtonPrompt_C*                     BP_ButtonPrompt_SculptGroup_Up;                    // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ButtonPrompt_C*                     BP_ButtonPrompt_Translate;                         // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ButtonPrompt_C*                     BP_ButtonPrompt_Undo;                              // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ColorEntry_C*                       BP_ColorEntry_Eyes;                                // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ColorEntry_C*                       BP_ColorEntry_Hair_1;                              // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ColorSelectionMenu_Right_C*         BP_ColorSelectionMenu_Right;                       // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CustomizationTopBar_C*              BP_CustomizationTopBar;                            // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SimpleSlotButton_C*                 BP_EyebrowsSlot;                                   // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SimpleSlotButton_C*                 BP_FaceSlot;                                       // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SimpleSlotButton_C*                 BP_FacialHairSlot;                                 // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_GenericSelectionMenu_C*             BP_GenericSelectionMenu;                           // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SimpleSlotButton_C*                 BP_HairSlot;                                       // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PromptButton_New_C*                 BP_PromptButton_Back;                              // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PromptButton_New_C*                 BP_PromptButton_BodyTab;                           // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PromptButton_New_C*                 BP_PromptButton_FaceTab;                           // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PromptButton_New_C*                 BP_PromptButton_RandomizeFace;                     // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PromptButton_New_C*                 BP_PromptButton_ResetFace;                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SculptToolIndicator_C*              BP_SculptToolIndicator_Group_1;                    // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SculptToolIndicator_C*              BP_SculptToolIndicator_Mode_1;                     // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SimpleSlotButton_C*                 BP_VoiceSlot;                                      // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_EyeColor;                                  // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_FaceOptions;                               // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_HairColor;                                 // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         WheelCooldown;                                     // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HoldingLMB;                                        // 0x04F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HoldingRMB;                                        // 0x04F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HoldingMMB;                                        // 0x04F6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F7[0x1];                                      // 0x04F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   LastSelectedSymmetryBoneName;                      // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LastSelectedBoneName;                              // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterDoll_C*                    LastSelectedDoll;                                  // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentLevel;                                      // 0x0510(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Symmetry;                                          // 0x0514(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_515[0x3];                                      // 0x0515(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastSelectedBoneFaceIdx;                           // 0x0518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasChangedAnything;                                // 0x051C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51D[0x3];                                      // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              SavedMousePos;                                     // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AccumulatedMouseX;                                 // 0x0528(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AccumulatedMouseY;                                 // 0x052C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFaceCustomization>             History;                                           // 0x0530(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Mode;                                              // 0x0540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ChangeVector;                                      // 0x0544(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UDecalComponent*>                PreviousDecals;                                    // 0x0550(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FVector                                ChangeVectorLeftover;                              // 0x0560(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 RandomVoiceCommands;                               // 0x0570(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         RandomExp;                                         // 0x0580(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_584[0x4];                                      // 0x0584(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_FaceSculptingTooltip_C*             Face_Sculpt_Tooltip;                               // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Face_Highlight_Mat;                                // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTimeCounter;                                  // 0x0598(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C[0x4];                                      // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     Out_Hits_Cache;                                    // 0x05A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TSubclassOf<class UCharacterVoice>            Voice;                                             // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<TSubclassOf<class UCharacterFace>>     Faces;                                             // 0x05B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_FaceCustomization(int32 EntryPoint);
	void OnDLCUpdateRecevied(const struct FPlayFabEntitlements& UpdatedEntitlements);
	void OnKeyRepeat(const struct FKey& Key);
	void BndEvt__BP_FaceCustomization_BP_CustomizationTopBar_K2Node_ComponentBoundEvent_9_Breadcrumb_Clicked__DelegateSignature(const class FString& Breadcrumb);
	void BndEvt__BP_FaceCustomization_BP_ArmorySlider_S_K2Node_ComponentBoundEvent_8_On_Slider_Value_Changed__DelegateSignature(float Value, int32 Discrete_Value);
	void BndEvt__BP_FaceCustomization_BP_ArmorySlider_A_K2Node_ComponentBoundEvent_2_On_Slider_Value_Changed__DelegateSignature(float Value, int32 Discrete_Value);
	void BndEvt__BP_FaceCustomization_BP_ColorEntry_Hair_1_K2Node_ComponentBoundEvent_11_OnClick__DelegateSignature(class UBP_CustomizationItemEntry_C* Entry);
	void BndEvt__BP_FaceCustomization_BP_ColorEntry_0_K2Node_ComponentBoundEvent_1_OnClick__DelegateSignature(class UBP_CustomizationItemEntry_C* Entry);
	void BndEvt__BP_FaceCustomization_BP_PromptButton_BodyTab_K2Node_ComponentBoundEvent_0_onClicked__DelegateSignature();
	void CSM_Back();
	void BndEvt__BP_FaceCustomization_BP_PromptButton_RandomizeFace_K2Node_ComponentBoundEvent_5_onClicked__DelegateSignature();
	void BndEvt__BP_FaceCustomization_BP_PromptButton_ResetFace_K2Node_ComponentBoundEvent_4_onClicked__DelegateSignature();
	void BndEvt__BP_FaceCustomization_BP_PromptButton_Back_K2Node_ComponentBoundEvent_3_onClicked__DelegateSignature();
	void SM_Back();
	void Back();
	void On_Key_Pressed(const struct FKey& KeyName);
	void Construct();
	void BndEvt__BP_ColorSelectionMenu_Right_K2Node_ComponentBoundEvent_6_Back_Button_Clicked__DelegateSignature();
	void Update_Camera();
	void BndEvt__BP_HairSlot_K2Node_ComponentBoundEvent_19_Button_Clicked__DelegateSignature();
	void BndEvt__BP_FacialHairSlot_K2Node_ComponentBoundEvent_18_Button_Clicked__DelegateSignature();
	void BndEvt__BP_EyebrowsSlot_K2Node_ComponentBoundEvent_17_Button_Clicked__DelegateSignature();
	void BndEvt__BP_SimpleSlotButton_K2Node_ComponentBoundEvent_16_Button_Clicked__DelegateSignature();
	void BndEvt__BP_VoiceSlot_K2Node_ComponentBoundEvent_12_Button_Clicked__DelegateSignature();
	void BndEvt__BP_GenericSelectionMenu_K2Node_ComponentBoundEvent_7_Back_Button_Clicked__DelegateSignature();
	void ChangeVoice(int32 NewId);
	void SetActive();
	void OnScroll(float ScrollDelta);
	void OnDrag(float DeltaDistance);
	void OnMouseAxis(const struct FVector2D& Movement);
	void MouseY(float AxisValue);
	void OnCharacterDollUpdated(class AMordhauCharacter* Character);
	void OnProfileChanged();
	void MouseX(float AxisValue);
	void ScaleMode();
	void RotateMode();
	void TranslateMode();
	void ToggleSymmetry();
	void WheelDown();
	void WheelUp();
	void Undo();
	void MMBRelease();
	void MMBPress();
	void LMBRelease();
	void LMBPress();
	void RMBRelease();
	void RMBPress();
	void RegisterPreviewEvents();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void GetValues(int32* Voice_0, int32* VoicePitch, int32* Face, int32* EyeColor, int32* HairColor, int32* Hair, int32* FacialHair, int32* Eyebrows, int32* Age);
	void UpdateWidget();
	void ApplyFaceTransformDelta(const struct FVector& Delta, int32 TransformType, class FName BoneName, struct FVector* Remaining);
	void SaveCurrentToWrapperProfile();
	void AddCurrentWrapperToHistory();
	void UpdateDoll(bool OnlyMaterials);
	void ShowVoiceList(int32 CurrentVoice);
	void VoiceSelectionHovered(class UBP_CustomizationItemEntry_C* Entry);
	void VoiceSelectionClicked(class UBP_CustomizationItemEntry_C* Entry);
	void SelectionCanceled();
	void ShowFaceList(int32 CurrentFace);
	void FaceSelectionHovered(class UBP_CustomizationItemEntry_C* Entry);
	void FaceSelectionClicked(class UBP_CustomizationItemEntry_C* Entry);
	void HairSelectionHovered(class UBP_CustomizationItemEntry_C* Entry);
	void HairSelectionClicked(class UBP_CustomizationItemEntry_C* Entry);
	void FacialHairSelectionHovered(class UBP_CustomizationItemEntry_C* Entry);
	void FacialHairSelectionClicked(class UBP_CustomizationItemEntry_C* Entry);
	void EyebrowSelectionHovered(class UBP_CustomizationItemEntry_C* Entry);
	void EyebrowSelectionClicked(class UBP_CustomizationItemEntry_C* Entry);
	void ShowFacialHairList(int32 CurrentFace, int32 CurrentFacialHair);
	void ShowEyebrowList(int32 CurrentEyebrow);
	void EyeColorHovered(class UBP_CustomizationItemEntry_C* Entry);
	void EyeColorClicked(class UBP_CustomizationItemEntry_C* Entry);
	void HairColorHovered(class UBP_CustomizationItemEntry_C* Entry);
	void HairColorClicked(class UBP_CustomizationItemEntry_C* Entry);
	void ShowHairList(int32 Current_Hair, int32 Current_Face);
	void Get_Color_Values(TArray<class UClass*>* Hair_Color_Table, TArray<class UClass*>* Eye_Color_Table, class UClass** Selected_Hair_Color, class UClass** Selected_Eye_Color);
	void Show_Eye_Color_Selection_Menu();
	void Show_Hair_Color_Selection_Menu();
	void Randomize_Face();
	void Reset_Face();
	void Switch_to_Body_Menu();
	void Find_Hovered_Face_Bone(float DeltaTime);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void Handle_Key_Shortcuts(const struct FKey& Key);
	void Update_Breadcrumb_Header();
	void Handle_Gamepad_Camera_Controls(const struct FKey& Key);
	void Clear_previous_decals();
	void Play_Entry_Anim(bool Left_to_Right, bool In_Place);
	void GetPointerInWorldSpace(struct FVector* WorldLocation, struct FVector* WorldDirection);
	ESlateVisibility Get_BP_FacialHairSlot_Visibility_0();
	void HandleDLCUpdate(const struct FPlayFabEntitlements& UpdatedData);
	void Update_Sculpt_Group_Tool_UI();
	void Update_Mode_Tool_UI();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FaceCustomization_C">();
	}
	static class UBP_FaceCustomization_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_FaceCustomization_C>();
	}
};
static_assert(alignof(UBP_FaceCustomization_C) == 0x000008, "Wrong alignment on UBP_FaceCustomization_C");
static_assert(sizeof(UBP_FaceCustomization_C) == 0x0005C8, "Wrong size on UBP_FaceCustomization_C");
static_assert(offsetof(UBP_FaceCustomization_C, UberGraphFrame_BP_FaceCustomization_C) == 0x0003A0, "Member 'UBP_FaceCustomization_C::UberGraphFrame_BP_FaceCustomization_C' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, EntryAnimInPlace) == 0x0003A8, "Member 'UBP_FaceCustomization_C::EntryAnimInPlace' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, EntryAnimLeftToRight) == 0x0003B0, "Member 'UBP_FaceCustomization_C::EntryAnimLeftToRight' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, EntryAnimRightToLeft) == 0x0003B8, "Member 'UBP_FaceCustomization_C::EntryAnimRightToLeft' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_ArmorySlider_Age) == 0x0003C0, "Member 'UBP_FaceCustomization_C::BP_ArmorySlider_Age' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_ArmorySlider_VoicePitch) == 0x0003C8, "Member 'UBP_FaceCustomization_C::BP_ArmorySlider_VoicePitch' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_ArrowLineDivider) == 0x0003D0, "Member 'UBP_FaceCustomization_C::BP_ArrowLineDivider' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_ButtonPrompt_BodyTab) == 0x0003D8, "Member 'UBP_FaceCustomization_C::BP_ButtonPrompt_BodyTab' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_ButtonPrompt_GrabBone) == 0x0003E0, "Member 'UBP_FaceCustomization_C::BP_ButtonPrompt_GrabBone' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_ButtonPrompt_MoveBone) == 0x0003E8, "Member 'UBP_FaceCustomization_C::BP_ButtonPrompt_MoveBone' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_ButtonPrompt_Rotate) == 0x0003F0, "Member 'UBP_FaceCustomization_C::BP_ButtonPrompt_Rotate' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_ButtonPrompt_Scale) == 0x0003F8, "Member 'UBP_FaceCustomization_C::BP_ButtonPrompt_Scale' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_ButtonPrompt_SculptGroup_Down) == 0x000400, "Member 'UBP_FaceCustomization_C::BP_ButtonPrompt_SculptGroup_Down' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_ButtonPrompt_SculptGroup_Up) == 0x000408, "Member 'UBP_FaceCustomization_C::BP_ButtonPrompt_SculptGroup_Up' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_ButtonPrompt_Translate) == 0x000410, "Member 'UBP_FaceCustomization_C::BP_ButtonPrompt_Translate' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_ButtonPrompt_Undo) == 0x000418, "Member 'UBP_FaceCustomization_C::BP_ButtonPrompt_Undo' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_ColorEntry_Eyes) == 0x000420, "Member 'UBP_FaceCustomization_C::BP_ColorEntry_Eyes' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_ColorEntry_Hair_1) == 0x000428, "Member 'UBP_FaceCustomization_C::BP_ColorEntry_Hair_1' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_ColorSelectionMenu_Right) == 0x000430, "Member 'UBP_FaceCustomization_C::BP_ColorSelectionMenu_Right' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_CustomizationTopBar) == 0x000438, "Member 'UBP_FaceCustomization_C::BP_CustomizationTopBar' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_EyebrowsSlot) == 0x000440, "Member 'UBP_FaceCustomization_C::BP_EyebrowsSlot' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_FaceSlot) == 0x000448, "Member 'UBP_FaceCustomization_C::BP_FaceSlot' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_FacialHairSlot) == 0x000450, "Member 'UBP_FaceCustomization_C::BP_FacialHairSlot' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_GenericSelectionMenu) == 0x000458, "Member 'UBP_FaceCustomization_C::BP_GenericSelectionMenu' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_HairSlot) == 0x000460, "Member 'UBP_FaceCustomization_C::BP_HairSlot' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_PromptButton_Back) == 0x000468, "Member 'UBP_FaceCustomization_C::BP_PromptButton_Back' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_PromptButton_BodyTab) == 0x000470, "Member 'UBP_FaceCustomization_C::BP_PromptButton_BodyTab' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_PromptButton_FaceTab) == 0x000478, "Member 'UBP_FaceCustomization_C::BP_PromptButton_FaceTab' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_PromptButton_RandomizeFace) == 0x000480, "Member 'UBP_FaceCustomization_C::BP_PromptButton_RandomizeFace' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_PromptButton_ResetFace) == 0x000488, "Member 'UBP_FaceCustomization_C::BP_PromptButton_ResetFace' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_SculptToolIndicator_Group_1) == 0x000490, "Member 'UBP_FaceCustomization_C::BP_SculptToolIndicator_Group_1' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_SculptToolIndicator_Mode_1) == 0x000498, "Member 'UBP_FaceCustomization_C::BP_SculptToolIndicator_Mode_1' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, BP_VoiceSlot) == 0x0004A0, "Member 'UBP_FaceCustomization_C::BP_VoiceSlot' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, CanvasPanel_0) == 0x0004A8, "Member 'UBP_FaceCustomization_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, Image) == 0x0004B0, "Member 'UBP_FaceCustomization_C::Image' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, Image_0) == 0x0004B8, "Member 'UBP_FaceCustomization_C::Image_0' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, Image_1) == 0x0004C0, "Member 'UBP_FaceCustomization_C::Image_1' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, Image_2) == 0x0004C8, "Member 'UBP_FaceCustomization_C::Image_2' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, Overlay_EyeColor) == 0x0004D0, "Member 'UBP_FaceCustomization_C::Overlay_EyeColor' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, Overlay_FaceOptions) == 0x0004D8, "Member 'UBP_FaceCustomization_C::Overlay_FaceOptions' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, Overlay_HairColor) == 0x0004E0, "Member 'UBP_FaceCustomization_C::Overlay_HairColor' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, WidgetSwitcher_0) == 0x0004E8, "Member 'UBP_FaceCustomization_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, WheelCooldown) == 0x0004F0, "Member 'UBP_FaceCustomization_C::WheelCooldown' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, HoldingLMB) == 0x0004F4, "Member 'UBP_FaceCustomization_C::HoldingLMB' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, HoldingRMB) == 0x0004F5, "Member 'UBP_FaceCustomization_C::HoldingRMB' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, HoldingMMB) == 0x0004F6, "Member 'UBP_FaceCustomization_C::HoldingMMB' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, LastSelectedSymmetryBoneName) == 0x0004F8, "Member 'UBP_FaceCustomization_C::LastSelectedSymmetryBoneName' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, LastSelectedBoneName) == 0x000500, "Member 'UBP_FaceCustomization_C::LastSelectedBoneName' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, LastSelectedDoll) == 0x000508, "Member 'UBP_FaceCustomization_C::LastSelectedDoll' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, CurrentLevel) == 0x000510, "Member 'UBP_FaceCustomization_C::CurrentLevel' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, Symmetry) == 0x000514, "Member 'UBP_FaceCustomization_C::Symmetry' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, LastSelectedBoneFaceIdx) == 0x000518, "Member 'UBP_FaceCustomization_C::LastSelectedBoneFaceIdx' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, HasChangedAnything) == 0x00051C, "Member 'UBP_FaceCustomization_C::HasChangedAnything' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, SavedMousePos) == 0x000520, "Member 'UBP_FaceCustomization_C::SavedMousePos' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, AccumulatedMouseX) == 0x000528, "Member 'UBP_FaceCustomization_C::AccumulatedMouseX' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, AccumulatedMouseY) == 0x00052C, "Member 'UBP_FaceCustomization_C::AccumulatedMouseY' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, History) == 0x000530, "Member 'UBP_FaceCustomization_C::History' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, Mode) == 0x000540, "Member 'UBP_FaceCustomization_C::Mode' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, ChangeVector) == 0x000544, "Member 'UBP_FaceCustomization_C::ChangeVector' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, PreviousDecals) == 0x000550, "Member 'UBP_FaceCustomization_C::PreviousDecals' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, ChangeVectorLeftover) == 0x000560, "Member 'UBP_FaceCustomization_C::ChangeVectorLeftover' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, RandomVoiceCommands) == 0x000570, "Member 'UBP_FaceCustomization_C::RandomVoiceCommands' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, RandomExp) == 0x000580, "Member 'UBP_FaceCustomization_C::RandomExp' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, Face_Sculpt_Tooltip) == 0x000588, "Member 'UBP_FaceCustomization_C::Face_Sculpt_Tooltip' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, Face_Highlight_Mat) == 0x000590, "Member 'UBP_FaceCustomization_C::Face_Highlight_Mat' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, DeltaTimeCounter) == 0x000598, "Member 'UBP_FaceCustomization_C::DeltaTimeCounter' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, Out_Hits_Cache) == 0x0005A0, "Member 'UBP_FaceCustomization_C::Out_Hits_Cache' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, Voice) == 0x0005B0, "Member 'UBP_FaceCustomization_C::Voice' has a wrong offset!");
static_assert(offsetof(UBP_FaceCustomization_C, Faces) == 0x0005B8, "Member 'UBP_FaceCustomization_C::Faces' has a wrong offset!");

}

