#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CustomizationItemEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_structs.hpp"
#include "E_SelectionMenuLayoutTypes_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_CustomizationItemEntry.BP_CustomizationItemEntry_C
// 0x0260 (0x04C0 - 0x0260)
class UBP_CustomizationItemEntry_C : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UTexture2D*                             Thumbnail;                                         // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0270(0x0018)(Edit, BlueprintVisible)
	int32                                         ID;                                                // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UBP_CustomizationItemEntry_C* Entry)> OnHover;                                           // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UBP_CustomizationItemEntry_C* Entry)> OnClick;                                           // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         Index_0;                                           // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SortBias;                                          // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnUpdate;                                          // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         Cost;                                              // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitingForResponse;                                // 0x02CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SkinToUnlock;                                      // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Locked;                                         // 0x02D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GoldRequirement;                                   // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ChoiceDialog_C*                     LastChoiceDialog;                                  // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RankRequirement;                                   // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Unlock_Tooltip;                                    // 0x02F0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Character_Points_Remaining;                        // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Equipment_Class;                                   // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 WearableClass;                                     // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 InventoryItem;                                     // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquipmentClassSkin;                              // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Hide_Indicator;                                    // 0x0329(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A[0x6];                                      // 0x032A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              Hide_New_Unlock_Indicator;                         // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(E_SelectionMenuLayoutTypes Layout_Type)> Set_Entry_Layout_Type;                             // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          isSelected;                                        // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          isFiltered;                                        // 0x0351(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352[0x6];                                      // 0x0352(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterProfile                      Character_Profile;                                 // 0x0358(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          is_Unlockable;                                     // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterProfileBPWrapper*             Profile_Wrapper;                                   // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanAfford;                                         // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   NameFilter;                                        // 0x0428(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBP_Tooltip_C*                          Tooltip;                                           // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_NewUnlockIndicator_C*               BP_NewUnlockIndicator;                             // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 DlcId;                                             // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsInHordeArmory;                                   // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x3];                                      // 0x0461(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemDefID;                                         // 0x0464(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsBanned;                                         // 0x0468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TrimNameThreshold;                                 // 0x046C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              ItemUnlocked;                                      // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnUnHover;                                         // 0x0480(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              ItemUnlockRequested;                               // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              UnlockCancelled;                                   // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnStoreDialogClicked;                              // 0x04B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_BP_CustomizationItemEntry(int32 EntryPoint);
	void ResetAskToOpenStorePage();
	void ResetUnlock();
	void NotEnoughGoldConfirm();
	void NotEnoughGold();
	void Request_Unlock_from_Entry();
	void ItemsUnlocked(bool bWasSuccessful, const TArray<struct FItemStack>& ItemStacks);
	void RequestUnlock();
	void PurchaseCancel();
	void PurchaseConfirm();
	void OpenStoreCancel();
	void OpenStoreConfirm();
	void AskToOpenStorePage(const class FString& DlcId_0);
	void Mark_Seen_New_Indicator();
	void OnListItemObjectSet(class UObject* ListItemObject);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnEntryReleased();
	void Get_Item_to_Unlock(int32* Item_Def_Id);
	void Mark_Seen();
	void Get_Was_Seen(bool* WasSeen);
	void MarkSeen();
	void GetWasSeen(bool* WasSeen);
	void Trim_Name(const class FString& In_Name, class FString* Trimmed_Name);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CustomizationItemEntry_C">();
	}
	static class UBP_CustomizationItemEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CustomizationItemEntry_C>();
	}
};
static_assert(alignof(UBP_CustomizationItemEntry_C) == 0x000008, "Wrong alignment on UBP_CustomizationItemEntry_C");
static_assert(sizeof(UBP_CustomizationItemEntry_C) == 0x0004C0, "Wrong size on UBP_CustomizationItemEntry_C");
static_assert(offsetof(UBP_CustomizationItemEntry_C, UberGraphFrame) == 0x000260, "Member 'UBP_CustomizationItemEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, Thumbnail) == 0x000268, "Member 'UBP_CustomizationItemEntry_C::Thumbnail' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, Name_0) == 0x000270, "Member 'UBP_CustomizationItemEntry_C::Name_0' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, ID) == 0x000288, "Member 'UBP_CustomizationItemEntry_C::ID' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, OnHover) == 0x000290, "Member 'UBP_CustomizationItemEntry_C::OnHover' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, OnClick) == 0x0002A0, "Member 'UBP_CustomizationItemEntry_C::OnClick' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, Index_0) == 0x0002B0, "Member 'UBP_CustomizationItemEntry_C::Index_0' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, SortBias) == 0x0002B4, "Member 'UBP_CustomizationItemEntry_C::SortBias' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, OnUpdate) == 0x0002B8, "Member 'UBP_CustomizationItemEntry_C::OnUpdate' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, Cost) == 0x0002C8, "Member 'UBP_CustomizationItemEntry_C::Cost' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, WaitingForResponse) == 0x0002CC, "Member 'UBP_CustomizationItemEntry_C::WaitingForResponse' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, SkinToUnlock) == 0x0002D0, "Member 'UBP_CustomizationItemEntry_C::SkinToUnlock' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, Is_Locked) == 0x0002D4, "Member 'UBP_CustomizationItemEntry_C::Is_Locked' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, GoldRequirement) == 0x0002D8, "Member 'UBP_CustomizationItemEntry_C::GoldRequirement' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, LastChoiceDialog) == 0x0002E0, "Member 'UBP_CustomizationItemEntry_C::LastChoiceDialog' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, RankRequirement) == 0x0002E8, "Member 'UBP_CustomizationItemEntry_C::RankRequirement' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, Unlock_Tooltip) == 0x0002F0, "Member 'UBP_CustomizationItemEntry_C::Unlock_Tooltip' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, Character_Points_Remaining) == 0x000308, "Member 'UBP_CustomizationItemEntry_C::Character_Points_Remaining' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, Equipment_Class) == 0x000310, "Member 'UBP_CustomizationItemEntry_C::Equipment_Class' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, WearableClass) == 0x000318, "Member 'UBP_CustomizationItemEntry_C::WearableClass' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, InventoryItem) == 0x000320, "Member 'UBP_CustomizationItemEntry_C::InventoryItem' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, IsEquipmentClassSkin) == 0x000328, "Member 'UBP_CustomizationItemEntry_C::IsEquipmentClassSkin' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, Hide_Indicator) == 0x000329, "Member 'UBP_CustomizationItemEntry_C::Hide_Indicator' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, Hide_New_Unlock_Indicator) == 0x000330, "Member 'UBP_CustomizationItemEntry_C::Hide_New_Unlock_Indicator' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, Set_Entry_Layout_Type) == 0x000340, "Member 'UBP_CustomizationItemEntry_C::Set_Entry_Layout_Type' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, isSelected) == 0x000350, "Member 'UBP_CustomizationItemEntry_C::isSelected' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, isFiltered) == 0x000351, "Member 'UBP_CustomizationItemEntry_C::isFiltered' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, Character_Profile) == 0x000358, "Member 'UBP_CustomizationItemEntry_C::Character_Profile' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, is_Unlockable) == 0x000410, "Member 'UBP_CustomizationItemEntry_C::is_Unlockable' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, Profile_Wrapper) == 0x000418, "Member 'UBP_CustomizationItemEntry_C::Profile_Wrapper' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, CanAfford) == 0x000420, "Member 'UBP_CustomizationItemEntry_C::CanAfford' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, NameFilter) == 0x000428, "Member 'UBP_CustomizationItemEntry_C::NameFilter' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, Tooltip) == 0x000440, "Member 'UBP_CustomizationItemEntry_C::Tooltip' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, BP_NewUnlockIndicator) == 0x000448, "Member 'UBP_CustomizationItemEntry_C::BP_NewUnlockIndicator' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, DlcId) == 0x000450, "Member 'UBP_CustomizationItemEntry_C::DlcId' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, IsInHordeArmory) == 0x000460, "Member 'UBP_CustomizationItemEntry_C::IsInHordeArmory' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, ItemDefID) == 0x000464, "Member 'UBP_CustomizationItemEntry_C::ItemDefID' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, bIsBanned) == 0x000468, "Member 'UBP_CustomizationItemEntry_C::bIsBanned' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, TrimNameThreshold) == 0x00046C, "Member 'UBP_CustomizationItemEntry_C::TrimNameThreshold' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, ItemUnlocked) == 0x000470, "Member 'UBP_CustomizationItemEntry_C::ItemUnlocked' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, OnUnHover) == 0x000480, "Member 'UBP_CustomizationItemEntry_C::OnUnHover' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, ItemUnlockRequested) == 0x000490, "Member 'UBP_CustomizationItemEntry_C::ItemUnlockRequested' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, UnlockCancelled) == 0x0004A0, "Member 'UBP_CustomizationItemEntry_C::UnlockCancelled' has a wrong offset!");
static_assert(offsetof(UBP_CustomizationItemEntry_C, OnStoreDialogClicked) == 0x0004B0, "Member 'UBP_CustomizationItemEntry_C::OnStoreDialogClicked' has a wrong offset!");

}

