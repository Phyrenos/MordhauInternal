#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpawnScreenPoint

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_SpawnScreenPoint.BP_SpawnScreenPoint_C.ExecuteUbergraph_BP_SpawnScreenPoint
// 0x0038 (0x0038 - 0x0000)
struct BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerController*               K2Node_DynamicCast_AsMordhau_Player_Controller;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerController*               K2Node_DynamicCast_AsMordhau_Player_Controller_1;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint) == 0x000008, "Wrong alignment on BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint");
static_assert(sizeof(BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint) == 0x000038, "Wrong size on BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint");
static_assert(offsetof(BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint, EntryPoint) == 0x000000, "Member 'BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint, Temp_bool_Variable) == 0x000004, "Member 'BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000005, "Member 'BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint, Temp_bool_Has_Been_Initd_Variable) == 0x000006, "Member 'BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint, K2Node_DynamicCast_AsMordhau_Player_Controller) == 0x000010, "Member 'BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint::K2Node_DynamicCast_AsMordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint, CallFunc_GetPlayerController_ReturnValue_1) == 0x000020, "Member 'BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint, K2Node_DynamicCast_AsMordhau_Player_Controller_1) == 0x000028, "Member 'BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint::K2Node_DynamicCast_AsMordhau_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint, Temp_bool_IsClosed_Variable) == 0x000032, "Member 'BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint, CallFunc_IsValid_ReturnValue_1) == 0x000033, "Member 'BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint, CallFunc_IsValid_ReturnValue_2) == 0x000034, "Member 'BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint, CallFunc_Array_RemoveItem_ReturnValue) == 0x000035, "Member 'BP_SpawnScreenPoint_C_ExecuteUbergraph_BP_SpawnScreenPoint::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_SpawnScreenPoint.BP_SpawnScreenPoint_C.Initialize
// 0x0030 (0x0030 - 0x0000)
struct BP_SpawnScreenPoint_C_Initialize final
{
public:
	class ABP_CapturePoint_C*                     InCapturePoint;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DeployableSpawn_C*                  InDeployableSpawn;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SpawnScreen_C*                      SpawnScreen_Ref;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CapPointWidget_C*                   CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnScreenPoint_C_Initialize) == 0x000008, "Wrong alignment on BP_SpawnScreenPoint_C_Initialize");
static_assert(sizeof(BP_SpawnScreenPoint_C_Initialize) == 0x000030, "Wrong size on BP_SpawnScreenPoint_C_Initialize");
static_assert(offsetof(BP_SpawnScreenPoint_C_Initialize, InCapturePoint) == 0x000000, "Member 'BP_SpawnScreenPoint_C_Initialize::InCapturePoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Initialize, InDeployableSpawn) == 0x000008, "Member 'BP_SpawnScreenPoint_C_Initialize::InDeployableSpawn' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Initialize, SpawnScreen_Ref) == 0x000010, "Member 'BP_SpawnScreenPoint_C_Initialize::SpawnScreen_Ref' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Initialize, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_SpawnScreenPoint_C_Initialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Initialize, CallFunc_Create_ReturnValue) == 0x000020, "Member 'BP_SpawnScreenPoint_C_Initialize::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Initialize, CallFunc_AddChild_ReturnValue) == 0x000028, "Member 'BP_SpawnScreenPoint_C_Initialize::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function BP_SpawnScreenPoint.BP_SpawnScreenPoint_C.Update
// 0x0120 (0x0120 - 0x0000)
struct BP_SpawnScreenPoint_C_Update final
{
public:
	int32                                         OurToken;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OurTeam;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauGameState*                      K2Node_DynamicCast_AsMordhau_Game_State;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item;                           // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerController*               K2Node_DynamicCast_AsMordhau_Player_Controller;    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerState*                    K2Node_DynamicCast_AsMordhau_Player_State;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerState*                    K2Node_DynamicCast_AsMordhau_Player_State_1;       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerController*               K2Node_DynamicCast_AsMordhau_Player_Controller_1;  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x011F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SpawnScreenPoint_C_Update) == 0x000008, "Wrong alignment on BP_SpawnScreenPoint_C_Update");
static_assert(sizeof(BP_SpawnScreenPoint_C_Update) == 0x000120, "Wrong size on BP_SpawnScreenPoint_C_Update");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, OurToken) == 0x000000, "Member 'BP_SpawnScreenPoint_C_Update::OurToken' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, OurTeam) == 0x000004, "Member 'BP_SpawnScreenPoint_C_Update::OurTeam' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, Temp_bool_Variable) == 0x000008, "Member 'BP_SpawnScreenPoint_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, Temp_object_Variable) == 0x000010, "Member 'BP_SpawnScreenPoint_C_Update::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, Temp_object_Variable_1) == 0x000018, "Member 'BP_SpawnScreenPoint_C_Update::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, Temp_object_Variable_2) == 0x000020, "Member 'BP_SpawnScreenPoint_C_Update::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, K2Node_DynamicCast_AsMordhau_Game_State) == 0x000038, "Member 'BP_SpawnScreenPoint_C_Update::K2Node_DynamicCast_AsMordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_SpawnScreenPoint_C_Update::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, Temp_bool_Has_Been_Initd_Variable) == 0x000041, "Member 'BP_SpawnScreenPoint_C_Update::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, Temp_bool_Variable_1) == 0x000042, "Member 'BP_SpawnScreenPoint_C_Update::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, Temp_bool_IsClosed_Variable) == 0x000043, "Member 'BP_SpawnScreenPoint_C_Update::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000044, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000058, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000060, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000064, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, K2Node_MakeStruct_LinearColor) == 0x000068, "Member 'BP_SpawnScreenPoint_C_Update::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_GetPlayerController_ReturnValue) == 0x000078, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, K2Node_DynamicCast_AsMordhau_Player_Controller) == 0x000080, "Member 'BP_SpawnScreenPoint_C_Update::K2Node_DynamicCast_AsMordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_SpawnScreenPoint_C_Update::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_IsValid_ReturnValue_1) == 0x000089, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, K2Node_DynamicCast_AsMordhau_Player_State) == 0x000090, "Member 'BP_SpawnScreenPoint_C_Update::K2Node_DynamicCast_AsMordhau_Player_State' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, K2Node_DynamicCast_bSuccess_2) == 0x000098, "Member 'BP_SpawnScreenPoint_C_Update::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00009C, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_IsValid_ReturnValue_2) == 0x0000A9, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000AC, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000B8, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_IsValid_ReturnValue_3) == 0x0000B9, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, K2Node_Select_Default) == 0x0000C0, "Member 'BP_SpawnScreenPoint_C_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C8, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_BooleanAND_ReturnValue) == 0x0000C9, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_IsValid_ReturnValue_4) == 0x0000CA, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, Temp_object_Variable_3) == 0x0000D0, "Member 'BP_SpawnScreenPoint_C_Update::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, K2Node_Select_Default_1) == 0x0000D8, "Member 'BP_SpawnScreenPoint_C_Update::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000E0, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000E8, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_BooleanAND_ReturnValue_1) == 0x0000F0, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, K2Node_DynamicCast_AsMordhau_Player_State_1) == 0x0000F8, "Member 'BP_SpawnScreenPoint_C_Update::K2Node_DynamicCast_AsMordhau_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, K2Node_DynamicCast_bSuccess_3) == 0x000100, "Member 'BP_SpawnScreenPoint_C_Update::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, K2Node_DynamicCast_AsMordhau_Player_Controller_1) == 0x000108, "Member 'BP_SpawnScreenPoint_C_Update::K2Node_DynamicCast_AsMordhau_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, K2Node_DynamicCast_bSuccess_4) == 0x000110, "Member 'BP_SpawnScreenPoint_C_Update::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000111, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_Array_Length_ReturnValue) == 0x000114, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000118, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_Greater_IntInt_ReturnValue) == 0x000119, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_BooleanAND_ReturnValue_2) == 0x00011A, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00011B, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_Not_PreBool_ReturnValue) == 0x00011C, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_BooleanOR_ReturnValue) == 0x00011D, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_BooleanAND_ReturnValue_3) == 0x00011E, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Update, CallFunc_BooleanAND_ReturnValue_4) == 0x00011F, "Member 'BP_SpawnScreenPoint_C_Update::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function BP_SpawnScreenPoint.BP_SpawnScreenPoint_C.SetSelected
// 0x0888 (0x0888 - 0x0000)
struct BP_SpawnScreenPoint_C_SetSelected final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateSound                            K2Node_MakeStruct_SlateSound;                      // 0x0008(0x0018)(NoDestructor)
	struct FSlateSound                            K2Node_MakeStruct_SlateSound_1;                    // 0x0020(0x0018)(NoDestructor)
	struct FSlateSound                            K2Node_MakeStruct_SlateSound_2;                    // 0x0038(0x0018)(NoDestructor, UObjectWrapper)
	struct FSlateSound                            K2Node_MakeStruct_SlateSound_3;                    // 0x0050(0x0018)(NoDestructor)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0068(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x00F0(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_2;                    // 0x0178(0x0088)(UObjectWrapper)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_3;                    // 0x0200(0x0088)(UObjectWrapper)
	struct FButtonStyle                           K2Node_MakeStruct_ButtonStyle;                     // 0x0288(0x0278)(UObjectWrapper)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_4;                    // 0x0500(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_5;                    // 0x0588(0x0088)(UObjectWrapper)
	struct FButtonStyle                           K2Node_MakeStruct_ButtonStyle_1;                   // 0x0610(0x0278)()
};
static_assert(alignof(BP_SpawnScreenPoint_C_SetSelected) == 0x000008, "Wrong alignment on BP_SpawnScreenPoint_C_SetSelected");
static_assert(sizeof(BP_SpawnScreenPoint_C_SetSelected) == 0x000888, "Wrong size on BP_SpawnScreenPoint_C_SetSelected");
static_assert(offsetof(BP_SpawnScreenPoint_C_SetSelected, Value) == 0x000000, "Member 'BP_SpawnScreenPoint_C_SetSelected::Value' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_SetSelected, K2Node_MakeStruct_SlateSound) == 0x000008, "Member 'BP_SpawnScreenPoint_C_SetSelected::K2Node_MakeStruct_SlateSound' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_SetSelected, K2Node_MakeStruct_SlateSound_1) == 0x000020, "Member 'BP_SpawnScreenPoint_C_SetSelected::K2Node_MakeStruct_SlateSound_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_SetSelected, K2Node_MakeStruct_SlateSound_2) == 0x000038, "Member 'BP_SpawnScreenPoint_C_SetSelected::K2Node_MakeStruct_SlateSound_2' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_SetSelected, K2Node_MakeStruct_SlateSound_3) == 0x000050, "Member 'BP_SpawnScreenPoint_C_SetSelected::K2Node_MakeStruct_SlateSound_3' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_SetSelected, K2Node_MakeStruct_SlateBrush) == 0x000068, "Member 'BP_SpawnScreenPoint_C_SetSelected::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_SetSelected, K2Node_MakeStruct_SlateBrush_1) == 0x0000F0, "Member 'BP_SpawnScreenPoint_C_SetSelected::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_SetSelected, K2Node_MakeStruct_SlateBrush_2) == 0x000178, "Member 'BP_SpawnScreenPoint_C_SetSelected::K2Node_MakeStruct_SlateBrush_2' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_SetSelected, K2Node_MakeStruct_SlateBrush_3) == 0x000200, "Member 'BP_SpawnScreenPoint_C_SetSelected::K2Node_MakeStruct_SlateBrush_3' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_SetSelected, K2Node_MakeStruct_ButtonStyle) == 0x000288, "Member 'BP_SpawnScreenPoint_C_SetSelected::K2Node_MakeStruct_ButtonStyle' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_SetSelected, K2Node_MakeStruct_SlateBrush_4) == 0x000500, "Member 'BP_SpawnScreenPoint_C_SetSelected::K2Node_MakeStruct_SlateBrush_4' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_SetSelected, K2Node_MakeStruct_SlateBrush_5) == 0x000588, "Member 'BP_SpawnScreenPoint_C_SetSelected::K2Node_MakeStruct_SlateBrush_5' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_SetSelected, K2Node_MakeStruct_ButtonStyle_1) == 0x000610, "Member 'BP_SpawnScreenPoint_C_SetSelected::K2Node_MakeStruct_ButtonStyle_1' has a wrong offset!");

// Function BP_SpawnScreenPoint.BP_SpawnScreenPoint_C.UpdateScreenPosition
// 0x0024 (0x0024 - 0x0000)
struct BP_SpawnScreenPoint_C_UpdateScreenPosition final
{
public:
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0008(0x001C)(NoDestructor)
};
static_assert(alignof(BP_SpawnScreenPoint_C_UpdateScreenPosition) == 0x000004, "Wrong alignment on BP_SpawnScreenPoint_C_UpdateScreenPosition");
static_assert(sizeof(BP_SpawnScreenPoint_C_UpdateScreenPosition) == 0x000024, "Wrong size on BP_SpawnScreenPoint_C_UpdateScreenPosition");
static_assert(offsetof(BP_SpawnScreenPoint_C_UpdateScreenPosition, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000000, "Member 'BP_SpawnScreenPoint_C_UpdateScreenPosition::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_UpdateScreenPosition, K2Node_MakeStruct_WidgetTransform) == 0x000008, "Member 'BP_SpawnScreenPoint_C_UpdateScreenPosition::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");

// Function BP_SpawnScreenPoint.BP_SpawnScreenPoint_C.Detect and handle overlapping points
// 0x00A8 (0x00A8 - 0x0000)
struct BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points final
{
public:
	bool                                          Would_Overlap_Original_Pos;                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      Overlapping_Positions;                             // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          Overlap_Detected;                                  // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Overlapping_Pos;                                   // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue;    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_1;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_SpawnScreenPoint_C*>         CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SpawnScreenPoint_C*                 CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Vector2DVector2D_ReturnValue;  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_Vector2DVector2D_ReturnValue_1; // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_Vector2DVector2D_ReturnValue_2; // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_Vector2DVector2D_ReturnValue_3; // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points) == 0x000008, "Wrong alignment on BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points");
static_assert(sizeof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points) == 0x0000A8, "Wrong size on BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, Would_Overlap_Original_Pos) == 0x000000, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::Would_Overlap_Original_Pos' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, Overlapping_Positions) == 0x000008, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::Overlapping_Positions' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, Overlap_Detected) == 0x000018, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::Overlap_Detected' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, Overlapping_Pos) == 0x00001C, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::Overlapping_Pos' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_NotEqual_Vector2DVector2D_ReturnValue) == 0x00003C, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_NotEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_Not_PreBool_ReturnValue) == 0x00003D, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_BooleanAND_ReturnValue) == 0x00003E, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_GetDesiredSize_ReturnValue) == 0x000040, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_BreakVector2D_X) == 0x000048, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_BreakVector2D_Y) == 0x00004C, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000050, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_GetDesiredSize_ReturnValue_1) == 0x000060, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_GetDesiredSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_BreakVector2D_X_1) == 0x000068, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_BreakVector2D_Y_1) == 0x00006C, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000070, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000074, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000078, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_Less_IntInt_ReturnValue_1) == 0x000098, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000099, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x00009A, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_IsValid_ReturnValue) == 0x00009B, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_Array_Add_ReturnValue) == 0x00009C, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_EqualEqual_Vector2DVector2D_ReturnValue) == 0x0000A0, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_EqualEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_EqualEqual_Vector2DVector2D_ReturnValue_1) == 0x0000A1, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_EqualEqual_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_EqualEqual_Vector2DVector2D_ReturnValue_2) == 0x0000A2, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_EqualEqual_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A3, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_EqualEqual_Vector2DVector2D_ReturnValue_3) == 0x0000A4, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_EqualEqual_Vector2DVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_BooleanAND_ReturnValue_2) == 0x0000A5, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_BooleanAND_ReturnValue_3) == 0x0000A6, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points, CallFunc_BooleanAND_ReturnValue_4) == 0x0000A7, "Member 'BP_SpawnScreenPoint_C_Detect_and_handle_overlapping_points::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function BP_SpawnScreenPoint.BP_SpawnScreenPoint_C.Set Desired Position
// 0x0048 (0x0048 - 0x0000)
struct BP_SpawnScreenPoint_C_Set_Desired_Position final
{
public:
	struct FVector                                WorldLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerController*               K2Node_DynamicCast_AsMordhau_Player_Controller;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition; // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue; // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnScreenPoint_C_Set_Desired_Position) == 0x000008, "Wrong alignment on BP_SpawnScreenPoint_C_Set_Desired_Position");
static_assert(sizeof(BP_SpawnScreenPoint_C_Set_Desired_Position) == 0x000048, "Wrong size on BP_SpawnScreenPoint_C_Set_Desired_Position");
static_assert(offsetof(BP_SpawnScreenPoint_C_Set_Desired_Position, WorldLocation) == 0x000000, "Member 'BP_SpawnScreenPoint_C_Set_Desired_Position::WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Set_Desired_Position, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_SpawnScreenPoint_C_Set_Desired_Position::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Set_Desired_Position, CallFunc_GetDesiredSize_ReturnValue) == 0x000018, "Member 'BP_SpawnScreenPoint_C_Set_Desired_Position::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Set_Desired_Position, K2Node_DynamicCast_AsMordhau_Player_Controller) == 0x000020, "Member 'BP_SpawnScreenPoint_C_Set_Desired_Position::K2Node_DynamicCast_AsMordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Set_Desired_Position, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_SpawnScreenPoint_C_Set_Desired_Position::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Set_Desired_Position, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x00002C, "Member 'BP_SpawnScreenPoint_C_Set_Desired_Position::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Set_Desired_Position, CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition) == 0x000034, "Member 'BP_SpawnScreenPoint_C_Set_Desired_Position::CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Set_Desired_Position, CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue) == 0x00003C, "Member 'BP_SpawnScreenPoint_C_Set_Desired_Position::CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnScreenPoint_C_Set_Desired_Position, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000040, "Member 'BP_SpawnScreenPoint_C_Set_Desired_Position::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");

}

