#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentTypeIndicator

#include "Basic.hpp"

#include "BP_EquipmentTypeIndicator_classes.hpp"
#include "BP_EquipmentTypeIndicator_parameters.hpp"


namespace SDK
{

// Function BP_EquipmentTypeIndicator.BP_EquipmentTypeIndicator_C.ExecuteUbergraph_BP_EquipmentTypeIndicator
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EquipmentTypeIndicator_C::ExecuteUbergraph_BP_EquipmentTypeIndicator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentTypeIndicator_C", "ExecuteUbergraph_BP_EquipmentTypeIndicator");

	Params::BP_EquipmentTypeIndicator_C_ExecuteUbergraph_BP_EquipmentTypeIndicator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentTypeIndicator.BP_EquipmentTypeIndicator_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_EquipmentTypeIndicator_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentTypeIndicator_C", "PreConstruct");

	Params::BP_EquipmentTypeIndicator_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentTypeIndicator.BP_EquipmentTypeIndicator_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_EquipmentTypeIndicator_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentTypeIndicator_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentTypeIndicator.BP_EquipmentTypeIndicator_C.Update
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEquipmentCategory                      Type_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Show_All_Types                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_EquipmentTypeIndicator_C::Update(EEquipmentCategory Type_0, bool Show_All_Types)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentTypeIndicator_C", "Update");

	Params::BP_EquipmentTypeIndicator_C_Update Parms{};

	Parms.Type_0 = Type_0;
	Parms.Show_All_Types = Show_All_Types;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentTypeIndicator.BP_EquipmentTypeIndicator_C.Set Icon Color
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InColorAndOpacity                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EquipmentTypeIndicator_C::Set_Icon_Color(const struct FLinearColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentTypeIndicator_C", "Set Icon Color");

	Params::BP_EquipmentTypeIndicator_C_Set_Icon_Color Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	UObject::ProcessEvent(Func, &Parms);
}

}

