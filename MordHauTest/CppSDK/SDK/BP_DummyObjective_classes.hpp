#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DummyObjective

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DummyObjective.BP_DummyObjective_C
// 0x0030 (0x0410 - 0x03E0)
class ABP_DummyObjective_C final : public AMordhauActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UStaticMeshComponent*                   Sphere;                                            // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UMordhauWidgetComponent*                MordhauWidget;                                     // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_CapturePoint_C*                     CapturePoint;                                      // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             AttackerIcon;                                      // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             DefenderIcon;                                      // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DummyObjective(int32 EntryPoint);
	void OnAnyObjectiveProgressChanged();
	void OnUpdateUIWidgets();
	void OnEnemyLostPrerequisites();
	void OnEnemyGainedPrerequisites();
	void OnInitialize(class ABP_CapturePoint_C* Point);
	void Activate();
	void Disable();
	void Initialize(class ABP_CapturePoint_C* CapturePoint_0);
	void EnemyGainedPrerequisites();
	void EnemyLostPrerequisites();
	void IsCapturePointDone(bool* IsDone);
	void AnyObjectiveProgressChanged();
	void IsCompleted(bool* Completed);
	void IsInObjectiveArea(const struct FVector& Location, bool* InArea);

	void GetObjectiveProgress(float* Progress) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DummyObjective_C">();
	}
	static class ABP_DummyObjective_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DummyObjective_C>();
	}
};
static_assert(alignof(ABP_DummyObjective_C) == 0x000010, "Wrong alignment on ABP_DummyObjective_C");
static_assert(sizeof(ABP_DummyObjective_C) == 0x000410, "Wrong size on ABP_DummyObjective_C");
static_assert(offsetof(ABP_DummyObjective_C, UberGraphFrame) == 0x0003E0, "Member 'ABP_DummyObjective_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DummyObjective_C, Sphere) == 0x0003E8, "Member 'ABP_DummyObjective_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_DummyObjective_C, MordhauWidget) == 0x0003F0, "Member 'ABP_DummyObjective_C::MordhauWidget' has a wrong offset!");
static_assert(offsetof(ABP_DummyObjective_C, CapturePoint) == 0x0003F8, "Member 'ABP_DummyObjective_C::CapturePoint' has a wrong offset!");
static_assert(offsetof(ABP_DummyObjective_C, AttackerIcon) == 0x000400, "Member 'ABP_DummyObjective_C::AttackerIcon' has a wrong offset!");
static_assert(offsetof(ABP_DummyObjective_C, DefenderIcon) == 0x000408, "Member 'ABP_DummyObjective_C::DefenderIcon' has a wrong offset!");

}

