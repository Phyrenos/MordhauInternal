#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WearableSelectionMenu

#include "Basic.hpp"

#include "Mordhau_structs.hpp"
#include "S_ArmorySlotColorInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "S_WearableData_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.ExecuteUbergraph_BP_WearableSelectionMenu
// 0x02D8 (0x02D8 - 0x0000)
struct BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Obj, bool* RetVal)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UBP_ArmorTierFilterTab_C* Tab)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0048(0x0018)()
	uint8                                         K2Node_CustomEvent_Armor_Class;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Slot_Name;                      // 0x0068(0x0018)()
	class FText                                   K2Node_CustomEvent_Wearable_Name;                  // 0x0080(0x0018)()
	int32                                         K2Node_ComponentBoundEvent_Value;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Color_Slot;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ArmorySlotColorInfo>         CallFunc_Get_Selected_Entry_Colors_Slot_Color_Info; // 0x00A8(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_Get_Selected_Entry_Colors_Pattern_Values; // 0x00B8(0x0010)(ReferenceParm)
	struct FPatternInfo                           CallFunc_Get_Selected_Entry_Colors_Selected_Pattern; // 0x00C8(0x0010)(NoDestructor)
	class UMordhauInventory*                      CallFunc_GetMordhauInventory_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetXP_ReturnValue;                        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGold_ReturnValue;                      // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRankFromXP_ReturnValue;                // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Obj, bool* RetVal)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00EC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* ObjA, class UObject* ObjB, bool* RetVal)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x00FC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_bPlayRefreshAnim;               // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Obj, bool* RetVal)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0110(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Obj, bool* RetVal)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Obj, bool* RetVal)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0130(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWearableSlot                                 Temp_byte_Variable_12;                             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0154(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_WearableData_C*>             CallFunc_Convert_Data_Array_to_Object_Array_Wearable_UI_Data; // 0x0168(0x0010)(ReferenceParm)
	TArray<class UBP_WearableData_C*>             CallFunc_Filter_By_Function_Delegate_New_Wearable_Data; // 0x0178(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_WearableData_C*>             CallFunc_Filter_By_Function_Delegate_New_Wearable_Data_1; // 0x0190(0x0010)(ReferenceParm)
	class UBP_ArmorTierFilterTab_C*               CallFunc_Array_Get_Item;                           // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_WearableData_C*>             CallFunc_Filter_By_Function_Delegate_New_Wearable_Data_2; // 0x01A8(0x0010)(ReferenceParm)
	TArray<class UBP_WearableData_C*>             CallFunc_SortDlcToTop_ReturnWearbaleData;          // 0x01B8(0x0010)(ReferenceParm)
	TArray<struct FS_WearableData>                CallFunc_Convert_Object_Array_To_Data_Array_Wearable_UI_Data; // 0x01C8(0x0010)(ReferenceParm)
	TArray<class UBP_ArmorTierFilterTab_C*>       K2Node_MakeArray_Array;                            // 0x01D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_ArmorTierFilterTab_C*               K2Node_CustomEvent_Tab;                            // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Obj, bool* RetVal)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x01F0(0x0010)(ZeroConstructor, NoDestructor)
	TArray<class UBP_WearableData_C*>             CallFunc_Convert_Data_Array_to_Object_Array_Wearable_UI_Data_1; // 0x0200(0x0010)(ReferenceParm)
	TArray<class UBP_WearableData_C*>             CallFunc_Filter_By_Function_Delegate_New_Wearable_Data_3; // 0x0210(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_WearableData_C*>             CallFunc_Filter_By_Function_Delegate_New_Wearable_Data_4; // 0x0228(0x0010)(ReferenceParm)
	TArray<class UBP_WearableData_C*>             CallFunc_SortDlcToTop_ReturnWearbaleData_1;        // 0x0238(0x0010)(ReferenceParm)
	TArray<struct FS_WearableData>                CallFunc_Convert_Object_Array_To_Data_Array_Wearable_UI_Data_1; // 0x0248(0x0010)(ReferenceParm)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0258(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Pattern_Id;             // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BP_GetSelectedItem_ReturnValue;           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_WearableData_C*                     K2Node_DynamicCast_AsBP_Wearable_Data;             // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu");
static_assert(sizeof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu) == 0x0002D8, "Wrong size on BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, EntryPoint) == 0x000000, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, Temp_byte_Variable) == 0x000014, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, Temp_byte_Variable_1) == 0x000015, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, Temp_byte_Variable_2) == 0x000016, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, Temp_byte_Variable_3) == 0x000017, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, Temp_byte_Variable_4) == 0x000018, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, Temp_byte_Variable_5) == 0x000019, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, Temp_byte_Variable_6) == 0x00001A, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, Temp_byte_Variable_7) == 0x00001B, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, Temp_byte_Variable_8) == 0x00001C, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, Temp_byte_Variable_9) == 0x00001D, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, Temp_byte_Variable_10) == 0x00001E, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, Temp_bool_Variable) == 0x000030, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, Temp_byte_Variable_11) == 0x000031, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_CreateDelegate_OutputDelegate_2) == 0x000038, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_ComponentBoundEvent_Text) == 0x000048, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_CustomEvent_Armor_Class) == 0x000060, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_CustomEvent_Armor_Class' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_CustomEvent_Slot_Name) == 0x000068, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_CustomEvent_Slot_Name' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_CustomEvent_Wearable_Name) == 0x000080, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_CustomEvent_Wearable_Name' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_ComponentBoundEvent_Value) == 0x000098, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_ComponentBoundEvent_Color_Slot) == 0x00009C, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_ComponentBoundEvent_Color_Slot' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, Temp_bool_Has_Been_Initd_Variable) == 0x0000A0, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_Get_Selected_Entry_Colors_Slot_Color_Info) == 0x0000A8, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_Get_Selected_Entry_Colors_Slot_Color_Info' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_Get_Selected_Entry_Colors_Pattern_Values) == 0x0000B8, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_Get_Selected_Entry_Colors_Pattern_Values' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_Get_Selected_Entry_Colors_Selected_Pattern) == 0x0000C8, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_Get_Selected_Entry_Colors_Selected_Pattern' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_GetMordhauInventory_ReturnValue) == 0x0000D8, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_GetMordhauInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_GetXP_ReturnValue) == 0x0000E0, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_GetXP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_GetGold_ReturnValue) == 0x0000E4, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_GetGold_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_GetRankFromXP_ReturnValue) == 0x0000E8, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_GetRankFromXP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000EC, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000FC, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_CustomEvent_bPlayRefreshAnim) == 0x00010C, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_CustomEvent_bPlayRefreshAnim' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_CreateDelegate_OutputDelegate_5) == 0x000110, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_CreateDelegate_OutputDelegate_6) == 0x000120, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_CreateDelegate_OutputDelegate_7) == 0x000130, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, Temp_bool_IsClosed_Variable) == 0x000140, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, Temp_int_Loop_Counter_Variable) == 0x000144, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_Less_IntInt_ReturnValue) == 0x000148, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_Add_IntInt_ReturnValue) == 0x00014C, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, Temp_byte_Variable_12) == 0x000150, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_CreateDelegate_OutputDelegate_8) == 0x000154, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_Select_Default) == 0x000164, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_Select_Default_1) == 0x000165, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_Convert_Data_Array_to_Object_Array_Wearable_UI_Data) == 0x000168, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_Convert_Data_Array_to_Object_Array_Wearable_UI_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_Filter_By_Function_Delegate_New_Wearable_Data) == 0x000178, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_Filter_By_Function_Delegate_New_Wearable_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, Temp_int_Array_Index_Variable) == 0x000188, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_Filter_By_Function_Delegate_New_Wearable_Data_1) == 0x000190, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_Filter_By_Function_Delegate_New_Wearable_Data_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_Filter_By_Function_Delegate_New_Wearable_Data_2) == 0x0001A8, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_Filter_By_Function_Delegate_New_Wearable_Data_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_SortDlcToTop_ReturnWearbaleData) == 0x0001B8, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_SortDlcToTop_ReturnWearbaleData' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_Convert_Object_Array_To_Data_Array_Wearable_UI_Data) == 0x0001C8, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_Convert_Object_Array_To_Data_Array_Wearable_UI_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_MakeArray_Array) == 0x0001D8, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_CustomEvent_Tab) == 0x0001E8, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_CustomEvent_Tab' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_CreateDelegate_OutputDelegate_9) == 0x0001F0, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_Convert_Data_Array_to_Object_Array_Wearable_UI_Data_1) == 0x000200, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_Convert_Data_Array_to_Object_Array_Wearable_UI_Data_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_Filter_By_Function_Delegate_New_Wearable_Data_3) == 0x000210, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_Filter_By_Function_Delegate_New_Wearable_Data_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_IsHovered_ReturnValue) == 0x000220, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_Filter_By_Function_Delegate_New_Wearable_Data_4) == 0x000228, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_Filter_By_Function_Delegate_New_Wearable_Data_4' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_SortDlcToTop_ReturnWearbaleData_1) == 0x000238, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_SortDlcToTop_ReturnWearbaleData_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_Convert_Object_Array_To_Data_Array_Wearable_UI_Data_1) == 0x000248, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_Convert_Object_Array_To_Data_Array_Wearable_UI_Data_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_Event_MyGeometry) == 0x000258, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_Event_InDeltaTime) == 0x000290, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_ComponentBoundEvent_Pattern_Id) == 0x000294, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_ComponentBoundEvent_Pattern_Id' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_PlayAnimation_ReturnValue) == 0x000298, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_BP_GetSelectedItem_ReturnValue) == 0x0002A0, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_BP_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_DynamicCast_AsBP_Wearable_Data) == 0x0002A8, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_DynamicCast_AsBP_Wearable_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, K2Node_DynamicCast_bSuccess) == 0x0002B0, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_Conv_IntToString_ReturnValue) == 0x0002B8, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu, CallFunc_Concat_StrStr_ReturnValue) == 0x0002C8, "Member 'BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.BndEvt__BP_WearableSelectionMenu_BP_ColorPatternWidget_K2Node_ComponentBoundEvent_5_Pattern Entry Clicked__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_WearableSelectionMenu_C_BndEvt__BP_WearableSelectionMenu_BP_ColorPatternWidget_K2Node_ComponentBoundEvent_5_Pattern_Entry_Clicked__DelegateSignature final
{
public:
	int32                                         Pattern_Id;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSelectionMenu_C_BndEvt__BP_WearableSelectionMenu_BP_ColorPatternWidget_K2Node_ComponentBoundEvent_5_Pattern_Entry_Clicked__DelegateSignature) == 0x000004, "Wrong alignment on BP_WearableSelectionMenu_C_BndEvt__BP_WearableSelectionMenu_BP_ColorPatternWidget_K2Node_ComponentBoundEvent_5_Pattern_Entry_Clicked__DelegateSignature");
static_assert(sizeof(BP_WearableSelectionMenu_C_BndEvt__BP_WearableSelectionMenu_BP_ColorPatternWidget_K2Node_ComponentBoundEvent_5_Pattern_Entry_Clicked__DelegateSignature) == 0x000004, "Wrong size on BP_WearableSelectionMenu_C_BndEvt__BP_WearableSelectionMenu_BP_ColorPatternWidget_K2Node_ComponentBoundEvent_5_Pattern_Entry_Clicked__DelegateSignature");
static_assert(offsetof(BP_WearableSelectionMenu_C_BndEvt__BP_WearableSelectionMenu_BP_ColorPatternWidget_K2Node_ComponentBoundEvent_5_Pattern_Entry_Clicked__DelegateSignature, Pattern_Id) == 0x000000, "Member 'BP_WearableSelectionMenu_C_BndEvt__BP_WearableSelectionMenu_BP_ColorPatternWidget_K2Node_ComponentBoundEvent_5_Pattern_Entry_Clicked__DelegateSignature::Pattern_Id' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_WearableSelectionMenu_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Tick) == 0x000004, "Wrong alignment on BP_WearableSelectionMenu_C_Tick");
static_assert(sizeof(BP_WearableSelectionMenu_C_Tick) == 0x00003C, "Wrong size on BP_WearableSelectionMenu_C_Tick");
static_assert(offsetof(BP_WearableSelectionMenu_C_Tick, MyGeometry) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_WearableSelectionMenu_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Tab Clicked 
// 0x0008 (0x0008 - 0x0000)
struct BP_WearableSelectionMenu_C_Tab_Clicked_ final
{
public:
	class UBP_ArmorTierFilterTab_C*               Tab;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Tab_Clicked_) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Tab_Clicked_");
static_assert(sizeof(BP_WearableSelectionMenu_C_Tab_Clicked_) == 0x000008, "Wrong size on BP_WearableSelectionMenu_C_Tab_Clicked_");
static_assert(offsetof(BP_WearableSelectionMenu_C_Tab_Clicked_, Tab) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Tab_Clicked_::Tab' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Filter Data New
// 0x0001 (0x0001 - 0x0000)
struct BP_WearableSelectionMenu_C_Filter_Data_New final
{
public:
	bool                                          bPlayRefreshAnim;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Filter_Data_New) == 0x000001, "Wrong alignment on BP_WearableSelectionMenu_C_Filter_Data_New");
static_assert(sizeof(BP_WearableSelectionMenu_C_Filter_Data_New) == 0x000001, "Wrong size on BP_WearableSelectionMenu_C_Filter_Data_New");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_Data_New, bPlayRefreshAnim) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Filter_Data_New::bPlayRefreshAnim' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_2_Color Entry Clicked__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_WearableSelectionMenu_C_BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_2_Color_Entry_Clicked__DelegateSignature final
{
public:
	int32                                         Color_Slot;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSelectionMenu_C_BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_2_Color_Entry_Clicked__DelegateSignature) == 0x000004, "Wrong alignment on BP_WearableSelectionMenu_C_BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_2_Color_Entry_Clicked__DelegateSignature");
static_assert(sizeof(BP_WearableSelectionMenu_C_BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_2_Color_Entry_Clicked__DelegateSignature) == 0x000004, "Wrong size on BP_WearableSelectionMenu_C_BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_2_Color_Entry_Clicked__DelegateSignature");
static_assert(offsetof(BP_WearableSelectionMenu_C_BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_2_Color_Entry_Clicked__DelegateSignature, Color_Slot) == 0x000000, "Member 'BP_WearableSelectionMenu_C_BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_2_Color_Entry_Clicked__DelegateSignature::Color_Slot' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_0_PatternValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_WearableSelectionMenu_C_BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_0_PatternValueChanged__DelegateSignature final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSelectionMenu_C_BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_0_PatternValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on BP_WearableSelectionMenu_C_BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_0_PatternValueChanged__DelegateSignature");
static_assert(sizeof(BP_WearableSelectionMenu_C_BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_0_PatternValueChanged__DelegateSignature) == 0x000004, "Wrong size on BP_WearableSelectionMenu_C_BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_0_PatternValueChanged__DelegateSignature");
static_assert(offsetof(BP_WearableSelectionMenu_C_BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_0_PatternValueChanged__DelegateSignature, Value) == 0x000000, "Member 'BP_WearableSelectionMenu_C_BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_0_PatternValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Update Armor Slot Wearable Text
// 0x0038 (0x0038 - 0x0000)
struct BP_WearableSelectionMenu_C_Update_Armor_Slot_Wearable_Text final
{
public:
	uint8                                         Armor_Class;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Slot_Name;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Wearable_Name;                                     // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Update_Armor_Slot_Wearable_Text) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Update_Armor_Slot_Wearable_Text");
static_assert(sizeof(BP_WearableSelectionMenu_C_Update_Armor_Slot_Wearable_Text) == 0x000038, "Wrong size on BP_WearableSelectionMenu_C_Update_Armor_Slot_Wearable_Text");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Armor_Slot_Wearable_Text, Armor_Class) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Update_Armor_Slot_Wearable_Text::Armor_Class' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Armor_Slot_Wearable_Text, Slot_Name) == 0x000008, "Member 'BP_WearableSelectionMenu_C_Update_Armor_Slot_Wearable_Text::Slot_Name' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Armor_Slot_Wearable_Text, Wearable_Name) == 0x000020, "Member 'BP_WearableSelectionMenu_C_Update_Armor_Slot_Wearable_Text::Wearable_Name' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On Text Changed__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_WearableSelectionMenu_C_BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On_Text_Changed__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_WearableSelectionMenu_C_BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On_Text_Changed__DelegateSignature) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On_Text_Changed__DelegateSignature");
static_assert(sizeof(BP_WearableSelectionMenu_C_BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On_Text_Changed__DelegateSignature) == 0x000018, "Wrong size on BP_WearableSelectionMenu_C_BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On_Text_Changed__DelegateSignature");
static_assert(offsetof(BP_WearableSelectionMenu_C_BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On_Text_Changed__DelegateSignature, Text) == 0x000000, "Member 'BP_WearableSelectionMenu_C_BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On_Text_Changed__DelegateSignature::Text' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Sort By Function Delegate
// 0x0080 (0x0080 - 0x0000)
struct BP_WearableSelectionMenu_C_Sort_By_Function_Delegate final
{
public:
	TArray<class UBP_WearableData_C*>             Wearable_Data;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TDelegate<void(class UObject* ObjA, class UObject* ObjB, bool* RetVal)> Function_Delegate;                                 // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	TArray<class UBP_WearableData_C*>             New_Wearable_Data;                                 // 0x0020(0x0010)(Parm, OutParm)
	TArray<class UBP_WearableData_C*>             Filtered_Wearable_Data;                            // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<class UObject*>                        CallFunc_SortArrayByFunction_ReturnValue;          // 0x0040(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_WearableData_C*                     K2Node_DynamicCast_AsBP_Wearable_Data;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Sort_By_Function_Delegate) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Sort_By_Function_Delegate");
static_assert(sizeof(BP_WearableSelectionMenu_C_Sort_By_Function_Delegate) == 0x000080, "Wrong size on BP_WearableSelectionMenu_C_Sort_By_Function_Delegate");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Function_Delegate, Wearable_Data) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Sort_By_Function_Delegate::Wearable_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Function_Delegate, Function_Delegate) == 0x000010, "Member 'BP_WearableSelectionMenu_C_Sort_By_Function_Delegate::Function_Delegate' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Function_Delegate, New_Wearable_Data) == 0x000020, "Member 'BP_WearableSelectionMenu_C_Sort_By_Function_Delegate::New_Wearable_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Function_Delegate, Filtered_Wearable_Data) == 0x000030, "Member 'BP_WearableSelectionMenu_C_Sort_By_Function_Delegate::Filtered_Wearable_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Function_Delegate, CallFunc_SortArrayByFunction_ReturnValue) == 0x000040, "Member 'BP_WearableSelectionMenu_C_Sort_By_Function_Delegate::CallFunc_SortArrayByFunction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Function_Delegate, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_WearableSelectionMenu_C_Sort_By_Function_Delegate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Function_Delegate, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_WearableSelectionMenu_C_Sort_By_Function_Delegate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Function_Delegate, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_WearableSelectionMenu_C_Sort_By_Function_Delegate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Function_Delegate, K2Node_DynamicCast_AsBP_Wearable_Data) == 0x000060, "Member 'BP_WearableSelectionMenu_C_Sort_By_Function_Delegate::K2Node_DynamicCast_AsBP_Wearable_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Function_Delegate, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_WearableSelectionMenu_C_Sort_By_Function_Delegate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Function_Delegate, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BP_WearableSelectionMenu_C_Sort_By_Function_Delegate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Function_Delegate, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_WearableSelectionMenu_C_Sort_By_Function_Delegate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Function_Delegate, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_WearableSelectionMenu_C_Sort_By_Function_Delegate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Function_Delegate, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'BP_WearableSelectionMenu_C_Sort_By_Function_Delegate::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Sort By Armor Class Ascending
// 0x0060 (0x0060 - 0x0000)
struct BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending final
{
public:
	class UObject*                                Obj_A;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Obj_B;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret_Val;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WearableData_C*                     K2Node_DynamicCast_AsBP_Wearable_Data;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WearableData_C*                     K2Node_DynamicCast_AsBP_Wearable_Data_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SGreaterThan_ReturnValue;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending");
static_assert(sizeof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending) == 0x000060, "Wrong size on BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending, Obj_A) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending::Obj_A' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending, Obj_B) == 0x000008, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending::Obj_B' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending, Ret_Val) == 0x000010, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending::Ret_Val' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending, K2Node_DynamicCast_AsBP_Wearable_Data) == 0x000018, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending::K2Node_DynamicCast_AsBP_Wearable_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending, K2Node_DynamicCast_AsBP_Wearable_Data_1) == 0x000028, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending::K2Node_DynamicCast_AsBP_Wearable_Data_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending, CallFunc_Conv_TextToString_ReturnValue) == 0x000038, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000048, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending, CallFunc_Greater_ByteByte_ReturnValue) == 0x000058, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending, CallFunc_SGreaterThan_ReturnValue) == 0x000059, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending::CallFunc_SGreaterThan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005A, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Sort By Armor Class Descending
// 0x0060 (0x0060 - 0x0000)
struct BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending final
{
public:
	class UObject*                                Obj_A;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Obj_B;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret_Val;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WearableData_C*                     K2Node_DynamicCast_AsBP_Wearable_Data;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WearableData_C*                     K2Node_DynamicCast_AsBP_Wearable_Data_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SLessThan_ReturnValue;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending");
static_assert(sizeof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending) == 0x000060, "Wrong size on BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending, Obj_A) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending::Obj_A' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending, Obj_B) == 0x000008, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending::Obj_B' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending, Ret_Val) == 0x000010, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending::Ret_Val' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending, K2Node_DynamicCast_AsBP_Wearable_Data) == 0x000018, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending::K2Node_DynamicCast_AsBP_Wearable_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending, K2Node_DynamicCast_AsBP_Wearable_Data_1) == 0x000028, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending::K2Node_DynamicCast_AsBP_Wearable_Data_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending, CallFunc_Conv_TextToString_ReturnValue) == 0x000038, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000048, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending, CallFunc_Less_ByteByte_ReturnValue) == 0x000058, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending, CallFunc_SLessThan_ReturnValue) == 0x000059, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending::CallFunc_SLessThan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005A, "Member 'BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Filter by Function Delegate
// 0x0050 (0x0050 - 0x0000)
struct BP_WearableSelectionMenu_C_Filter_by_Function_Delegate final
{
public:
	TArray<class UBP_WearableData_C*>             Wearable_Data;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TDelegate<void(class UObject* Obj, bool* RetVal)> FuncDel;                                           // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	TArray<class UBP_WearableData_C*>             New_Wearable_Data;                                 // 0x0020(0x0010)(Parm, OutParm)
	TArray<class UBP_WearableData_C*>             Filtered_Wearable_Data;                            // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<class UBP_WearableData_C*>             CallFunc_FilterArrayByFunction_ReturnValue;        // 0x0040(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Filter_by_Function_Delegate) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Filter_by_Function_Delegate");
static_assert(sizeof(BP_WearableSelectionMenu_C_Filter_by_Function_Delegate) == 0x000050, "Wrong size on BP_WearableSelectionMenu_C_Filter_by_Function_Delegate");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_by_Function_Delegate, Wearable_Data) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Filter_by_Function_Delegate::Wearable_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_by_Function_Delegate, FuncDel) == 0x000010, "Member 'BP_WearableSelectionMenu_C_Filter_by_Function_Delegate::FuncDel' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_by_Function_Delegate, New_Wearable_Data) == 0x000020, "Member 'BP_WearableSelectionMenu_C_Filter_by_Function_Delegate::New_Wearable_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_by_Function_Delegate, Filtered_Wearable_Data) == 0x000030, "Member 'BP_WearableSelectionMenu_C_Filter_by_Function_Delegate::Filtered_Wearable_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_by_Function_Delegate, CallFunc_FilterArrayByFunction_ReturnValue) == 0x000040, "Member 'BP_WearableSelectionMenu_C_Filter_by_Function_Delegate::CallFunc_FilterArrayByFunction_ReturnValue' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Filter Is Peasant Armor
// 0x0020 (0x0020 - 0x0000)
struct BP_WearableSelectionMenu_C_Filter_Is_Peasant_Armor final
{
public:
	class UObject*                                Obj_A;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret_Val;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WearableData_C*                     K2Node_DynamicCast_AsBP_Wearable_Data;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsPeasant_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Filter_Is_Peasant_Armor) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Filter_Is_Peasant_Armor");
static_assert(sizeof(BP_WearableSelectionMenu_C_Filter_Is_Peasant_Armor) == 0x000020, "Wrong size on BP_WearableSelectionMenu_C_Filter_Is_Peasant_Armor");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_Is_Peasant_Armor, Obj_A) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Filter_Is_Peasant_Armor::Obj_A' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_Is_Peasant_Armor, Ret_Val) == 0x000008, "Member 'BP_WearableSelectionMenu_C_Filter_Is_Peasant_Armor::Ret_Val' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_Is_Peasant_Armor, K2Node_DynamicCast_AsBP_Wearable_Data) == 0x000010, "Member 'BP_WearableSelectionMenu_C_Filter_Is_Peasant_Armor::K2Node_DynamicCast_AsBP_Wearable_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_Is_Peasant_Armor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_WearableSelectionMenu_C_Filter_Is_Peasant_Armor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_Is_Peasant_Armor, CallFunc_GetIsPeasant_ReturnValue) == 0x000019, "Member 'BP_WearableSelectionMenu_C_Filter_Is_Peasant_Armor::CallFunc_GetIsPeasant_ReturnValue' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Filter by Armor Class
// 0x0030 (0x0030 - 0x0000)
struct BP_WearableSelectionMenu_C_Filter_by_Armor_Class final
{
public:
	class UObject*                                Obj_A;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret_Val;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WearableData_C*                     K2Node_DynamicCast_AsBP_Wearable_Data;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Filter_by_Armor_Class) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Filter_by_Armor_Class");
static_assert(sizeof(BP_WearableSelectionMenu_C_Filter_by_Armor_Class) == 0x000030, "Wrong size on BP_WearableSelectionMenu_C_Filter_by_Armor_Class");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_by_Armor_Class, Obj_A) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Filter_by_Armor_Class::Obj_A' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_by_Armor_Class, Ret_Val) == 0x000008, "Member 'BP_WearableSelectionMenu_C_Filter_by_Armor_Class::Ret_Val' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_by_Armor_Class, K2Node_DynamicCast_AsBP_Wearable_Data) == 0x000010, "Member 'BP_WearableSelectionMenu_C_Filter_by_Armor_Class::K2Node_DynamicCast_AsBP_Wearable_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_by_Armor_Class, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_WearableSelectionMenu_C_Filter_by_Armor_Class::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_by_Armor_Class, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'BP_WearableSelectionMenu_C_Filter_by_Armor_Class::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_by_Armor_Class, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_WearableSelectionMenu_C_Filter_by_Armor_Class::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_by_Armor_Class, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000024, "Member 'BP_WearableSelectionMenu_C_Filter_by_Armor_Class::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_by_Armor_Class, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'BP_WearableSelectionMenu_C_Filter_by_Armor_Class::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_by_Armor_Class, CallFunc_Less_IntInt_ReturnValue) == 0x000029, "Member 'BP_WearableSelectionMenu_C_Filter_by_Armor_Class::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Get Selected Entry Colors
// 0x0178 (0x0178 - 0x0000)
struct BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors final
{
public:
	TArray<struct FS_ArmorySlotColorInfo>         Slot_Color_Info;                                   // 0x0000(0x0010)(Parm, OutParm)
	TArray<int32>                                 Pattern_Values;                                    // 0x0010(0x0010)(Parm, OutParm)
	struct FPatternInfo                           Selected_Pattern;                                  // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
	TArray<struct FS_ArmorySlotColorInfo>         Color_Slot_Info;                                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPatternInfo>                   Temp_struct_Variable;                              // 0x0050(0x0010)(ReferenceParm)
	TArray<uint8>                                 Temp_byte_Variable;                                // 0x0060(0x0010)(ReferenceParm)
	class UMordhauSingleton*                      CallFunc_GetMordhauSingleton_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWearableCustomization                 CallFunc_Array_Get_Item;                           // 0x0080(0x0040)()
	TSubclassOf<class UMordhauWearable>           CallFunc_GetWearableClass_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Array_Get_Item_2;                         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPatternInfo                           CallFunc_Array_Get_Item_3;                         // 0x00E0(0x0010)(NoDestructor)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMordhauColorItemTable                 CallFunc_Array_Get_Item_4;                         // 0x00F8(0x0028)()
	TArray<bool>                                  K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Get_Item_5;                         // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ArmorySlotColorInfo                 K2Node_MakeStruct_S_ArmorySlotColorInfo;           // 0x0138(0x0020)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x0168(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors");
static_assert(sizeof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors) == 0x000178, "Wrong size on BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, Slot_Color_Info) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::Slot_Color_Info' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, Pattern_Values) == 0x000010, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::Pattern_Values' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, Selected_Pattern) == 0x000020, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::Selected_Pattern' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, Color_Slot_Info) == 0x000030, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::Color_Slot_Info' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, Temp_struct_Variable) == 0x000050, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, Temp_byte_Variable) == 0x000060, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_GetMordhauSingleton_ReturnValue) == 0x000070, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_GetMordhauSingleton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000078, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_GetWearableClass_ReturnValue) == 0x0000C0, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_GetWearableClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_IsValidClass_ReturnValue) == 0x0000C8, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x0000CC, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x0000D4, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_Array_Get_Item_2) == 0x0000D8, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_Array_Get_Item_3) == 0x0000E0, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x0000F0, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_Array_Get_Item_4) == 0x0000F8, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, K2Node_MakeArray_Array) == 0x000120, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_Array_Get_Item_5) == 0x000130, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_Array_Length_ReturnValue) == 0x000134, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, K2Node_MakeStruct_S_ArmorySlotColorInfo) == 0x000138, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::K2Node_MakeStruct_S_ArmorySlotColorInfo' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_Less_IntInt_ReturnValue) == 0x000158, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_Array_Add_ReturnValue) == 0x00015C, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, CallFunc_Array_Length_ReturnValue_1) == 0x000160, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors, K2Node_MakeArray_Array_1) == 0x000168, "Member 'BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Get_EntriesTitle_Text_0
// 0x0140 (0x0140 - 0x0000)
struct BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	EWearableSlot                                 Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0050(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0110(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0128(0x0018)()
};
static_assert(alignof(BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0");
static_assert(sizeof(BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0) == 0x000140, "Wrong size on BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0, ReturnValue) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0, Temp_byte_Variable) == 0x000018, "Member 'BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0, Temp_text_Variable) == 0x000020, "Member 'BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0, Temp_text_Variable_1) == 0x000038, "Member 'BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0, Temp_text_Variable_2) == 0x000050, "Member 'BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0, Temp_text_Variable_3) == 0x000068, "Member 'BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0, Temp_text_Variable_4) == 0x000080, "Member 'BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0, Temp_text_Variable_5) == 0x000098, "Member 'BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0, Temp_text_Variable_6) == 0x0000B0, "Member 'BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0, Temp_text_Variable_7) == 0x0000C8, "Member 'BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0, Temp_text_Variable_8) == 0x0000E0, "Member 'BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0, Temp_text_Variable_9) == 0x0000F8, "Member 'BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0, Temp_text_Variable_10) == 0x000110, "Member 'BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0, K2Node_Select_Default) == 0x000128, "Member 'BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Update Wearable Data
// 0x00D8 (0x00D8 - 0x0000)
struct BP_WearableSelectionMenu_C_Update_Wearable_Data final
{
public:
	TArray<struct FS_WearableData>                WearableUIData;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsDataFound;                                       // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WearableData                        CallFunc_Array_Get_Item;                           // 0x0038(0x0038)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WearableData_C*                     CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_BP_GetSelectedItem_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_WearableData_C*                     CallFunc_SpawnObject_ReturnValue;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Update_Wearable_Data) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Update_Wearable_Data");
static_assert(sizeof(BP_WearableSelectionMenu_C_Update_Wearable_Data) == 0x0000D8, "Wrong size on BP_WearableSelectionMenu_C_Update_Wearable_Data");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, WearableUIData) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::WearableUIData' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, IsDataFound) == 0x000010, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::IsDataFound' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_Array_Length_ReturnValue_1) == 0x000018, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, Temp_bool_True_if_break_was_hit_Variable) == 0x000024, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, Temp_int_Loop_Counter_Variable_1) == 0x000070, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_Array_Length_ReturnValue_2) == 0x000080, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_Less_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_BooleanAND_ReturnValue) == 0x000085, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000086, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_BP_GetSelectedItem_ReturnValue) == 0x000090, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_BP_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_SpawnObject_ReturnValue) == 0x000098, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_Conv_IntToString_ReturnValue) == 0x0000A8, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B8, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Update_Wearable_Data, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C8, "Member 'BP_WearableSelectionMenu_C_Update_Wearable_Data::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Sort By Name Ascending
// 0x0060 (0x0060 - 0x0000)
struct BP_WearableSelectionMenu_C_Sort_By_Name_Ascending final
{
public:
	class UObject*                                Obj_A;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Obj_B;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret_Val;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WearableData_C*                     K2Node_DynamicCast_AsBP_Wearable_Data;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WearableData_C*                     K2Node_DynamicCast_AsBP_Wearable_Data_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SLessThan_ReturnValue;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Sort_By_Name_Ascending) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Sort_By_Name_Ascending");
static_assert(sizeof(BP_WearableSelectionMenu_C_Sort_By_Name_Ascending) == 0x000060, "Wrong size on BP_WearableSelectionMenu_C_Sort_By_Name_Ascending");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Ascending, Obj_A) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Ascending::Obj_A' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Ascending, Obj_B) == 0x000008, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Ascending::Obj_B' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Ascending, Ret_Val) == 0x000010, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Ascending::Ret_Val' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Ascending, K2Node_DynamicCast_AsBP_Wearable_Data) == 0x000018, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Ascending::K2Node_DynamicCast_AsBP_Wearable_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Ascending, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Ascending::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Ascending, K2Node_DynamicCast_AsBP_Wearable_Data_1) == 0x000028, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Ascending::K2Node_DynamicCast_AsBP_Wearable_Data_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Ascending, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Ascending::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Ascending, CallFunc_Conv_TextToString_ReturnValue) == 0x000038, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Ascending::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Ascending, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000048, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Ascending::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Ascending, CallFunc_SLessThan_ReturnValue) == 0x000058, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Ascending::CallFunc_SLessThan_ReturnValue' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Sort By Name Descending
// 0x0060 (0x0060 - 0x0000)
struct BP_WearableSelectionMenu_C_Sort_By_Name_Descending final
{
public:
	class UObject*                                Obj_A;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Obj_B;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret_Val;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WearableData_C*                     K2Node_DynamicCast_AsBP_Wearable_Data;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WearableData_C*                     K2Node_DynamicCast_AsBP_Wearable_Data_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SLessThan_ReturnValue;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Sort_By_Name_Descending) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Sort_By_Name_Descending");
static_assert(sizeof(BP_WearableSelectionMenu_C_Sort_By_Name_Descending) == 0x000060, "Wrong size on BP_WearableSelectionMenu_C_Sort_By_Name_Descending");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Descending, Obj_A) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Descending::Obj_A' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Descending, Obj_B) == 0x000008, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Descending::Obj_B' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Descending, Ret_Val) == 0x000010, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Descending::Ret_Val' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Descending, K2Node_DynamicCast_AsBP_Wearable_Data) == 0x000018, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Descending::K2Node_DynamicCast_AsBP_Wearable_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Descending, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Descending::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Descending, K2Node_DynamicCast_AsBP_Wearable_Data_1) == 0x000028, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Descending::K2Node_DynamicCast_AsBP_Wearable_Data_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Descending, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Descending::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Descending, CallFunc_Conv_TextToString_ReturnValue) == 0x000038, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Descending::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Descending, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000048, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Descending::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Sort_By_Name_Descending, CallFunc_SLessThan_ReturnValue) == 0x000058, "Member 'BP_WearableSelectionMenu_C_Sort_By_Name_Descending::CallFunc_SLessThan_ReturnValue' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Filter Wearable by Name
// 0x0050 (0x0050 - 0x0000)
struct BP_WearableSelectionMenu_C_Filter_Wearable_by_Name final
{
public:
	class UObject*                                Obj_A;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret_Val;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WearableData_C*                     K2Node_DynamicCast_AsBP_Wearable_Data;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Filter_Wearable_by_Name) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Filter_Wearable_by_Name");
static_assert(sizeof(BP_WearableSelectionMenu_C_Filter_Wearable_by_Name) == 0x000050, "Wrong size on BP_WearableSelectionMenu_C_Filter_Wearable_by_Name");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_Wearable_by_Name, Obj_A) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Filter_Wearable_by_Name::Obj_A' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_Wearable_by_Name, Ret_Val) == 0x000008, "Member 'BP_WearableSelectionMenu_C_Filter_Wearable_by_Name::Ret_Val' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_Wearable_by_Name, K2Node_DynamicCast_AsBP_Wearable_Data) == 0x000010, "Member 'BP_WearableSelectionMenu_C_Filter_Wearable_by_Name::K2Node_DynamicCast_AsBP_Wearable_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_Wearable_by_Name, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_WearableSelectionMenu_C_Filter_Wearable_by_Name::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_Wearable_by_Name, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'BP_WearableSelectionMenu_C_Filter_Wearable_by_Name::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_Wearable_by_Name, CallFunc_TextIsEmpty_ReturnValue) == 0x000030, "Member 'BP_WearableSelectionMenu_C_Filter_Wearable_by_Name::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_Wearable_by_Name, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000038, "Member 'BP_WearableSelectionMenu_C_Filter_Wearable_by_Name::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Filter_Wearable_by_Name, CallFunc_Contains_ReturnValue) == 0x000048, "Member 'BP_WearableSelectionMenu_C_Filter_Wearable_by_Name::CallFunc_Contains_ReturnValue' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Convert Data Array to Object Array
// 0x0090 (0x0090 - 0x0000)
struct BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array final
{
public:
	TArray<struct FS_WearableData>                Data;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UBP_WearableData_C*>             Wearable_UI_Data;                                  // 0x0010(0x0010)(Parm, OutParm)
	TArray<class UBP_WearableData_C*>             Temp_UI_Data;                                      // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WearableData                        CallFunc_Array_Get_Item;                           // 0x0038(0x0038)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WearableData_C*                     CallFunc_SpawnObject_ReturnValue;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array");
static_assert(sizeof(BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array) == 0x000090, "Wrong size on BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array, Data) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array::Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array, Wearable_UI_Data) == 0x000010, "Member 'BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array::Wearable_UI_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array, Temp_UI_Data) == 0x000020, "Member 'BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array::Temp_UI_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array, CallFunc_SpawnObject_ReturnValue) == 0x000080, "Member 'BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array, CallFunc_Array_Add_ReturnValue) == 0x000088, "Member 'BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Convert Object Array To Data Array
// 0x0058 (0x0058 - 0x0000)
struct BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array final
{
public:
	TArray<class UBP_WearableData_C*>             Data;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FS_WearableData>                Wearable_UI_Data;                                  // 0x0010(0x0010)(Parm, OutParm)
	TArray<class UBP_WearableData_C*>             Wearable_UI_Data_0;                                // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WearableData_C*                     CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array");
static_assert(sizeof(BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array) == 0x000058, "Wrong size on BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array, Data) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array::Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array, Wearable_UI_Data) == 0x000010, "Member 'BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array::Wearable_UI_Data' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array, Wearable_UI_Data_0) == 0x000020, "Member 'BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array::Wearable_UI_Data_0' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Initialize Data
// 0x0010 (0x0010 - 0x0000)
struct BP_WearableSelectionMenu_C_Initialize_Data final
{
public:
	TArray<struct FS_WearableData>                Wearable_Data;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Initialize_Data) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Initialize_Data");
static_assert(sizeof(BP_WearableSelectionMenu_C_Initialize_Data) == 0x000010, "Wrong size on BP_WearableSelectionMenu_C_Initialize_Data");
static_assert(offsetof(BP_WearableSelectionMenu_C_Initialize_Data, Wearable_Data) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Initialize_Data::Wearable_Data' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Select Tab
// 0x0030 (0x0030 - 0x0000)
struct BP_WearableSelectionMenu_C_Select_Tab final
{
public:
	class UBP_ArmorTierFilterTab_C*               Tab;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Skip_Data_Update;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ArmorTierFilterTab_C*               CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Select_Tab) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Select_Tab");
static_assert(sizeof(BP_WearableSelectionMenu_C_Select_Tab) == 0x000030, "Wrong size on BP_WearableSelectionMenu_C_Select_Tab");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Tab, Tab) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Select_Tab::Tab' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Tab, Skip_Data_Update) == 0x000008, "Member 'BP_WearableSelectionMenu_C_Select_Tab::Skip_Data_Update' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Tab, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_WearableSelectionMenu_C_Select_Tab::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Tab, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_WearableSelectionMenu_C_Select_Tab::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Tab, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_WearableSelectionMenu_C_Select_Tab::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Tab, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_WearableSelectionMenu_C_Select_Tab::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Tab, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_WearableSelectionMenu_C_Select_Tab::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Tab, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_WearableSelectionMenu_C_Select_Tab::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Tab, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_WearableSelectionMenu_C_Select_Tab::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Tab, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'BP_WearableSelectionMenu_C_Select_Tab::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Initialize Filter Profile
// 0x0028 (0x0028 - 0x0000)
struct BP_WearableSelectionMenu_C_Initialize_Filter_Profile final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ArmorTierFilterTab_C*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Initialize_Filter_Profile) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Initialize_Filter_Profile");
static_assert(sizeof(BP_WearableSelectionMenu_C_Initialize_Filter_Profile) == 0x000028, "Wrong size on BP_WearableSelectionMenu_C_Initialize_Filter_Profile");
static_assert(offsetof(BP_WearableSelectionMenu_C_Initialize_Filter_Profile, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Initialize_Filter_Profile::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Initialize_Filter_Profile, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_WearableSelectionMenu_C_Initialize_Filter_Profile::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Initialize_Filter_Profile, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_WearableSelectionMenu_C_Initialize_Filter_Profile::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Initialize_Filter_Profile, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_WearableSelectionMenu_C_Initialize_Filter_Profile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Initialize_Filter_Profile, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_WearableSelectionMenu_C_Initialize_Filter_Profile::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Initialize_Filter_Profile, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_WearableSelectionMenu_C_Initialize_Filter_Profile::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Initialize_Filter_Profile, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_WearableSelectionMenu_C_Initialize_Filter_Profile::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Select Initial Filter Tab
// 0x0010 (0x0010 - 0x0000)
struct BP_WearableSelectionMenu_C_Select_Initial_Filter_Tab final
{
public:
	bool                                          Skip_Data_Update;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ArmorTierFilterTab_C*               CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Select_Initial_Filter_Tab) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Select_Initial_Filter_Tab");
static_assert(sizeof(BP_WearableSelectionMenu_C_Select_Initial_Filter_Tab) == 0x000010, "Wrong size on BP_WearableSelectionMenu_C_Select_Initial_Filter_Tab");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Initial_Filter_Tab, Skip_Data_Update) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Select_Initial_Filter_Tab::Skip_Data_Update' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Initial_Filter_Tab, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_WearableSelectionMenu_C_Select_Initial_Filter_Tab::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Previous Slot Text
// 0x0490 (0x0490 - 0x0000)
struct BP_WearableSelectionMenu_C_Previous_Slot_Text final
{
public:
	EWearableSlot                                 PrevSlot;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWearableSlot                                 NextSlot;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   PrevSlotText;                                      // 0x0008(0x0018)(Edit, BlueprintVisible)
	class FText                                   NextSlotText;                                      // 0x0020(0x0018)(Edit, BlueprintVisible)
	class FText                                   Temp_text_Variable;                                // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0050(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00F8(0x0018)()
	EWearableSlot                                 Temp_byte_Variable;                                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_9;                              // 0x0118(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0130(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0148(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0160(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0178(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x0190(0x0018)()
	class FText                                   Temp_text_Variable_15;                             // 0x01A8(0x0018)()
	class FText                                   Temp_text_Variable_16;                             // 0x01C0(0x0018)()
	class FText                                   Temp_text_Variable_17;                             // 0x01D8(0x0018)()
	class FText                                   Temp_text_Variable_18;                             // 0x01F0(0x0018)()
	class FText                                   Temp_text_Variable_19;                             // 0x0208(0x0018)()
	EWearableSlot                                 Temp_byte_Variable_1;                              // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0228(0x0018)()
	class FText                                   Temp_text_Variable_20;                             // 0x0240(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0258(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0298(0x0010)(ReferenceParm)
	class FText                                   Temp_text_Variable_21;                             // 0x02A8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02C0(0x0018)()
	class FText                                   Temp_text_Variable_22;                             // 0x02D8(0x0018)()
	class FText                                   Temp_text_Variable_23;                             // 0x02F0(0x0018)()
	class FText                                   Temp_text_Variable_24;                             // 0x0308(0x0018)()
	class FText                                   Temp_text_Variable_25;                             // 0x0320(0x0018)()
	class FText                                   Temp_text_Variable_26;                             // 0x0338(0x0018)()
	class FText                                   Temp_text_Variable_27;                             // 0x0350(0x0018)()
	class FText                                   Temp_text_Variable_28;                             // 0x0368(0x0018)()
	class FText                                   Temp_text_Variable_29;                             // 0x0380(0x0018)()
	class FText                                   Temp_text_Variable_30;                             // 0x0398(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x03B0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x03C8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0408(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0418(0x0018)()
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_31;                             // 0x0438(0x0018)()
	class FText                                   Temp_text_Variable_32;                             // 0x0450(0x0018)()
	EWearableSlot                                 Temp_byte_Variable_2;                              // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x0470(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x048A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x048B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x048D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Previous_Slot_Text) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Previous_Slot_Text");
static_assert(sizeof(BP_WearableSelectionMenu_C_Previous_Slot_Text) == 0x000490, "Wrong size on BP_WearableSelectionMenu_C_Previous_Slot_Text");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, PrevSlot) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::PrevSlot' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, NextSlot) == 0x000001, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::NextSlot' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, PrevSlotText) == 0x000008, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::PrevSlotText' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, NextSlotText) == 0x000020, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::NextSlotText' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable) == 0x000038, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_1) == 0x000050, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_2) == 0x000068, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_3) == 0x000080, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_4) == 0x000098, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_5) == 0x0000B0, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_6) == 0x0000C8, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_7) == 0x0000E0, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_8) == 0x0000F8, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_byte_Variable) == 0x000110, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_9) == 0x000118, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_10) == 0x000130, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_11) == 0x000148, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_12) == 0x000160, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_13) == 0x000178, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_14) == 0x000190, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_15) == 0x0001A8, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_16) == 0x0001C0, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_17) == 0x0001D8, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_18) == 0x0001F0, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_19) == 0x000208, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_byte_Variable_1) == 0x000220, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, K2Node_Select_Default) == 0x000228, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_20) == 0x000240, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, K2Node_MakeStruct_FormatArgumentData) == 0x000258, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, K2Node_MakeArray_Array) == 0x000298, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_21) == 0x0002A8, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, CallFunc_Format_ReturnValue) == 0x0002C0, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_22) == 0x0002D8, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_23) == 0x0002F0, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_24) == 0x000308, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_25) == 0x000320, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_26) == 0x000338, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_27) == 0x000350, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_28) == 0x000368, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_29) == 0x000380, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_30) == 0x000398, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, K2Node_Select_Default_1) == 0x0003B0, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, K2Node_MakeStruct_FormatArgumentData_1) == 0x0003C8, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, K2Node_MakeArray_Array_1) == 0x000408, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, CallFunc_Format_ReturnValue_1) == 0x000418, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, CallFunc_Conv_IntToByte_ReturnValue) == 0x000430, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_31) == 0x000438, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_text_Variable_32) == 0x000450, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_text_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, Temp_byte_Variable_2) == 0x000468, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, K2Node_Select_Default_2) == 0x000470, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000488, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000489, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, CallFunc_Add_ByteByte_ReturnValue) == 0x00048A, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, CallFunc_Subtract_ByteByte_ReturnValue) == 0x00048B, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, CallFunc_GetValidValue_ReturnValue) == 0x00048C, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Previous_Slot_Text, CallFunc_GetValidValue_ReturnValue_1) == 0x00048D, "Member 'BP_WearableSelectionMenu_C_Previous_Slot_Text::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Select Next Filter Tab
// 0x0018 (0x0018 - 0x0000)
struct BP_WearableSelectionMenu_C_Select_Next_Filter_Tab final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ArmorTierFilterTab_C*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Select_Next_Filter_Tab) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Select_Next_Filter_Tab");
static_assert(sizeof(BP_WearableSelectionMenu_C_Select_Next_Filter_Tab) == 0x000018, "Wrong size on BP_WearableSelectionMenu_C_Select_Next_Filter_Tab");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Next_Filter_Tab, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Select_Next_Filter_Tab::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Next_Filter_Tab, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'BP_WearableSelectionMenu_C_Select_Next_Filter_Tab::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Next_Filter_Tab, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000002, "Member 'BP_WearableSelectionMenu_C_Select_Next_Filter_Tab::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Next_Filter_Tab, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_WearableSelectionMenu_C_Select_Next_Filter_Tab::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Next_Filter_Tab, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_WearableSelectionMenu_C_Select_Next_Filter_Tab::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Next_Filter_Tab, CallFunc_BooleanOR_ReturnValue_1) == 0x000005, "Member 'BP_WearableSelectionMenu_C_Select_Next_Filter_Tab::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Next_Filter_Tab, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000006, "Member 'BP_WearableSelectionMenu_C_Select_Next_Filter_Tab::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Next_Filter_Tab, CallFunc_Add_ByteByte_ReturnValue) == 0x000007, "Member 'BP_WearableSelectionMenu_C_Select_Next_Filter_Tab::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Next_Filter_Tab, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BP_WearableSelectionMenu_C_Select_Next_Filter_Tab::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Next_Filter_Tab, CallFunc_SelectInt_ReturnValue) == 0x00000C, "Member 'BP_WearableSelectionMenu_C_Select_Next_Filter_Tab::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Next_Filter_Tab, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_WearableSelectionMenu_C_Select_Next_Filter_Tab::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Select Prev Filter Tab
// 0x0018 (0x0018 - 0x0000)
struct BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ArmorTierFilterTab_C*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab");
static_assert(sizeof(BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab) == 0x000018, "Wrong size on BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000002, "Member 'BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab, CallFunc_BooleanOR_ReturnValue_1) == 0x000005, "Member 'BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000006, "Member 'BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab, CallFunc_Subtract_ByteByte_ReturnValue) == 0x000007, "Member 'BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab, CallFunc_SelectInt_ReturnValue) == 0x00000C, "Member 'BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_WearableSelectionMenu_C_Select_Prev_Filter_Tab::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.SortDlcToTop
// 0x0068 (0x0068 - 0x0000)
struct BP_WearableSelectionMenu_C_SortDlcToTop final
{
public:
	TArray<class UBP_WearableData_C*>             WearableData;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UBP_WearableData_C*>             ReturnWearbaleData;                                // 0x0010(0x0010)(Parm, OutParm)
	TArray<class UBP_WearableData_C*>             TempWearableData;                                  // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<class UBP_WearableData_C*>             TempDLCWearableData;                               // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_WearableData_C*                     CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WearableSelectionMenu_C_SortDlcToTop) == 0x000008, "Wrong alignment on BP_WearableSelectionMenu_C_SortDlcToTop");
static_assert(sizeof(BP_WearableSelectionMenu_C_SortDlcToTop) == 0x000068, "Wrong size on BP_WearableSelectionMenu_C_SortDlcToTop");
static_assert(offsetof(BP_WearableSelectionMenu_C_SortDlcToTop, WearableData) == 0x000000, "Member 'BP_WearableSelectionMenu_C_SortDlcToTop::WearableData' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_SortDlcToTop, ReturnWearbaleData) == 0x000010, "Member 'BP_WearableSelectionMenu_C_SortDlcToTop::ReturnWearbaleData' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_SortDlcToTop, TempWearableData) == 0x000020, "Member 'BP_WearableSelectionMenu_C_SortDlcToTop::TempWearableData' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_SortDlcToTop, TempDLCWearableData) == 0x000030, "Member 'BP_WearableSelectionMenu_C_SortDlcToTop::TempDLCWearableData' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_SortDlcToTop, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_WearableSelectionMenu_C_SortDlcToTop::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_SortDlcToTop, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_WearableSelectionMenu_C_SortDlcToTop::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_SortDlcToTop, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_WearableSelectionMenu_C_SortDlcToTop::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_SortDlcToTop, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_WearableSelectionMenu_C_SortDlcToTop::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_SortDlcToTop, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000054, "Member 'BP_WearableSelectionMenu_C_SortDlcToTop::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_SortDlcToTop, CallFunc_Less_IntInt_ReturnValue) == 0x000055, "Member 'BP_WearableSelectionMenu_C_SortDlcToTop::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_SortDlcToTop, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000056, "Member 'BP_WearableSelectionMenu_C_SortDlcToTop::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_SortDlcToTop, CallFunc_BooleanOR_ReturnValue) == 0x000057, "Member 'BP_WearableSelectionMenu_C_SortDlcToTop::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_SortDlcToTop, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_WearableSelectionMenu_C_SortDlcToTop::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_SortDlcToTop, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'BP_WearableSelectionMenu_C_SortDlcToTop::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WearableSelectionMenu_C_SortDlcToTop, CallFunc_Array_Add_ReturnValue_1) == 0x000060, "Member 'BP_WearableSelectionMenu_C_SortDlcToTop::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

}

