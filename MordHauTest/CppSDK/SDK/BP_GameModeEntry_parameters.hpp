#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameModeEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_GameModeEntry.BP_GameModeEntry_C.ExecuteUbergraph_BP_GameModeEntry
// 0x0030 (0x0030 - 0x0000)
struct BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry) == 0x000008, "Wrong alignment on BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry");
static_assert(sizeof(BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry) == 0x000030, "Wrong size on BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry");
static_assert(offsetof(BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry, EntryPoint) == 0x000000, "Member 'BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry, Temp_byte_Variable) == 0x000004, "Member 'BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry, Temp_byte_Variable_1) == 0x000005, "Member 'BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry, CallFunc_PlayAnimation_ReturnValue_2) == 0x000018, "Member 'BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry, CallFunc_PlayAnimation_ReturnValue_3) == 0x000020, "Member 'BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry, K2Node_Event_IsDesignTime) == 0x000028, "Member 'BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry, Temp_bool_Variable) == 0x000029, "Member 'BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry, K2Node_ComponentBoundEvent_bIsChecked) == 0x00002A, "Member 'BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry, CallFunc_IsConsolePlatform_ReturnValue) == 0x00002B, "Member 'BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry, CallFunc_BooleanAND_ReturnValue) == 0x00002C, "Member 'BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry, K2Node_Select_Default) == 0x00002D, "Member 'BP_GameModeEntry_C_ExecuteUbergraph_BP_GameModeEntry::K2Node_Select_Default' has a wrong offset!");

// Function BP_GameModeEntry.BP_GameModeEntry_C.BndEvt__BP_Checkbox_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_GameModeEntry_C_BndEvt__BP_Checkbox_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameModeEntry_C_BndEvt__BP_Checkbox_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on BP_GameModeEntry_C_BndEvt__BP_Checkbox_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature");
static_assert(sizeof(BP_GameModeEntry_C_BndEvt__BP_Checkbox_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong size on BP_GameModeEntry_C_BndEvt__BP_Checkbox_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature");
static_assert(offsetof(BP_GameModeEntry_C_BndEvt__BP_Checkbox_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'BP_GameModeEntry_C_BndEvt__BP_Checkbox_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function BP_GameModeEntry.BP_GameModeEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_GameModeEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameModeEntry_C_PreConstruct) == 0x000001, "Wrong alignment on BP_GameModeEntry_C_PreConstruct");
static_assert(sizeof(BP_GameModeEntry_C_PreConstruct) == 0x000001, "Wrong size on BP_GameModeEntry_C_PreConstruct");
static_assert(offsetof(BP_GameModeEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_GameModeEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_GameModeEntry.BP_GameModeEntry_C.Select
// 0x02A0 (0x02A0 - 0x0000)
struct BP_GameModeEntry_C_Select final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)(UObjectWrapper)
	struct FButtonStyle                           K2Node_MakeStruct_ButtonStyle;                     // 0x0028(0x0278)()
};
static_assert(alignof(BP_GameModeEntry_C_Select) == 0x000008, "Wrong alignment on BP_GameModeEntry_C_Select");
static_assert(sizeof(BP_GameModeEntry_C_Select) == 0x0002A0, "Wrong size on BP_GameModeEntry_C_Select");
static_assert(offsetof(BP_GameModeEntry_C_Select, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'BP_GameModeEntry_C_Select::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_Select, K2Node_MakeStruct_ButtonStyle) == 0x000028, "Member 'BP_GameModeEntry_C_Select::K2Node_MakeStruct_ButtonStyle' has a wrong offset!");

// Function BP_GameModeEntry.BP_GameModeEntry_C.DeSelect
// 0x02A0 (0x02A0 - 0x0000)
struct BP_GameModeEntry_C_DeSelect final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	struct FButtonStyle                           K2Node_MakeStruct_ButtonStyle;                     // 0x0028(0x0278)()
};
static_assert(alignof(BP_GameModeEntry_C_DeSelect) == 0x000008, "Wrong alignment on BP_GameModeEntry_C_DeSelect");
static_assert(sizeof(BP_GameModeEntry_C_DeSelect) == 0x0002A0, "Wrong size on BP_GameModeEntry_C_DeSelect");
static_assert(offsetof(BP_GameModeEntry_C_DeSelect, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'BP_GameModeEntry_C_DeSelect::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_DeSelect, K2Node_MakeStruct_ButtonStyle) == 0x000028, "Member 'BP_GameModeEntry_C_DeSelect::K2Node_MakeStruct_ButtonStyle' has a wrong offset!");

// Function BP_GameModeEntry.BP_GameModeEntry_C.GetVisibility_0
// 0x0002 (0x0002 - 0x0000)
struct BP_GameModeEntry_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameModeEntry_C_GetVisibility_0) == 0x000001, "Wrong alignment on BP_GameModeEntry_C_GetVisibility_0");
static_assert(sizeof(BP_GameModeEntry_C_GetVisibility_0) == 0x000002, "Wrong size on BP_GameModeEntry_C_GetVisibility_0");
static_assert(offsetof(BP_GameModeEntry_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_GameModeEntry_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_GetVisibility_0, CallFunc_TextIsEmpty_ReturnValue) == 0x000001, "Member 'BP_GameModeEntry_C_GetVisibility_0::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function BP_GameModeEntry.BP_GameModeEntry_C.AddCheckbox
// 0x00B8 (0x00B8 - 0x0000)
struct BP_GameModeEntry_C_AddCheckbox final
{
public:
	int32                                         Player_Count;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsChecked;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0058(0x0018)()
	TDelegate<void(bool bIsChecked)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_Checkbox_C*                         CallFunc_Create_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       K2Node_DynamicCast_AsVertical_Box_Slot;            // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameModeEntry_C_AddCheckbox) == 0x000008, "Wrong alignment on BP_GameModeEntry_C_AddCheckbox");
static_assert(sizeof(BP_GameModeEntry_C_AddCheckbox) == 0x0000B8, "Wrong size on BP_GameModeEntry_C_AddCheckbox");
static_assert(offsetof(BP_GameModeEntry_C_AddCheckbox, Player_Count) == 0x000000, "Member 'BP_GameModeEntry_C_AddCheckbox::Player_Count' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_AddCheckbox, bIsChecked) == 0x000004, "Member 'BP_GameModeEntry_C_AddCheckbox::bIsChecked' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_AddCheckbox, CallFunc_IsConsolePlatform_ReturnValue) == 0x000005, "Member 'BP_GameModeEntry_C_AddCheckbox::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_AddCheckbox, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'BP_GameModeEntry_C_AddCheckbox::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_AddCheckbox, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_GameModeEntry_C_AddCheckbox::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_AddCheckbox, CallFunc_Format_ReturnValue) == 0x000058, "Member 'BP_GameModeEntry_C_AddCheckbox::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_AddCheckbox, K2Node_CreateDelegate_OutputDelegate) == 0x000070, "Member 'BP_GameModeEntry_C_AddCheckbox::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_AddCheckbox, K2Node_MakeStruct_Margin) == 0x000080, "Member 'BP_GameModeEntry_C_AddCheckbox::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_AddCheckbox, CallFunc_GetPlayerController_ReturnValue) == 0x000090, "Member 'BP_GameModeEntry_C_AddCheckbox::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_AddCheckbox, CallFunc_Create_ReturnValue) == 0x000098, "Member 'BP_GameModeEntry_C_AddCheckbox::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_AddCheckbox, CallFunc_AddChild_ReturnValue) == 0x0000A0, "Member 'BP_GameModeEntry_C_AddCheckbox::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_AddCheckbox, K2Node_DynamicCast_AsVertical_Box_Slot) == 0x0000A8, "Member 'BP_GameModeEntry_C_AddCheckbox::K2Node_DynamicCast_AsVertical_Box_Slot' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_AddCheckbox, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_GameModeEntry_C_AddCheckbox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_AddCheckbox, CallFunc_Array_Add_ReturnValue) == 0x0000B4, "Member 'BP_GameModeEntry_C_AddCheckbox::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GameModeEntry.BP_GameModeEntry_C.GetVisibility_1
// 0x0001 (0x0001 - 0x0000)
struct BP_GameModeEntry_C_GetVisibility_1 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameModeEntry_C_GetVisibility_1) == 0x000001, "Wrong alignment on BP_GameModeEntry_C_GetVisibility_1");
static_assert(sizeof(BP_GameModeEntry_C_GetVisibility_1) == 0x000001, "Wrong size on BP_GameModeEntry_C_GetVisibility_1");
static_assert(offsetof(BP_GameModeEntry_C_GetVisibility_1, ReturnValue) == 0x000000, "Member 'BP_GameModeEntry_C_GetVisibility_1::ReturnValue' has a wrong offset!");

// Function BP_GameModeEntry.BP_GameModeEntry_C.UpdatePlayerCounts
// 0x0050 (0x0050 - 0x0000)
struct BP_GameModeEntry_C_UpdatePlayerCounts final
{
public:
	TArray<int32>                                 PlayerCounts;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Selected;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Checkbox_C*                         CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameModeEntry_C_UpdatePlayerCounts) == 0x000008, "Wrong alignment on BP_GameModeEntry_C_UpdatePlayerCounts");
static_assert(sizeof(BP_GameModeEntry_C_UpdatePlayerCounts) == 0x000050, "Wrong size on BP_GameModeEntry_C_UpdatePlayerCounts");
static_assert(offsetof(BP_GameModeEntry_C_UpdatePlayerCounts, PlayerCounts) == 0x000000, "Member 'BP_GameModeEntry_C_UpdatePlayerCounts::PlayerCounts' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_UpdatePlayerCounts, Selected) == 0x000010, "Member 'BP_GameModeEntry_C_UpdatePlayerCounts::Selected' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_UpdatePlayerCounts, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_GameModeEntry_C_UpdatePlayerCounts::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_UpdatePlayerCounts, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_GameModeEntry_C_UpdatePlayerCounts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_UpdatePlayerCounts, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GameModeEntry_C_UpdatePlayerCounts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_UpdatePlayerCounts, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_GameModeEntry_C_UpdatePlayerCounts::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_UpdatePlayerCounts, CallFunc_Array_Contains_ReturnValue) == 0x00002D, "Member 'BP_GameModeEntry_C_UpdatePlayerCounts::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_UpdatePlayerCounts, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BP_GameModeEntry_C_UpdatePlayerCounts::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_UpdatePlayerCounts, CallFunc_Array_Length_ReturnValue_2) == 0x000034, "Member 'BP_GameModeEntry_C_UpdatePlayerCounts::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_UpdatePlayerCounts, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_GameModeEntry_C_UpdatePlayerCounts::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_UpdatePlayerCounts, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BP_GameModeEntry_C_UpdatePlayerCounts::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_UpdatePlayerCounts, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'BP_GameModeEntry_C_UpdatePlayerCounts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_UpdatePlayerCounts, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_GameModeEntry_C_UpdatePlayerCounts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_UpdatePlayerCounts, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BP_GameModeEntry_C_UpdatePlayerCounts::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function BP_GameModeEntry.BP_GameModeEntry_C.RemoveCheckboxes
// 0x0020 (0x0020 - 0x0000)
struct BP_GameModeEntry_C_RemoveCheckboxes final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Checkbox_C*                         CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChild_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameModeEntry_C_RemoveCheckboxes) == 0x000008, "Wrong alignment on BP_GameModeEntry_C_RemoveCheckboxes");
static_assert(sizeof(BP_GameModeEntry_C_RemoveCheckboxes) == 0x000020, "Wrong size on BP_GameModeEntry_C_RemoveCheckboxes");
static_assert(offsetof(BP_GameModeEntry_C_RemoveCheckboxes, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_GameModeEntry_C_RemoveCheckboxes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_RemoveCheckboxes, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GameModeEntry_C_RemoveCheckboxes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_RemoveCheckboxes, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameModeEntry_C_RemoveCheckboxes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_RemoveCheckboxes, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_GameModeEntry_C_RemoveCheckboxes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_RemoveCheckboxes, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_GameModeEntry_C_RemoveCheckboxes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_RemoveCheckboxes, CallFunc_RemoveChild_ReturnValue) == 0x00001C, "Member 'BP_GameModeEntry_C_RemoveCheckboxes::CallFunc_RemoveChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_RemoveCheckboxes, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_GameModeEntry_C_RemoveCheckboxes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameModeEntry.BP_GameModeEntry_C.OnCheckStateChanged
// 0x0098 (0x0098 - 0x0000)
struct BP_GameModeEntry_C_OnCheckStateChanged final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHasCheckedPlayerCounts;                           // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 SelectedPlayerCounts;                              // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_Checkbox_C*                         CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_Checkbox_C*                         CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChecked_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Checkbox_C*                         CallFunc_Array_Get_Item_2;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChecked_ReturnValue_1;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameModeEntry_C_OnCheckStateChanged) == 0x000008, "Wrong alignment on BP_GameModeEntry_C_OnCheckStateChanged");
static_assert(sizeof(BP_GameModeEntry_C_OnCheckStateChanged) == 0x000098, "Wrong size on BP_GameModeEntry_C_OnCheckStateChanged");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, bIsChecked) == 0x000000, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::bIsChecked' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, bHasCheckedPlayerCounts) == 0x000001, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::bHasCheckedPlayerCounts' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, SelectedPlayerCounts) == 0x000008, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::SelectedPlayerCounts' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, Temp_int_Array_Index_Variable_2) == 0x000028, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, CallFunc_IsChecked_ReturnValue) == 0x000040, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::CallFunc_IsChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, CallFunc_Array_Get_Item_2) == 0x000048, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, CallFunc_IsChecked_ReturnValue_1) == 0x000054, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::CallFunc_IsChecked_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, CallFunc_Less_IntInt_ReturnValue) == 0x000055, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, CallFunc_Array_Length_ReturnValue_2) == 0x00005C, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, CallFunc_Less_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, Temp_int_Loop_Counter_Variable_2) == 0x000068, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, CallFunc_Conv_TextToString_ReturnValue) == 0x000070, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, CallFunc_Less_IntInt_ReturnValue_2) == 0x000080, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, CallFunc_Add_IntInt_ReturnValue_2) == 0x000084, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000088, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_OnCheckStateChanged, CallFunc_Array_Add_ReturnValue) == 0x000090, "Member 'BP_GameModeEntry_C_OnCheckStateChanged::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GameModeEntry.BP_GameModeEntry_C.GetVisibility_2
// 0x0005 (0x0005 - 0x0000)
struct BP_GameModeEntry_C_GetVisibility_2 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameModeEntry_C_GetVisibility_2) == 0x000001, "Wrong alignment on BP_GameModeEntry_C_GetVisibility_2");
static_assert(sizeof(BP_GameModeEntry_C_GetVisibility_2) == 0x000005, "Wrong size on BP_GameModeEntry_C_GetVisibility_2");
static_assert(offsetof(BP_GameModeEntry_C_GetVisibility_2, ReturnValue) == 0x000000, "Member 'BP_GameModeEntry_C_GetVisibility_2::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_GetVisibility_2, Temp_bool_Variable) == 0x000001, "Member 'BP_GameModeEntry_C_GetVisibility_2::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_GetVisibility_2, Temp_byte_Variable) == 0x000002, "Member 'BP_GameModeEntry_C_GetVisibility_2::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_GetVisibility_2, Temp_byte_Variable_1) == 0x000003, "Member 'BP_GameModeEntry_C_GetVisibility_2::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_GetVisibility_2, K2Node_Select_Default) == 0x000004, "Member 'BP_GameModeEntry_C_GetVisibility_2::K2Node_Select_Default' has a wrong offset!");

// Function BP_GameModeEntry.BP_GameModeEntry_C.Get_ModeName_Text_0
// 0x0020 (0x0020 - 0x0000)
struct BP_GameModeEntry_C_Get_ModeName_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameModeEntry_C_Get_ModeName_Text_0) == 0x000008, "Wrong alignment on BP_GameModeEntry_C_Get_ModeName_Text_0");
static_assert(sizeof(BP_GameModeEntry_C_Get_ModeName_Text_0) == 0x000020, "Wrong size on BP_GameModeEntry_C_Get_ModeName_Text_0");
static_assert(offsetof(BP_GameModeEntry_C_Get_ModeName_Text_0, ReturnValue) == 0x000000, "Member 'BP_GameModeEntry_C_Get_ModeName_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeEntry_C_Get_ModeName_Text_0, CallFunc_TextIsEmpty_ReturnValue) == 0x000018, "Member 'BP_GameModeEntry_C_Get_ModeName_Text_0::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

}

