#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ColorPickerContainer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_ColorPickerContainer.BP_ColorPickerContainer_C
// 0x0058 (0x02B8 - 0x0260)
class UBP_ColorPickerContainer_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UUniformGridPanel*                      ColorContainer;                                    // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1856;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Test;                                              // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ColorPickerWrapper_C*               ColorPickerWrapper;                                // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ColorPicker_C*                      Parent;                                            // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ColorPickerElement_C*               ColorPickerElement;                                // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              WidgetSize;                                        // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ColorsPerRow;                                      // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxColorPickerHeight;                              // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxColorPickerWidth;                               // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ColorElementHeight;                                // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ApproximateColorPickerPadding;                     // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ColorElementWidth;                                 // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ColorPickerContainer(int32 EntryPoint);
	void Show();
	void SetColors(TArray<class UClass*>& Colors);
	void GetColorPickerApproximateHeight(float* Height);
	void GetColorPickerApproximateWidth(float* Width);
	void SetOriginCorner(int32 Corner);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ColorPickerContainer_C">();
	}
	static class UBP_ColorPickerContainer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ColorPickerContainer_C>();
	}
};
static_assert(alignof(UBP_ColorPickerContainer_C) == 0x000008, "Wrong alignment on UBP_ColorPickerContainer_C");
static_assert(sizeof(UBP_ColorPickerContainer_C) == 0x0002B8, "Wrong size on UBP_ColorPickerContainer_C");
static_assert(offsetof(UBP_ColorPickerContainer_C, UberGraphFrame) == 0x000260, "Member 'UBP_ColorPickerContainer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ColorPickerContainer_C, ColorContainer) == 0x000268, "Member 'UBP_ColorPickerContainer_C::ColorContainer' has a wrong offset!");
static_assert(offsetof(UBP_ColorPickerContainer_C, Image_1856) == 0x000270, "Member 'UBP_ColorPickerContainer_C::Image_1856' has a wrong offset!");
static_assert(offsetof(UBP_ColorPickerContainer_C, Test) == 0x000278, "Member 'UBP_ColorPickerContainer_C::Test' has a wrong offset!");
static_assert(offsetof(UBP_ColorPickerContainer_C, ColorPickerWrapper) == 0x000280, "Member 'UBP_ColorPickerContainer_C::ColorPickerWrapper' has a wrong offset!");
static_assert(offsetof(UBP_ColorPickerContainer_C, Parent) == 0x000288, "Member 'UBP_ColorPickerContainer_C::Parent' has a wrong offset!");
static_assert(offsetof(UBP_ColorPickerContainer_C, ColorPickerElement) == 0x000290, "Member 'UBP_ColorPickerContainer_C::ColorPickerElement' has a wrong offset!");
static_assert(offsetof(UBP_ColorPickerContainer_C, WidgetSize) == 0x000298, "Member 'UBP_ColorPickerContainer_C::WidgetSize' has a wrong offset!");
static_assert(offsetof(UBP_ColorPickerContainer_C, ColorsPerRow) == 0x0002A0, "Member 'UBP_ColorPickerContainer_C::ColorsPerRow' has a wrong offset!");
static_assert(offsetof(UBP_ColorPickerContainer_C, MaxColorPickerHeight) == 0x0002A4, "Member 'UBP_ColorPickerContainer_C::MaxColorPickerHeight' has a wrong offset!");
static_assert(offsetof(UBP_ColorPickerContainer_C, MaxColorPickerWidth) == 0x0002A8, "Member 'UBP_ColorPickerContainer_C::MaxColorPickerWidth' has a wrong offset!");
static_assert(offsetof(UBP_ColorPickerContainer_C, ColorElementHeight) == 0x0002AC, "Member 'UBP_ColorPickerContainer_C::ColorElementHeight' has a wrong offset!");
static_assert(offsetof(UBP_ColorPickerContainer_C, ApproximateColorPickerPadding) == 0x0002B0, "Member 'UBP_ColorPickerContainer_C::ApproximateColorPickerPadding' has a wrong offset!");
static_assert(offsetof(UBP_ColorPickerContainer_C, ColorElementWidth) == 0x0002B4, "Member 'UBP_ColorPickerContainer_C::ColorElementWidth' has a wrong offset!");

}

