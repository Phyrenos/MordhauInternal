#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkinItemEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Mordhau_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_SkinItemEntry.BP_SkinItemEntry_C.ExecuteUbergraph_BP_SkinItemEntry
// 0x0034 (0x0034 - 0x0000)
struct BP_SkinItemEntry_C_ExecuteUbergraph_BP_SkinItemEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_SkinItemEntry_C_ExecuteUbergraph_BP_SkinItemEntry) == 0x000004, "Wrong alignment on BP_SkinItemEntry_C_ExecuteUbergraph_BP_SkinItemEntry");
static_assert(sizeof(BP_SkinItemEntry_C_ExecuteUbergraph_BP_SkinItemEntry) == 0x000034, "Wrong size on BP_SkinItemEntry_C_ExecuteUbergraph_BP_SkinItemEntry");
static_assert(offsetof(BP_SkinItemEntry_C_ExecuteUbergraph_BP_SkinItemEntry, EntryPoint) == 0x000000, "Member 'BP_SkinItemEntry_C_ExecuteUbergraph_BP_SkinItemEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_ExecuteUbergraph_BP_SkinItemEntry, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_SkinItemEntry_C_ExecuteUbergraph_BP_SkinItemEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_ExecuteUbergraph_BP_SkinItemEntry, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_SkinItemEntry_C_ExecuteUbergraph_BP_SkinItemEntry::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_ExecuteUbergraph_BP_SkinItemEntry, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'BP_SkinItemEntry_C_ExecuteUbergraph_BP_SkinItemEntry::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function BP_SkinItemEntry.BP_SkinItemEntry_C.Initialize Skin Entry
// 0x00F8 (0x00F8 - 0x0000)
struct BP_SkinItemEntry_C_Initialize_Skin_Entry final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FEquipmentSkinEntry>            Temp_struct_Variable;                              // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayFabID_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEquipmentSkinEntry                    CallFunc_Array_Get_Item;                           // 0x0040(0x0058)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetGoldAndRankUnlockRequirement_Gold;     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGoldAndRankUnlockRequirement_Rank;     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetUnlockTooltipText_TooltipText;         // 0x00D0(0x0018)()
	class UMordhauInventory*                      CallFunc_GetMordhauInventory_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasSkin_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkinItemEntry_C_Initialize_Skin_Entry) == 0x000008, "Wrong alignment on BP_SkinItemEntry_C_Initialize_Skin_Entry");
static_assert(sizeof(BP_SkinItemEntry_C_Initialize_Skin_Entry) == 0x0000F8, "Wrong size on BP_SkinItemEntry_C_Initialize_Skin_Entry");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, Temp_byte_Variable) == 0x000000, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, Temp_bool_Variable) == 0x000001, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, Temp_byte_Variable_1) == 0x000002, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, Temp_byte_Variable_2) == 0x000003, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, Temp_bool_Variable_1) == 0x000004, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, Temp_object_Variable) == 0x000008, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, Temp_struct_Variable) == 0x000010, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000021, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, Temp_byte_Variable_3) == 0x000022, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, K2Node_Select_Default) == 0x000023, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, CallFunc_GetPlayFabID_ReturnValue) == 0x000028, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::CallFunc_GetPlayFabID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, Temp_bool_Variable_2) == 0x000038, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, K2Node_Select_Default_1) == 0x000098, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000099, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0000A8, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, K2Node_Select_Default_2) == 0x0000B0, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, CallFunc_GetGoldAndRankUnlockRequirement_Gold) == 0x0000C8, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::CallFunc_GetGoldAndRankUnlockRequirement_Gold' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, CallFunc_GetGoldAndRankUnlockRequirement_Rank) == 0x0000CC, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::CallFunc_GetGoldAndRankUnlockRequirement_Rank' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, CallFunc_GetUnlockTooltipText_TooltipText) == 0x0000D0, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::CallFunc_GetUnlockTooltipText_TooltipText' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, CallFunc_GetMordhauInventory_ReturnValue) == 0x0000E8, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::CallFunc_GetMordhauInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Initialize_Skin_Entry, CallFunc_HasSkin_ReturnValue) == 0x0000F0, "Member 'BP_SkinItemEntry_C_Initialize_Skin_Entry::CallFunc_HasSkin_ReturnValue' has a wrong offset!");

// Function BP_SkinItemEntry.BP_SkinItemEntry_C.Get_CostText_Text_0
// 0x0030 (0x0030 - 0x0000)
struct BP_SkinItemEntry_C_Get_CostText_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
};
static_assert(alignof(BP_SkinItemEntry_C_Get_CostText_Text_0) == 0x000008, "Wrong alignment on BP_SkinItemEntry_C_Get_CostText_Text_0");
static_assert(sizeof(BP_SkinItemEntry_C_Get_CostText_Text_0) == 0x000030, "Wrong size on BP_SkinItemEntry_C_Get_CostText_Text_0");
static_assert(offsetof(BP_SkinItemEntry_C_Get_CostText_Text_0, ReturnValue) == 0x000000, "Member 'BP_SkinItemEntry_C_Get_CostText_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_CostText_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'BP_SkinItemEntry_C_Get_CostText_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function BP_SkinItemEntry.BP_SkinItemEntry_C.Get_CostAndIconBox_Visibility_0
// 0x0006 (0x0006 - 0x0000)
struct BP_SkinItemEntry_C_Get_CostAndIconBox_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkinItemEntry_C_Get_CostAndIconBox_Visibility_0) == 0x000001, "Wrong alignment on BP_SkinItemEntry_C_Get_CostAndIconBox_Visibility_0");
static_assert(sizeof(BP_SkinItemEntry_C_Get_CostAndIconBox_Visibility_0) == 0x000006, "Wrong size on BP_SkinItemEntry_C_Get_CostAndIconBox_Visibility_0");
static_assert(offsetof(BP_SkinItemEntry_C_Get_CostAndIconBox_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_SkinItemEntry_C_Get_CostAndIconBox_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_CostAndIconBox_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_SkinItemEntry_C_Get_CostAndIconBox_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_CostAndIconBox_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_SkinItemEntry_C_Get_CostAndIconBox_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_CostAndIconBox_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_SkinItemEntry_C_Get_CostAndIconBox_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_CostAndIconBox_Visibility_0, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_SkinItemEntry_C_Get_CostAndIconBox_Visibility_0::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_CostAndIconBox_Visibility_0, K2Node_Select_Default) == 0x000005, "Member 'BP_SkinItemEntry_C_Get_CostAndIconBox_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_SkinItemEntry.BP_SkinItemEntry_C.Get_Image_9_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct BP_SkinItemEntry_C_Get_Image_9_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkinItemEntry_C_Get_Image_9_Visibility_0) == 0x000001, "Wrong alignment on BP_SkinItemEntry_C_Get_Image_9_Visibility_0");
static_assert(sizeof(BP_SkinItemEntry_C_Get_Image_9_Visibility_0) == 0x000005, "Wrong size on BP_SkinItemEntry_C_Get_Image_9_Visibility_0");
static_assert(offsetof(BP_SkinItemEntry_C_Get_Image_9_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_SkinItemEntry_C_Get_Image_9_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_Image_9_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_SkinItemEntry_C_Get_Image_9_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_Image_9_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_SkinItemEntry_C_Get_Image_9_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_Image_9_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_SkinItemEntry_C_Get_Image_9_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_Image_9_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'BP_SkinItemEntry_C_Get_Image_9_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_SkinItemEntry.BP_SkinItemEntry_C.Get_ic_locked_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct BP_SkinItemEntry_C_Get_ic_locked_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkinItemEntry_C_Get_ic_locked_Visibility_0) == 0x000001, "Wrong alignment on BP_SkinItemEntry_C_Get_ic_locked_Visibility_0");
static_assert(sizeof(BP_SkinItemEntry_C_Get_ic_locked_Visibility_0) == 0x000005, "Wrong size on BP_SkinItemEntry_C_Get_ic_locked_Visibility_0");
static_assert(offsetof(BP_SkinItemEntry_C_Get_ic_locked_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_SkinItemEntry_C_Get_ic_locked_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_ic_locked_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_SkinItemEntry_C_Get_ic_locked_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_ic_locked_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_SkinItemEntry_C_Get_ic_locked_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_ic_locked_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_SkinItemEntry_C_Get_ic_locked_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_ic_locked_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'BP_SkinItemEntry_C_Get_ic_locked_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_SkinItemEntry.BP_SkinItemEntry_C.Get_Image_Gradient_ColorAndOpacity_0
// 0x0034 (0x0034 - 0x0000)
struct BP_SkinItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkinItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0) == 0x000004, "Wrong alignment on BP_SkinItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0");
static_assert(sizeof(BP_SkinItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0) == 0x000034, "Wrong size on BP_SkinItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0");
static_assert(offsetof(BP_SkinItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'BP_SkinItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0, CallFunc_IsHovered_ReturnValue) == 0x000010, "Member 'BP_SkinItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0, CallFunc_SelectColor_ReturnValue) == 0x000014, "Member 'BP_SkinItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0, CallFunc_SelectColor_ReturnValue_1) == 0x000024, "Member 'BP_SkinItemEntry_C_Get_Image_Gradient_ColorAndOpacity_0::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");

// Function BP_SkinItemEntry.BP_SkinItemEntry_C.VisibleIfDLC
// 0x0009 (0x0009 - 0x0000)
struct BP_SkinItemEntry_C_VisibleIfDLC final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemRarity                                   Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkinItemEntry_C_VisibleIfDLC) == 0x000001, "Wrong alignment on BP_SkinItemEntry_C_VisibleIfDLC");
static_assert(sizeof(BP_SkinItemEntry_C_VisibleIfDLC) == 0x000009, "Wrong size on BP_SkinItemEntry_C_VisibleIfDLC");
static_assert(offsetof(BP_SkinItemEntry_C_VisibleIfDLC, ReturnValue) == 0x000000, "Member 'BP_SkinItemEntry_C_VisibleIfDLC::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_VisibleIfDLC, Temp_byte_Variable) == 0x000001, "Member 'BP_SkinItemEntry_C_VisibleIfDLC::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_VisibleIfDLC, Temp_byte_Variable_1) == 0x000002, "Member 'BP_SkinItemEntry_C_VisibleIfDLC::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_VisibleIfDLC, Temp_byte_Variable_2) == 0x000003, "Member 'BP_SkinItemEntry_C_VisibleIfDLC::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_VisibleIfDLC, Temp_byte_Variable_3) == 0x000004, "Member 'BP_SkinItemEntry_C_VisibleIfDLC::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_VisibleIfDLC, Temp_byte_Variable_4) == 0x000005, "Member 'BP_SkinItemEntry_C_VisibleIfDLC::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_VisibleIfDLC, Temp_byte_Variable_5) == 0x000006, "Member 'BP_SkinItemEntry_C_VisibleIfDLC::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_VisibleIfDLC, Temp_byte_Variable_6) == 0x000007, "Member 'BP_SkinItemEntry_C_VisibleIfDLC::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_VisibleIfDLC, K2Node_Select_Default) == 0x000008, "Member 'BP_SkinItemEntry_C_VisibleIfDLC::K2Node_Select_Default' has a wrong offset!");

// Function BP_SkinItemEntry.BP_SkinItemEntry_C.Get_Image_Border_ColorAndOpacity_0
// 0x0024 (0x0024 - 0x0000)
struct BP_SkinItemEntry_C_Get_Image_Border_ColorAndOpacity_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkinItemEntry_C_Get_Image_Border_ColorAndOpacity_0) == 0x000004, "Wrong alignment on BP_SkinItemEntry_C_Get_Image_Border_ColorAndOpacity_0");
static_assert(sizeof(BP_SkinItemEntry_C_Get_Image_Border_ColorAndOpacity_0) == 0x000024, "Wrong size on BP_SkinItemEntry_C_Get_Image_Border_ColorAndOpacity_0");
static_assert(offsetof(BP_SkinItemEntry_C_Get_Image_Border_ColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'BP_SkinItemEntry_C_Get_Image_Border_ColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_Image_Border_ColorAndOpacity_0, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_SkinItemEntry_C_Get_Image_Border_ColorAndOpacity_0::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_Image_Border_ColorAndOpacity_0, CallFunc_SelectColor_ReturnValue) == 0x000014, "Member 'BP_SkinItemEntry_C_Get_Image_Border_ColorAndOpacity_0::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function BP_SkinItemEntry.BP_SkinItemEntry_C.Get_HorizontalBox_1_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct BP_SkinItemEntry_C_Get_HorizontalBox_1_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkinItemEntry_C_Get_HorizontalBox_1_Visibility_0) == 0x000001, "Wrong alignment on BP_SkinItemEntry_C_Get_HorizontalBox_1_Visibility_0");
static_assert(sizeof(BP_SkinItemEntry_C_Get_HorizontalBox_1_Visibility_0) == 0x000005, "Wrong size on BP_SkinItemEntry_C_Get_HorizontalBox_1_Visibility_0");
static_assert(offsetof(BP_SkinItemEntry_C_Get_HorizontalBox_1_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_SkinItemEntry_C_Get_HorizontalBox_1_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_HorizontalBox_1_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_SkinItemEntry_C_Get_HorizontalBox_1_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_HorizontalBox_1_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_SkinItemEntry_C_Get_HorizontalBox_1_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_HorizontalBox_1_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_SkinItemEntry_C_Get_HorizontalBox_1_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkinItemEntry_C_Get_HorizontalBox_1_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'BP_SkinItemEntry_C_Get_HorizontalBox_1_Visibility_0::K2Node_Select_Default' has a wrong offset!");

}

