#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DeployableBallista

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_DeployableBallista.BP_DeployableBallista_C.ExecuteUbergraph_BP_DeployableBallista
// 0x02E0 (0x02E0 - 0x0000)
struct BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerController*               K2Node_DynamicCast_AsMordhau_Player_Controller;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerState*                    K2Node_DynamicCast_AsMordhau_Player_State;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1; // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsUsingController_ReturnValue;         // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsUsingController_ReturnValue_1;       // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x0050(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0070(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0090(0x0018)(HasGetValueTypeHash)
	float                                         K2Node_Event_Angle;                                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            K2Node_Event_Type;                                 // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SubType_1;                            // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Bone;                                 // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Point;                                // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Source;                               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Agent_1;                              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            K2Node_Event_DamageType_1;                         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SubType;                              // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x00DC(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 K2Node_Event_Agent;                                // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x2];                                      // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ComputeRagdollForce_Force;                // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ComputeRagdollForce_Force_1;              // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_223[0x1];                                      // 0x0223(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0230(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A[0x6];                                      // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauPlayerController_C*          K2Node_DynamicCast_AsBP_Mordhau_Player_Controller; // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x027A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27B[0x5];                                      // 0x027B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetDriver_ReturnValue;                    // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnFirePressed_ReturnValue;                // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28A[0x6];                                      // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerController*               K2Node_DynamicCast_AsMordhau_Player_Controller_1;  // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerState*                    K2Node_DynamicCast_AsMordhau_Player_State_1;       // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x02C0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista) == 0x000008, "Wrong alignment on BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista");
static_assert(sizeof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista) == 0x0002E0, "Wrong size on BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, EntryPoint) == 0x000000, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_DynamicCast_AsMordhau_Player_Controller) == 0x000010, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_DynamicCast_AsMordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_DynamicCast_AsMordhau_Player_State) == 0x000020, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_DynamicCast_AsMordhau_Player_State' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_Conv_IntToByte_ReturnValue) == 0x000029, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x00002A, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1) == 0x00002B, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, Temp_bool_Has_Been_Initd_Variable) == 0x00002C, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_GetIsUsingController_ReturnValue) == 0x00002D, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_GetIsUsingController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_GetIsUsingController_ReturnValue_1) == 0x00002E, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_GetIsUsingController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, Temp_bool_IsClosed_Variable) == 0x00002F, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_HasAuthority_ReturnValue) == 0x000048, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, Temp_struct_Variable) == 0x000050, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_IsDedicatedServer_ReturnValue) == 0x000068, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_InputActionEvent_Key) == 0x000070, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_HasAuthority_ReturnValue_1) == 0x000088, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_InputActionEvent_Key_1) == 0x000090, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_Event_Angle) == 0x0000A8, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_Event_Angle' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_Event_Type) == 0x0000AC, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_Event_SubType_1) == 0x0000AD, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_Event_SubType_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_Event_Bone) == 0x0000B0, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_Event_Bone' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_Event_Point) == 0x0000B8, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_Event_Point' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_Event_Source) == 0x0000C8, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_Event_Source' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_Event_Agent_1) == 0x0000D0, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_Event_Agent_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_Event_DamageType_1) == 0x0000D8, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_Event_DamageType_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_Event_SubType) == 0x0000D9, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_Event_SubType' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_Event_Hit) == 0x0000DC, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_Event_Agent) == 0x000168, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_Event_Agent' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_BreakHitResult_bBlockingHit) == 0x000170, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_BreakHitResult_bInitialOverlap) == 0x000171, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_BreakHitResult_Time) == 0x000174, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_BreakHitResult_Distance) == 0x000178, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_BreakHitResult_Location) == 0x00017C, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_BreakHitResult_ImpactPoint) == 0x000188, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_BreakHitResult_Normal) == 0x000194, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_BreakHitResult_ImpactNormal) == 0x0001A0, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_BreakHitResult_PhysMat) == 0x0001B0, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_BreakHitResult_HitActor) == 0x0001B8, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_BreakHitResult_HitComponent) == 0x0001C0, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_BreakHitResult_HitBoneName) == 0x0001C8, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_BreakHitResult_HitItem) == 0x0001D0, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_BreakHitResult_FaceIndex) == 0x0001D4, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_BreakHitResult_TraceStart) == 0x0001D8, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_BreakHitResult_TraceEnd) == 0x0001E4, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_ComputeRagdollForce_Force) == 0x0001F0, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_ComputeRagdollForce_Force' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_ComputeRagdollForce_Force_1) == 0x0001FC, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_ComputeRagdollForce_Force_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000208, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000214, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, Temp_bool_Has_Been_Initd_Variable_1) == 0x000220, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_IsValid_ReturnValue) == 0x000221, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_IsValid_ReturnValue_1) == 0x000222, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_InputAxisEvent_AxisValue_1) == 0x000224, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_InputAxisEvent_AxisValue) == 0x000228, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_Event_Damage) == 0x00022C, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_Event_DamageType) == 0x000230, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_Event_InstigatedBy) == 0x000238, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_Event_DamageCauser) == 0x000240, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_GetMaterial_ReturnValue) == 0x000248, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000250, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000258, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_BooleanAND_ReturnValue) == 0x000259, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_GetPlayerController_ReturnValue) == 0x000260, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_MakeLiteralName_ReturnValue) == 0x000268, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_DynamicCast_AsBP_Mordhau_Player_Controller) == 0x000270, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_DynamicCast_AsBP_Mordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_DynamicCast_bSuccess_2) == 0x000278, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000279, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, Temp_bool_IsClosed_Variable_1) == 0x00027A, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_GetDriver_ReturnValue) == 0x000280, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_GetDriver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_OnFirePressed_ReturnValue) == 0x000288, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_OnFirePressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_IsValid_ReturnValue_2) == 0x000289, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_GetOwner_ReturnValue_1) == 0x000290, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000298, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_DynamicCast_AsMordhau_Player_Controller_1) == 0x0002A0, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_DynamicCast_AsMordhau_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_DynamicCast_bSuccess_3) == 0x0002A8, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_ApplyDamage_ReturnValue) == 0x0002AC, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_DynamicCast_AsMordhau_Player_State_1) == 0x0002B0, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_DynamicCast_AsMordhau_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_DynamicCast_bSuccess_4) == 0x0002B8, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, K2Node_InputActionEvent_Key_2) == 0x0002C0, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002D8, "Member 'BP_DeployableBallista_C_ExecuteUbergraph_BP_DeployableBallista::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_DeployableBallista.BP_DeployableBallista_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_DeployableBallista_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeployableBallista_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BP_DeployableBallista_C_ReceiveAnyDamage");
static_assert(sizeof(BP_DeployableBallista_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BP_DeployableBallista_C_ReceiveAnyDamage");
static_assert(offsetof(BP_DeployableBallista_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'BP_DeployableBallista_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BP_DeployableBallista_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BP_DeployableBallista_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BP_DeployableBallista_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function BP_DeployableBallista.BP_DeployableBallista_C.InpAxisEvt_Turn Right_K2Node_InputAxisEvent_4
// 0x0004 (0x0004 - 0x0000)
struct BP_DeployableBallista_C_InpAxisEvt_Turn_Right_K2Node_InputAxisEvent_4 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeployableBallista_C_InpAxisEvt_Turn_Right_K2Node_InputAxisEvent_4) == 0x000004, "Wrong alignment on BP_DeployableBallista_C_InpAxisEvt_Turn_Right_K2Node_InputAxisEvent_4");
static_assert(sizeof(BP_DeployableBallista_C_InpAxisEvt_Turn_Right_K2Node_InputAxisEvent_4) == 0x000004, "Wrong size on BP_DeployableBallista_C_InpAxisEvt_Turn_Right_K2Node_InputAxisEvent_4");
static_assert(offsetof(BP_DeployableBallista_C_InpAxisEvt_Turn_Right_K2Node_InputAxisEvent_4, AxisValue) == 0x000000, "Member 'BP_DeployableBallista_C_InpAxisEvt_Turn_Right_K2Node_InputAxisEvent_4::AxisValue' has a wrong offset!");

// Function BP_DeployableBallista.BP_DeployableBallista_C.InpAxisEvt_Look Up_K2Node_InputAxisEvent_18
// 0x0004 (0x0004 - 0x0000)
struct BP_DeployableBallista_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_18 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeployableBallista_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_18) == 0x000004, "Wrong alignment on BP_DeployableBallista_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_18");
static_assert(sizeof(BP_DeployableBallista_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_18) == 0x000004, "Wrong size on BP_DeployableBallista_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_18");
static_assert(offsetof(BP_DeployableBallista_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_18, AxisValue) == 0x000000, "Member 'BP_DeployableBallista_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_18::AxisValue' has a wrong offset!");

// Function BP_DeployableBallista.BP_DeployableBallista_C.OnCosmeticHit
// 0x0098 (0x0098 - 0x0000)
struct BP_DeployableBallista_C_OnCosmeticHit final
{
public:
	EMordhauDamageType                            DamageType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SubType;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0004(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 Agent;                                             // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeployableBallista_C_OnCosmeticHit) == 0x000008, "Wrong alignment on BP_DeployableBallista_C_OnCosmeticHit");
static_assert(sizeof(BP_DeployableBallista_C_OnCosmeticHit) == 0x000098, "Wrong size on BP_DeployableBallista_C_OnCosmeticHit");
static_assert(offsetof(BP_DeployableBallista_C_OnCosmeticHit, DamageType) == 0x000000, "Member 'BP_DeployableBallista_C_OnCosmeticHit::DamageType' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_OnCosmeticHit, SubType) == 0x000001, "Member 'BP_DeployableBallista_C_OnCosmeticHit::SubType' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_OnCosmeticHit, Hit) == 0x000004, "Member 'BP_DeployableBallista_C_OnCosmeticHit::Hit' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_OnCosmeticHit, Agent) == 0x000090, "Member 'BP_DeployableBallista_C_OnCosmeticHit::Agent' has a wrong offset!");

// Function BP_DeployableBallista.BP_DeployableBallista_C.OnDied
// 0x0030 (0x0030 - 0x0000)
struct BP_DeployableBallista_C_OnDied final
{
public:
	float                                         Angle;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SubType;                                           // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   bone;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Agent;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeployableBallista_C_OnDied) == 0x000008, "Wrong alignment on BP_DeployableBallista_C_OnDied");
static_assert(sizeof(BP_DeployableBallista_C_OnDied) == 0x000030, "Wrong size on BP_DeployableBallista_C_OnDied");
static_assert(offsetof(BP_DeployableBallista_C_OnDied, Angle) == 0x000000, "Member 'BP_DeployableBallista_C_OnDied::Angle' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_OnDied, Type) == 0x000004, "Member 'BP_DeployableBallista_C_OnDied::Type' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_OnDied, SubType) == 0x000005, "Member 'BP_DeployableBallista_C_OnDied::SubType' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_OnDied, bone) == 0x000008, "Member 'BP_DeployableBallista_C_OnDied::bone' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_OnDied, Point) == 0x000010, "Member 'BP_DeployableBallista_C_OnDied::Point' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_OnDied, Source) == 0x000020, "Member 'BP_DeployableBallista_C_OnDied::Source' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_OnDied, Agent) == 0x000028, "Member 'BP_DeployableBallista_C_OnDied::Agent' has a wrong offset!");

// Function BP_DeployableBallista.BP_DeployableBallista_C.InpActEvt_Cycle Camera_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_DeployableBallista_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeployableBallista_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_DeployableBallista_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_DeployableBallista_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_DeployableBallista_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_DeployableBallista_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_DeployableBallista_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_DeployableBallista.BP_DeployableBallista_C.InpActEvt_Cycle Camera_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_DeployableBallista_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeployableBallista_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_DeployableBallista_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_DeployableBallista_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_DeployableBallista_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_DeployableBallista_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_DeployableBallista_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_DeployableBallista.BP_DeployableBallista_C.InpActEvt_Fire_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_DeployableBallista_C_InpActEvt_Fire_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeployableBallista_C_InpActEvt_Fire_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_DeployableBallista_C_InpActEvt_Fire_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_DeployableBallista_C_InpActEvt_Fire_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_DeployableBallista_C_InpActEvt_Fire_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_DeployableBallista_C_InpActEvt_Fire_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_DeployableBallista_C_InpActEvt_Fire_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_DeployableBallista.BP_DeployableBallista_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct BP_DeployableBallista_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DeployableBallista_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_DeployableBallista_C_UserConstructionScript");
static_assert(sizeof(BP_DeployableBallista_C_UserConstructionScript) == 0x000001, "Wrong size on BP_DeployableBallista_C_UserConstructionScript");
static_assert(offsetof(BP_DeployableBallista_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000000, "Member 'BP_DeployableBallista_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_DeployableBallista.BP_DeployableBallista_C.PostProcessCameraPOV
// 0x0270 (0x0270 - 0x0000)
struct BP_DeployableBallista_C_PostProcessCameraPOV final
{
public:
	struct FPOV                                   InPOV;                                             // 0x0000(0x001C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FPOV                                   ReturnValue;                                       // 0x001C(0x001C)(Parm, OutParm, ReturnParm, NoDestructor)
	class AMordhauCharacter*                      CallFunc_GetDriver_ReturnValue;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	class UAB_DeployableBallista_C*               K2Node_DynamicCast_AsAB_Deployable_Ballista;       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPOV                                   K2Node_MakeStruct_POV;                             // 0x0254(0x001C)(NoDestructor, UObjectWrapper)
};
static_assert(alignof(BP_DeployableBallista_C_PostProcessCameraPOV) == 0x000010, "Wrong alignment on BP_DeployableBallista_C_PostProcessCameraPOV");
static_assert(sizeof(BP_DeployableBallista_C_PostProcessCameraPOV) == 0x000270, "Wrong size on BP_DeployableBallista_C_PostProcessCameraPOV");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, InPOV) == 0x000000, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::InPOV' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, ReturnValue) == 0x00001C, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_GetDriver_ReturnValue) == 0x000038, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_GetDriver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, Temp_bool_Variable) == 0x000048, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000050, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_GetAnimInstance_ReturnValue) == 0x000080, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_GetSocketTransform_ReturnValue) == 0x000090, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, K2Node_DynamicCast_AsAB_Deployable_Ballista) == 0x0000C0, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::K2Node_DynamicCast_AsAB_Deployable_Ballista' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_BreakTransform_Location) == 0x0000CC, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_BreakTransform_Rotation) == 0x0000D8, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_BreakTransform_Scale) == 0x0000E4, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_BreakRotator_Roll) == 0x0000F0, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_BreakRotator_Pitch) == 0x0000F4, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_BreakRotator_Yaw) == 0x0000F8, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000FC, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_GetSocketTransform_ReturnValue_1) == 0x000100, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_MakeRotator_ReturnValue) == 0x000130, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_MakeTransform_ReturnValue) == 0x000140, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_ComposeTransforms_ReturnValue) == 0x000170, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_ComposeTransforms_ReturnValue_1) == 0x0001A0, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_BreakTransform_Location_1) == 0x0001D0, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_BreakTransform_Rotation_1) == 0x0001DC, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_BreakTransform_Scale_1) == 0x0001E8, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_GetUpVector_ReturnValue) == 0x0001F4, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_GetForwardVector_ReturnValue) == 0x000200, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00020C, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000218, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000224, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, K2Node_Select_Default) == 0x000230, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_Add_VectorVector_ReturnValue) == 0x00023C, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000248, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_PostProcessCameraPOV, K2Node_MakeStruct_POV) == 0x000254, "Member 'BP_DeployableBallista_C_PostProcessCameraPOV::K2Node_MakeStruct_POV' has a wrong offset!");

// Function BP_DeployableBallista.BP_DeployableBallista_C.CanDrive
// 0x0010 (0x0010 - 0x0000)
struct BP_DeployableBallista_C_CanDrive final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DeployableBallista_C_CanDrive) == 0x000008, "Wrong alignment on BP_DeployableBallista_C_CanDrive");
static_assert(sizeof(BP_DeployableBallista_C_CanDrive) == 0x000010, "Wrong size on BP_DeployableBallista_C_CanDrive");
static_assert(offsetof(BP_DeployableBallista_C_CanDrive, Character) == 0x000000, "Member 'BP_DeployableBallista_C_CanDrive::Character' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_CanDrive, ReturnValue) == 0x000008, "Member 'BP_DeployableBallista_C_CanDrive::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeployableBallista_C_CanDrive, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'BP_DeployableBallista_C_CanDrive::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}

