#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MordhauCharacter

#include "Basic.hpp"

#include "BP_MordhauCharacter_classes.hpp"
#include "BP_MordhauCharacter_parameters.hpp"


namespace SDK
{

// Function BP_MordhauCharacter.BP_MordhauCharacter_C.ExecuteUbergraph_BP_MordhauCharacter
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MordhauCharacter_C::ExecuteUbergraph_BP_MordhauCharacter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "ExecuteUbergraph_BP_MordhauCharacter");

	Params::BP_MordhauCharacter_C_ExecuteUbergraph_BP_MordhauCharacter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.OnEquipmentRemapperSpawned_Event_0
// (BlueprintCallable, BlueprintEvent)

void ABP_MordhauCharacter_C::OnEquipmentRemapperSpawned_Event_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "OnEquipmentRemapperSpawned_Event_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.SpawnKickWeapon
// (BlueprintCallable, BlueprintEvent)

void ABP_MordhauCharacter_C::SpawnKickWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "SpawnKickWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.SprintingMoveBlockedBy
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           BlockedBy                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MordhauCharacter_C::SprintingMoveBlockedBy(class AActor* BlockedBy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "SprintingMoveBlockedBy");

	Params::BP_MordhauCharacter_C_SprintingMoveBlockedBy Parms{};

	Parms.BlockedBy = BlockedBy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.DebugPossess
// (BlueprintCallable, BlueprintEvent)

void ABP_MordhauCharacter_C::DebugPossess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "DebugPossess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.ServerSetClimbLocation
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector_NetQuantize              NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_MordhauCharacter_C::ServerSetClimbLocation(const struct FVector_NetQuantize& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "ServerSetClimbLocation");

	Params::BP_MordhauCharacter_C_ServerSetClimbLocation Parms{};

	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.ApplyRagdollForce
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMordhauDamageType                      Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   SubType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Agent                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MordhauCharacter_C::ApplyRagdollForce(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "ApplyRagdollForce");

	Params::BP_MordhauCharacter_C_ApplyRagdollForce Parms{};

	Parms.Angle = Angle;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Source = Source;
	Parms.Agent = Agent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.OnPostProfileAssigned
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_MordhauCharacter_C::OnPostProfileAssigned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "OnPostProfileAssigned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.ReplicatedTripWithKnockback
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_MordhauCharacter_C::ReplicatedTripWithKnockback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "ReplicatedTripWithKnockback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.BndEvt__Thudder_K2Node_ComponentBoundEvent_0_ComponentThudSignature__DelegateSignature
// (BlueprintEvent)

void ABP_MordhauCharacter_C::BndEvt__Thudder_K2Node_ComponentBoundEvent_0_ComponentThudSignature__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "BndEvt__Thudder_K2Node_ComponentBoundEvent_0_ComponentThudSignature__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.OnPostDismember
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASeparatedBodyPart*               SeparatedPart                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Agent                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MordhauCharacter_C::OnPostDismember(class FName bone, class ASeparatedBodyPart* SeparatedPart, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "OnPostDismember");

	Params::BP_MordhauCharacter_C_OnPostDismember Parms{};

	Parms.bone = bone;
	Parms.SeparatedPart = SeparatedPart;
	Parms.Agent = Agent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.OnCosmeticHit
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMordhauDamageType                      DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   SubType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AActor*                           Agent                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MordhauCharacter_C::OnCosmeticHit(EMordhauDamageType DamageType, uint8 SubType, const struct FHitResult& Hit, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "OnCosmeticHit");

	Params::BP_MordhauCharacter_C_OnCosmeticHit Parms{};

	Parms.DamageType = DamageType;
	Parms.SubType = SubType;
	Parms.Hit = std::move(Hit);
	Parms.Agent = Agent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.OnDied
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMordhauDamageType                      Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   SubType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Agent                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MordhauCharacter_C::OnDied(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source, class AActor* Agent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "OnDied");

	Params::BP_MordhauCharacter_C_OnDied Parms{};

	Parms.Angle = Angle;
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.bone = bone;
	Parms.Point = std::move(Point);
	Parms.Source = Source;
	Parms.Agent = Agent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MordhauCharacter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.InpActEvt_Cycle Camera_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_MordhauCharacter_C::InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "InpActEvt_Cycle Camera_K2Node_InputActionEvent_0");

	Params::BP_MordhauCharacter_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.InpActEvt_Cycle Camera_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_MordhauCharacter_C::InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "InpActEvt_Cycle Camera_K2Node_InputActionEvent_1");

	Params::BP_MordhauCharacter_C_InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_MordhauCharacter_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.FindClimbSpot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   UpwardsCast                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Succeeded                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          TargetSpot                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MordhauCharacter_C::FindClimbSpot(float UpwardsCast, bool* Succeeded, struct FVector* TargetSpot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "FindClimbSpot");

	Params::BP_MordhauCharacter_C_FindClimbSpot Parms{};

	Parms.UpwardsCast = UpwardsCast;

	UObject::ProcessEvent(Func, &Parms);

	if (Succeeded != nullptr)
		*Succeeded = Parms.Succeeded;

	if (TargetSpot != nullptr)
		*TargetSpot = std::move(Parms.TargetSpot);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.AttemptClimb
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Succeeded                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MordhauCharacter_C::AttemptClimb(bool* Succeeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "AttemptClimb");

	Params::BP_MordhauCharacter_C_AttemptClimb Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Succeeded != nullptr)
		*Succeeded = Parms.Succeeded;
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.CalculateLedgeOffsetAndNormal
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClimbingMotion*                  ClimbingMotion                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutOffset                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutNormal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MordhauCharacter_C::CalculateLedgeOffsetAndNormal(class UClimbingMotion* ClimbingMotion, struct FVector* OutOffset, struct FVector* OutNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "CalculateLedgeOffsetAndNormal");

	Params::BP_MordhauCharacter_C_CalculateLedgeOffsetAndNormal Parms{};

	Parms.ClimbingMotion = ClimbingMotion;

	UObject::ProcessEvent(Func, &Parms);

	if (OutOffset != nullptr)
		*OutOffset = std::move(Parms.OutOffset);

	if (OutNormal != nullptr)
		*OutNormal = std::move(Parms.OutNormal);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.TryClimbing
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MordhauCharacter_C::TryClimbing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "TryClimbing");

	Params::BP_MordhauCharacter_C_TryClimbing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.AddRagdollImpulse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Impulse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MordhauCharacter_C::AddRagdollImpulse(const struct FVector& Impulse, const struct FVector& Location, class FName bone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "AddRagdollImpulse");

	Params::BP_MordhauCharacter_C_AddRagdollImpulse Parms{};

	Parms.Impulse = std::move(Impulse);
	Parms.Location = std::move(Location);
	Parms.bone = bone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.GetOutOfBoundsText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Header                                                 (Parm, OutParm)

void ABP_MordhauCharacter_C::GetOutOfBoundsText(class FText* Header)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "GetOutOfBoundsText");

	Params::BP_MordhauCharacter_C_GetOutOfBoundsText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Header != nullptr)
		*Header = std::move(Parms.Header);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.GetOutOfBoundsSubtext
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Subtext                                                (Parm, OutParm)

void ABP_MordhauCharacter_C::GetOutOfBoundsSubtext(class FText* Subtext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "GetOutOfBoundsSubtext");

	Params::BP_MordhauCharacter_C_GetOutOfBoundsSubtext Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Subtext != nullptr)
		*Subtext = std::move(Parms.Subtext);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.SpawnBloodPoolUnderneath
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MordhauCharacter_C::SpawnBloodPoolUnderneath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "SpawnBloodPoolUnderneath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.IsAnUpgrade
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_WearablePickup_C*             Wearable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MordhauCharacter_C::IsAnUpgrade(class ABP_WearablePickup_C* Wearable, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "IsAnUpgrade");

	Params::BP_MordhauCharacter_C_IsAnUpgrade Parms{};

	Parms.Wearable = Wearable;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.OnBeforeReceiveWearablePickup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_WearablePickup_C*             WearablePickup                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MordhauCharacter_C::OnBeforeReceiveWearablePickup(class ABP_WearablePickup_C* WearablePickup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "OnBeforeReceiveWearablePickup");

	Params::BP_MordhauCharacter_C_OnBeforeReceiveWearablePickup Parms{};

	Parms.WearablePickup = WearablePickup;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MordhauCharacter.BP_MordhauCharacter_C.GiveFists
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MordhauCharacter_C::GiveFists()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MordhauCharacter_C", "GiveFists");

	UObject::ProcessEvent(Func, nullptr);
}

}

