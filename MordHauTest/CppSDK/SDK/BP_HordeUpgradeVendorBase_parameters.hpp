#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordeUpgradeVendorBase

#include "Basic.hpp"

#include "S_WearableTier_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HordeUpgradeVendorBase.BP_HordeUpgradeVendorBase_C.ExecuteUbergraph_BP_HordeUpgradeVendorBase
// 0x00E0 (0x00E0 - 0x0000)
struct BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_Event_Character;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordePlayerController_C*            K2Node_DynamicCast_AsBP_Horde_Player_Controller;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNextArmorUpgrade_IsMaxedOut;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WearableTier                        CallFunc_GetNextArmorUpgrade_ArmorToEquip;         // 0x0040(0x0030)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_CanAffordUpgrade_CanAfford;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDiscountedPrice_DiscountedPrice;       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeGameState_C*                   K2Node_DynamicCast_AsBP_Horde_Game_State;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00A0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WearablePickup_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase) == 0x000010, "Wrong alignment on BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase");
static_assert(sizeof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase) == 0x0000E0, "Wrong size on BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, EntryPoint) == 0x000000, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, K2Node_Event_Character) == 0x000008, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, K2Node_DynamicCast_AsBP_Horde_Player_Controller) == 0x000020, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::K2Node_DynamicCast_AsBP_Horde_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x000030, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, CallFunc_BooleanAND_ReturnValue_1) == 0x00003A, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, CallFunc_Add_ByteByte_ReturnValue) == 0x00003B, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, CallFunc_GetNextArmorUpgrade_IsMaxedOut) == 0x00003C, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::CallFunc_GetNextArmorUpgrade_IsMaxedOut' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, CallFunc_GetNextArmorUpgrade_ArmorToEquip) == 0x000040, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::CallFunc_GetNextArmorUpgrade_ArmorToEquip' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, CallFunc_CanAffordUpgrade_CanAfford) == 0x000070, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::CallFunc_CanAffordUpgrade_CanAfford' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, CallFunc_GetDiscountedPrice_DiscountedPrice) == 0x000074, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::CallFunc_GetDiscountedPrice_DiscountedPrice' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, CallFunc_Subtract_IntInt_ReturnValue) == 0x000078, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, CallFunc_IsDedicatedServer_ReturnValue) == 0x00007C, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, CallFunc_GetGameState_ReturnValue) == 0x000080, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, K2Node_DynamicCast_AsBP_Horde_Game_State) == 0x000088, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::K2Node_DynamicCast_AsBP_Horde_Game_State' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, CallFunc_Array_AddUnique_ReturnValue) == 0x000094, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, CallFunc_GetTransform_ReturnValue) == 0x0000A0, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000D0, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000D8, "Member 'BP_HordeUpgradeVendorBase_C_ExecuteUbergraph_BP_HordeUpgradeVendorBase::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_HordeUpgradeVendorBase.BP_HordeUpgradeVendorBase_C.OnHeldInteractionStart
// 0x0008 (0x0008 - 0x0000)
struct BP_HordeUpgradeVendorBase_C_OnHeldInteractionStart final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HordeUpgradeVendorBase_C_OnHeldInteractionStart) == 0x000008, "Wrong alignment on BP_HordeUpgradeVendorBase_C_OnHeldInteractionStart");
static_assert(sizeof(BP_HordeUpgradeVendorBase_C_OnHeldInteractionStart) == 0x000008, "Wrong size on BP_HordeUpgradeVendorBase_C_OnHeldInteractionStart");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_OnHeldInteractionStart, Character) == 0x000000, "Member 'BP_HordeUpgradeVendorBase_C_OnHeldInteractionStart::Character' has a wrong offset!");

// Function BP_HordeUpgradeVendorBase.BP_HordeUpgradeVendorBase_C.UpdateVisuals
// 0x0058 (0x0058 - 0x0000)
struct BP_HordeUpgradeVendorBase_C_UpdateVisuals final
{
public:
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeUpgradeVendorBase_C_UpdateVisuals) == 0x000008, "Wrong alignment on BP_HordeUpgradeVendorBase_C_UpdateVisuals");
static_assert(sizeof(BP_HordeUpgradeVendorBase_C_UpdateVisuals) == 0x000058, "Wrong size on BP_HordeUpgradeVendorBase_C_UpdateVisuals");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_UpdateVisuals, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000000, "Member 'BP_HordeUpgradeVendorBase_C_UpdateVisuals::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_UpdateVisuals, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_HordeUpgradeVendorBase_C_UpdateVisuals::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_UpdateVisuals, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_HordeUpgradeVendorBase_C_UpdateVisuals::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_UpdateVisuals, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_HordeUpgradeVendorBase_C_UpdateVisuals::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_UpdateVisuals, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000018, "Member 'BP_HordeUpgradeVendorBase_C_UpdateVisuals::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_UpdateVisuals, CallFunc_GetCameraLocation_ReturnValue) == 0x000020, "Member 'BP_HordeUpgradeVendorBase_C_UpdateVisuals::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_UpdateVisuals, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00002C, "Member 'BP_HordeUpgradeVendorBase_C_UpdateVisuals::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_UpdateVisuals, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'BP_HordeUpgradeVendorBase_C_UpdateVisuals::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_UpdateVisuals, CallFunc_VSize_ReturnValue) == 0x000040, "Member 'BP_HordeUpgradeVendorBase_C_UpdateVisuals::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_UpdateVisuals, CallFunc_Less_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_HordeUpgradeVendorBase_C_UpdateVisuals::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_UpdateVisuals, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x000048, "Member 'BP_HordeUpgradeVendorBase_C_UpdateVisuals::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_UpdateVisuals, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_HordeUpgradeVendorBase_C_UpdateVisuals::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_UpdateVisuals, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000051, "Member 'BP_HordeUpgradeVendorBase_C_UpdateVisuals::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_UpdateVisuals, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000052, "Member 'BP_HordeUpgradeVendorBase_C_UpdateVisuals::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_UpdateVisuals, CallFunc_IsValid_ReturnValue) == 0x000053, "Member 'BP_HordeUpgradeVendorBase_C_UpdateVisuals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_UpdateVisuals, CallFunc_BooleanAND_ReturnValue) == 0x000054, "Member 'BP_HordeUpgradeVendorBase_C_UpdateVisuals::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_UpdateVisuals, CallFunc_BooleanAND_ReturnValue_1) == 0x000055, "Member 'BP_HordeUpgradeVendorBase_C_UpdateVisuals::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_HordeUpgradeVendorBase.BP_HordeUpgradeVendorBase_C.Get Equipped Armor
// 0x0108 (0x0108 - 0x0000)
struct BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WearableIndex;                                     // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WearableTier                        EquippedArmor;                                     // 0x0010(0x0030)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_HordePlayerState_C*                 HordePlayerStateToUse;                             // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LastEquippedArmor;                                 // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FoundWearableIndex;                                // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WearableTier                        FoundWearableData;                                 // 0x0058(0x0030)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State_1;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C3[0x1];                                       // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WearableTier                        CallFunc_Array_Get_Item;                           // 0x00D0(0x0030)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor) == 0x000008, "Wrong alignment on BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor");
static_assert(sizeof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor) == 0x000108, "Wrong size on BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, Character) == 0x000000, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::Character' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, WearableIndex) == 0x000008, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::WearableIndex' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, EquippedArmor) == 0x000010, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::EquippedArmor' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, HordePlayerStateToUse) == 0x000040, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::HordePlayerStateToUse' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, LastEquippedArmor) == 0x000048, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::LastEquippedArmor' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, FoundWearableIndex) == 0x000050, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::FoundWearableIndex' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, FoundWearableData) == 0x000058, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::FoundWearableData' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x000090, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000099, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, CallFunc_Array_Length_ReturnValue) == 0x00009C, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, K2Node_SwitchEnum_CmpSuccess) == 0x0000A0, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, CallFunc_GetPlayerController_ReturnValue) == 0x0000A8, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, CallFunc_IsLocalPlayerController_ReturnValue) == 0x0000B1, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, K2Node_DynamicCast_AsBP_Horde_Player_State_1) == 0x0000B8, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::K2Node_DynamicCast_AsBP_Horde_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, CallFunc_IsValid_ReturnValue_1) == 0x0000C1, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, CallFunc_BooleanAND_ReturnValue) == 0x0000C2, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C8, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, Temp_bool_True_if_break_was_hit_Variable) == 0x0000C9, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, Temp_int_Array_Index_Variable) == 0x0000CC, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000100, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, CallFunc_Not_PreBool_ReturnValue) == 0x000101, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor, CallFunc_BooleanAND_ReturnValue_2) == 0x000102, "Member 'BP_HordeUpgradeVendorBase_C_Get_Equipped_Armor::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_HordeUpgradeVendorBase.BP_HordeUpgradeVendorBase_C.GetNextArmorUpgrade
// 0x0088 (0x0088 - 0x0000)
struct BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMaxedOut;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WearableTier                        ArmorToEquip;                                      // 0x0010(0x0030)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         NextArmorIndex;                                    // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Equipped_Armor_WearableIndex;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WearableTier                        CallFunc_Get_Equipped_Armor_EquippedArmor;         // 0x0048(0x0030)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade) == 0x000008, "Wrong alignment on BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade");
static_assert(sizeof(BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade) == 0x000088, "Wrong size on BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade, Character) == 0x000000, "Member 'BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade::Character' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade, IsMaxedOut) == 0x000008, "Member 'BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade::IsMaxedOut' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade, ArmorToEquip) == 0x000010, "Member 'BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade::ArmorToEquip' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade, NextArmorIndex) == 0x000040, "Member 'BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade::NextArmorIndex' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade, CallFunc_Get_Equipped_Armor_WearableIndex) == 0x000044, "Member 'BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade::CallFunc_Get_Equipped_Armor_WearableIndex' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade, CallFunc_Get_Equipped_Armor_EquippedArmor) == 0x000048, "Member 'BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade::CallFunc_Get_Equipped_Armor_EquippedArmor' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade, Temp_int_Variable) == 0x000078, "Member 'BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000080, "Member 'BP_HordeUpgradeVendorBase_C_GetNextArmorUpgrade::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_HordeUpgradeVendorBase.BP_HordeUpgradeVendorBase_C.CanAffordUpgrade
// 0x0080 (0x0080 - 0x0000)
struct BP_HordeUpgradeVendorBase_C_CanAffordUpgrade final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WearableTier                        ArmorUpgrade;                                      // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CanAfford;                                         // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CharacterCoins;                                    // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerController_C*            K2Node_DynamicCast_AsBP_Horde_Player_Controller;   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeUpgradeVendorBase_C_CanAffordUpgrade) == 0x000008, "Wrong alignment on BP_HordeUpgradeVendorBase_C_CanAffordUpgrade");
static_assert(sizeof(BP_HordeUpgradeVendorBase_C_CanAffordUpgrade) == 0x000080, "Wrong size on BP_HordeUpgradeVendorBase_C_CanAffordUpgrade");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_CanAffordUpgrade, Character) == 0x000000, "Member 'BP_HordeUpgradeVendorBase_C_CanAffordUpgrade::Character' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_CanAffordUpgrade, ArmorUpgrade) == 0x000008, "Member 'BP_HordeUpgradeVendorBase_C_CanAffordUpgrade::ArmorUpgrade' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_CanAffordUpgrade, CanAfford) == 0x000038, "Member 'BP_HordeUpgradeVendorBase_C_CanAffordUpgrade::CanAfford' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_CanAffordUpgrade, CharacterCoins) == 0x00003C, "Member 'BP_HordeUpgradeVendorBase_C_CanAffordUpgrade::CharacterCoins' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_CanAffordUpgrade, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_HordeUpgradeVendorBase_C_CanAffordUpgrade::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_CanAffordUpgrade, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000041, "Member 'BP_HordeUpgradeVendorBase_C_CanAffordUpgrade::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_CanAffordUpgrade, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'BP_HordeUpgradeVendorBase_C_CanAffordUpgrade::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_CanAffordUpgrade, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x000050, "Member 'BP_HordeUpgradeVendorBase_C_CanAffordUpgrade::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_CanAffordUpgrade, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_HordeUpgradeVendorBase_C_CanAffordUpgrade::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_CanAffordUpgrade, K2Node_DynamicCast_AsBP_Horde_Player_Controller) == 0x000060, "Member 'BP_HordeUpgradeVendorBase_C_CanAffordUpgrade::K2Node_DynamicCast_AsBP_Horde_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_CanAffordUpgrade, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_HordeUpgradeVendorBase_C_CanAffordUpgrade::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_CanAffordUpgrade, K2Node_DynamicCast_AsBP_Horde_Player_State_1) == 0x000070, "Member 'BP_HordeUpgradeVendorBase_C_CanAffordUpgrade::K2Node_DynamicCast_AsBP_Horde_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_CanAffordUpgrade, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_HordeUpgradeVendorBase_C_CanAffordUpgrade::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_HordeUpgradeVendorBase.BP_HordeUpgradeVendorBase_C.CanHeldInteract
// 0x0048 (0x0048 - 0x0000)
struct BP_HordeUpgradeVendorBase_C_CanHeldInteract final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNextArmorUpgrade_IsMaxedOut;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WearableTier                        CallFunc_GetNextArmorUpgrade_ArmorToEquip;         // 0x0010(0x0030)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_CanAffordUpgrade_CanAfford;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HordeUpgradeVendorBase_C_CanHeldInteract) == 0x000008, "Wrong alignment on BP_HordeUpgradeVendorBase_C_CanHeldInteract");
static_assert(sizeof(BP_HordeUpgradeVendorBase_C_CanHeldInteract) == 0x000048, "Wrong size on BP_HordeUpgradeVendorBase_C_CanHeldInteract");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_CanHeldInteract, Character) == 0x000000, "Member 'BP_HordeUpgradeVendorBase_C_CanHeldInteract::Character' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_CanHeldInteract, ReturnValue) == 0x000008, "Member 'BP_HordeUpgradeVendorBase_C_CanHeldInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_CanHeldInteract, CallFunc_GetNextArmorUpgrade_IsMaxedOut) == 0x000009, "Member 'BP_HordeUpgradeVendorBase_C_CanHeldInteract::CallFunc_GetNextArmorUpgrade_IsMaxedOut' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_CanHeldInteract, CallFunc_GetNextArmorUpgrade_ArmorToEquip) == 0x000010, "Member 'BP_HordeUpgradeVendorBase_C_CanHeldInteract::CallFunc_GetNextArmorUpgrade_ArmorToEquip' has a wrong offset!");
static_assert(offsetof(BP_HordeUpgradeVendorBase_C_CanHeldInteract, CallFunc_CanAffordUpgrade_CanAfford) == 0x000040, "Member 'BP_HordeUpgradeVendorBase_C_CanHeldInteract::CallFunc_CanAffordUpgrade_CanAfford' has a wrong offset!");

}

