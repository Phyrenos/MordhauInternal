#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CasualRankWidget

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_CasualRankWidget.BP_CasualRankWidget_C
// 0x0050 (0x02B0 - 0x0260)
class UBP_CasualRankWidget_C final : public UUserWidget
{
public:
	class UBP_CasualRankDiamond_C*                BP_CurrentRankDiamond;                             // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CasualRankDiamond_C*                BP_NextRankDiamond;                                // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CurrentXPText;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NextXPText;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RemainingXPText;                                   // 0x0280(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_19;                                    // 0x0288(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           XPProgressBar;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         DisplayedXPProgress;                               // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DisplayedRemainingXP;                              // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NextRank;                                          // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Rank;                                      // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XPPercentage;                                      // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Update();
	float Get_XPProgressBar_Percent_0();
	class FText Get_RemainingXPText_Text_0();
	void UpdateRankProgress(int32 XP);
	class FText GetToolTipText_0();
	void UpdateFromSuppliedXP(int32 SuppliedXP);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CasualRankWidget_C">();
	}
	static class UBP_CasualRankWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CasualRankWidget_C>();
	}
};
static_assert(alignof(UBP_CasualRankWidget_C) == 0x000008, "Wrong alignment on UBP_CasualRankWidget_C");
static_assert(sizeof(UBP_CasualRankWidget_C) == 0x0002B0, "Wrong size on UBP_CasualRankWidget_C");
static_assert(offsetof(UBP_CasualRankWidget_C, BP_CurrentRankDiamond) == 0x000260, "Member 'UBP_CasualRankWidget_C::BP_CurrentRankDiamond' has a wrong offset!");
static_assert(offsetof(UBP_CasualRankWidget_C, BP_NextRankDiamond) == 0x000268, "Member 'UBP_CasualRankWidget_C::BP_NextRankDiamond' has a wrong offset!");
static_assert(offsetof(UBP_CasualRankWidget_C, CurrentXPText) == 0x000270, "Member 'UBP_CasualRankWidget_C::CurrentXPText' has a wrong offset!");
static_assert(offsetof(UBP_CasualRankWidget_C, NextXPText) == 0x000278, "Member 'UBP_CasualRankWidget_C::NextXPText' has a wrong offset!");
static_assert(offsetof(UBP_CasualRankWidget_C, RemainingXPText) == 0x000280, "Member 'UBP_CasualRankWidget_C::RemainingXPText' has a wrong offset!");
static_assert(offsetof(UBP_CasualRankWidget_C, VerticalBox_19) == 0x000288, "Member 'UBP_CasualRankWidget_C::VerticalBox_19' has a wrong offset!");
static_assert(offsetof(UBP_CasualRankWidget_C, XPProgressBar) == 0x000290, "Member 'UBP_CasualRankWidget_C::XPProgressBar' has a wrong offset!");
static_assert(offsetof(UBP_CasualRankWidget_C, DisplayedXPProgress) == 0x000298, "Member 'UBP_CasualRankWidget_C::DisplayedXPProgress' has a wrong offset!");
static_assert(offsetof(UBP_CasualRankWidget_C, DisplayedRemainingXP) == 0x00029C, "Member 'UBP_CasualRankWidget_C::DisplayedRemainingXP' has a wrong offset!");
static_assert(offsetof(UBP_CasualRankWidget_C, NextRank) == 0x0002A0, "Member 'UBP_CasualRankWidget_C::NextRank' has a wrong offset!");
static_assert(offsetof(UBP_CasualRankWidget_C, Current_Rank) == 0x0002A4, "Member 'UBP_CasualRankWidget_C::Current_Rank' has a wrong offset!");
static_assert(offsetof(UBP_CasualRankWidget_C, XPPercentage) == 0x0002A8, "Member 'UBP_CasualRankWidget_C::XPPercentage' has a wrong offset!");

}

