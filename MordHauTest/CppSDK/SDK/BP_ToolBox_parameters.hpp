#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ToolBox

#include "Basic.hpp"

#include "Mordhau_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ToolBox.BP_ToolBox_C.ExecuteUbergraph_BP_ToolBox
// 0x0198 (0x0198 - 0x0000)
struct BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_CustomEvent_ObjectType;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_CustomEvent_AttachTo;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetAmmo_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ValidateSpotWithBuildingSystem_Succeeded; // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ValidateSpotWithBuildingSystem_Location;  // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ValidateSpotWithBuildingSystem_Rotation;  // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_ValidateSpotWithBuildingSystem_AttachToComponent; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEquipmentAmmoCost_ReturnValue;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F[0x1];                                       // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_PC;                                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetParentCharacter_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauPlayerController_C*          K2Node_DynamicCast_AsBP_Mordhau_Player_Controller; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetParentCharacter_ReturnValue_1;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00B4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauPlayerController_C*          K2Node_DynamicCast_AsBP_Mordhau_Player_Controller_1; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FrontlineGameState_C*               K2Node_DynamicCast_AsBP_Frontline_Game_State;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnableObjectInfo                   CallFunc_Array_Get_Item;                           // 0x00F8(0x0098)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox) == 0x000008, "Wrong alignment on BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox");
static_assert(sizeof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox) == 0x000198, "Wrong size on BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, EntryPoint) == 0x000000, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, K2Node_Event_DeltaTime) == 0x000004, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, K2Node_CustomEvent_Location) == 0x000008, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, K2Node_CustomEvent_Rotation) == 0x000014, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, K2Node_CustomEvent_ObjectType) == 0x000020, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::K2Node_CustomEvent_ObjectType' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, K2Node_CustomEvent_AttachTo) == 0x000028, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::K2Node_CustomEvent_AttachTo' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_GetTimeSeconds_ReturnValue) == 0x000030, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_GetAmmo_ReturnValue) == 0x000034, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_GetAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000035, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_ValidateSpotWithBuildingSystem_Succeeded) == 0x000036, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_ValidateSpotWithBuildingSystem_Succeeded' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_ValidateSpotWithBuildingSystem_Location) == 0x000038, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_ValidateSpotWithBuildingSystem_Location' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_ValidateSpotWithBuildingSystem_Rotation) == 0x000044, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_ValidateSpotWithBuildingSystem_Rotation' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_ValidateSpotWithBuildingSystem_AttachToComponent) == 0x000050, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_ValidateSpotWithBuildingSystem_AttachToComponent' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_GetEquipmentAmmoCost_ReturnValue) == 0x000058, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_GetEquipmentAmmoCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_Conv_IntToByte_ReturnValue) == 0x00005C, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_Less_ByteByte_ReturnValue) == 0x00005D, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_BooleanOR_ReturnValue) == 0x00005E, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, K2Node_Event_PC) == 0x000060, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::K2Node_Event_PC' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_GetOwner_ReturnValue) == 0x000068, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_GetViewTarget_ReturnValue) == 0x000070, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000078, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_GetParentCharacter_ReturnValue) == 0x000080, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_GetParentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_GetController_ReturnValue) == 0x000090, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, K2Node_DynamicCast_AsBP_Mordhau_Player_Controller) == 0x000098, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::K2Node_DynamicCast_AsBP_Mordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_GetParentCharacter_ReturnValue_1) == 0x0000A8, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_GetParentCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_IsValid_ReturnValue_1) == 0x0000B0, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, K2Node_CreateDelegate_OutputDelegate) == 0x0000B4, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_GetController_ReturnValue_1) == 0x0000C8, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, K2Node_DynamicCast_AsBP_Mordhau_Player_Controller_1) == 0x0000D0, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::K2Node_DynamicCast_AsBP_Mordhau_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_GetGameState_ReturnValue) == 0x0000E0, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, K2Node_DynamicCast_AsBP_Frontline_Game_State) == 0x0000E8, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::K2Node_DynamicCast_AsBP_Frontline_Game_State' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, K2Node_DynamicCast_bSuccess_2) == 0x0000F0, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000190, "Member 'BP_ToolBox_C_ExecuteUbergraph_BP_ToolBox::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function BP_ToolBox.BP_ToolBox_C.K2_OnBecomeViewTarget
// 0x0008 (0x0008 - 0x0000)
struct BP_ToolBox_C_K2_OnBecomeViewTarget final
{
public:
	class APlayerController*                      PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ToolBox_C_K2_OnBecomeViewTarget) == 0x000008, "Wrong alignment on BP_ToolBox_C_K2_OnBecomeViewTarget");
static_assert(sizeof(BP_ToolBox_C_K2_OnBecomeViewTarget) == 0x000008, "Wrong size on BP_ToolBox_C_K2_OnBecomeViewTarget");
static_assert(offsetof(BP_ToolBox_C_K2_OnBecomeViewTarget, PC) == 0x000000, "Member 'BP_ToolBox_C_K2_OnBecomeViewTarget::PC' has a wrong offset!");

// Function BP_ToolBox.BP_ToolBox_C.ServerRequestPlant
// 0x0028 (0x0028 - 0x0000)
struct BP_ToolBox_C_ServerRequestPlant final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         ObjectType_0;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        AttachTo;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ToolBox_C_ServerRequestPlant) == 0x000008, "Wrong alignment on BP_ToolBox_C_ServerRequestPlant");
static_assert(sizeof(BP_ToolBox_C_ServerRequestPlant) == 0x000028, "Wrong size on BP_ToolBox_C_ServerRequestPlant");
static_assert(offsetof(BP_ToolBox_C_ServerRequestPlant, Location) == 0x000000, "Member 'BP_ToolBox_C_ServerRequestPlant::Location' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ServerRequestPlant, Rotation) == 0x00000C, "Member 'BP_ToolBox_C_ServerRequestPlant::Rotation' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ServerRequestPlant, ObjectType_0) == 0x000018, "Member 'BP_ToolBox_C_ServerRequestPlant::ObjectType_0' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ServerRequestPlant, AttachTo) == 0x000020, "Member 'BP_ToolBox_C_ServerRequestPlant::AttachTo' has a wrong offset!");

// Function BP_ToolBox.BP_ToolBox_C.LocalPlayerLateTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ToolBox_C_LocalPlayerLateTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ToolBox_C_LocalPlayerLateTick) == 0x000004, "Wrong alignment on BP_ToolBox_C_LocalPlayerLateTick");
static_assert(sizeof(BP_ToolBox_C_LocalPlayerLateTick) == 0x000004, "Wrong size on BP_ToolBox_C_LocalPlayerLateTick");
static_assert(offsetof(BP_ToolBox_C_LocalPlayerLateTick, DeltaTime) == 0x000000, "Member 'BP_ToolBox_C_LocalPlayerLateTick::DeltaTime' has a wrong offset!");

// Function BP_ToolBox.BP_ToolBox_C.OnRequestFire
// 0x00D0 (0x00D0 - 0x0000)
struct BP_ToolBox_C_OnRequestFire final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ValidateSpotWithBuildingSystem_Succeeded; // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ValidateSpotWithBuildingSystem_Location;  // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ValidateSpotWithBuildingSystem_Rotation;  // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_ValidateSpotWithBuildingSystem_AttachToComponent; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetAmmo_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0xF];                                       // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_InverseTransformRotation_ReturnValue;     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ToolBox_C_OnRequestFire) == 0x000010, "Wrong alignment on BP_ToolBox_C_OnRequestFire");
static_assert(sizeof(BP_ToolBox_C_OnRequestFire) == 0x0000D0, "Wrong size on BP_ToolBox_C_OnRequestFire");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, Character) == 0x000000, "Member 'BP_ToolBox_C_OnRequestFire::Character' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, ReturnValue) == 0x000008, "Member 'BP_ToolBox_C_OnRequestFire::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_ValidateSpotWithBuildingSystem_Succeeded) == 0x00000A, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_ValidateSpotWithBuildingSystem_Succeeded' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_ValidateSpotWithBuildingSystem_Location) == 0x00000C, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_ValidateSpotWithBuildingSystem_Location' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_ValidateSpotWithBuildingSystem_Rotation) == 0x000018, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_ValidateSpotWithBuildingSystem_Rotation' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_ValidateSpotWithBuildingSystem_AttachToComponent) == 0x000028, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_ValidateSpotWithBuildingSystem_AttachToComponent' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_GetAmmo_ReturnValue) == 0x000030, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_GetAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000040, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_GetTimeSeconds_ReturnValue) == 0x000070, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_Add_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000078, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_ComposeRotators_ReturnValue) == 0x00007C, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_InverseTransformRotation_ReturnValue) == 0x000088, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_InverseTransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000094, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x0000A0, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A4, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_InverseTransformLocation_ReturnValue) == 0x0000B4, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_BooleanAND_ReturnValue) == 0x0000C0, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestFire, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000C1, "Member 'BP_ToolBox_C_OnRequestFire::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");

// Function BP_ToolBox.BP_ToolBox_C.OnRequestModeSwitch
// 0x0010 (0x0010 - 0x0000)
struct BP_ToolBox_C_OnRequestModeSwitch final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ToolBox_C_OnRequestModeSwitch) == 0x000008, "Wrong alignment on BP_ToolBox_C_OnRequestModeSwitch");
static_assert(sizeof(BP_ToolBox_C_OnRequestModeSwitch) == 0x000010, "Wrong size on BP_ToolBox_C_OnRequestModeSwitch");
static_assert(offsetof(BP_ToolBox_C_OnRequestModeSwitch, Character) == 0x000000, "Member 'BP_ToolBox_C_OnRequestModeSwitch::Character' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_OnRequestModeSwitch, ReturnValue) == 0x000008, "Member 'BP_ToolBox_C_OnRequestModeSwitch::ReturnValue' has a wrong offset!");

// Function BP_ToolBox.BP_ToolBox_C.RequestPlant
// 0x0220 (0x0220 - 0x0000)
struct BP_ToolBox_C_RequestPlant final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         ObjectType_0;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        AttachTo;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WantsAttach;                                       // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauProjectile*                     K2Node_DynamicCast_AsMordhau_Projectile;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauEquipment*                      K2Node_DynamicCast_AsMordhau_Equipment;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULandscapeHeightfieldCollisionComponent* K2Node_DynamicCast_AsLandscape_Heightfield_Collision_Component; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULandscapeMeshCollisionComponent*       K2Node_DynamicCast_AsLandscape_Mesh_Collision_Component; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0xE];                                       // 0x0082(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_TransformRotation_ReturnValue;            // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0120(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AMordhauCharacter*                      CallFunc_GetParentCharacter_ReturnValue;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetAmmo_ReturnValue;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauPlayerController_C*          K2Node_DynamicCast_AsBP_Mordhau_Player_Controller; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerState*                    K2Node_DynamicCast_AsMordhau_Player_State;         // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AActor*                                 CallFunc_PlaceInPlaceableArray_RemovedActor;       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BuildableComponent_C*               CallFunc_AddComponent_ReturnValue;                 // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BuildableComponent_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAdvancedCharacter*                     K2Node_DynamicCast_AsAdvanced_Character;           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauVehicleComponent*               CallFunc_GetComponentByClass_ReturnValue_1;        // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DestroyableActor_C*                 K2Node_DynamicCast_AsBP_Destroyable_Actor;         // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DestroyableDeploySpikeWall_C*       K2Node_DynamicCast_AsBP_Destroyable_Deploy_Spike_Wall; // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ToolBox_C_RequestPlant) == 0x000010, "Wrong alignment on BP_ToolBox_C_RequestPlant");
static_assert(sizeof(BP_ToolBox_C_RequestPlant) == 0x000220, "Wrong size on BP_ToolBox_C_RequestPlant");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, Location) == 0x000000, "Member 'BP_ToolBox_C_RequestPlant::Location' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, Rotation) == 0x00000C, "Member 'BP_ToolBox_C_RequestPlant::Rotation' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, ObjectType_0) == 0x000018, "Member 'BP_ToolBox_C_RequestPlant::ObjectType_0' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, AttachTo) == 0x000020, "Member 'BP_ToolBox_C_RequestPlant::AttachTo' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, WantsAttach) == 0x000028, "Member 'BP_ToolBox_C_RequestPlant::WantsAttach' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_AsMordhau_Projectile) == 0x000038, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_AsMordhau_Projectile' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_AsPawn) == 0x000048, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_Not_PreBool_ReturnValue_1) == 0x000052, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_AsMordhau_Equipment) == 0x000058, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_AsMordhau_Equipment' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_AsLandscape_Heightfield_Collision_Component) == 0x000068, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_AsLandscape_Heightfield_Collision_Component' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_Not_PreBool_ReturnValue_2) == 0x000071, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_AsLandscape_Mesh_Collision_Component) == 0x000078, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_AsLandscape_Mesh_Collision_Component' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_bSuccess_4) == 0x000080, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000090, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C0, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_TransformRotation_ReturnValue) == 0x0000C4, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_TransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_TransformLocation_ReturnValue) == 0x0000D0, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000DC, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000110, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_Not_PreBool_ReturnValue_3) == 0x000111, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000114, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, Temp_struct_Variable) == 0x000120, "Member 'BP_ToolBox_C_RequestPlant::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_GetParentCharacter_ReturnValue) == 0x000150, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_GetParentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_GetAmmo_ReturnValue) == 0x000158, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_GetAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_IsValid_ReturnValue_1) == 0x000159, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x00015C, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000160, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_Subtract_IntInt_ReturnValue) == 0x000164, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_Conv_IntToByte_ReturnValue) == 0x000168, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00016C, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000178, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_GetController_ReturnValue) == 0x000180, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_AsBP_Mordhau_Player_Controller) == 0x000188, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_AsBP_Mordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_bSuccess_5) == 0x000190, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000198, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_AsMordhau_Player_State) == 0x0001A0, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_AsMordhau_Player_State' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_bSuccess_6) == 0x0001A8, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001B0, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_PlaceInPlaceableArray_RemovedActor) == 0x0001B8, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_PlaceInPlaceableArray_RemovedActor' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_AddComponent_ReturnValue) == 0x0001C0, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_IsValid_ReturnValue_2) == 0x0001C8, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_GetComponentByClass_ReturnValue) == 0x0001D0, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_IsValid_ReturnValue_3) == 0x0001D8, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_AsAdvanced_Character) == 0x0001E0, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_AsAdvanced_Character' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_bSuccess_7) == 0x0001E8, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0001F0, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_IsValid_ReturnValue_4) == 0x0001F8, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_AsBP_Destroyable_Actor) == 0x000200, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_AsBP_Destroyable_Actor' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_bSuccess_8) == 0x000208, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_AsBP_Destroyable_Deploy_Spike_Wall) == 0x000210, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_AsBP_Destroyable_Deploy_Spike_Wall' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, K2Node_DynamicCast_bSuccess_9) == 0x000218, "Member 'BP_ToolBox_C_RequestPlant::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_RequestPlant, CallFunc_IsValid_ReturnValue_5) == 0x000219, "Member 'BP_ToolBox_C_RequestPlant::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

// Function BP_ToolBox.BP_ToolBox_C.AddSkeletalMeshPreviewIfNone
// 0x0060 (0x0060 - 0x0000)
struct BP_ToolBox_C_AddSkeletalMeshPreviewIfNone final
{
public:
	class USkeletalMesh*                          SkeletalMesh;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                 CallFunc_AddComponent_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ToolBox_C_AddSkeletalMeshPreviewIfNone) == 0x000010, "Wrong alignment on BP_ToolBox_C_AddSkeletalMeshPreviewIfNone");
static_assert(sizeof(BP_ToolBox_C_AddSkeletalMeshPreviewIfNone) == 0x000060, "Wrong size on BP_ToolBox_C_AddSkeletalMeshPreviewIfNone");
static_assert(offsetof(BP_ToolBox_C_AddSkeletalMeshPreviewIfNone, SkeletalMesh) == 0x000000, "Member 'BP_ToolBox_C_AddSkeletalMeshPreviewIfNone::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_AddSkeletalMeshPreviewIfNone, Temp_struct_Variable) == 0x000010, "Member 'BP_ToolBox_C_AddSkeletalMeshPreviewIfNone::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_AddSkeletalMeshPreviewIfNone, CallFunc_AddComponent_ReturnValue) == 0x000040, "Member 'BP_ToolBox_C_AddSkeletalMeshPreviewIfNone::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_AddSkeletalMeshPreviewIfNone, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000048, "Member 'BP_ToolBox_C_AddSkeletalMeshPreviewIfNone::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_AddSkeletalMeshPreviewIfNone, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_ToolBox_C_AddSkeletalMeshPreviewIfNone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_AddSkeletalMeshPreviewIfNone, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000051, "Member 'BP_ToolBox_C_AddSkeletalMeshPreviewIfNone::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_ToolBox.BP_ToolBox_C.AddStaticMeshPreviewIfNone
// 0x0060 (0x0060 - 0x0000)
struct BP_ToolBox_C_AddStaticMeshPreviewIfNone final
{
public:
	class UStaticMesh*                            StaticMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ToolBox_C_AddStaticMeshPreviewIfNone) == 0x000010, "Wrong alignment on BP_ToolBox_C_AddStaticMeshPreviewIfNone");
static_assert(sizeof(BP_ToolBox_C_AddStaticMeshPreviewIfNone) == 0x000060, "Wrong size on BP_ToolBox_C_AddStaticMeshPreviewIfNone");
static_assert(offsetof(BP_ToolBox_C_AddStaticMeshPreviewIfNone, StaticMesh) == 0x000000, "Member 'BP_ToolBox_C_AddStaticMeshPreviewIfNone::StaticMesh' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_AddStaticMeshPreviewIfNone, Temp_struct_Variable) == 0x000010, "Member 'BP_ToolBox_C_AddStaticMeshPreviewIfNone::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_AddStaticMeshPreviewIfNone, CallFunc_AddComponent_ReturnValue) == 0x000040, "Member 'BP_ToolBox_C_AddStaticMeshPreviewIfNone::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_AddStaticMeshPreviewIfNone, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000048, "Member 'BP_ToolBox_C_AddStaticMeshPreviewIfNone::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_AddStaticMeshPreviewIfNone, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_ToolBox_C_AddStaticMeshPreviewIfNone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_AddStaticMeshPreviewIfNone, CallFunc_SetStaticMesh_ReturnValue) == 0x000051, "Member 'BP_ToolBox_C_AddStaticMeshPreviewIfNone::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_AddStaticMeshPreviewIfNone, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000052, "Member 'BP_ToolBox_C_AddStaticMeshPreviewIfNone::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_ToolBox.BP_ToolBox_C.DestroyMeshPreview
// 0x0002 (0x0002 - 0x0000)
struct BP_ToolBox_C_DestroyMeshPreview final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ToolBox_C_DestroyMeshPreview) == 0x000001, "Wrong alignment on BP_ToolBox_C_DestroyMeshPreview");
static_assert(sizeof(BP_ToolBox_C_DestroyMeshPreview) == 0x000002, "Wrong size on BP_ToolBox_C_DestroyMeshPreview");
static_assert(offsetof(BP_ToolBox_C_DestroyMeshPreview, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_ToolBox_C_DestroyMeshPreview::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_DestroyMeshPreview, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_ToolBox_C_DestroyMeshPreview::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_ToolBox.BP_ToolBox_C.SetupMeshPreview
// 0x0028 (0x0028 - 0x0000)
struct BP_ToolBox_C_SetupMeshPreview final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ToolBox_C_SetupMeshPreview) == 0x000008, "Wrong alignment on BP_ToolBox_C_SetupMeshPreview");
static_assert(sizeof(BP_ToolBox_C_SetupMeshPreview) == 0x000028, "Wrong size on BP_ToolBox_C_SetupMeshPreview");
static_assert(offsetof(BP_ToolBox_C_SetupMeshPreview, Temp_int_Variable) == 0x000000, "Member 'BP_ToolBox_C_SetupMeshPreview::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_SetupMeshPreview, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_ToolBox_C_SetupMeshPreview::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_SetupMeshPreview, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_ToolBox_C_SetupMeshPreview::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_SetupMeshPreview, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_ToolBox_C_SetupMeshPreview::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_SetupMeshPreview, CallFunc_GetNumMaterials_ReturnValue) == 0x000018, "Member 'BP_ToolBox_C_SetupMeshPreview::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_SetupMeshPreview, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_ToolBox_C_SetupMeshPreview::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_SetupMeshPreview, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_ToolBox_C_SetupMeshPreview::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ToolBox.BP_ToolBox_C.CycleObjectType
// 0x0024 (0x0024 - 0x0000)
struct BP_ToolBox_C_CycleObjectType final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetAmmo_ReturnValue;                      // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_ByteByte_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ToolBox_C_CycleObjectType) == 0x000004, "Wrong alignment on BP_ToolBox_C_CycleObjectType");
static_assert(sizeof(BP_ToolBox_C_CycleObjectType) == 0x000024, "Wrong size on BP_ToolBox_C_CycleObjectType");
static_assert(offsetof(BP_ToolBox_C_CycleObjectType, Temp_bool_Variable) == 0x000000, "Member 'BP_ToolBox_C_CycleObjectType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_CycleObjectType, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_ToolBox_C_CycleObjectType::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_CycleObjectType, Temp_int_Variable) == 0x000004, "Member 'BP_ToolBox_C_CycleObjectType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_CycleObjectType, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_ToolBox_C_CycleObjectType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_CycleObjectType, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ToolBox_C_CycleObjectType::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_CycleObjectType, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_ToolBox_C_CycleObjectType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_CycleObjectType, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_ToolBox_C_CycleObjectType::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_CycleObjectType, CallFunc_BooleanAND_ReturnValue) == 0x000015, "Member 'BP_ToolBox_C_CycleObjectType::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_CycleObjectType, CallFunc_GetAmmo_ReturnValue) == 0x000016, "Member 'BP_ToolBox_C_CycleObjectType::CallFunc_GetAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_CycleObjectType, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_ToolBox_C_CycleObjectType::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_CycleObjectType, CallFunc_Percent_IntInt_ReturnValue) == 0x00001C, "Member 'BP_ToolBox_C_CycleObjectType::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_CycleObjectType, CallFunc_LessEqual_ByteByte_ReturnValue) == 0x000020, "Member 'BP_ToolBox_C_CycleObjectType::CallFunc_LessEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_ToolBox.BP_ToolBox_C.ValidateSpotWithBuildingSystem
// 0x0130 (0x0130 - 0x0000)
struct BP_ToolBox_C_ValidateSpotWithBuildingSystem final
{
public:
	struct FVector                                Offset;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisplayObjectPreview;                              // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Succeeded;                                         // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x001C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        AttachToComponent;                                 // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ValidateSpot_OutLocation;                 // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ValidateSpot_OutRotation;                 // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_ValidateSpot_AttachToComponent;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBuildableTraceBase*                    CallFunc_ValidateSpot_BuildableTraceHit;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateSpot_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ValidateDeployableSpawnConditions_Result; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnableObjectInfo                   CallFunc_Array_Get_Item;                           // 0x0068(0x0098)(NoDestructor)
	struct FVector                                CallFunc_ValidateSpot_OutLocation_1;               // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ValidateSpot_OutRotation_1;               // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_ValidateSpot_AttachToComponent_1;         // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBuildableTraceBase*                    CallFunc_ValidateSpot_BuildableTraceHit_1;         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateSpot_ReturnValue_1;               // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ToolBox_C_ValidateSpotWithBuildingSystem) == 0x000008, "Wrong alignment on BP_ToolBox_C_ValidateSpotWithBuildingSystem");
static_assert(sizeof(BP_ToolBox_C_ValidateSpotWithBuildingSystem) == 0x000130, "Wrong size on BP_ToolBox_C_ValidateSpotWithBuildingSystem");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, Offset) == 0x000000, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::Offset' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, DisplayObjectPreview) == 0x00000C, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::DisplayObjectPreview' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, Succeeded) == 0x00000D, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::Succeeded' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, Location) == 0x000010, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::Location' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, Rotation) == 0x00001C, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::Rotation' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, AttachToComponent) == 0x000028, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::AttachToComponent' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, CallFunc_ValidateSpot_OutLocation) == 0x000030, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::CallFunc_ValidateSpot_OutLocation' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, CallFunc_ValidateSpot_OutRotation) == 0x00003C, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::CallFunc_ValidateSpot_OutRotation' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, CallFunc_ValidateSpot_AttachToComponent) == 0x000048, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::CallFunc_ValidateSpot_AttachToComponent' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, CallFunc_ValidateSpot_BuildableTraceHit) == 0x000050, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::CallFunc_ValidateSpot_BuildableTraceHit' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, CallFunc_ValidateSpot_ReturnValue) == 0x000058, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::CallFunc_ValidateSpot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, CallFunc_ValidateDeployableSpawnConditions_Result) == 0x00005C, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::CallFunc_ValidateDeployableSpawnConditions_Result' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, K2Node_SwitchInteger_CmpSuccess) == 0x000061, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, CallFunc_ValidateSpot_OutLocation_1) == 0x000100, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::CallFunc_ValidateSpot_OutLocation_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, CallFunc_ValidateSpot_OutRotation_1) == 0x00010C, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::CallFunc_ValidateSpot_OutRotation_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, CallFunc_ValidateSpot_AttachToComponent_1) == 0x000118, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::CallFunc_ValidateSpot_AttachToComponent_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, CallFunc_ValidateSpot_BuildableTraceHit_1) == 0x000120, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::CallFunc_ValidateSpot_BuildableTraceHit_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, CallFunc_ValidateSpot_ReturnValue_1) == 0x000128, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::CallFunc_ValidateSpot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000129, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateSpotWithBuildingSystem, CallFunc_IsValid_ReturnValue) == 0x00012A, "Member 'BP_ToolBox_C_ValidateSpotWithBuildingSystem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ToolBox.BP_ToolBox_C.GetAmountOfPlacedEquipment
// 0x0038 (0x0038 - 0x0000)
struct BP_ToolBox_C_GetAmountOfPlacedEquipment final
{
public:
	class FName                                   PlaceableEquipmentName;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetParentCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauPlayerController_C*          K2Node_DynamicCast_AsBP_Mordhau_Player_Controller; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Map_Find_Value;                           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ToolBox_C_GetAmountOfPlacedEquipment) == 0x000008, "Wrong alignment on BP_ToolBox_C_GetAmountOfPlacedEquipment");
static_assert(sizeof(BP_ToolBox_C_GetAmountOfPlacedEquipment) == 0x000038, "Wrong size on BP_ToolBox_C_GetAmountOfPlacedEquipment");
static_assert(offsetof(BP_ToolBox_C_GetAmountOfPlacedEquipment, PlaceableEquipmentName) == 0x000000, "Member 'BP_ToolBox_C_GetAmountOfPlacedEquipment::PlaceableEquipmentName' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_GetAmountOfPlacedEquipment, Amount) == 0x000008, "Member 'BP_ToolBox_C_GetAmountOfPlacedEquipment::Amount' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_GetAmountOfPlacedEquipment, CallFunc_GetParentCharacter_ReturnValue) == 0x000010, "Member 'BP_ToolBox_C_GetAmountOfPlacedEquipment::CallFunc_GetParentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_GetAmountOfPlacedEquipment, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_ToolBox_C_GetAmountOfPlacedEquipment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_GetAmountOfPlacedEquipment, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'BP_ToolBox_C_GetAmountOfPlacedEquipment::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_GetAmountOfPlacedEquipment, K2Node_DynamicCast_AsBP_Mordhau_Player_Controller) == 0x000028, "Member 'BP_ToolBox_C_GetAmountOfPlacedEquipment::K2Node_DynamicCast_AsBP_Mordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_GetAmountOfPlacedEquipment, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_ToolBox_C_GetAmountOfPlacedEquipment::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_GetAmountOfPlacedEquipment, CallFunc_Map_Find_Value) == 0x000031, "Member 'BP_ToolBox_C_GetAmountOfPlacedEquipment::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_GetAmountOfPlacedEquipment, CallFunc_Map_Find_ReturnValue) == 0x000032, "Member 'BP_ToolBox_C_GetAmountOfPlacedEquipment::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_GetAmountOfPlacedEquipment, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000034, "Member 'BP_ToolBox_C_GetAmountOfPlacedEquipment::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BP_ToolBox.BP_ToolBox_C.UpdateEquipmentUI
// 0x0028 (0x0028 - 0x0000)
struct BP_ToolBox_C_UpdateEquipmentUI final
{
public:
	class UMordhauHUDWidgetComponent*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetHUDWidget_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAmountOfPlacedEquipment_Amount;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EquipmentWidget_C*                  K2Node_DynamicCast_AsBP_Equipment_Widget;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ToolBox_C_UpdateEquipmentUI) == 0x000008, "Wrong alignment on BP_ToolBox_C_UpdateEquipmentUI");
static_assert(sizeof(BP_ToolBox_C_UpdateEquipmentUI) == 0x000028, "Wrong size on BP_ToolBox_C_UpdateEquipmentUI");
static_assert(offsetof(BP_ToolBox_C_UpdateEquipmentUI, CallFunc_GetComponentByClass_ReturnValue) == 0x000000, "Member 'BP_ToolBox_C_UpdateEquipmentUI::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_UpdateEquipmentUI, CallFunc_GetHUDWidget_ReturnValue) == 0x000008, "Member 'BP_ToolBox_C_UpdateEquipmentUI::CallFunc_GetHUDWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_UpdateEquipmentUI, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_ToolBox_C_UpdateEquipmentUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_UpdateEquipmentUI, CallFunc_GetAmountOfPlacedEquipment_Amount) == 0x000014, "Member 'BP_ToolBox_C_UpdateEquipmentUI::CallFunc_GetAmountOfPlacedEquipment_Amount' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_UpdateEquipmentUI, K2Node_DynamicCast_AsBP_Equipment_Widget) == 0x000018, "Member 'BP_ToolBox_C_UpdateEquipmentUI::K2Node_DynamicCast_AsBP_Equipment_Widget' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_UpdateEquipmentUI, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_ToolBox_C_UpdateEquipmentUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_UpdateEquipmentUI, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000021, "Member 'BP_ToolBox_C_UpdateEquipmentUI::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_ToolBox.BP_ToolBox_C.OnShowWidget
// 0x0001 (0x0001 - 0x0000)
struct BP_ToolBox_C_OnShowWidget final
{
public:
	bool                                          CallFunc_ShowWidget_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ToolBox_C_OnShowWidget) == 0x000001, "Wrong alignment on BP_ToolBox_C_OnShowWidget");
static_assert(sizeof(BP_ToolBox_C_OnShowWidget) == 0x000001, "Wrong size on BP_ToolBox_C_OnShowWidget");
static_assert(offsetof(BP_ToolBox_C_OnShowWidget, CallFunc_ShowWidget_ReturnValue) == 0x000000, "Member 'BP_ToolBox_C_OnShowWidget::CallFunc_ShowWidget_ReturnValue' has a wrong offset!");

// Function BP_ToolBox.BP_ToolBox_C.Update Trace Text
// 0x00B8 (0x00B8 - 0x0000)
struct BP_ToolBox_C_Update_Trace_Text final
{
public:
	class FText                                   Trace_Placement_Text;                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IgnoreLastText;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Valid_Placement;                                   // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   New_Trace_Text;                                    // 0x0020(0x0018)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0040(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0060(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMordhauHUDWidgetComponent*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_TextText_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetHUDWidget_ReturnValue;                 // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EquipmentWidget_C*                  K2Node_DynamicCast_AsBP_Equipment_Widget;          // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ToolBox_C_Update_Trace_Text) == 0x000008, "Wrong alignment on BP_ToolBox_C_Update_Trace_Text");
static_assert(sizeof(BP_ToolBox_C_Update_Trace_Text) == 0x0000B8, "Wrong size on BP_ToolBox_C_Update_Trace_Text");
static_assert(offsetof(BP_ToolBox_C_Update_Trace_Text, Trace_Placement_Text) == 0x000000, "Member 'BP_ToolBox_C_Update_Trace_Text::Trace_Placement_Text' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_Update_Trace_Text, IgnoreLastText) == 0x000018, "Member 'BP_ToolBox_C_Update_Trace_Text::IgnoreLastText' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_Update_Trace_Text, Valid_Placement) == 0x000019, "Member 'BP_ToolBox_C_Update_Trace_Text::Valid_Placement' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_Update_Trace_Text, New_Trace_Text) == 0x000020, "Member 'BP_ToolBox_C_Update_Trace_Text::New_Trace_Text' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_Update_Trace_Text, Temp_bool_Variable) == 0x000038, "Member 'BP_ToolBox_C_Update_Trace_Text::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_Update_Trace_Text, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'BP_ToolBox_C_Update_Trace_Text::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_Update_Trace_Text, CallFunc_TextIsEmpty_ReturnValue) == 0x00003A, "Member 'BP_ToolBox_C_Update_Trace_Text::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_Update_Trace_Text, Temp_text_Variable) == 0x000040, "Member 'BP_ToolBox_C_Update_Trace_Text::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_Update_Trace_Text, CallFunc_BooleanAND_ReturnValue) == 0x000058, "Member 'BP_ToolBox_C_Update_Trace_Text::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_Update_Trace_Text, K2Node_Select_Default) == 0x000060, "Member 'BP_ToolBox_C_Update_Trace_Text::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_Update_Trace_Text, CallFunc_Conv_TextToString_ReturnValue) == 0x000078, "Member 'BP_ToolBox_C_Update_Trace_Text::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_Update_Trace_Text, CallFunc_GetComponentByClass_ReturnValue) == 0x000088, "Member 'BP_ToolBox_C_Update_Trace_Text::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_Update_Trace_Text, CallFunc_NotEqual_TextText_ReturnValue) == 0x000090, "Member 'BP_ToolBox_C_Update_Trace_Text::CallFunc_NotEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_Update_Trace_Text, CallFunc_GetHUDWidget_ReturnValue) == 0x000098, "Member 'BP_ToolBox_C_Update_Trace_Text::CallFunc_GetHUDWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_Update_Trace_Text, CallFunc_BooleanOR_ReturnValue) == 0x0000A0, "Member 'BP_ToolBox_C_Update_Trace_Text::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_Update_Trace_Text, CallFunc_IsValid_ReturnValue) == 0x0000A1, "Member 'BP_ToolBox_C_Update_Trace_Text::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_Update_Trace_Text, K2Node_DynamicCast_AsBP_Equipment_Widget) == 0x0000A8, "Member 'BP_ToolBox_C_Update_Trace_Text::K2Node_DynamicCast_AsBP_Equipment_Widget' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_Update_Trace_Text, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_ToolBox_C_Update_Trace_Text::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_ToolBox.BP_ToolBox_C.ValidateDeployableSpawnConditions
// 0x0140 (0x0140 - 0x0000)
struct BP_ToolBox_C_ValidateDeployableSpawnConditions final
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OurTeam;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FoundSpawns;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0020(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Vector_One_ReturnValue;                   // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0070(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_BoxOverlapActors_OutActors;               // 0x0098(0x0010)(ReferenceParm)
	bool                                          CallFunc_BoxOverlapActors_ReturnValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetParentCharacter_ReturnValue;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_BoxOverlapActors_OutActors_1;             // 0x00D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_BoxOverlapActors_ReturnValue_1;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerState*                    K2Node_DynamicCast_AsMordhau_Player_State;         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FrontlineGameState_C*               K2Node_DynamicCast_AsBP_Frontline_Game_State;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DeployableSpawn_C*                  CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ToolBox_C_ValidateDeployableSpawnConditions) == 0x000008, "Wrong alignment on BP_ToolBox_C_ValidateDeployableSpawnConditions");
static_assert(sizeof(BP_ToolBox_C_ValidateDeployableSpawnConditions) == 0x000140, "Wrong size on BP_ToolBox_C_ValidateDeployableSpawnConditions");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, Result) == 0x000000, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::Result' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, OurTeam) == 0x000004, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::OurTeam' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, FoundSpawns) == 0x000008, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::FoundSpawns' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, Temp_object_Variable) == 0x000010, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, Temp_object_Variable_1) == 0x000020, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, K2Node_MakeArray_Array) == 0x000050, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_Vector_One_ReturnValue) == 0x000060, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_Vector_One_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, K2Node_MakeArray_Array_1) == 0x000070, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000080, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00008C, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_BoxOverlapActors_OutActors) == 0x000098, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_BoxOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_BoxOverlapActors_ReturnValue) == 0x0000A8, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_BoxOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_GetParentCharacter_ReturnValue) == 0x0000B0, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_GetParentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_IsValid_ReturnValue) == 0x0000BC, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000C0, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_GetController_ReturnValue) == 0x0000D0, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_BoxOverlapActors_OutActors_1) == 0x0000D8, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_BoxOverlapActors_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_BoxOverlapActors_ReturnValue_1) == 0x0000E8, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_BoxOverlapActors_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_IsValid_ReturnValue_1) == 0x0000E9, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, K2Node_DynamicCast_AsMordhau_Player_State) == 0x0000F0, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::K2Node_DynamicCast_AsMordhau_Player_State' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_GetGameState_ReturnValue) == 0x000100, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, K2Node_DynamicCast_AsBP_Frontline_Game_State) == 0x000108, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::K2Node_DynamicCast_AsBP_Frontline_Game_State' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, K2Node_DynamicCast_bSuccess_1) == 0x000110, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_Conv_IntToByte_ReturnValue) == 0x000111, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_Array_Get_Item) == 0x000118, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_GetDistanceTo_ReturnValue) == 0x000124, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_Less_IntInt_ReturnValue) == 0x000128, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_Less_FloatFloat_ReturnValue) == 0x000129, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_GetOwner_ReturnValue) == 0x000130, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000138, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ToolBox_C_ValidateDeployableSpawnConditions, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000139, "Member 'BP_ToolBox_C_ValidateDeployableSpawnConditions::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

}

