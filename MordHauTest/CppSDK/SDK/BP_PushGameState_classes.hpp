#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PushGameState

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_FrontlineGameState_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PushGameState.BP_PushGameState_C
// 0x0020 (0x0930 - 0x0910)
class ABP_PushGameState_C final : public ABP_FrontlineGameState_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PushGameState_C;                 // 0x0910(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	float                                         ForwardSpawnUntil;                                 // 0x0918(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91C[0x4];                                      // 0x091C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 TimeLeftPerCompletedStage;                         // 0x0920(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_PushGameState(int32 EntryPoint);
	void GetScoreboardTeamObjectiveValue(int32 Team, class FString* Output);
	void GetScoreboardObjectiveName(class FText* NewParam);
	void GetScoreboardTimeInProgress(struct FTimespan* Time);
	void HandleMatchEndInfo();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PushGameState_C">();
	}
	static class ABP_PushGameState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PushGameState_C>();
	}
};
static_assert(alignof(ABP_PushGameState_C) == 0x000008, "Wrong alignment on ABP_PushGameState_C");
static_assert(sizeof(ABP_PushGameState_C) == 0x000930, "Wrong size on ABP_PushGameState_C");
static_assert(offsetof(ABP_PushGameState_C, UberGraphFrame_BP_PushGameState_C) == 0x000910, "Member 'ABP_PushGameState_C::UberGraphFrame_BP_PushGameState_C' has a wrong offset!");
static_assert(offsetof(ABP_PushGameState_C, ForwardSpawnUntil) == 0x000918, "Member 'ABP_PushGameState_C::ForwardSpawnUntil' has a wrong offset!");
static_assert(offsetof(ABP_PushGameState_C, TimeLeftPerCompletedStage) == 0x000920, "Member 'ABP_PushGameState_C::TimeLeftPerCompletedStage' has a wrong offset!");

}

