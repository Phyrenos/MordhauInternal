#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WearableSelectionMenu

#include "Basic.hpp"

#include "BP_WearableSelectionMenu_classes.hpp"
#include "BP_WearableSelectionMenu_parameters.hpp"


namespace SDK
{

// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.ExecuteUbergraph_BP_WearableSelectionMenu
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WearableSelectionMenu_C::ExecuteUbergraph_BP_WearableSelectionMenu(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "ExecuteUbergraph_BP_WearableSelectionMenu");

	Params::BP_WearableSelectionMenu_C_ExecuteUbergraph_BP_WearableSelectionMenu Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.BndEvt__BP_WearableSelectionMenu_BP_ColorPatternWidget_K2Node_ComponentBoundEvent_5_Pattern Entry Clicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// int32                                   Pattern_Id                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WearableSelectionMenu_C::BndEvt__BP_WearableSelectionMenu_BP_ColorPatternWidget_K2Node_ComponentBoundEvent_5_Pattern_Entry_Clicked__DelegateSignature(int32 Pattern_Id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "BndEvt__BP_WearableSelectionMenu_BP_ColorPatternWidget_K2Node_ComponentBoundEvent_5_Pattern Entry Clicked__DelegateSignature");

	Params::BP_WearableSelectionMenu_C_BndEvt__BP_WearableSelectionMenu_BP_ColorPatternWidget_K2Node_ComponentBoundEvent_5_Pattern_Entry_Clicked__DelegateSignature Parms{};

	Parms.Pattern_Id = Pattern_Id;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.BndEvt__BP_WearableSelectionMenu_BP_PromptButton_PrevSlot_K2Node_ComponentBoundEvent_4_onClicked__DelegateSignature
// (BlueprintEvent)

void UBP_WearableSelectionMenu_C::BndEvt__BP_WearableSelectionMenu_BP_PromptButton_PrevSlot_K2Node_ComponentBoundEvent_4_onClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "BndEvt__BP_WearableSelectionMenu_BP_PromptButton_PrevSlot_K2Node_ComponentBoundEvent_4_onClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.BndEvt__BP_WearableSelectionMenu_BP_PromptButton_NextSlot_K2Node_ComponentBoundEvent_3_onClicked__DelegateSignature
// (BlueprintEvent)

void UBP_WearableSelectionMenu_C::BndEvt__BP_WearableSelectionMenu_BP_PromptButton_NextSlot_K2Node_ComponentBoundEvent_3_onClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "BndEvt__BP_WearableSelectionMenu_BP_PromptButton_NextSlot_K2Node_ComponentBoundEvent_3_onClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WearableSelectionMenu_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Tick");

	Params::BP_WearableSelectionMenu_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Tab Clicked 
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_ArmorTierFilterTab_C*         Tab                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WearableSelectionMenu_C::Tab_Clicked_(class UBP_ArmorTierFilterTab_C* Tab)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Tab Clicked ");

	Params::BP_WearableSelectionMenu_C_Tab_Clicked_ Parms{};

	Parms.Tab = Tab;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.BndEvt__BP_WearableSelectionMenu_BP_PromptButton_Back_K2Node_ComponentBoundEvent_1_onClicked__DelegateSignature
// (BlueprintEvent)

void UBP_WearableSelectionMenu_C::BndEvt__BP_WearableSelectionMenu_BP_PromptButton_Back_K2Node_ComponentBoundEvent_1_onClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "BndEvt__BP_WearableSelectionMenu_BP_PromptButton_Back_K2Node_ComponentBoundEvent_1_onClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Filter Data New
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPlayRefreshAnim                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_WearableSelectionMenu_C::Filter_Data_New(bool bPlayRefreshAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Filter Data New");

	Params::BP_WearableSelectionMenu_C_Filter_Data_New Parms{};

	Parms.bPlayRefreshAnim = bPlayRefreshAnim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Update Color and Pattern Widget
// (BlueprintCallable, BlueprintEvent)

void UBP_WearableSelectionMenu_C::Update_Color_and_Pattern_Widget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Update Color and Pattern Widget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_2_Color Entry Clicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// int32                                   Color_Slot                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WearableSelectionMenu_C::BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_2_Color_Entry_Clicked__DelegateSignature(int32 Color_Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_2_Color Entry Clicked__DelegateSignature");

	Params::BP_WearableSelectionMenu_C_BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_2_Color_Entry_Clicked__DelegateSignature Parms{};

	Parms.Color_Slot = Color_Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_0_PatternValueChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WearableSelectionMenu_C::BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_0_PatternValueChanged__DelegateSignature(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_0_PatternValueChanged__DelegateSignature");

	Params::BP_WearableSelectionMenu_C_BndEvt__BP_ColorPatternWidget_K2Node_ComponentBoundEvent_0_PatternValueChanged__DelegateSignature Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Update Armor Slot Wearable Text
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Armor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Slot_Name                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Wearable_Name                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_WearableSelectionMenu_C::Update_Armor_Slot_Wearable_Text(uint8 Armor_Class, const class FText& Slot_Name, const class FText& Wearable_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Update Armor Slot Wearable Text");

	Params::BP_WearableSelectionMenu_C_Update_Armor_Slot_Wearable_Text Parms{};

	Parms.Armor_Class = Armor_Class;
	Parms.Slot_Name = std::move(Slot_Name);
	Parms.Wearable_Name = std::move(Wearable_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_WearableSelectionMenu_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Set Layout 
// (BlueprintCallable, BlueprintEvent)

void UBP_WearableSelectionMenu_C::Set_Layout_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Set Layout ");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On Text Changed__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_WearableSelectionMenu_C::BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On_Text_Changed__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On Text Changed__DelegateSignature");

	Params::BP_WearableSelectionMenu_C_BndEvt__BP_SearchBar_K2Node_ComponentBoundEvent_7_On_Text_Changed__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Sort By Function Delegate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UBP_WearableData_C*>       Wearable_Data                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TDelegate<void(class UObject* ObjA, class UObject* ObjB, bool* RetVal)>Function_Delegate                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// TArray<class UBP_WearableData_C*>       New_Wearable_Data                                      (Parm, OutParm)

void UBP_WearableSelectionMenu_C::Sort_By_Function_Delegate(TArray<class UBP_WearableData_C*>& Wearable_Data, const TDelegate<void(class UObject* ObjA, class UObject* ObjB, bool* RetVal)>& Function_Delegate, TArray<class UBP_WearableData_C*>* New_Wearable_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Sort By Function Delegate");

	Params::BP_WearableSelectionMenu_C_Sort_By_Function_Delegate Parms{};

	Parms.Wearable_Data = std::move(Wearable_Data);
	Parms.Function_Delegate = Function_Delegate;

	UObject::ProcessEvent(Func, &Parms);

	Wearable_Data = std::move(Parms.Wearable_Data);

	if (New_Wearable_Data != nullptr)
		*New_Wearable_Data = std::move(Parms.New_Wearable_Data);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Sort By Armor Class Ascending
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Obj_A                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Obj_B                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret_Val                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_WearableSelectionMenu_C::Sort_By_Armor_Class_Ascending(class UObject* Obj_A, class UObject* Obj_B, bool* Ret_Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Sort By Armor Class Ascending");

	Params::BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Ascending Parms{};

	Parms.Obj_A = Obj_A;
	Parms.Obj_B = Obj_B;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret_Val != nullptr)
		*Ret_Val = Parms.Ret_Val;
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Sort By Armor Class Descending
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Obj_A                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Obj_B                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret_Val                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_WearableSelectionMenu_C::Sort_By_Armor_Class_Descending(class UObject* Obj_A, class UObject* Obj_B, bool* Ret_Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Sort By Armor Class Descending");

	Params::BP_WearableSelectionMenu_C_Sort_By_Armor_Class_Descending Parms{};

	Parms.Obj_A = Obj_A;
	Parms.Obj_B = Obj_B;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret_Val != nullptr)
		*Ret_Val = Parms.Ret_Val;
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Filter by Function Delegate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UBP_WearableData_C*>       Wearable_Data                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TDelegate<void(class UObject* Obj, bool* RetVal)>FuncDel                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// TArray<class UBP_WearableData_C*>       New_Wearable_Data                                      (Parm, OutParm)

void UBP_WearableSelectionMenu_C::Filter_by_Function_Delegate(TArray<class UBP_WearableData_C*>& Wearable_Data, const TDelegate<void(class UObject* Obj, bool* RetVal)>& FuncDel, TArray<class UBP_WearableData_C*>* New_Wearable_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Filter by Function Delegate");

	Params::BP_WearableSelectionMenu_C_Filter_by_Function_Delegate Parms{};

	Parms.Wearable_Data = std::move(Wearable_Data);
	Parms.FuncDel = FuncDel;

	UObject::ProcessEvent(Func, &Parms);

	Wearable_Data = std::move(Parms.Wearable_Data);

	if (New_Wearable_Data != nullptr)
		*New_Wearable_Data = std::move(Parms.New_Wearable_Data);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Filter Is Peasant Armor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Obj_A                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret_Val                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_WearableSelectionMenu_C::Filter_Is_Peasant_Armor(class UObject* Obj_A, bool* Ret_Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Filter Is Peasant Armor");

	Params::BP_WearableSelectionMenu_C_Filter_Is_Peasant_Armor Parms{};

	Parms.Obj_A = Obj_A;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret_Val != nullptr)
		*Ret_Val = Parms.Ret_Val;
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Filter by Armor Class
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Obj_A                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret_Val                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_WearableSelectionMenu_C::Filter_by_Armor_Class(class UObject* Obj_A, bool* Ret_Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Filter by Armor Class");

	Params::BP_WearableSelectionMenu_C_Filter_by_Armor_Class Parms{};

	Parms.Obj_A = Obj_A;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret_Val != nullptr)
		*Ret_Val = Parms.Ret_Val;
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Get Selected Entry Colors
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FS_ArmorySlotColorInfo>   Slot_Color_Info                                        (Parm, OutParm)
// TArray<int32>                           Pattern_Values                                         (Parm, OutParm)
// struct FPatternInfo                     Selected_Pattern                                       (Parm, OutParm, NoDestructor)

void UBP_WearableSelectionMenu_C::Get_Selected_Entry_Colors(TArray<struct FS_ArmorySlotColorInfo>* Slot_Color_Info, TArray<int32>* Pattern_Values, struct FPatternInfo* Selected_Pattern)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Get Selected Entry Colors");

	Params::BP_WearableSelectionMenu_C_Get_Selected_Entry_Colors Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Slot_Color_Info != nullptr)
		*Slot_Color_Info = std::move(Parms.Slot_Color_Info);

	if (Pattern_Values != nullptr)
		*Pattern_Values = std::move(Parms.Pattern_Values);

	if (Selected_Pattern != nullptr)
		*Selected_Pattern = std::move(Parms.Selected_Pattern);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Get_EntriesTitle_Text_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_WearableSelectionMenu_C::Get_EntriesTitle_Text_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Get_EntriesTitle_Text_0");

	Params::BP_WearableSelectionMenu_C_Get_EntriesTitle_Text_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Update Wearable Data
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FS_WearableData>          WearableUIData                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_WearableSelectionMenu_C::Update_Wearable_Data(TArray<struct FS_WearableData>& WearableUIData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Update Wearable Data");

	Params::BP_WearableSelectionMenu_C_Update_Wearable_Data Parms{};

	Parms.WearableUIData = std::move(WearableUIData);

	UObject::ProcessEvent(Func, &Parms);

	WearableUIData = std::move(Parms.WearableUIData);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Sort By Name Ascending
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Obj_A                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Obj_B                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret_Val                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_WearableSelectionMenu_C::Sort_By_Name_Ascending(class UObject* Obj_A, class UObject* Obj_B, bool* Ret_Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Sort By Name Ascending");

	Params::BP_WearableSelectionMenu_C_Sort_By_Name_Ascending Parms{};

	Parms.Obj_A = Obj_A;
	Parms.Obj_B = Obj_B;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret_Val != nullptr)
		*Ret_Val = Parms.Ret_Val;
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Sort By Name Descending
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Obj_A                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Obj_B                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret_Val                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_WearableSelectionMenu_C::Sort_By_Name_Descending(class UObject* Obj_A, class UObject* Obj_B, bool* Ret_Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Sort By Name Descending");

	Params::BP_WearableSelectionMenu_C_Sort_By_Name_Descending Parms{};

	Parms.Obj_A = Obj_A;
	Parms.Obj_B = Obj_B;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret_Val != nullptr)
		*Ret_Val = Parms.Ret_Val;
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Filter Wearable by Name
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Obj_A                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret_Val                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_WearableSelectionMenu_C::Filter_Wearable_by_Name(class UObject* Obj_A, bool* Ret_Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Filter Wearable by Name");

	Params::BP_WearableSelectionMenu_C_Filter_Wearable_by_Name Parms{};

	Parms.Obj_A = Obj_A;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret_Val != nullptr)
		*Ret_Val = Parms.Ret_Val;
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Convert Data Array to Object Array
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FS_WearableData>          Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UBP_WearableData_C*>       Wearable_UI_Data                                       (Parm, OutParm)

void UBP_WearableSelectionMenu_C::Convert_Data_Array_to_Object_Array(TArray<struct FS_WearableData>& Data, TArray<class UBP_WearableData_C*>* Wearable_UI_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Convert Data Array to Object Array");

	Params::BP_WearableSelectionMenu_C_Convert_Data_Array_to_Object_Array Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);

	Data = std::move(Parms.Data);

	if (Wearable_UI_Data != nullptr)
		*Wearable_UI_Data = std::move(Parms.Wearable_UI_Data);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Convert Object Array To Data Array
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UBP_WearableData_C*>       Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FS_WearableData>          Wearable_UI_Data                                       (Parm, OutParm)

void UBP_WearableSelectionMenu_C::Convert_Object_Array_To_Data_Array(TArray<class UBP_WearableData_C*>& Data, TArray<struct FS_WearableData>* Wearable_UI_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Convert Object Array To Data Array");

	Params::BP_WearableSelectionMenu_C_Convert_Object_Array_To_Data_Array Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);

	Data = std::move(Parms.Data);

	if (Wearable_UI_Data != nullptr)
		*Wearable_UI_Data = std::move(Parms.Wearable_UI_Data);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Initialize Data
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FS_WearableData>          Wearable_Data                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_WearableSelectionMenu_C::Initialize_Data(TArray<struct FS_WearableData>& Wearable_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Initialize Data");

	Params::BP_WearableSelectionMenu_C_Initialize_Data Parms{};

	Parms.Wearable_Data = std::move(Wearable_Data);

	UObject::ProcessEvent(Func, &Parms);

	Wearable_Data = std::move(Parms.Wearable_Data);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Select Tab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_ArmorTierFilterTab_C*         Tab                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Skip_Data_Update                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_WearableSelectionMenu_C::Select_Tab(class UBP_ArmorTierFilterTab_C* Tab, bool Skip_Data_Update)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Select Tab");

	Params::BP_WearableSelectionMenu_C_Select_Tab Parms{};

	Parms.Tab = Tab;
	Parms.Skip_Data_Update = Skip_Data_Update;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Initialize Filter Profile
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_WearableSelectionMenu_C::Initialize_Filter_Profile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Initialize Filter Profile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Select Initial Filter Tab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Skip_Data_Update                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_WearableSelectionMenu_C::Select_Initial_Filter_Tab(bool Skip_Data_Update)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Select Initial Filter Tab");

	Params::BP_WearableSelectionMenu_C_Select_Initial_Filter_Tab Parms{};

	Parms.Skip_Data_Update = Skip_Data_Update;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Previous Slot Text
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_WearableSelectionMenu_C::Previous_Slot_Text()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Previous Slot Text");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Select Next Filter Tab
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_WearableSelectionMenu_C::Select_Next_Filter_Tab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Select Next Filter Tab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.Select Prev Filter Tab
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_WearableSelectionMenu_C::Select_Prev_Filter_Tab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "Select Prev Filter Tab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WearableSelectionMenu.BP_WearableSelectionMenu_C.SortDlcToTop
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UBP_WearableData_C*>       WearableData                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UBP_WearableData_C*>       ReturnWearbaleData                                     (Parm, OutParm)

void UBP_WearableSelectionMenu_C::SortDlcToTop(TArray<class UBP_WearableData_C*>& WearableData, TArray<class UBP_WearableData_C*>* ReturnWearbaleData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WearableSelectionMenu_C", "SortDlcToTop");

	Params::BP_WearableSelectionMenu_C_SortDlcToTop Parms{};

	Parms.WearableData = std::move(WearableData);

	UObject::ProcessEvent(Func, &Parms);

	WearableData = std::move(Parms.WearableData);

	if (ReturnWearbaleData != nullptr)
		*ReturnWearbaleData = std::move(Parms.ReturnWearbaleData);
}

}

