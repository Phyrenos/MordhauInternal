#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Leaderboards

#include "Basic.hpp"

#include "BP_Leaderboards_classes.hpp"
#include "BP_Leaderboards_parameters.hpp"


namespace SDK
{

// Function BP_Leaderboards.BP_Leaderboards_C.ExecuteUbergraph_BP_Leaderboards
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Leaderboards_C::ExecuteUbergraph_BP_Leaderboards(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Leaderboards_C", "ExecuteUbergraph_BP_Leaderboards");

	Params::BP_Leaderboards_C_ExecuteUbergraph_BP_Leaderboards Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Leaderboards.BP_Leaderboards_C.OnGetLeaderboardComplete
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FPlayFabApiError                 Error                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString                           LeaderboardName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<struct FLeaderboardEntry>        Entries                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FLeaderboardEntry                SelfEntry                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_Leaderboards_C::OnGetLeaderboardComplete(bool bWasSuccessful, const struct FPlayFabApiError& Error, const class FString& LeaderboardName, const TArray<struct FLeaderboardEntry>& Entries, const struct FLeaderboardEntry& SelfEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Leaderboards_C", "OnGetLeaderboardComplete");

	Params::BP_Leaderboards_C_OnGetLeaderboardComplete Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.Error = std::move(Error);
	Parms.LeaderboardName = std::move(LeaderboardName);
	Parms.Entries = std::move(Entries);
	Parms.SelfEntry = std::move(SelfEntry);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Leaderboards.BP_Leaderboards_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_Leaderboards_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Leaderboards_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Leaderboards.BP_Leaderboards_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Leaderboards_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Leaderboards_C", "Tick");

	Params::BP_Leaderboards_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Leaderboards.BP_Leaderboards_C.Update
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Leaderboards_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Leaderboards_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}

}

