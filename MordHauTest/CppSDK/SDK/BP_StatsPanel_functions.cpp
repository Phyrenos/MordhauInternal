#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StatsPanel

#include "Basic.hpp"

#include "BP_StatsPanel_classes.hpp"
#include "BP_StatsPanel_parameters.hpp"


namespace SDK
{

// Function BP_StatsPanel.BP_StatsPanel_C.Get Weapon Values
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAttackMove                             Attack_Move                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Windup                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Combo_Windup                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Release                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MissRecovery                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   FeintCost                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MorphCost                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StaminaDrain                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MissStaminaCost                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WoodDamage                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StoneDamage                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCanCombo                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bStopOnHit                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   T0_Head                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T0_Torso                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T0_Legs                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T1_Head                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T1Torso                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T1_Legs                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T2_Head                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T2_Torso                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T2_Legs                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T3_Head                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T3_Torso                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T3_Legs                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   X                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Y                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Parry_Stamina_Negation                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Block_Movement_Restriction                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Parry_Held                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Hit_Knockback                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldFlinch                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FAttackInfo                      Attack_Info                                            (ConstParm, Parm, OutParm)

void UBP_StatsPanel_C::Get_Weapon_Values(EAttackMove Attack_Move, float* Windup, float* Combo_Windup, float* Release, float* MissRecovery, int32* FeintCost, int32* MorphCost, float* StaminaDrain, float* MissStaminaCost, float* WoodDamage, float* StoneDamage, bool* bCanCombo, bool* bStopOnHit, float* T0_Head, float* T0_Torso, float* T0_Legs, float* T1_Head, float* T1Torso, float* T1_Legs, float* T2_Head, float* T2_Torso, float* T2_Legs, float* T3_Head, float* T3_Torso, float* T3_Legs, float* X, float* Y, float* Parry_Stamina_Negation, uint8* Block_Movement_Restriction, bool* Is_Parry_Held, float* Hit_Knockback, bool* ShouldFlinch, const struct FAttackInfo* Attack_Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatsPanel_C", "Get Weapon Values");

	Params::BP_StatsPanel_C_Get_Weapon_Values Parms{};

	Parms.Attack_Move = Attack_Move;

	UObject::ProcessEvent(Func, &Parms);

	if (Windup != nullptr)
		*Windup = Parms.Windup;

	if (Combo_Windup != nullptr)
		*Combo_Windup = Parms.Combo_Windup;

	if (Release != nullptr)
		*Release = Parms.Release;

	if (MissRecovery != nullptr)
		*MissRecovery = Parms.MissRecovery;

	if (FeintCost != nullptr)
		*FeintCost = Parms.FeintCost;

	if (MorphCost != nullptr)
		*MorphCost = Parms.MorphCost;

	if (StaminaDrain != nullptr)
		*StaminaDrain = Parms.StaminaDrain;

	if (MissStaminaCost != nullptr)
		*MissStaminaCost = Parms.MissStaminaCost;

	if (WoodDamage != nullptr)
		*WoodDamage = Parms.WoodDamage;

	if (StoneDamage != nullptr)
		*StoneDamage = Parms.StoneDamage;

	if (bCanCombo != nullptr)
		*bCanCombo = Parms.bCanCombo;

	if (bStopOnHit != nullptr)
		*bStopOnHit = Parms.bStopOnHit;

	if (T0_Head != nullptr)
		*T0_Head = Parms.T0_Head;

	if (T0_Torso != nullptr)
		*T0_Torso = Parms.T0_Torso;

	if (T0_Legs != nullptr)
		*T0_Legs = Parms.T0_Legs;

	if (T1_Head != nullptr)
		*T1_Head = Parms.T1_Head;

	if (T1Torso != nullptr)
		*T1Torso = Parms.T1Torso;

	if (T1_Legs != nullptr)
		*T1_Legs = Parms.T1_Legs;

	if (T2_Head != nullptr)
		*T2_Head = Parms.T2_Head;

	if (T2_Torso != nullptr)
		*T2_Torso = Parms.T2_Torso;

	if (T2_Legs != nullptr)
		*T2_Legs = Parms.T2_Legs;

	if (T3_Head != nullptr)
		*T3_Head = Parms.T3_Head;

	if (T3_Torso != nullptr)
		*T3_Torso = Parms.T3_Torso;

	if (T3_Legs != nullptr)
		*T3_Legs = Parms.T3_Legs;

	if (X != nullptr)
		*X = Parms.X;

	if (Y != nullptr)
		*Y = Parms.Y;

	if (Parry_Stamina_Negation != nullptr)
		*Parry_Stamina_Negation = Parms.Parry_Stamina_Negation;

	if (Block_Movement_Restriction != nullptr)
		*Block_Movement_Restriction = Parms.Block_Movement_Restriction;

	if (Is_Parry_Held != nullptr)
		*Is_Parry_Held = Parms.Is_Parry_Held;

	if (Hit_Knockback != nullptr)
		*Hit_Knockback = Parms.Hit_Knockback;

	if (ShouldFlinch != nullptr)
		*ShouldFlinch = Parms.ShouldFlinch;

	if (Attack_Info != nullptr)
		*Attack_Info = std::move(Parms.Attack_Info);
}


// Function BP_StatsPanel.BP_StatsPanel_C.Get Ranged Weapon Values
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   WoodDamage                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StoneDamage                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T0_Head                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T0_Torso                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T0_Legs                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T1_Head                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T1Torso                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T1_Legs                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T2_Head                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T2_Torso                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T2_Legs                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T3_Head                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T3_Torso                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   T3_Legs                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Should_Flinch                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Reload_Time                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Auto_Reload_Time                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Max_Ammo                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Ranged_Draw_Time                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StatsPanel_C::Get_Ranged_Weapon_Values(float* WoodDamage, float* StoneDamage, float* T0_Head, float* T0_Torso, float* T0_Legs, float* T1_Head, float* T1Torso, float* T1_Legs, float* T2_Head, float* T2_Torso, float* T2_Legs, float* T3_Head, float* T3_Torso, float* T3_Legs, bool* Should_Flinch, float* Reload_Time, float* Auto_Reload_Time, uint8* Max_Ammo, float* Ranged_Draw_Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatsPanel_C", "Get Ranged Weapon Values");

	Params::BP_StatsPanel_C_Get_Ranged_Weapon_Values Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WoodDamage != nullptr)
		*WoodDamage = Parms.WoodDamage;

	if (StoneDamage != nullptr)
		*StoneDamage = Parms.StoneDamage;

	if (T0_Head != nullptr)
		*T0_Head = Parms.T0_Head;

	if (T0_Torso != nullptr)
		*T0_Torso = Parms.T0_Torso;

	if (T0_Legs != nullptr)
		*T0_Legs = Parms.T0_Legs;

	if (T1_Head != nullptr)
		*T1_Head = Parms.T1_Head;

	if (T1Torso != nullptr)
		*T1Torso = Parms.T1Torso;

	if (T1_Legs != nullptr)
		*T1_Legs = Parms.T1_Legs;

	if (T2_Head != nullptr)
		*T2_Head = Parms.T2_Head;

	if (T2_Torso != nullptr)
		*T2_Torso = Parms.T2_Torso;

	if (T2_Legs != nullptr)
		*T2_Legs = Parms.T2_Legs;

	if (T3_Head != nullptr)
		*T3_Head = Parms.T3_Head;

	if (T3_Torso != nullptr)
		*T3_Torso = Parms.T3_Torso;

	if (T3_Legs != nullptr)
		*T3_Legs = Parms.T3_Legs;

	if (Should_Flinch != nullptr)
		*Should_Flinch = Parms.Should_Flinch;

	if (Reload_Time != nullptr)
		*Reload_Time = Parms.Reload_Time;

	if (Auto_Reload_Time != nullptr)
		*Auto_Reload_Time = Parms.Auto_Reload_Time;

	if (Max_Ammo != nullptr)
		*Max_Ammo = Parms.Max_Ammo;

	if (Ranged_Draw_Time != nullptr)
		*Ranged_Draw_Time = Parms.Ranged_Draw_Time;
}


// Function BP_StatsPanel.BP_StatsPanel_C.Get Melee Attack Info
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauEquipment*                Equipment_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAttackMove                             Move                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAttackInfo                      Attack_Info                                            (ConstParm, Parm, OutParm)
// class AMordhauWeapon*                   AsMordhau_Weapon                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StatsPanel_C::Get_Melee_Attack_Info(class AMordhauEquipment* Equipment_, EAttackMove Move, const struct FAttackInfo* Attack_Info, class AMordhauWeapon** AsMordhau_Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatsPanel_C", "Get Melee Attack Info");

	Params::BP_StatsPanel_C_Get_Melee_Attack_Info Parms{};

	Parms.Equipment_ = Equipment_;
	Parms.Move = Move;

	UObject::ProcessEvent(Func, &Parms);

	if (Attack_Info != nullptr)
		*Attack_Info = std::move(Parms.Attack_Info);

	if (AsMordhau_Weapon != nullptr)
		*AsMordhau_Weapon = Parms.AsMordhau_Weapon;
}


// Function BP_StatsPanel.BP_StatsPanel_C.Get Average Damage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAttackInfo                      Attack_Info                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_StatsPanel_C::Get_Average_Damage(const struct FAttackInfo& Attack_Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatsPanel_C", "Get Average Damage");

	Params::BP_StatsPanel_C_Get_Average_Damage Parms{};

	Parms.Attack_Info = std::move(Attack_Info);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_StatsPanel.BP_StatsPanel_C.Get Average Projectile Damage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Attack_Info                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_StatsPanel_C::Get_Average_Projectile_Damage(class UClass* Attack_Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatsPanel_C", "Get Average Projectile Damage");

	Params::BP_StatsPanel_C_Get_Average_Projectile_Damage Parms{};

	Parms.Attack_Info = Attack_Info;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_StatsPanel.BP_StatsPanel_C.Get Range Attack Info
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauEquipment*                Equipment_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AMordhauWeapon*                   AsMordhau_Weapon                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           ProjectileClass                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StatsPanel_C::Get_Range_Attack_Info(class AMordhauEquipment* Equipment_, class AMordhauWeapon** AsMordhau_Weapon, class UClass** ProjectileClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatsPanel_C", "Get Range Attack Info");

	Params::BP_StatsPanel_C_Get_Range_Attack_Info Parms{};

	Parms.Equipment_ = Equipment_;

	UObject::ProcessEvent(Func, &Parms);

	if (AsMordhau_Weapon != nullptr)
		*AsMordhau_Weapon = Parms.AsMordhau_Weapon;

	if (ProjectileClass != nullptr)
		*ProjectileClass = Parms.ProjectileClass;
}

}

