#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BallistaProjectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BallistaProjectile.BP_BallistaProjectile_C.ExecuteUbergraph_BP_BallistaProjectile
// 0x0118 (0x0118 - 0x0000)
struct BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAdvancedCharacter*                     K2Node_Event_Character;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            K2Node_Event_Type;                                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SubType;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Bone_1;                               // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Point;                                // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Source;                               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHorse*                                 K2Node_DynamicCast_AsHorse;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_DynamicCast_AsMordhau_Character;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanDismember_ReturnValue;                 // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_QueueDismember_ReturnValue;               // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Bone;                                 // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASeparatedBodyPart*                     K2Node_Event_Part;                                 // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_BounceForce;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_Surface;                              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHasHitWorld;                         // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bHasStopped;                          // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CF[0x1];                                       // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_2;          // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue_1;          // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile) == 0x000008, "Wrong alignment on BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile");
static_assert(sizeof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile) == 0x000118, "Wrong size on BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, EntryPoint) == 0x000000, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, CallFunc_GetSocketLocation_ReturnValue) == 0x00000C, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000018, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, CallFunc_ClampVectorSize_ReturnValue) == 0x000024, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_Event_Character) == 0x000030, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_Event_Type) == 0x000038, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_Event_SubType) == 0x000039, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_Event_SubType' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_Event_Bone_1) == 0x00003C, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_Event_Bone_1' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_Event_Point) == 0x000044, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_Event_Point' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_Event_Source) == 0x000050, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_Event_Source' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000058, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, CallFunc_GetSocketRotation_ReturnValue) == 0x000064, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000070, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_DynamicCast_AsHorse) == 0x000080, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_DynamicCast_AsHorse' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_DynamicCast_AsMordhau_Character) == 0x000090, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_DynamicCast_AsMordhau_Character' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, CallFunc_CanDismember_ReturnValue) == 0x000099, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::CallFunc_CanDismember_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, CallFunc_QueueDismember_ReturnValue) == 0x00009A, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::CallFunc_QueueDismember_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_Event_Bone) == 0x00009C, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_Event_Bone' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_Event_Part) == 0x0000A8, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_Event_Part' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_Event_HitLocation) == 0x0000B0, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_Event_HitNormal) == 0x0000BC, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_Event_BounceForce) == 0x0000C8, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_Event_BounceForce' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_Event_Surface) == 0x0000CC, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_Event_Surface' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_Event_bHasHitWorld) == 0x0000CD, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_Event_bHasHitWorld' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, K2Node_Event_bHasStopped) == 0x0000CE, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::K2Node_Event_bHasStopped' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, CallFunc_GetSocketLocation_ReturnValue_2) == 0x0000D0, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::CallFunc_GetSocketLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, CallFunc_GetSocketRotation_ReturnValue_1) == 0x0000DC, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::CallFunc_GetSocketRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0000E8, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, CallFunc_GetRightVector_ReturnValue) == 0x0000F4, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000100, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile, CallFunc_Add_VectorVector_ReturnValue) == 0x00010C, "Member 'BP_BallistaProjectile_C_ExecuteUbergraph_BP_BallistaProjectile::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_BallistaProjectile.BP_BallistaProjectile_C.OnProjectileHit
// 0x0020 (0x0020 - 0x0000)
struct BP_BallistaProjectile_C_OnProjectileHit final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceForce;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Surface;                                           // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasHitWorld;                                      // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHasStopped;                                       // 0x001E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BallistaProjectile_C_OnProjectileHit) == 0x000004, "Wrong alignment on BP_BallistaProjectile_C_OnProjectileHit");
static_assert(sizeof(BP_BallistaProjectile_C_OnProjectileHit) == 0x000020, "Wrong size on BP_BallistaProjectile_C_OnProjectileHit");
static_assert(offsetof(BP_BallistaProjectile_C_OnProjectileHit, HitLocation) == 0x000000, "Member 'BP_BallistaProjectile_C_OnProjectileHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_OnProjectileHit, HitNormal) == 0x00000C, "Member 'BP_BallistaProjectile_C_OnProjectileHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_OnProjectileHit, BounceForce) == 0x000018, "Member 'BP_BallistaProjectile_C_OnProjectileHit::BounceForce' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_OnProjectileHit, Surface) == 0x00001C, "Member 'BP_BallistaProjectile_C_OnProjectileHit::Surface' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_OnProjectileHit, bHasHitWorld) == 0x00001D, "Member 'BP_BallistaProjectile_C_OnProjectileHit::bHasHitWorld' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_OnProjectileHit, bHasStopped) == 0x00001E, "Member 'BP_BallistaProjectile_C_OnProjectileHit::bHasStopped' has a wrong offset!");

// Function BP_BallistaProjectile.BP_BallistaProjectile_C.OnPostDismemberedOther
// 0x0010 (0x0010 - 0x0000)
struct BP_BallistaProjectile_C_OnPostDismemberedOther final
{
public:
	class FName                                   bone;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASeparatedBodyPart*                     Part;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BallistaProjectile_C_OnPostDismemberedOther) == 0x000008, "Wrong alignment on BP_BallistaProjectile_C_OnPostDismemberedOther");
static_assert(sizeof(BP_BallistaProjectile_C_OnPostDismemberedOther) == 0x000010, "Wrong size on BP_BallistaProjectile_C_OnPostDismemberedOther");
static_assert(offsetof(BP_BallistaProjectile_C_OnPostDismemberedOther, bone) == 0x000000, "Member 'BP_BallistaProjectile_C_OnPostDismemberedOther::bone' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_OnPostDismemberedOther, Part) == 0x000008, "Member 'BP_BallistaProjectile_C_OnPostDismemberedOther::Part' has a wrong offset!");

// Function BP_BallistaProjectile.BP_BallistaProjectile_C.OnUsedToKillOther
// 0x0028 (0x0028 - 0x0000)
struct BP_BallistaProjectile_C_OnUsedToKillOther final
{
public:
	class AAdvancedCharacter*                     Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            Type;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SubType;                                           // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   bone;                                              // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Source;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BallistaProjectile_C_OnUsedToKillOther) == 0x000008, "Wrong alignment on BP_BallistaProjectile_C_OnUsedToKillOther");
static_assert(sizeof(BP_BallistaProjectile_C_OnUsedToKillOther) == 0x000028, "Wrong size on BP_BallistaProjectile_C_OnUsedToKillOther");
static_assert(offsetof(BP_BallistaProjectile_C_OnUsedToKillOther, Character) == 0x000000, "Member 'BP_BallistaProjectile_C_OnUsedToKillOther::Character' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_OnUsedToKillOther, Type) == 0x000008, "Member 'BP_BallistaProjectile_C_OnUsedToKillOther::Type' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_OnUsedToKillOther, SubType) == 0x000009, "Member 'BP_BallistaProjectile_C_OnUsedToKillOther::SubType' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_OnUsedToKillOther, bone) == 0x00000C, "Member 'BP_BallistaProjectile_C_OnUsedToKillOther::bone' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_OnUsedToKillOther, Point) == 0x000014, "Member 'BP_BallistaProjectile_C_OnUsedToKillOther::Point' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_OnUsedToKillOther, Source) == 0x000020, "Member 'BP_BallistaProjectile_C_OnUsedToKillOther::Source' has a wrong offset!");

// Function BP_BallistaProjectile.BP_BallistaProjectile_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BallistaProjectile_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BallistaProjectile_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BallistaProjectile_C_ReceiveTick");
static_assert(sizeof(BP_BallistaProjectile_C_ReceiveTick) == 0x000004, "Wrong size on BP_BallistaProjectile_C_ReceiveTick");
static_assert(offsetof(BP_BallistaProjectile_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BallistaProjectile_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BallistaProjectile.BP_BallistaProjectile_C.AttachProjectile
// 0x0118 (0x0118 - 0x0000)
struct BP_BallistaProjectile_C_AttachProjectile final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x008C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AttachProjectile_ReturnValue;             // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BallistaProjectile_C_AttachProjectile) == 0x000008, "Wrong alignment on BP_BallistaProjectile_C_AttachProjectile");
static_assert(sizeof(BP_BallistaProjectile_C_AttachProjectile) == 0x000118, "Wrong size on BP_BallistaProjectile_C_AttachProjectile");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, Hit) == 0x000000, "Member 'BP_BallistaProjectile_C_AttachProjectile::Hit' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, ReturnValue) == 0x00008C, "Member 'BP_BallistaProjectile_C_AttachProjectile::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, CallFunc_AttachProjectile_ReturnValue) == 0x00008D, "Member 'BP_BallistaProjectile_C_AttachProjectile::CallFunc_AttachProjectile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, CallFunc_BreakHitResult_bBlockingHit) == 0x00008E, "Member 'BP_BallistaProjectile_C_AttachProjectile::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, CallFunc_BreakHitResult_bInitialOverlap) == 0x00008F, "Member 'BP_BallistaProjectile_C_AttachProjectile::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, CallFunc_BreakHitResult_Time) == 0x000090, "Member 'BP_BallistaProjectile_C_AttachProjectile::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, CallFunc_BreakHitResult_Distance) == 0x000094, "Member 'BP_BallistaProjectile_C_AttachProjectile::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, CallFunc_BreakHitResult_Location) == 0x000098, "Member 'BP_BallistaProjectile_C_AttachProjectile::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, CallFunc_BreakHitResult_ImpactPoint) == 0x0000A4, "Member 'BP_BallistaProjectile_C_AttachProjectile::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, CallFunc_BreakHitResult_Normal) == 0x0000B0, "Member 'BP_BallistaProjectile_C_AttachProjectile::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, CallFunc_BreakHitResult_ImpactNormal) == 0x0000BC, "Member 'BP_BallistaProjectile_C_AttachProjectile::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, CallFunc_BreakHitResult_PhysMat) == 0x0000C8, "Member 'BP_BallistaProjectile_C_AttachProjectile::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, CallFunc_BreakHitResult_HitActor) == 0x0000D0, "Member 'BP_BallistaProjectile_C_AttachProjectile::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, CallFunc_BreakHitResult_HitComponent) == 0x0000D8, "Member 'BP_BallistaProjectile_C_AttachProjectile::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, CallFunc_BreakHitResult_HitBoneName) == 0x0000E0, "Member 'BP_BallistaProjectile_C_AttachProjectile::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, CallFunc_BreakHitResult_HitItem) == 0x0000E8, "Member 'BP_BallistaProjectile_C_AttachProjectile::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, CallFunc_BreakHitResult_FaceIndex) == 0x0000EC, "Member 'BP_BallistaProjectile_C_AttachProjectile::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, CallFunc_BreakHitResult_TraceStart) == 0x0000F0, "Member 'BP_BallistaProjectile_C_AttachProjectile::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, CallFunc_BreakHitResult_TraceEnd) == 0x0000FC, "Member 'BP_BallistaProjectile_C_AttachProjectile::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, K2Node_DynamicCast_AsPawn) == 0x000108, "Member 'BP_BallistaProjectile_C_AttachProjectile::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_BallistaProjectile_C_AttachProjectile, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'BP_BallistaProjectile_C_AttachProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

