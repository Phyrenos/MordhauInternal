#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PointsRemaining

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_PointsRemaining.BP_PointsRemaining_C
// 0x00A0 (0x0300 - 0x0260)
class UBP_PointsRemaining_C final : public UUserWidget
{
public:
	class UTextBlock*                             CurrentPointsText;                                 // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_78;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_228;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCharacterProfileBPWrapper*             Profile_Wrapper;                                   // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Points;                                    // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            PositivePointsColor;                               // 0x0288(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            ZeroPointsColor;                                   // 0x02B0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            NegativePointsColor;                               // 0x02D8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Update(const struct FCharacterProfile& Profile);
	void Update_points_directly(int32 Points);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PointsRemaining_C">();
	}
	static class UBP_PointsRemaining_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PointsRemaining_C>();
	}
};
static_assert(alignof(UBP_PointsRemaining_C) == 0x000008, "Wrong alignment on UBP_PointsRemaining_C");
static_assert(sizeof(UBP_PointsRemaining_C) == 0x000300, "Wrong size on UBP_PointsRemaining_C");
static_assert(offsetof(UBP_PointsRemaining_C, CurrentPointsText) == 0x000260, "Member 'UBP_PointsRemaining_C::CurrentPointsText' has a wrong offset!");
static_assert(offsetof(UBP_PointsRemaining_C, Image_78) == 0x000268, "Member 'UBP_PointsRemaining_C::Image_78' has a wrong offset!");
static_assert(offsetof(UBP_PointsRemaining_C, Image_228) == 0x000270, "Member 'UBP_PointsRemaining_C::Image_228' has a wrong offset!");
static_assert(offsetof(UBP_PointsRemaining_C, Profile_Wrapper) == 0x000278, "Member 'UBP_PointsRemaining_C::Profile_Wrapper' has a wrong offset!");
static_assert(offsetof(UBP_PointsRemaining_C, Current_Points) == 0x000280, "Member 'UBP_PointsRemaining_C::Current_Points' has a wrong offset!");
static_assert(offsetof(UBP_PointsRemaining_C, PositivePointsColor) == 0x000288, "Member 'UBP_PointsRemaining_C::PositivePointsColor' has a wrong offset!");
static_assert(offsetof(UBP_PointsRemaining_C, ZeroPointsColor) == 0x0002B0, "Member 'UBP_PointsRemaining_C::ZeroPointsColor' has a wrong offset!");
static_assert(offsetof(UBP_PointsRemaining_C, NegativePointsColor) == 0x0002D8, "Member 'UBP_PointsRemaining_C::NegativePointsColor' has a wrong offset!");

}

