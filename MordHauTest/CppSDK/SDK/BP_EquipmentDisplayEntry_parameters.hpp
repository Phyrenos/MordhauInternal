#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentDisplayEntry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_EquipmentDisplayEntry.BP_EquipmentDisplayEntry_C.ExecuteUbergraph_BP_EquipmentDisplayEntry
// 0x0040 (0x0040 - 0x0000)
struct BP_EquipmentDisplayEntry_C_ExecuteUbergraph_BP_EquipmentDisplayEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentDisplayEntry_C_ExecuteUbergraph_BP_EquipmentDisplayEntry) == 0x000004, "Wrong alignment on BP_EquipmentDisplayEntry_C_ExecuteUbergraph_BP_EquipmentDisplayEntry");
static_assert(sizeof(BP_EquipmentDisplayEntry_C_ExecuteUbergraph_BP_EquipmentDisplayEntry) == 0x000040, "Wrong size on BP_EquipmentDisplayEntry_C_ExecuteUbergraph_BP_EquipmentDisplayEntry");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_ExecuteUbergraph_BP_EquipmentDisplayEntry, EntryPoint) == 0x000000, "Member 'BP_EquipmentDisplayEntry_C_ExecuteUbergraph_BP_EquipmentDisplayEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_ExecuteUbergraph_BP_EquipmentDisplayEntry, K2Node_Event_MyGeometry) == 0x000004, "Member 'BP_EquipmentDisplayEntry_C_ExecuteUbergraph_BP_EquipmentDisplayEntry::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_ExecuteUbergraph_BP_EquipmentDisplayEntry, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'BP_EquipmentDisplayEntry_C_ExecuteUbergraph_BP_EquipmentDisplayEntry::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function BP_EquipmentDisplayEntry.BP_EquipmentDisplayEntry_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_EquipmentDisplayEntry_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentDisplayEntry_C_Tick) == 0x000004, "Wrong alignment on BP_EquipmentDisplayEntry_C_Tick");
static_assert(sizeof(BP_EquipmentDisplayEntry_C_Tick) == 0x00003C, "Wrong size on BP_EquipmentDisplayEntry_C_Tick");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_Tick, MyGeometry) == 0x000000, "Member 'BP_EquipmentDisplayEntry_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_EquipmentDisplayEntry_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_EquipmentDisplayEntry.BP_EquipmentDisplayEntry_C.Get_EquipmentName_Text
// 0x0050 (0x0050 - 0x0000)
struct BP_EquipmentDisplayEntry_C_Get_EquipmentName_Text final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   Name_0;                                            // 0x0018(0x0018)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetEntryTypeAndName_Type;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEntryTypeAndName_Name;                 // 0x0038(0x0018)()
};
static_assert(alignof(BP_EquipmentDisplayEntry_C_Get_EquipmentName_Text) == 0x000008, "Wrong alignment on BP_EquipmentDisplayEntry_C_Get_EquipmentName_Text");
static_assert(sizeof(BP_EquipmentDisplayEntry_C_Get_EquipmentName_Text) == 0x000050, "Wrong size on BP_EquipmentDisplayEntry_C_Get_EquipmentName_Text");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_Get_EquipmentName_Text, ReturnValue) == 0x000000, "Member 'BP_EquipmentDisplayEntry_C_Get_EquipmentName_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_Get_EquipmentName_Text, Name_0) == 0x000018, "Member 'BP_EquipmentDisplayEntry_C_Get_EquipmentName_Text::Name_0' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_Get_EquipmentName_Text, CallFunc_GetEntryTypeAndName_Type) == 0x000030, "Member 'BP_EquipmentDisplayEntry_C_Get_EquipmentName_Text::CallFunc_GetEntryTypeAndName_Type' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_Get_EquipmentName_Text, CallFunc_GetEntryTypeAndName_Name) == 0x000038, "Member 'BP_EquipmentDisplayEntry_C_Get_EquipmentName_Text::CallFunc_GetEntryTypeAndName_Name' has a wrong offset!");

// Function BP_EquipmentDisplayEntry.BP_EquipmentDisplayEntry_C.GetEntryTypeAndName
// 0x00A8 (0x00A8 - 0x0000)
struct BP_EquipmentDisplayEntry_C_GetEntryTypeAndName final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Name_0;                                            // 0x0008(0x0018)(Parm, OutParm)
	class AMordhauEquipment*                      LeftGearToCheck;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauEquipment*                      RightGearToCheck;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauCharacter*                      CallFunc_GetViewTargetCharacter_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauCharacter_C*                 K2Node_DynamicCast_AsBP_Mordhau_Character;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauMotion*                         CallFunc_GetMotion_ReturnValue;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEquipmentSwitchMotion*                 K2Node_DynamicCast_AsEquipment_Switch_Motion;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauEquipment*                      CallFunc_GetSwitchingTo_ReturnValue;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauEquipment*                      CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauEquipment*                      CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomizationReplicationActor*         CallFunc_GetCustomizationReplicationActor_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_2;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetEquipmentIndex_OutIndex;               // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquipmentIndex_ReturnValue;            // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetEquipmentIndex_OutIndex_1;             // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquipmentIndex_ReturnValue_1;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName) == 0x000008, "Wrong alignment on BP_EquipmentDisplayEntry_C_GetEntryTypeAndName");
static_assert(sizeof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName) == 0x0000A8, "Wrong size on BP_EquipmentDisplayEntry_C_GetEntryTypeAndName");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, Type) == 0x000000, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::Type' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, Name_0) == 0x000008, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::Name_0' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, LeftGearToCheck) == 0x000020, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::LeftGearToCheck' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, RightGearToCheck) == 0x000028, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::RightGearToCheck' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_GetViewTargetCharacter_ReturnValue) == 0x000030, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_GetViewTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, K2Node_DynamicCast_AsBP_Mordhau_Character) == 0x000038, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::K2Node_DynamicCast_AsBP_Mordhau_Character' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_GetMotion_ReturnValue) == 0x000048, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_GetMotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, K2Node_DynamicCast_AsEquipment_Switch_Motion) == 0x000050, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::K2Node_DynamicCast_AsEquipment_Switch_Motion' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_GetSwitchingTo_ReturnValue) == 0x000060, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_GetSwitchingTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_IsValid_ReturnValue_2) == 0x000071, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000072, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_GetCustomizationReplicationActor_ReturnValue) == 0x000080, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_GetCustomizationReplicationActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_IsValid_ReturnValue_3) == 0x000088, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_IsValid_ReturnValue_4) == 0x000089, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_Array_Get_Item_2) == 0x000090, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_IsValidClass_ReturnValue) == 0x000098, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000099, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_BooleanOR_ReturnValue) == 0x00009A, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_IsValid_ReturnValue_5) == 0x00009B, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_BooleanOR_ReturnValue_1) == 0x00009C, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_GetEquipmentIndex_OutIndex) == 0x00009D, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_GetEquipmentIndex_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_GetEquipmentIndex_ReturnValue) == 0x00009E, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_GetEquipmentIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_GetEquipmentIndex_OutIndex_1) == 0x00009F, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_GetEquipmentIndex_OutIndex_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_GetEquipmentIndex_ReturnValue_1) == 0x0000A0, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_GetEquipmentIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000A1, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x0000A2, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A3, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000A4, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_BooleanAND_ReturnValue) == 0x0000A5, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetEntryTypeAndName, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A6, "Member 'BP_EquipmentDisplayEntry_C_GetEntryTypeAndName::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_EquipmentDisplayEntry.BP_EquipmentDisplayEntry_C.GetColorAndOpacity_0
// 0x00C8 (0x00C8 - 0x0000)
struct BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0 final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)(UObjectWrapper)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0050(0x0028)(UObjectWrapper)
	int32                                         CallFunc_GetEntryTypeAndName_Type;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEntryTypeAndName_Name;                 // 0x0080(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0098(0x0028)()
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0) == 0x000008, "Wrong alignment on BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0");
static_assert(sizeof(BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0) == 0x0000C8, "Wrong size on BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0, K2Node_MakeStruct_SlateColor_1) == 0x000050, "Member 'BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0, CallFunc_GetEntryTypeAndName_Type) == 0x000078, "Member 'BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0::CallFunc_GetEntryTypeAndName_Type' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0, CallFunc_GetEntryTypeAndName_Name) == 0x000080, "Member 'BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0::CallFunc_GetEntryTypeAndName_Name' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0, K2Node_MakeStruct_SlateColor_2) == 0x000098, "Member 'BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0, K2Node_SwitchInteger_CmpSuccess) == 0x0000C0, "Member 'BP_EquipmentDisplayEntry_C_GetColorAndOpacity_0::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_EquipmentDisplayEntry.BP_EquipmentDisplayEntry_C.Get_SlotNumber_Text
// 0x0038 (0x0038 - 0x0000)
struct BP_EquipmentDisplayEntry_C_Get_SlotNumber_Text final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
};
static_assert(alignof(BP_EquipmentDisplayEntry_C_Get_SlotNumber_Text) == 0x000008, "Wrong alignment on BP_EquipmentDisplayEntry_C_Get_SlotNumber_Text");
static_assert(sizeof(BP_EquipmentDisplayEntry_C_Get_SlotNumber_Text) == 0x000038, "Wrong size on BP_EquipmentDisplayEntry_C_Get_SlotNumber_Text");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_Get_SlotNumber_Text, ReturnValue) == 0x000000, "Member 'BP_EquipmentDisplayEntry_C_Get_SlotNumber_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_Get_SlotNumber_Text, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EquipmentDisplayEntry_C_Get_SlotNumber_Text::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentDisplayEntry_C_Get_SlotNumber_Text, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'BP_EquipmentDisplayEntry_C_Get_SlotNumber_Text::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

}

