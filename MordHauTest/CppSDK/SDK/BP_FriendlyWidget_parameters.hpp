#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FriendlyWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_FriendlyWidget.BP_FriendlyWidget_C.ExecuteUbergraph_BP_FriendlyWidget
// 0x004C (0x004C - 0x0000)
struct BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget) == 0x000004, "Wrong alignment on BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget");
static_assert(sizeof(BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget) == 0x00004C, "Wrong size on BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget");
static_assert(offsetof(BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget, EntryPoint) == 0x000000, "Member 'BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget, CallFunc_Conv_IntToByte_ReturnValue) == 0x000005, "Member 'BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget, CallFunc_GetValidValue_ReturnValue) == 0x000006, "Member 'BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget, K2Node_Event_MyGeometry) == 0x000008, "Member 'BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget, K2Node_Event_InDeltaTime) == 0x000040, "Member 'BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000045, "Member 'BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000046, "Member 'BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget, CallFunc_GetValidValue_ReturnValue_1) == 0x000047, "Member 'BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget, CallFunc_IsConsolePlatform_ReturnValue) == 0x000049, "Member 'BP_FriendlyWidget_C_ExecuteUbergraph_BP_FriendlyWidget::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");

// Function BP_FriendlyWidget.BP_FriendlyWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_FriendlyWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FriendlyWidget_C_Tick) == 0x000004, "Wrong alignment on BP_FriendlyWidget_C_Tick");
static_assert(sizeof(BP_FriendlyWidget_C_Tick) == 0x00003C, "Wrong size on BP_FriendlyWidget_C_Tick");
static_assert(offsetof(BP_FriendlyWidget_C_Tick, MyGeometry) == 0x000000, "Member 'BP_FriendlyWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_FriendlyWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_FriendlyWidget_C_Tick::InDeltaTime' has a wrong offset!");

}

