#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemPointCost

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_ItemPointCost.BP_ItemPointCost_C.Update
// 0x0078 (0x0078 - 0x0000)
struct BP_ItemPointCost_C_Update final
{
public:
	int32                                         Cost_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanAfford;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0028(0x0028)()
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x0050(0x0028)()
};
static_assert(alignof(BP_ItemPointCost_C_Update) == 0x000008, "Wrong alignment on BP_ItemPointCost_C_Update");
static_assert(sizeof(BP_ItemPointCost_C_Update) == 0x000078, "Wrong size on BP_ItemPointCost_C_Update");
static_assert(offsetof(BP_ItemPointCost_C_Update, Cost_0) == 0x000000, "Member 'BP_ItemPointCost_C_Update::Cost_0' has a wrong offset!");
static_assert(offsetof(BP_ItemPointCost_C_Update, CanAfford) == 0x000004, "Member 'BP_ItemPointCost_C_Update::CanAfford' has a wrong offset!");
static_assert(offsetof(BP_ItemPointCost_C_Update, Temp_bool_Variable) == 0x000005, "Member 'BP_ItemPointCost_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPointCost_C_Update, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'BP_ItemPointCost_C_Update::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPointCost_C_Update, Temp_bool_Variable_1) == 0x000020, "Member 'BP_ItemPointCost_C_Update::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPointCost_C_Update, K2Node_Select_Default) == 0x000028, "Member 'BP_ItemPointCost_C_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ItemPointCost_C_Update, K2Node_Select_Default_1) == 0x000050, "Member 'BP_ItemPointCost_C_Update::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_ItemPointCost.BP_ItemPointCost_C.Get_CostAndIconBox_Visibility_0
// 0x0006 (0x0006 - 0x0000)
struct BP_ItemPointCost_C_Get_CostAndIconBox_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemPointCost_C_Get_CostAndIconBox_Visibility_0) == 0x000001, "Wrong alignment on BP_ItemPointCost_C_Get_CostAndIconBox_Visibility_0");
static_assert(sizeof(BP_ItemPointCost_C_Get_CostAndIconBox_Visibility_0) == 0x000006, "Wrong size on BP_ItemPointCost_C_Get_CostAndIconBox_Visibility_0");
static_assert(offsetof(BP_ItemPointCost_C_Get_CostAndIconBox_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_ItemPointCost_C_Get_CostAndIconBox_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPointCost_C_Get_CostAndIconBox_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_ItemPointCost_C_Get_CostAndIconBox_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPointCost_C_Get_CostAndIconBox_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_ItemPointCost_C_Get_CostAndIconBox_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPointCost_C_Get_CostAndIconBox_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_ItemPointCost_C_Get_CostAndIconBox_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPointCost_C_Get_CostAndIconBox_Visibility_0, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'BP_ItemPointCost_C_Get_CostAndIconBox_Visibility_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPointCost_C_Get_CostAndIconBox_Visibility_0, K2Node_Select_Default) == 0x000005, "Member 'BP_ItemPointCost_C_Get_CostAndIconBox_Visibility_0::K2Node_Select_Default' has a wrong offset!");

}

