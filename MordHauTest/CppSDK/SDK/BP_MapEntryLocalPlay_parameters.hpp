#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapEntryLocalPlay

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_MapEntryLocalPlay.BP_MapEntryLocalPlay_C.ExecuteUbergraph_BP_MapEntryLocalPlay
// 0x0018 (0x0018 - 0x0000)
struct BP_MapEntryLocalPlay_C_ExecuteUbergraph_BP_MapEntryLocalPlay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapEntryLocalPlay_C_ExecuteUbergraph_BP_MapEntryLocalPlay) == 0x000008, "Wrong alignment on BP_MapEntryLocalPlay_C_ExecuteUbergraph_BP_MapEntryLocalPlay");
static_assert(sizeof(BP_MapEntryLocalPlay_C_ExecuteUbergraph_BP_MapEntryLocalPlay) == 0x000018, "Wrong size on BP_MapEntryLocalPlay_C_ExecuteUbergraph_BP_MapEntryLocalPlay");
static_assert(offsetof(BP_MapEntryLocalPlay_C_ExecuteUbergraph_BP_MapEntryLocalPlay, EntryPoint) == 0x000000, "Member 'BP_MapEntryLocalPlay_C_ExecuteUbergraph_BP_MapEntryLocalPlay::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_ExecuteUbergraph_BP_MapEntryLocalPlay, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_MapEntryLocalPlay_C_ExecuteUbergraph_BP_MapEntryLocalPlay::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_ExecuteUbergraph_BP_MapEntryLocalPlay, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'BP_MapEntryLocalPlay_C_ExecuteUbergraph_BP_MapEntryLocalPlay::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function BP_MapEntryLocalPlay.BP_MapEntryLocalPlay_C.Select
// 0x02A0 (0x02A0 - 0x0000)
struct BP_MapEntryLocalPlay_C_Select final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	struct FButtonStyle                           K2Node_MakeStruct_ButtonStyle;                     // 0x0028(0x0278)()
};
static_assert(alignof(BP_MapEntryLocalPlay_C_Select) == 0x000008, "Wrong alignment on BP_MapEntryLocalPlay_C_Select");
static_assert(sizeof(BP_MapEntryLocalPlay_C_Select) == 0x0002A0, "Wrong size on BP_MapEntryLocalPlay_C_Select");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Select, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'BP_MapEntryLocalPlay_C_Select::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Select, K2Node_MakeStruct_ButtonStyle) == 0x000028, "Member 'BP_MapEntryLocalPlay_C_Select::K2Node_MakeStruct_ButtonStyle' has a wrong offset!");

// Function BP_MapEntryLocalPlay.BP_MapEntryLocalPlay_C.DeSelect
// 0x02A8 (0x02A8 - 0x0000)
struct BP_MapEntryLocalPlay_C_DeSelect final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)(UObjectWrapper)
	struct FButtonStyle                           K2Node_MakeStruct_ButtonStyle;                     // 0x0030(0x0278)()
};
static_assert(alignof(BP_MapEntryLocalPlay_C_DeSelect) == 0x000008, "Wrong alignment on BP_MapEntryLocalPlay_C_DeSelect");
static_assert(sizeof(BP_MapEntryLocalPlay_C_DeSelect) == 0x0002A8, "Wrong size on BP_MapEntryLocalPlay_C_DeSelect");
static_assert(offsetof(BP_MapEntryLocalPlay_C_DeSelect, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_MapEntryLocalPlay_C_DeSelect::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_DeSelect, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'BP_MapEntryLocalPlay_C_DeSelect::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_DeSelect, K2Node_MakeStruct_ButtonStyle) == 0x000030, "Member 'BP_MapEntryLocalPlay_C_DeSelect::K2Node_MakeStruct_ButtonStyle' has a wrong offset!");

// Function BP_MapEntryLocalPlay.BP_MapEntryLocalPlay_C.SetMapName
// 0x0018 (0x0018 - 0x0000)
struct BP_MapEntryLocalPlay_C_SetMapName final
{
public:
	class FText                                   MapName_0;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_MapEntryLocalPlay_C_SetMapName) == 0x000008, "Wrong alignment on BP_MapEntryLocalPlay_C_SetMapName");
static_assert(sizeof(BP_MapEntryLocalPlay_C_SetMapName) == 0x000018, "Wrong size on BP_MapEntryLocalPlay_C_SetMapName");
static_assert(offsetof(BP_MapEntryLocalPlay_C_SetMapName, MapName_0) == 0x000000, "Member 'BP_MapEntryLocalPlay_C_SetMapName::MapName_0' has a wrong offset!");

// Function BP_MapEntryLocalPlay.BP_MapEntryLocalPlay_C.SetThumbnail
// 0x00A8 (0x00A8 - 0x0000)
struct BP_MapEntryLocalPlay_C_SetThumbnail final
{
public:
	class UTexture2D*                             Thumbnail_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue;         // 0x0020(0x0088)()
};
static_assert(alignof(BP_MapEntryLocalPlay_C_SetThumbnail) == 0x000008, "Wrong alignment on BP_MapEntryLocalPlay_C_SetThumbnail");
static_assert(sizeof(BP_MapEntryLocalPlay_C_SetThumbnail) == 0x0000A8, "Wrong size on BP_MapEntryLocalPlay_C_SetThumbnail");
static_assert(offsetof(BP_MapEntryLocalPlay_C_SetThumbnail, Thumbnail_0) == 0x000000, "Member 'BP_MapEntryLocalPlay_C_SetThumbnail::Thumbnail_0' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_SetThumbnail, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_MapEntryLocalPlay_C_SetThumbnail::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_SetThumbnail, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'BP_MapEntryLocalPlay_C_SetThumbnail::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_SetThumbnail, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'BP_MapEntryLocalPlay_C_SetThumbnail::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_SetThumbnail, CallFunc_FTrunc_ReturnValue) == 0x000014, "Member 'BP_MapEntryLocalPlay_C_SetThumbnail::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_SetThumbnail, CallFunc_FTrunc_ReturnValue_1) == 0x000018, "Member 'BP_MapEntryLocalPlay_C_SetThumbnail::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_SetThumbnail, CallFunc_MakeBrushFromTexture_ReturnValue) == 0x000020, "Member 'BP_MapEntryLocalPlay_C_SetThumbnail::CallFunc_MakeBrushFromTexture_ReturnValue' has a wrong offset!");

// Function BP_MapEntryLocalPlay.BP_MapEntryLocalPlay_C.Update
// 0x0088 (0x0088 - 0x0000)
struct BP_MapEntryLocalPlay_C_Update final
{
public:
	class FString                                 GameModeMapName_0;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UGameModeMetadata*                      GameModeMetadata;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMapMetadata*                           MapMetadata;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_ReturnValue;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS;                              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapEntryLocalPlay_C_Update) == 0x000008, "Wrong alignment on BP_MapEntryLocalPlay_C_Update");
static_assert(sizeof(BP_MapEntryLocalPlay_C_Update) == 0x000088, "Wrong size on BP_MapEntryLocalPlay_C_Update");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Update, GameModeMapName_0) == 0x000000, "Member 'BP_MapEntryLocalPlay_C_Update::GameModeMapName_0' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Update, GameModeMetadata) == 0x000010, "Member 'BP_MapEntryLocalPlay_C_Update::GameModeMetadata' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Update, MapMetadata) == 0x000018, "Member 'BP_MapEntryLocalPlay_C_Update::MapMetadata' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Update, K2Node_MakeStruct_LinearColor) == 0x000020, "Member 'BP_MapEntryLocalPlay_C_Update::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Update, CallFunc_LoadAsset_ReturnValue) == 0x000030, "Member 'BP_MapEntryLocalPlay_C_Update::CallFunc_LoadAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Update, K2Node_DynamicCast_AsTexture_2D) == 0x000038, "Member 'BP_MapEntryLocalPlay_C_Update::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Update, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_MapEntryLocalPlay_C_Update::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Update, CallFunc_StartsWith_ReturnValue) == 0x000041, "Member 'BP_MapEntryLocalPlay_C_Update::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Update, K2Node_MakeStruct_LinearColor_1) == 0x000044, "Member 'BP_MapEntryLocalPlay_C_Update::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Update, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000054, "Member 'BP_MapEntryLocalPlay_C_Update::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Update, CallFunc_BooleanAND_ReturnValue) == 0x000055, "Member 'BP_MapEntryLocalPlay_C_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Update, CallFunc_Split_LeftS) == 0x000058, "Member 'BP_MapEntryLocalPlay_C_Update::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Update, CallFunc_Split_RightS) == 0x000068, "Member 'BP_MapEntryLocalPlay_C_Update::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Update, CallFunc_Split_ReturnValue) == 0x000078, "Member 'BP_MapEntryLocalPlay_C_Update::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Update, CallFunc_Conv_StringToInt_ReturnValue) == 0x00007C, "Member 'BP_MapEntryLocalPlay_C_Update::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Update, CallFunc_IsNumeric_ReturnValue) == 0x000080, "Member 'BP_MapEntryLocalPlay_C_Update::CallFunc_IsNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntryLocalPlay_C_Update, K2Node_SwitchInteger_CmpSuccess) == 0x000081, "Member 'BP_MapEntryLocalPlay_C_Update::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

}

