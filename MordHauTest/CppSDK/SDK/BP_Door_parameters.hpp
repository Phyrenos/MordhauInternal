#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Door

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Door.BP_Door_C.ExecuteUbergraph_BP_Door
// 0x0410 (0x0410 - 0x0000)
struct BP_Door_C_ExecuteUbergraph_BP_Door final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_Event_Character;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDoorToActorAngle_AngleDegrees;         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x007C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0118(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_DynamicCast_AsMordhau_Character;            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauMotion*                         CallFunc_GetMotion_ReturnValue;                    // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleFastOpen_Result;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttackMotion*                          K2Node_DynamicCast_AsAttack_Motion;                // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0168(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors;         // 0x01B0(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue;       // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_DynamicCast_AsMordhau_Character_1;          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauCharacter*                      K2Node_DynamicCast_AsMordhau_Character_2;          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauMotion*                         CallFunc_GetMotion_ReturnValue_1;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFeintedMotion*                         K2Node_DynamicCast_AsFeinted_Motion;               // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlockedMotion*                         K2Node_DynamicCast_AsBlocked_Motion;               // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttackMotion*                          K2Node_DynamicCast_AsAttack_Motion_1;              // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauMovementComponent*              K2Node_DynamicCast_AsMordhau_Movement_Component;   // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInKnockback_ReturnValue;                // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26B[0x1];                                      // 0x026B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_5;          // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0276(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_6;          // 0x0277(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x027A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27B[0x1];                                      // 0x027B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0288(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x02A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x02B0(0x0010)(ConstParm, ReferenceParm)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors_1;       // 0x02C8(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue_1;     // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x02DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Door_C*                             K2Node_DynamicCast_AsBP_Door;                      // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Knockback_ReturnValue;                    // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A[0x2];                                      // 0x030A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0315(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0316(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0317(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x031B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue_1;                   // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_7;          // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x3];                                      // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue_1;      // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Knockback_ReturnValue_1;                  // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372[0xE];                                      // 0x0372(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0380(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors_2;       // 0x03B0(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue_2;     // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1[0x3];                                      // 0x03C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAdvancedCharacter*                     K2Node_DynamicCast_AsAdvanced_Character;           // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x03E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x03F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_DynamicCast_AsMordhau_Character_3;          // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue;                // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Door_C_ExecuteUbergraph_BP_Door) == 0x000010, "Wrong alignment on BP_Door_C_ExecuteUbergraph_BP_Door");
static_assert(sizeof(BP_Door_C_ExecuteUbergraph_BP_Door) == 0x000410, "Wrong size on BP_Door_C_ExecuteUbergraph_BP_Door");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, EntryPoint) == 0x000000, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, Temp_object_Variable) == 0x000010, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, Temp_int_Loop_Counter_Variable_2) == 0x000024, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Add_IntInt_ReturnValue_2) == 0x00002C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, Temp_bool_True_if_break_was_hit_Variable) == 0x000030, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_HasAuthority_ReturnValue) == 0x000038, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, Temp_int_Array_Index_Variable_2) == 0x00003C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000040, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_SwitchInteger_CmpSuccess) == 0x000044, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, Temp_int_Loop_Counter_Variable_3) == 0x000048, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Add_IntInt_ReturnValue_3) == 0x00004C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, Temp_int_Array_Index_Variable_3) == 0x000050, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_MakeRotator_ReturnValue) == 0x000054, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_DeltaSeconds) == 0x000060, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_Character) == 0x000068, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GetDoorToActorAngle_AngleDegrees) == 0x000070, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GetDoorToActorAngle_AngleDegrees' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000075, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000078, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00007C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000108, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000109, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BooleanAND_ReturnValue) == 0x00010A, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00010B, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x00010C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_Damage) == 0x000110, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_DamageType) == 0x000118, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_InstigatedBy) == 0x000120, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_DamageCauser) == 0x000128, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BooleanAND_ReturnValue_1) == 0x000130, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsMordhau_Character) == 0x000138, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsMordhau_Character' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GetMotion_ReturnValue) == 0x000148, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GetMotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_HandleFastOpen_Result) == 0x000150, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_HandleFastOpen_Result' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsAttack_Motion) == 0x000158, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsAttack_Motion' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess_1) == 0x000160, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, Temp_object_Variable_1) == 0x000168, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000178, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000180, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_ComponentOverlapActors_OutActors) == 0x0001B0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_ComponentOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_ComponentOverlapActors_ReturnValue) == 0x0001C0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_ComponentOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsValid_ReturnValue) == 0x0001C1, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Array_Get_Item) == 0x0001C8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001D0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsMordhau_Character_1) == 0x0001E0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsMordhau_Character_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess_2) == 0x0001E8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Array_Get_Item_1) == 0x0001F0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsMordhau_Character_2) == 0x0001F8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsMordhau_Character_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess_3) == 0x000200, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsValid_ReturnValue_1) == 0x000201, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GetMotion_ReturnValue_1) == 0x000208, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GetMotion_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsFeinted_Motion) == 0x000210, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsFeinted_Motion' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess_4) == 0x000218, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsBlocked_Motion) == 0x000220, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsBlocked_Motion' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess_5) == 0x000228, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsAttack_Motion_1) == 0x000230, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsAttack_Motion_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess_6) == 0x000238, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00023C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsValid_ReturnValue_2) == 0x000248, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GetMovementComponent_ReturnValue) == 0x000250, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Array_Length_ReturnValue) == 0x000258, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsMordhau_Movement_Component) == 0x000260, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsMordhau_Movement_Component' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess_7) == 0x000268, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Less_IntInt_ReturnValue) == 0x000269, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsInKnockback_ReturnValue) == 0x00026A, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsInKnockback_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Array_Length_ReturnValue_1) == 0x00026C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Less_IntInt_ReturnValue_1) == 0x000270, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsValid_ReturnValue_3) == 0x000271, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x000272, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_NotEqual_ByteByte_ReturnValue_5) == 0x000273, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_NotEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000274, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000275, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000276, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_NotEqual_ByteByte_ReturnValue_6) == 0x000277, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_NotEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BooleanOR_ReturnValue) == 0x000278, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BooleanAND_ReturnValue_2) == 0x000279, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BooleanOR_ReturnValue_1) == 0x00027A, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00027C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_MakeArray_Array) == 0x000288, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000298, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0002A4, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_MakeArray_Array_1) == 0x0002B0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Normal2D_ReturnValue) == 0x0002C0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_ComponentOverlapActors_OutActors_1) == 0x0002C8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_ComponentOverlapActors_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_ComponentOverlapActors_ReturnValue_1) == 0x0002D8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_ComponentOverlapActors_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x0002DC, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Array_Get_Item_2) == 0x0002E8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002F0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsBP_Door) == 0x000300, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsBP_Door' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess_8) == 0x000308, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Knockback_ReturnValue) == 0x000309, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Knockback_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Array_Length_ReturnValue_2) == 0x00030C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_ApplyDamage_ReturnValue) == 0x000310, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Less_IntInt_ReturnValue_2) == 0x000314, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BooleanAND_ReturnValue_3) == 0x000315, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BooleanAND_ReturnValue_4) == 0x000316, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Not_PreBool_ReturnValue_1) == 0x000317, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BooleanOR_ReturnValue_2) == 0x000318, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000319, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BooleanAND_ReturnValue_5) == 0x00031A, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsDedicatedServer_ReturnValue) == 0x00031B, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00031C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000328, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00032C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x000338, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Normal2D_ReturnValue_1) == 0x000340, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Normal2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_NotEqual_ByteByte_ReturnValue_7) == 0x000348, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_NotEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Conv_Vector2DToVector_ReturnValue_1) == 0x00034C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Conv_Vector2DToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000358, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000364, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_HasAuthority_ReturnValue_1) == 0x000370, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Knockback_ReturnValue_1) == 0x000371, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Knockback_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000380, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_ComponentOverlapActors_OutActors_2) == 0x0003B0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_ComponentOverlapActors_OutActors_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_ComponentOverlapActors_ReturnValue_2) == 0x0003C0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_ComponentOverlapActors_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Array_Length_ReturnValue_3) == 0x0003C4, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Array_Get_Item_3) == 0x0003C8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Less_IntInt_ReturnValue_3) == 0x0003D0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsAdvanced_Character) == 0x0003D8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsAdvanced_Character' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess_9) == 0x0003E0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0003E4, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0003F0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsMordhau_Character_3) == 0x000400, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsMordhau_Character_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess_10) == 0x000408, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_TeleportTo_ReturnValue) == 0x000409, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_TeleportTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsValid_ReturnValue_4) == 0x00040A, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function BP_Door.BP_Door_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_Door_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BP_Door_C_ReceiveAnyDamage");
static_assert(sizeof(BP_Door_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BP_Door_C_ReceiveAnyDamage");
static_assert(offsetof(BP_Door_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'BP_Door_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BP_Door_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BP_Door_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BP_Door_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnInteractionStart
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnInteractionStart final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnInteractionStart) == 0x000008, "Wrong alignment on BP_Door_C_OnInteractionStart");
static_assert(sizeof(BP_Door_C_OnInteractionStart) == 0x000008, "Wrong size on BP_Door_C_OnInteractionStart");
static_assert(offsetof(BP_Door_C_OnInteractionStart, Character) == 0x000000, "Member 'BP_Door_C_OnInteractionStart::Character' has a wrong offset!");

// Function BP_Door.BP_Door_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Door_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Door_C_ReceiveTick");
static_assert(sizeof(BP_Door_C_ReceiveTick) == 0x000004, "Wrong size on BP_Door_C_ReceiveTick");
static_assert(offsetof(BP_Door_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Door_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Door.BP_Door_C.UserConstructionScript
// 0x00A4 (0x00A4 - 0x0000)
struct BP_Door_C_UserConstructionScript final
{
public:
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x000C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         CallFunc_ConvertStartingStateToDoorState_ToDoorState; // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Door_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_Door_C_UserConstructionScript");
static_assert(sizeof(BP_Door_C_UserConstructionScript) == 0x0000A4, "Wrong size on BP_Door_C_UserConstructionScript");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue) == 0x000000, "Member 'BP_Door_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00000C, "Member 'BP_Door_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_ConvertStartingStateToDoorState_ToDoorState) == 0x000098, "Member 'BP_Door_C_UserConstructionScript::CallFunc_ConvertStartingStateToDoorState_ToDoorState' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00009C, "Member 'BP_Door_C_UserConstructionScript::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, K2Node_SwitchInteger_CmpSuccess) == 0x0000A0, "Member 'BP_Door_C_UserConstructionScript::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnRep_DoorState
// 0x0010 (0x0010 - 0x0000)
struct BP_Door_C_OnRep_DoorState final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Door_C_OnRep_DoorState) == 0x000004, "Wrong alignment on BP_Door_C_OnRep_DoorState");
static_assert(sizeof(BP_Door_C_OnRep_DoorState) == 0x000010, "Wrong size on BP_Door_C_OnRep_DoorState");
static_assert(offsetof(BP_Door_C_OnRep_DoorState, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Door_C_OnRep_DoorState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_OnRep_DoorState, CallFunc_IsDedicatedServer_ReturnValue) == 0x000001, "Member 'BP_Door_C_OnRep_DoorState::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_OnRep_DoorState, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000004, "Member 'BP_Door_C_OnRep_DoorState::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_OnRep_DoorState, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BP_Door_C_OnRep_DoorState::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_OnRep_DoorState, K2Node_SwitchInteger_CmpSuccess) == 0x00000C, "Member 'BP_Door_C_OnRep_DoorState::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_Door.BP_Door_C.GetDoorForwardVector
// 0x0048 (0x0048 - 0x0000)
struct BP_Door_C_GetDoorForwardVector final
{
public:
	struct FVector                                Out;                                               // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_GetDoorForwardVector) == 0x000004, "Wrong alignment on BP_Door_C_GetDoorForwardVector");
static_assert(sizeof(BP_Door_C_GetDoorForwardVector) == 0x000048, "Wrong size on BP_Door_C_GetDoorForwardVector");
static_assert(offsetof(BP_Door_C_GetDoorForwardVector, Out) == 0x000000, "Member 'BP_Door_C_GetDoorForwardVector::Out' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorForwardVector, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00000C, "Member 'BP_Door_C_GetDoorForwardVector::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorForwardVector, CallFunc_MakeRotator_ReturnValue) == 0x000018, "Member 'BP_Door_C_GetDoorForwardVector::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorForwardVector, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000024, "Member 'BP_Door_C_GetDoorForwardVector::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorForwardVector, CallFunc_ComposeRotators_ReturnValue) == 0x000030, "Member 'BP_Door_C_GetDoorForwardVector::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorForwardVector, CallFunc_GetForwardVector_ReturnValue) == 0x00003C, "Member 'BP_Door_C_GetDoorForwardVector::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");

// Function BP_Door.BP_Door_C.GetDoorToActorAngle
// 0x0030 (0x0030 - 0x0000)
struct BP_Door_C_GetDoorToActorAngle final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleDegrees;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDoorForwardVector_Out;                 // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_GetDoorToActorAngle) == 0x000008, "Wrong alignment on BP_Door_C_GetDoorToActorAngle");
static_assert(sizeof(BP_Door_C_GetDoorToActorAngle) == 0x000030, "Wrong size on BP_Door_C_GetDoorToActorAngle");
static_assert(offsetof(BP_Door_C_GetDoorToActorAngle, Actor) == 0x000000, "Member 'BP_Door_C_GetDoorToActorAngle::Actor' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorToActorAngle, AngleDegrees) == 0x000008, "Member 'BP_Door_C_GetDoorToActorAngle::AngleDegrees' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorToActorAngle, CallFunc_GetDoorForwardVector_Out) == 0x00000C, "Member 'BP_Door_C_GetDoorToActorAngle::CallFunc_GetDoorForwardVector_Out' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorToActorAngle, CallFunc_GetActorForwardVector_ReturnValue) == 0x000018, "Member 'BP_Door_C_GetDoorToActorAngle::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorToActorAngle, CallFunc_Dot_VectorVector_ReturnValue) == 0x000024, "Member 'BP_Door_C_GetDoorToActorAngle::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetDoorToActorAngle, CallFunc_DegAcos_ReturnValue) == 0x000028, "Member 'BP_Door_C_GetDoorToActorAngle::CallFunc_DegAcos_ReturnValue' has a wrong offset!");

// Function BP_Door.BP_Door_C.ConvertStartingStateToDoorState
// 0x000C (0x000C - 0x0000)
struct BP_Door_C_ConvertStartingStateToDoorState final
{
public:
	uint8                                         InStartingState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         ToDoorState;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Door_C_ConvertStartingStateToDoorState) == 0x000004, "Wrong alignment on BP_Door_C_ConvertStartingStateToDoorState");
static_assert(sizeof(BP_Door_C_ConvertStartingStateToDoorState) == 0x00000C, "Wrong size on BP_Door_C_ConvertStartingStateToDoorState");
static_assert(offsetof(BP_Door_C_ConvertStartingStateToDoorState, InStartingState) == 0x000000, "Member 'BP_Door_C_ConvertStartingStateToDoorState::InStartingState' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ConvertStartingStateToDoorState, ToDoorState) == 0x000001, "Member 'BP_Door_C_ConvertStartingStateToDoorState::ToDoorState' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ConvertStartingStateToDoorState, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'BP_Door_C_ConvertStartingStateToDoorState::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ConvertStartingStateToDoorState, K2Node_SwitchInteger_CmpSuccess) == 0x000008, "Member 'BP_Door_C_ConvertStartingStateToDoorState::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_Door.BP_Door_C.IsClosed
// 0x0004 (0x0004 - 0x0000)
struct BP_Door_C_IsClosed final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Door_C_IsClosed) == 0x000001, "Wrong alignment on BP_Door_C_IsClosed");
static_assert(sizeof(BP_Door_C_IsClosed) == 0x000004, "Wrong size on BP_Door_C_IsClosed");
static_assert(offsetof(BP_Door_C_IsClosed, Result) == 0x000000, "Member 'BP_Door_C_IsClosed::Result' has a wrong offset!");
static_assert(offsetof(BP_Door_C_IsClosed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_Door_C_IsClosed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_IsClosed, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BP_Door_C_IsClosed::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_IsClosed, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_Door_C_IsClosed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_Door.BP_Door_C.HandleFastOpen
// 0x0020 (0x0020 - 0x0000)
struct BP_Door_C_HandleFastOpen final
{
public:
	class AMordhauCharacter*                      Char;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WantsRagdoll;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OnlyClosed;                                        // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDoorToActorAngle_AngleDegrees;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_5;          // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Door_C_HandleFastOpen) == 0x000008, "Wrong alignment on BP_Door_C_HandleFastOpen");
static_assert(sizeof(BP_Door_C_HandleFastOpen) == 0x000020, "Wrong size on BP_Door_C_HandleFastOpen");
static_assert(offsetof(BP_Door_C_HandleFastOpen, Char) == 0x000000, "Member 'BP_Door_C_HandleFastOpen::Char' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, WantsRagdoll) == 0x000008, "Member 'BP_Door_C_HandleFastOpen::WantsRagdoll' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, OnlyClosed) == 0x000009, "Member 'BP_Door_C_HandleFastOpen::OnlyClosed' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, Result) == 0x00000A, "Member 'BP_Door_C_HandleFastOpen::Result' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, CallFunc_GetDoorToActorAngle_AngleDegrees) == 0x00000C, "Member 'BP_Door_C_HandleFastOpen::CallFunc_GetDoorToActorAngle_AngleDegrees' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_Door_C_HandleFastOpen::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000011, "Member 'BP_Door_C_HandleFastOpen::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000012, "Member 'BP_Door_C_HandleFastOpen::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000013, "Member 'BP_Door_C_HandleFastOpen::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000014, "Member 'BP_Door_C_HandleFastOpen::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, CallFunc_BooleanAND_ReturnValue) == 0x000015, "Member 'BP_Door_C_HandleFastOpen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, CallFunc_BooleanAND_ReturnValue_1) == 0x000016, "Member 'BP_Door_C_HandleFastOpen::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000017, "Member 'BP_Door_C_HandleFastOpen::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x000018, "Member 'BP_Door_C_HandleFastOpen::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_Door_C_HandleFastOpen::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001A, "Member 'BP_Door_C_HandleFastOpen::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x00001B, "Member 'BP_Door_C_HandleFastOpen::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, CallFunc_BooleanOR_ReturnValue) == 0x00001C, "Member 'BP_Door_C_HandleFastOpen::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, CallFunc_BooleanAND_ReturnValue_2) == 0x00001D, "Member 'BP_Door_C_HandleFastOpen::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, CallFunc_NotEqual_ByteByte_ReturnValue_5) == 0x00001E, "Member 'BP_Door_C_HandleFastOpen::CallFunc_NotEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Door_C_HandleFastOpen, CallFunc_BooleanAND_ReturnValue_3) == 0x00001F, "Member 'BP_Door_C_HandleFastOpen::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

}

