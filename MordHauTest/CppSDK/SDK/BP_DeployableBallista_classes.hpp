#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DeployableBallista

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MordhauVehicle_classes.hpp"
#include "Mordhau_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DeployableBallista.BP_DeployableBallista_C
// 0x0060 (0x0BF0 - 0x0B90)
class ABP_DeployableBallista_C : public ABP_MordhauVehicle_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B90(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UBP_VehicleDeployableBallista_C*        BP_VehicleDeployableBallista;                      // 0x0B98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UMoveSoundComponent*                    MoveSound;                                         // 0x0BA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UProjectileTurretShooterComponent*      ProjectileTurretShooter;                           // 0x0BA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ULODSkeletalMeshComponent*              Bolt;                                              // 0x0BB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAudioComponent*                        LoadingSound;                                      // 0x0BB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        LastTurnSound;                                     // 0x0BC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InitialRegeneration;                               // 0x0BC8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_BC9[0x7];                                      // 0x0BC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               FireEffectParticleComponent;                       // 0x0BD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        FireEffectAudioComponent;                          // 0x0BD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerController*               Builder;                                           // 0x0BE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DeployableBallista(int32 EntryPoint);
	void CheckCorrectTeam();
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void InpAxisEvt_Turn_Right_K2Node_InputAxisEvent_4(float AxisValue);
	void InpAxisEvt_Look_Up_K2Node_InputAxisEvent_18(float AxisValue);
	void OnCosmeticHit(EMordhauDamageType DamageType, uint8 SubType, const struct FHitResult& Hit, class AActor* Agent);
	void OnDied(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source, class AActor* Agent);
	void ReceiveBeginPlay();
	void InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_Fire_K2Node_InputActionEvent_2(const struct FKey& Key);
	void UserConstructionScript();
	struct FPOV PostProcessCameraPOV(const struct FPOV& InPOV);
	void OnRep_InitialRegeneration();

	bool CanDrive(class AMordhauCharacter* Character) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DeployableBallista_C">();
	}
	static class ABP_DeployableBallista_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DeployableBallista_C>();
	}
};
static_assert(alignof(ABP_DeployableBallista_C) == 0x000010, "Wrong alignment on ABP_DeployableBallista_C");
static_assert(sizeof(ABP_DeployableBallista_C) == 0x000BF0, "Wrong size on ABP_DeployableBallista_C");
static_assert(offsetof(ABP_DeployableBallista_C, UberGraphFrame) == 0x000B90, "Member 'ABP_DeployableBallista_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DeployableBallista_C, BP_VehicleDeployableBallista) == 0x000B98, "Member 'ABP_DeployableBallista_C::BP_VehicleDeployableBallista' has a wrong offset!");
static_assert(offsetof(ABP_DeployableBallista_C, MoveSound) == 0x000BA0, "Member 'ABP_DeployableBallista_C::MoveSound' has a wrong offset!");
static_assert(offsetof(ABP_DeployableBallista_C, ProjectileTurretShooter) == 0x000BA8, "Member 'ABP_DeployableBallista_C::ProjectileTurretShooter' has a wrong offset!");
static_assert(offsetof(ABP_DeployableBallista_C, Bolt) == 0x000BB0, "Member 'ABP_DeployableBallista_C::Bolt' has a wrong offset!");
static_assert(offsetof(ABP_DeployableBallista_C, LoadingSound) == 0x000BB8, "Member 'ABP_DeployableBallista_C::LoadingSound' has a wrong offset!");
static_assert(offsetof(ABP_DeployableBallista_C, LastTurnSound) == 0x000BC0, "Member 'ABP_DeployableBallista_C::LastTurnSound' has a wrong offset!");
static_assert(offsetof(ABP_DeployableBallista_C, InitialRegeneration) == 0x000BC8, "Member 'ABP_DeployableBallista_C::InitialRegeneration' has a wrong offset!");
static_assert(offsetof(ABP_DeployableBallista_C, FireEffectParticleComponent) == 0x000BD0, "Member 'ABP_DeployableBallista_C::FireEffectParticleComponent' has a wrong offset!");
static_assert(offsetof(ABP_DeployableBallista_C, FireEffectAudioComponent) == 0x000BD8, "Member 'ABP_DeployableBallista_C::FireEffectAudioComponent' has a wrong offset!");
static_assert(offsetof(ABP_DeployableBallista_C, Builder) == 0x000BE0, "Member 'ABP_DeployableBallista_C::Builder' has a wrong offset!");

}

