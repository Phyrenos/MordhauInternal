#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Modlist

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "MordhauOnlineSubsystem_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_Modlist.BP_ModList_C.ExecuteUbergraph_BP_ModList
// 0x0198 (0x0198 - 0x0000)
struct BP_ModList_C_ExecuteUbergraph_BP_ModList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UBP_ModListEntry_C* Ref)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Button_Index)>           K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	TMap<class FString, class FText>              K2Node_MakeMap_Map;                                // 0x0050(0x0050)()
	int32                                         K2Node_CustomEvent_Button_Index;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ContextPopupWrapper_C*              CallFunc_CreateContextPopup_Context_Popup_Wrapper; // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ModListEntry_C*                     K2Node_CustomEvent_Ref;                            // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00C0(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ModListEntry_C*                     CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UninstallMod_ReturnValue;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UnmountMod_ReturnValue;                   // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInstalledMod>                  CallFunc_GetAllInstalledMods_ReturnValue;          // 0x0118(0x0010)(ReferenceParm)
	struct FInstalledMod                          CallFunc_Array_Get_Item_1;                         // 0x0128(0x0060)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ModList_C_ExecuteUbergraph_BP_ModList) == 0x000008, "Wrong alignment on BP_ModList_C_ExecuteUbergraph_BP_ModList");
static_assert(sizeof(BP_ModList_C_ExecuteUbergraph_BP_ModList) == 0x000198, "Wrong size on BP_ModList_C_ExecuteUbergraph_BP_ModList");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, EntryPoint) == 0x000000, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, K2Node_CreateDelegate_OutputDelegate_2) == 0x000040, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, K2Node_MakeMap_Map) == 0x000050, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, K2Node_CustomEvent_Button_Index) == 0x0000A0, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::K2Node_CustomEvent_Button_Index' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, CallFunc_CreateContextPopup_Context_Popup_Wrapper) == 0x0000A8, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::CallFunc_CreateContextPopup_Context_Popup_Wrapper' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, K2Node_SwitchInteger_CmpSuccess) == 0x0000B0, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, K2Node_CustomEvent_Ref) == 0x0000B8, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::K2Node_CustomEvent_Ref' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, K2Node_Event_MyGeometry) == 0x0000C0, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, K2Node_Event_InDeltaTime) == 0x0000F8, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, CallFunc_Array_Get_Item) == 0x000100, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, CallFunc_UninstallMod_ReturnValue) == 0x000108, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::CallFunc_UninstallMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, CallFunc_UnmountMod_ReturnValue) == 0x000109, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::CallFunc_UnmountMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, CallFunc_Array_Length_ReturnValue) == 0x00010C, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, CallFunc_GetAllInstalledMods_ReturnValue) == 0x000118, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::CallFunc_GetAllInstalledMods_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, CallFunc_Array_Get_Item_1) == 0x000128, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, CallFunc_Array_Length_ReturnValue_1) == 0x000188, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, CallFunc_Less_IntInt_ReturnValue_1) == 0x00018C, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_ExecuteUbergraph_BP_ModList, CallFunc_Array_Add_ReturnValue) == 0x000190, "Member 'BP_ModList_C_ExecuteUbergraph_BP_ModList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_Modlist.BP_ModList_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_ModList_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ModList_C_Tick) == 0x000004, "Wrong alignment on BP_ModList_C_Tick");
static_assert(sizeof(BP_ModList_C_Tick) == 0x00003C, "Wrong size on BP_ModList_C_Tick");
static_assert(offsetof(BP_ModList_C_Tick, MyGeometry) == 0x000000, "Member 'BP_ModList_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_ModList_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_Modlist.BP_ModList_C.EntryHovered
// 0x0008 (0x0008 - 0x0000)
struct BP_ModList_C_EntryHovered final
{
public:
	class UBP_ModListEntry_C*                     Ref;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ModList_C_EntryHovered) == 0x000008, "Wrong alignment on BP_ModList_C_EntryHovered");
static_assert(sizeof(BP_ModList_C_EntryHovered) == 0x000008, "Wrong size on BP_ModList_C_EntryHovered");
static_assert(offsetof(BP_ModList_C_EntryHovered, Ref) == 0x000000, "Member 'BP_ModList_C_EntryHovered::Ref' has a wrong offset!");

// Function BP_Modlist.BP_ModList_C.ContextButtonClicked
// 0x0004 (0x0004 - 0x0000)
struct BP_ModList_C_ContextButtonClicked final
{
public:
	int32                                         Button_Index;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ModList_C_ContextButtonClicked) == 0x000004, "Wrong alignment on BP_ModList_C_ContextButtonClicked");
static_assert(sizeof(BP_ModList_C_ContextButtonClicked) == 0x000004, "Wrong size on BP_ModList_C_ContextButtonClicked");
static_assert(offsetof(BP_ModList_C_ContextButtonClicked, Button_Index) == 0x000000, "Member 'BP_ModList_C_ContextButtonClicked::Button_Index' has a wrong offset!");

// Function BP_Modlist.BP_ModList_C.Update
// 0x00C8 (0x00C8 - 0x0000)
struct BP_ModList_C_Update final
{
public:
	TArray<struct FModInfo>                       InMods;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModInfo                               CallFunc_Array_Get_Item;                           // 0x0020(0x0050)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0090(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x00A8(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ModList_C_Update) == 0x000008, "Wrong alignment on BP_ModList_C_Update");
static_assert(sizeof(BP_ModList_C_Update) == 0x0000C8, "Wrong size on BP_ModList_C_Update");
static_assert(offsetof(BP_ModList_C_Update, InMods) == 0x000000, "Member 'BP_ModList_C_Update::InMods' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Update, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_ModList_C_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Update, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_ModList_C_Update::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Update, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_ModList_C_Update::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Update, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_ModList_C_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Update, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_ModList_C_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Update, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'BP_ModList_C_Update::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Update, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000090, "Member 'BP_ModList_C_Update::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Update, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0000A8, "Member 'BP_ModList_C_Update::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Update, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_ModList_C_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Modlist.BP_ModList_C.Add Entry to list
// 0x00B8 (0x00B8 - 0x0000)
struct BP_ModList_C_Add_Entry_to_list final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Description;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Author;                                            // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FModInfo                               Mod;                                               // 0x0048(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ModListEntry_C*                     CallFunc_Create_ReturnValue;                       // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ModList_C_Add_Entry_to_list) == 0x000008, "Wrong alignment on BP_ModList_C_Add_Entry_to_list");
static_assert(sizeof(BP_ModList_C_Add_Entry_to_list) == 0x0000B8, "Wrong size on BP_ModList_C_Add_Entry_to_list");
static_assert(offsetof(BP_ModList_C_Add_Entry_to_list, Name_0) == 0x000000, "Member 'BP_ModList_C_Add_Entry_to_list::Name_0' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Add_Entry_to_list, Description) == 0x000018, "Member 'BP_ModList_C_Add_Entry_to_list::Description' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Add_Entry_to_list, Author) == 0x000030, "Member 'BP_ModList_C_Add_Entry_to_list::Author' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Add_Entry_to_list, Mod) == 0x000048, "Member 'BP_ModList_C_Add_Entry_to_list::Mod' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Add_Entry_to_list, CallFunc_GetPlayerController_ReturnValue) == 0x000098, "Member 'BP_ModList_C_Add_Entry_to_list::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Add_Entry_to_list, CallFunc_Create_ReturnValue) == 0x0000A0, "Member 'BP_ModList_C_Add_Entry_to_list::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Add_Entry_to_list, CallFunc_AddChild_ReturnValue) == 0x0000A8, "Member 'BP_ModList_C_Add_Entry_to_list::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Add_Entry_to_list, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'BP_ModList_C_Add_Entry_to_list::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_Modlist.BP_ModList_C.Get_TextAuthor_Text_0
// 0x0088 (0x0088 - 0x0000)
struct BP_ModList_C_Get_TextAuthor_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
};
static_assert(alignof(BP_ModList_C_Get_TextAuthor_Text_0) == 0x000008, "Wrong alignment on BP_ModList_C_Get_TextAuthor_Text_0");
static_assert(sizeof(BP_ModList_C_Get_TextAuthor_Text_0) == 0x000088, "Wrong size on BP_ModList_C_Get_TextAuthor_Text_0");
static_assert(offsetof(BP_ModList_C_Get_TextAuthor_Text_0, ReturnValue) == 0x000000, "Member 'BP_ModList_C_Get_TextAuthor_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Get_TextAuthor_Text_0, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_ModList_C_Get_TextAuthor_Text_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Get_TextAuthor_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_ModList_C_Get_TextAuthor_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Get_TextAuthor_Text_0, K2Node_MakeArray_Array) == 0x000060, "Member 'BP_ModList_C_Get_TextAuthor_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Get_TextAuthor_Text_0, CallFunc_Format_ReturnValue) == 0x000070, "Member 'BP_ModList_C_Get_TextAuthor_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_Modlist.BP_ModList_C.Get_TextDescription_Text_0
// 0x0020 (0x0020 - 0x0000)
struct BP_ModList_C_Get_TextDescription_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ModList_C_Get_TextDescription_Text_0) == 0x000008, "Wrong alignment on BP_ModList_C_Get_TextDescription_Text_0");
static_assert(sizeof(BP_ModList_C_Get_TextDescription_Text_0) == 0x000020, "Wrong size on BP_ModList_C_Get_TextDescription_Text_0");
static_assert(offsetof(BP_ModList_C_Get_TextDescription_Text_0, ReturnValue) == 0x000000, "Member 'BP_ModList_C_Get_TextDescription_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Get_TextDescription_Text_0, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_ModList_C_Get_TextDescription_Text_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Modlist.BP_ModList_C.Get_TextName_Text_0
// 0x0020 (0x0020 - 0x0000)
struct BP_ModList_C_Get_TextName_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ModList_C_Get_TextName_Text_0) == 0x000008, "Wrong alignment on BP_ModList_C_Get_TextName_Text_0");
static_assert(sizeof(BP_ModList_C_Get_TextName_Text_0) == 0x000020, "Wrong size on BP_ModList_C_Get_TextName_Text_0");
static_assert(offsetof(BP_ModList_C_Get_TextName_Text_0, ReturnValue) == 0x000000, "Member 'BP_ModList_C_Get_TextName_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Get_TextName_Text_0, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_ModList_C_Get_TextName_Text_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Modlist.BP_ModList_C.GetVisibility_0
// 0x000C (0x000C - 0x0000)
struct BP_ModList_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ModList_C_GetVisibility_0) == 0x000004, "Wrong alignment on BP_ModList_C_GetVisibility_0");
static_assert(sizeof(BP_ModList_C_GetVisibility_0) == 0x00000C, "Wrong size on BP_ModList_C_GetVisibility_0");
static_assert(offsetof(BP_ModList_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_ModList_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'BP_ModList_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'BP_ModList_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'BP_ModList_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_GetVisibility_0, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_ModList_C_GetVisibility_0::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_GetVisibility_0, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_ModList_C_GetVisibility_0::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_GetVisibility_0, K2Node_Select_Default) == 0x000009, "Member 'BP_ModList_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

// Function BP_Modlist.BP_ModList_C.Remove Entry from list
// 0x0010 (0x0010 - 0x0000)
struct BP_ModList_C_Remove_Entry_from_list final
{
public:
	const class UBP_ModListEntry_C*               Item;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChild_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ModList_C_Remove_Entry_from_list) == 0x000008, "Wrong alignment on BP_ModList_C_Remove_Entry_from_list");
static_assert(sizeof(BP_ModList_C_Remove_Entry_from_list) == 0x000010, "Wrong size on BP_ModList_C_Remove_Entry_from_list");
static_assert(offsetof(BP_ModList_C_Remove_Entry_from_list, Item) == 0x000000, "Member 'BP_ModList_C_Remove_Entry_from_list::Item' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Remove_Entry_from_list, CallFunc_RemoveChild_ReturnValue) == 0x000008, "Member 'BP_ModList_C_Remove_Entry_from_list::CallFunc_RemoveChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Remove_Entry_from_list, CallFunc_Array_RemoveItem_ReturnValue) == 0x000009, "Member 'BP_ModList_C_Remove_Entry_from_list::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_Modlist.BP_ModList_C.GetThumbnailBrowserVisibility
// 0x0002 (0x0002 - 0x0000)
struct BP_ModList_C_GetThumbnailBrowserVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ModList_C_GetThumbnailBrowserVisibility) == 0x000001, "Wrong alignment on BP_ModList_C_GetThumbnailBrowserVisibility");
static_assert(sizeof(BP_ModList_C_GetThumbnailBrowserVisibility) == 0x000002, "Wrong size on BP_ModList_C_GetThumbnailBrowserVisibility");
static_assert(offsetof(BP_ModList_C_GetThumbnailBrowserVisibility, ReturnValue) == 0x000000, "Member 'BP_ModList_C_GetThumbnailBrowserVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_GetThumbnailBrowserVisibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_ModList_C_GetThumbnailBrowserVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Modlist.BP_ModList_C.Get_TextVersion_Text_0
// 0x00A8 (0x00A8 - 0x0000)
struct BP_ModList_C_Get_TextVersion_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_GetDateTimeFromUnixTimestamp_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_AsDate_DateTime_ReturnValue;              // 0x0028(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0018)()
};
static_assert(alignof(BP_ModList_C_Get_TextVersion_Text_0) == 0x000008, "Wrong alignment on BP_ModList_C_Get_TextVersion_Text_0");
static_assert(sizeof(BP_ModList_C_Get_TextVersion_Text_0) == 0x0000A8, "Wrong size on BP_ModList_C_Get_TextVersion_Text_0");
static_assert(offsetof(BP_ModList_C_Get_TextVersion_Text_0, ReturnValue) == 0x000000, "Member 'BP_ModList_C_Get_TextVersion_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Get_TextVersion_Text_0, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_ModList_C_Get_TextVersion_Text_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Get_TextVersion_Text_0, CallFunc_GetDateTimeFromUnixTimestamp_ReturnValue) == 0x000020, "Member 'BP_ModList_C_Get_TextVersion_Text_0::CallFunc_GetDateTimeFromUnixTimestamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Get_TextVersion_Text_0, CallFunc_AsDate_DateTime_ReturnValue) == 0x000028, "Member 'BP_ModList_C_Get_TextVersion_Text_0::CallFunc_AsDate_DateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Get_TextVersion_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_ModList_C_Get_TextVersion_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Get_TextVersion_Text_0, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_ModList_C_Get_TextVersion_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_Get_TextVersion_Text_0, CallFunc_Format_ReturnValue) == 0x000090, "Member 'BP_ModList_C_Get_TextVersion_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_Modlist.BP_ModList_C.PopulatePakList
// 0x0090 (0x0090 - 0x0000)
struct BP_ModList_C_PopulatePakList final
{
public:
	TArray<class FString>                         PakFiles;                                          // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetAllPaksPathsInCustomPaksFolder_ReturnValue; // 0x0020(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ModFileEntry_C*                     CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCleanFilename_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0070(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ModList_C_PopulatePakList) == 0x000008, "Wrong alignment on BP_ModList_C_PopulatePakList");
static_assert(sizeof(BP_ModList_C_PopulatePakList) == 0x000090, "Wrong size on BP_ModList_C_PopulatePakList");
static_assert(offsetof(BP_ModList_C_PopulatePakList, PakFiles) == 0x000000, "Member 'BP_ModList_C_PopulatePakList::PakFiles' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_PopulatePakList, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_ModList_C_PopulatePakList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_PopulatePakList, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_ModList_C_PopulatePakList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_PopulatePakList, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_ModList_C_PopulatePakList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_PopulatePakList, CallFunc_GetAllPaksPathsInCustomPaksFolder_ReturnValue) == 0x000020, "Member 'BP_ModList_C_PopulatePakList::CallFunc_GetAllPaksPathsInCustomPaksFolder_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_PopulatePakList, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'BP_ModList_C_PopulatePakList::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_PopulatePakList, CallFunc_Create_ReturnValue) == 0x000038, "Member 'BP_ModList_C_PopulatePakList::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_PopulatePakList, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_ModList_C_PopulatePakList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_PopulatePakList, CallFunc_AddChild_ReturnValue) == 0x000050, "Member 'BP_ModList_C_PopulatePakList::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_PopulatePakList, CallFunc_GetCleanFilename_ReturnValue) == 0x000058, "Member 'BP_ModList_C_PopulatePakList::CallFunc_GetCleanFilename_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_PopulatePakList, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_ModList_C_PopulatePakList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_PopulatePakList, CallFunc_Conv_StringToText_ReturnValue) == 0x000070, "Member 'BP_ModList_C_PopulatePakList::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ModList_C_PopulatePakList, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_ModList_C_PopulatePakList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

