#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Scoreboard

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Scoreboard.BP_Scoreboard_C.ExecuteUbergraph_BP_Scoreboard
// 0x0068 (0x0068 - 0x0000)
struct BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauGameState*                      K2Node_DynamicCast_AsMordhau_Game_State;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ScoreboardTeamEntries_C*            CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBox*                         CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard) == 0x000008, "Wrong alignment on BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard");
static_assert(sizeof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard) == 0x000068, "Wrong size on BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard");
static_assert(offsetof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard, EntryPoint) == 0x000000, "Member 'BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard, Temp_int_Variable) == 0x000004, "Member 'BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard, Temp_int_Variable_1) == 0x000018, "Member 'BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard, K2Node_DynamicCast_AsMordhau_Game_State) == 0x000020, "Member 'BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard::K2Node_DynamicCast_AsMordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000030, "Member 'BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard, CallFunc_Create_ReturnValue) == 0x000038, "Member 'BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000048, "Member 'BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard, CallFunc_AddChild_ReturnValue) == 0x000058, "Member 'BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard, CallFunc_Array_Add_ReturnValue_1) == 0x000060, "Member 'BP_Scoreboard_C_ExecuteUbergraph_BP_Scoreboard::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.Refresh Players Array
// 0x0058 (0x0058 - 0x0000)
struct BP_Scoreboard_C_Refresh_Players_Array final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AMordhauPlayerState*>            CallFunc_SortPlayers_ReturnValue;                  // 0x0018(0x0010)(ReferenceParm)
	class ABP_MordhauGameState_C*                 K2Node_DynamicCast_AsBP_Mordhau_Game_State;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerState*                    K2Node_DynamicCast_AsMordhau_Player_State;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scoreboard_C_Refresh_Players_Array) == 0x000008, "Wrong alignment on BP_Scoreboard_C_Refresh_Players_Array");
static_assert(sizeof(BP_Scoreboard_C_Refresh_Players_Array) == 0x000058, "Wrong size on BP_Scoreboard_C_Refresh_Players_Array");
static_assert(offsetof(BP_Scoreboard_C_Refresh_Players_Array, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Scoreboard_C_Refresh_Players_Array::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh_Players_Array, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Scoreboard_C_Refresh_Players_Array::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh_Players_Array, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Scoreboard_C_Refresh_Players_Array::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh_Players_Array, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'BP_Scoreboard_C_Refresh_Players_Array::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh_Players_Array, CallFunc_SortPlayers_ReturnValue) == 0x000018, "Member 'BP_Scoreboard_C_Refresh_Players_Array::CallFunc_SortPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh_Players_Array, K2Node_DynamicCast_AsBP_Mordhau_Game_State) == 0x000028, "Member 'BP_Scoreboard_C_Refresh_Players_Array::K2Node_DynamicCast_AsBP_Mordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh_Players_Array, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Scoreboard_C_Refresh_Players_Array::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh_Players_Array, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_Scoreboard_C_Refresh_Players_Array::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh_Players_Array, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_Scoreboard_C_Refresh_Players_Array::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh_Players_Array, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_Scoreboard_C_Refresh_Players_Array::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh_Players_Array, K2Node_DynamicCast_AsMordhau_Player_State) == 0x000048, "Member 'BP_Scoreboard_C_Refresh_Players_Array::K2Node_DynamicCast_AsMordhau_Player_State' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh_Players_Array, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_Scoreboard_C_Refresh_Players_Array::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh_Players_Array, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'BP_Scoreboard_C_Refresh_Players_Array::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh_Players_Array, CallFunc_BooleanOR_ReturnValue) == 0x000052, "Member 'BP_Scoreboard_C_Refresh_Players_Array::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh_Players_Array, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'BP_Scoreboard_C_Refresh_Players_Array::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.Show
// 0x0001 (0x0001 - 0x0000)
struct BP_Scoreboard_C_Show final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scoreboard_C_Show) == 0x000001, "Wrong alignment on BP_Scoreboard_C_Show");
static_assert(sizeof(BP_Scoreboard_C_Show) == 0x000001, "Wrong size on BP_Scoreboard_C_Show");
static_assert(offsetof(BP_Scoreboard_C_Show, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'BP_Scoreboard_C_Show::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.Hide
// 0x0040 (0x0040 - 0x0000)
struct BP_Scoreboard_C_Hide final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauHUD*                            CallFunc_GetMordhauHUD_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeHUD_C*                         K2Node_DynamicCast_AsBP_Horde_HUD;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MordhauHUD_C*                       K2Node_DynamicCast_AsBP_Mordhau_HUD;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Scoreboard_C_Hide) == 0x000008, "Wrong alignment on BP_Scoreboard_C_Hide");
static_assert(sizeof(BP_Scoreboard_C_Hide) == 0x000040, "Wrong size on BP_Scoreboard_C_Hide");
static_assert(offsetof(BP_Scoreboard_C_Hide, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'BP_Scoreboard_C_Hide::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Hide, CallFunc_GetMordhauHUD_ReturnValue) == 0x000008, "Member 'BP_Scoreboard_C_Hide::CallFunc_GetMordhauHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Hide, K2Node_DynamicCast_AsBP_Horde_HUD) == 0x000010, "Member 'BP_Scoreboard_C_Hide::K2Node_DynamicCast_AsBP_Horde_HUD' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Hide, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Scoreboard_C_Hide::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Hide, K2Node_DynamicCast_AsBP_Mordhau_HUD) == 0x000020, "Member 'BP_Scoreboard_C_Hide::K2Node_DynamicCast_AsBP_Mordhau_HUD' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Hide, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_Scoreboard_C_Hide::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Hide, CallFunc_IsVisible_ReturnValue) == 0x000029, "Member 'BP_Scoreboard_C_Hide::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Hide, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'BP_Scoreboard_C_Hide::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Hide, CallFunc_IsVisible_ReturnValue_1) == 0x00002B, "Member 'BP_Scoreboard_C_Hide::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Hide, CallFunc_IsVisible_ReturnValue_2) == 0x00002C, "Member 'BP_Scoreboard_C_Hide::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Hide, CallFunc_BooleanAND_ReturnValue) == 0x00002D, "Member 'BP_Scoreboard_C_Hide::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Hide, CallFunc_BooleanOR_ReturnValue) == 0x00002E, "Member 'BP_Scoreboard_C_Hide::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Hide, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'BP_Scoreboard_C_Hide::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Hide, CallFunc_BooleanOR_ReturnValue_1) == 0x000038, "Member 'BP_Scoreboard_C_Hide::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.GetScoreboardTime
// 0x00F0 (0x00F0 - 0x0000)
struct BP_Scoreboard_C_GetScoreboardTime final
{
public:
	class FText                                   Time;                                              // 0x0000(0x0018)(Parm, OutParm)
	class FString                                 Minutes;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Seconds;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0058(0x0018)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauGameState_C*                 K2Node_DynamicCast_AsBP_Mordhau_Game_State;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetScoreboardTime_Time;                   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalMinutes_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSeconds_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00C8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scoreboard_C_GetScoreboardTime) == 0x000008, "Wrong alignment on BP_Scoreboard_C_GetScoreboardTime");
static_assert(sizeof(BP_Scoreboard_C_GetScoreboardTime) == 0x0000F0, "Wrong size on BP_Scoreboard_C_GetScoreboardTime");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, Time) == 0x000000, "Member 'BP_Scoreboard_C_GetScoreboardTime::Time' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, Minutes) == 0x000018, "Member 'BP_Scoreboard_C_GetScoreboardTime::Minutes' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, Seconds) == 0x000028, "Member 'BP_Scoreboard_C_GetScoreboardTime::Seconds' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_Scoreboard_C_GetScoreboardTime::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_Scoreboard_C_GetScoreboardTime::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, CallFunc_Conv_StringToText_ReturnValue) == 0x000058, "Member 'BP_Scoreboard_C_GetScoreboardTime::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, CallFunc_GetGameState_ReturnValue) == 0x000070, "Member 'BP_Scoreboard_C_GetScoreboardTime::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, K2Node_DynamicCast_AsBP_Mordhau_Game_State) == 0x000078, "Member 'BP_Scoreboard_C_GetScoreboardTime::K2Node_DynamicCast_AsBP_Mordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_Scoreboard_C_GetScoreboardTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, CallFunc_GetScoreboardTime_Time) == 0x000088, "Member 'BP_Scoreboard_C_GetScoreboardTime::CallFunc_GetScoreboardTime_Time' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, CallFunc_GetTotalMinutes_ReturnValue) == 0x000090, "Member 'BP_Scoreboard_C_GetScoreboardTime::CallFunc_GetTotalMinutes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, CallFunc_BreakTimespan_Days) == 0x000094, "Member 'BP_Scoreboard_C_GetScoreboardTime::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, CallFunc_BreakTimespan_Hours) == 0x000098, "Member 'BP_Scoreboard_C_GetScoreboardTime::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, CallFunc_BreakTimespan_Minutes) == 0x00009C, "Member 'BP_Scoreboard_C_GetScoreboardTime::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, CallFunc_BreakTimespan_Seconds) == 0x0000A0, "Member 'BP_Scoreboard_C_GetScoreboardTime::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, CallFunc_BreakTimespan_Milliseconds) == 0x0000A4, "Member 'BP_Scoreboard_C_GetScoreboardTime::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, CallFunc_FFloor_ReturnValue) == 0x0000A8, "Member 'BP_Scoreboard_C_GetScoreboardTime::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_Scoreboard_C_GetScoreboardTime::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, CallFunc_Conv_IntToString_ReturnValue) == 0x0000B0, "Member 'BP_Scoreboard_C_GetScoreboardTime::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, CallFunc_GetSeconds_ReturnValue) == 0x0000C0, "Member 'BP_Scoreboard_C_GetScoreboardTime::CallFunc_GetSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, CallFunc_Conv_IntToText_ReturnValue) == 0x0000C8, "Member 'BP_Scoreboard_C_GetScoreboardTime::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetScoreboardTime, CallFunc_Conv_TextToString_ReturnValue) == 0x0000E0, "Member 'BP_Scoreboard_C_GetScoreboardTime::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.GetTeam1Name
// 0x0030 (0x0030 - 0x0000)
struct BP_Scoreboard_C_GetTeam1Name final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetTeamName_Text;                         // 0x0018(0x0018)()
};
static_assert(alignof(BP_Scoreboard_C_GetTeam1Name) == 0x000008, "Wrong alignment on BP_Scoreboard_C_GetTeam1Name");
static_assert(sizeof(BP_Scoreboard_C_GetTeam1Name) == 0x000030, "Wrong size on BP_Scoreboard_C_GetTeam1Name");
static_assert(offsetof(BP_Scoreboard_C_GetTeam1Name, Text) == 0x000000, "Member 'BP_Scoreboard_C_GetTeam1Name::Text' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeam1Name, CallFunc_GetTeamName_Text) == 0x000018, "Member 'BP_Scoreboard_C_GetTeam1Name::CallFunc_GetTeamName_Text' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.GetTeamName
// 0x0060 (0x0060 - 0x0000)
struct BP_Scoreboard_C_GetTeamName final
{
public:
	int32                                         Team;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0008(0x0018)(Parm, OutParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauGameState*                      K2Node_DynamicCast_AsMordhau_Game_State;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetTeamName_ReturnValue;                  // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
};
static_assert(alignof(BP_Scoreboard_C_GetTeamName) == 0x000008, "Wrong alignment on BP_Scoreboard_C_GetTeamName");
static_assert(sizeof(BP_Scoreboard_C_GetTeamName) == 0x000060, "Wrong size on BP_Scoreboard_C_GetTeamName");
static_assert(offsetof(BP_Scoreboard_C_GetTeamName, Team) == 0x000000, "Member 'BP_Scoreboard_C_GetTeamName::Team' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeamName, Text) == 0x000008, "Member 'BP_Scoreboard_C_GetTeamName::Text' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeamName, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'BP_Scoreboard_C_GetTeamName::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeamName, K2Node_DynamicCast_AsMordhau_Game_State) == 0x000028, "Member 'BP_Scoreboard_C_GetTeamName::K2Node_DynamicCast_AsMordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeamName, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Scoreboard_C_GetTeamName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeamName, CallFunc_GetTeamName_ReturnValue) == 0x000038, "Member 'BP_Scoreboard_C_GetTeamName::CallFunc_GetTeamName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeamName, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'BP_Scoreboard_C_GetTeamName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.GetTeam2Name
// 0x0030 (0x0030 - 0x0000)
struct BP_Scoreboard_C_GetTeam2Name final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetTeamName_Text;                         // 0x0018(0x0018)()
};
static_assert(alignof(BP_Scoreboard_C_GetTeam2Name) == 0x000008, "Wrong alignment on BP_Scoreboard_C_GetTeam2Name");
static_assert(sizeof(BP_Scoreboard_C_GetTeam2Name) == 0x000030, "Wrong size on BP_Scoreboard_C_GetTeam2Name");
static_assert(offsetof(BP_Scoreboard_C_GetTeam2Name, Text) == 0x000000, "Member 'BP_Scoreboard_C_GetTeam2Name::Text' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeam2Name, CallFunc_GetTeamName_Text) == 0x000018, "Member 'BP_Scoreboard_C_GetTeam2Name::CallFunc_GetTeamName_Text' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.GetTeamPlayers
// 0x0040 (0x0040 - 0x0000)
struct BP_Scoreboard_C_GetTeamPlayers final
{
public:
	int32                                         Team;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0008(0x0018)(Parm, OutParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0018)()
};
static_assert(alignof(BP_Scoreboard_C_GetTeamPlayers) == 0x000008, "Wrong alignment on BP_Scoreboard_C_GetTeamPlayers");
static_assert(sizeof(BP_Scoreboard_C_GetTeamPlayers) == 0x000040, "Wrong size on BP_Scoreboard_C_GetTeamPlayers");
static_assert(offsetof(BP_Scoreboard_C_GetTeamPlayers, Team) == 0x000000, "Member 'BP_Scoreboard_C_GetTeamPlayers::Team' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeamPlayers, Text) == 0x000008, "Member 'BP_Scoreboard_C_GetTeamPlayers::Text' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeamPlayers, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_Scoreboard_C_GetTeamPlayers::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeamPlayers, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'BP_Scoreboard_C_GetTeamPlayers::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.GetTeam1Players
// 0x0030 (0x0030 - 0x0000)
struct BP_Scoreboard_C_GetTeam1Players final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetTeamPlayers_Text;                      // 0x0018(0x0018)()
};
static_assert(alignof(BP_Scoreboard_C_GetTeam1Players) == 0x000008, "Wrong alignment on BP_Scoreboard_C_GetTeam1Players");
static_assert(sizeof(BP_Scoreboard_C_GetTeam1Players) == 0x000030, "Wrong size on BP_Scoreboard_C_GetTeam1Players");
static_assert(offsetof(BP_Scoreboard_C_GetTeam1Players, Text) == 0x000000, "Member 'BP_Scoreboard_C_GetTeam1Players::Text' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeam1Players, CallFunc_GetTeamPlayers_Text) == 0x000018, "Member 'BP_Scoreboard_C_GetTeam1Players::CallFunc_GetTeamPlayers_Text' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.GetTeam2Players
// 0x0030 (0x0030 - 0x0000)
struct BP_Scoreboard_C_GetTeam2Players final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetTeamPlayers_Text;                      // 0x0018(0x0018)()
};
static_assert(alignof(BP_Scoreboard_C_GetTeam2Players) == 0x000008, "Wrong alignment on BP_Scoreboard_C_GetTeam2Players");
static_assert(sizeof(BP_Scoreboard_C_GetTeam2Players) == 0x000030, "Wrong size on BP_Scoreboard_C_GetTeam2Players");
static_assert(offsetof(BP_Scoreboard_C_GetTeam2Players, Text) == 0x000000, "Member 'BP_Scoreboard_C_GetTeam2Players::Text' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeam2Players, CallFunc_GetTeamPlayers_Text) == 0x000018, "Member 'BP_Scoreboard_C_GetTeam2Players::CallFunc_GetTeamPlayers_Text' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.GetGameModeName
// 0x0030 (0x0030 - 0x0000)
struct BP_Scoreboard_C_GetGameModeName final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauGameState*                      K2Node_DynamicCast_AsMordhau_Game_State;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Scoreboard_C_GetGameModeName) == 0x000008, "Wrong alignment on BP_Scoreboard_C_GetGameModeName");
static_assert(sizeof(BP_Scoreboard_C_GetGameModeName) == 0x000030, "Wrong size on BP_Scoreboard_C_GetGameModeName");
static_assert(offsetof(BP_Scoreboard_C_GetGameModeName, Text) == 0x000000, "Member 'BP_Scoreboard_C_GetGameModeName::Text' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetGameModeName, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'BP_Scoreboard_C_GetGameModeName::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetGameModeName, K2Node_DynamicCast_AsMordhau_Game_State) == 0x000020, "Member 'BP_Scoreboard_C_GetGameModeName::K2Node_DynamicCast_AsMordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetGameModeName, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Scoreboard_C_GetGameModeName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetGameModeName, CallFunc_IsValidClass_ReturnValue) == 0x000029, "Member 'BP_Scoreboard_C_GetGameModeName::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.GetObjectiveName
// 0x0048 (0x0048 - 0x0000)
struct BP_Scoreboard_C_GetObjectiveName final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauGameState_C*                 K2Node_DynamicCast_AsBP_Mordhau_Game_State;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetScoreboardObjectiveName_NewParam;      // 0x0030(0x0018)()
};
static_assert(alignof(BP_Scoreboard_C_GetObjectiveName) == 0x000008, "Wrong alignment on BP_Scoreboard_C_GetObjectiveName");
static_assert(sizeof(BP_Scoreboard_C_GetObjectiveName) == 0x000048, "Wrong size on BP_Scoreboard_C_GetObjectiveName");
static_assert(offsetof(BP_Scoreboard_C_GetObjectiveName, Text) == 0x000000, "Member 'BP_Scoreboard_C_GetObjectiveName::Text' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetObjectiveName, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'BP_Scoreboard_C_GetObjectiveName::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetObjectiveName, K2Node_DynamicCast_AsBP_Mordhau_Game_State) == 0x000020, "Member 'BP_Scoreboard_C_GetObjectiveName::K2Node_DynamicCast_AsBP_Mordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetObjectiveName, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Scoreboard_C_GetObjectiveName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetObjectiveName, CallFunc_GetScoreboardObjectiveName_NewParam) == 0x000030, "Member 'BP_Scoreboard_C_GetObjectiveName::CallFunc_GetScoreboardObjectiveName_NewParam' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.GetTeam1ObjectiveValue
// 0x0030 (0x0030 - 0x0000)
struct BP_Scoreboard_C_GetTeam1ObjectiveValue final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetTeamObjectiveValue_Text;               // 0x0018(0x0018)()
};
static_assert(alignof(BP_Scoreboard_C_GetTeam1ObjectiveValue) == 0x000008, "Wrong alignment on BP_Scoreboard_C_GetTeam1ObjectiveValue");
static_assert(sizeof(BP_Scoreboard_C_GetTeam1ObjectiveValue) == 0x000030, "Wrong size on BP_Scoreboard_C_GetTeam1ObjectiveValue");
static_assert(offsetof(BP_Scoreboard_C_GetTeam1ObjectiveValue, Text) == 0x000000, "Member 'BP_Scoreboard_C_GetTeam1ObjectiveValue::Text' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeam1ObjectiveValue, CallFunc_GetTeamObjectiveValue_Text) == 0x000018, "Member 'BP_Scoreboard_C_GetTeam1ObjectiveValue::CallFunc_GetTeamObjectiveValue_Text' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.GetTeam2ObjectiveValue
// 0x0030 (0x0030 - 0x0000)
struct BP_Scoreboard_C_GetTeam2ObjectiveValue final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetTeamObjectiveValue_Text;               // 0x0018(0x0018)()
};
static_assert(alignof(BP_Scoreboard_C_GetTeam2ObjectiveValue) == 0x000008, "Wrong alignment on BP_Scoreboard_C_GetTeam2ObjectiveValue");
static_assert(sizeof(BP_Scoreboard_C_GetTeam2ObjectiveValue) == 0x000030, "Wrong size on BP_Scoreboard_C_GetTeam2ObjectiveValue");
static_assert(offsetof(BP_Scoreboard_C_GetTeam2ObjectiveValue, Text) == 0x000000, "Member 'BP_Scoreboard_C_GetTeam2ObjectiveValue::Text' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeam2ObjectiveValue, CallFunc_GetTeamObjectiveValue_Text) == 0x000018, "Member 'BP_Scoreboard_C_GetTeam2ObjectiveValue::CallFunc_GetTeamObjectiveValue_Text' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.GetTeamObjectiveValue
// 0x0060 (0x0060 - 0x0000)
struct BP_Scoreboard_C_GetTeamObjectiveValue final
{
public:
	int32                                         Team;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0008(0x0018)(Parm, OutParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauGameState_C*                 K2Node_DynamicCast_AsBP_Mordhau_Game_State;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetScoreboardTeamObjectiveValue_Output;   // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
};
static_assert(alignof(BP_Scoreboard_C_GetTeamObjectiveValue) == 0x000008, "Wrong alignment on BP_Scoreboard_C_GetTeamObjectiveValue");
static_assert(sizeof(BP_Scoreboard_C_GetTeamObjectiveValue) == 0x000060, "Wrong size on BP_Scoreboard_C_GetTeamObjectiveValue");
static_assert(offsetof(BP_Scoreboard_C_GetTeamObjectiveValue, Team) == 0x000000, "Member 'BP_Scoreboard_C_GetTeamObjectiveValue::Team' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeamObjectiveValue, Text) == 0x000008, "Member 'BP_Scoreboard_C_GetTeamObjectiveValue::Text' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeamObjectiveValue, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'BP_Scoreboard_C_GetTeamObjectiveValue::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeamObjectiveValue, K2Node_DynamicCast_AsBP_Mordhau_Game_State) == 0x000028, "Member 'BP_Scoreboard_C_GetTeamObjectiveValue::K2Node_DynamicCast_AsBP_Mordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeamObjectiveValue, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Scoreboard_C_GetTeamObjectiveValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeamObjectiveValue, CallFunc_GetScoreboardTeamObjectiveValue_Output) == 0x000038, "Member 'BP_Scoreboard_C_GetTeamObjectiveValue::CallFunc_GetScoreboardTeamObjectiveValue_Output' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetTeamObjectiveValue, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'BP_Scoreboard_C_GetTeamObjectiveValue::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.GetMapName
// 0x0040 (0x0040 - 0x0000)
struct BP_Scoreboard_C_GetMapName final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class FString                                 CallFunc_GetMapName_ReturnValue;                   // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
};
static_assert(alignof(BP_Scoreboard_C_GetMapName) == 0x000008, "Wrong alignment on BP_Scoreboard_C_GetMapName");
static_assert(sizeof(BP_Scoreboard_C_GetMapName) == 0x000040, "Wrong size on BP_Scoreboard_C_GetMapName");
static_assert(offsetof(BP_Scoreboard_C_GetMapName, Text) == 0x000000, "Member 'BP_Scoreboard_C_GetMapName::Text' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetMapName, CallFunc_GetMapName_ReturnValue) == 0x000018, "Member 'BP_Scoreboard_C_GetMapName::CallFunc_GetMapName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetMapName, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_Scoreboard_C_GetMapName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.GetServerName
// 0x0058 (0x0058 - 0x0000)
struct BP_Scoreboard_C_GetServerName final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowServerInScoreboard_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauGameInstance*                   K2Node_DynamicCast_AsMordhau_Game_Instance;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
};
static_assert(alignof(BP_Scoreboard_C_GetServerName) == 0x000008, "Wrong alignment on BP_Scoreboard_C_GetServerName");
static_assert(sizeof(BP_Scoreboard_C_GetServerName) == 0x000058, "Wrong size on BP_Scoreboard_C_GetServerName");
static_assert(offsetof(BP_Scoreboard_C_GetServerName, Text) == 0x000000, "Member 'BP_Scoreboard_C_GetServerName::Text' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetServerName, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000018, "Member 'BP_Scoreboard_C_GetServerName::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetServerName, CallFunc_ShouldShowServerInScoreboard_ReturnValue) == 0x000020, "Member 'BP_Scoreboard_C_GetServerName::CallFunc_ShouldShowServerInScoreboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetServerName, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'BP_Scoreboard_C_GetServerName::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetServerName, K2Node_DynamicCast_AsMordhau_Game_Instance) == 0x000030, "Member 'BP_Scoreboard_C_GetServerName::K2Node_DynamicCast_AsMordhau_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetServerName, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Scoreboard_C_GetServerName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetServerName, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BP_Scoreboard_C_GetServerName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.GetMaxPlayers
// 0x0020 (0x0020 - 0x0000)
struct BP_Scoreboard_C_GetMaxPlayers final
{
public:
	int32                                         DivideBy;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Text;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMordhauGameInstance*                   K2Node_DynamicCast_AsMordhau_Game_Instance;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Scoreboard_C_GetMaxPlayers) == 0x000008, "Wrong alignment on BP_Scoreboard_C_GetMaxPlayers");
static_assert(sizeof(BP_Scoreboard_C_GetMaxPlayers) == 0x000020, "Wrong size on BP_Scoreboard_C_GetMaxPlayers");
static_assert(offsetof(BP_Scoreboard_C_GetMaxPlayers, DivideBy) == 0x000000, "Member 'BP_Scoreboard_C_GetMaxPlayers::DivideBy' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetMaxPlayers, Text) == 0x000004, "Member 'BP_Scoreboard_C_GetMaxPlayers::Text' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetMaxPlayers, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BP_Scoreboard_C_GetMaxPlayers::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetMaxPlayers, K2Node_DynamicCast_AsMordhau_Game_Instance) == 0x000010, "Member 'BP_Scoreboard_C_GetMaxPlayers::K2Node_DynamicCast_AsMordhau_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetMaxPlayers, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Scoreboard_C_GetMaxPlayers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_GetMaxPlayers, CallFunc_Divide_IntInt_ReturnValue) == 0x00001C, "Member 'BP_Scoreboard_C_GetMaxPlayers::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.Refresh
// 0x0160 (0x0160 - 0x0000)
struct BP_Scoreboard_C_Refresh final
{
public:
	class AMordhauPlayerState*                    PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ScoreboardEntryParent_C*            Scoreboard_Entry;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScrollBox*                             EntryTeamListScrollBox;                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ScoreboardDuelEntry_C*              Big_Scoreboard_Entry;                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ScoreboardEntry_C*                  Small_Scoreboard_Entry;                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauPlayerState*                    EntryPlayerState;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ScoreboardEntryMinimalHorde_C*      CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MordhauGameState_C*                 K2Node_DynamicCast_AsBP_Mordhau_Game_State;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ScoreboardTeamfightEntry_C*         CallFunc_Create_ReturnValue_1;                     // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ScoreboardEntry_C*                  CallFunc_Create_ReturnValue_2;                     // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_2;                   // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0094(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetChildIndex_ReturnValue;                // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_OneTeamScoreboardHordeSkillTree_C*  K2Node_DynamicCast_AsBP_One_Team_Scoreboard_Horde_Skill_Tree; // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ScoreboardDuelEntry_C*              CallFunc_Create_ReturnValue_3;                     // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_3;                   // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ScoreboardEntryParent_C*            K2Node_DynamicCast_AsBP_Scoreboard_Entry_Parent;   // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ScoreboardTeamEntries_C*            CallFunc_Array_Get_Item_2;                         // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Scoreboard_C_Refresh) == 0x000008, "Wrong alignment on BP_Scoreboard_C_Refresh");
static_assert(sizeof(BP_Scoreboard_C_Refresh) == 0x000160, "Wrong size on BP_Scoreboard_C_Refresh");
static_assert(offsetof(BP_Scoreboard_C_Refresh, PlayerState) == 0x000000, "Member 'BP_Scoreboard_C_Refresh::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, Scoreboard_Entry) == 0x000008, "Member 'BP_Scoreboard_C_Refresh::Scoreboard_Entry' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, EntryTeamListScrollBox) == 0x000010, "Member 'BP_Scoreboard_C_Refresh::EntryTeamListScrollBox' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, Big_Scoreboard_Entry) == 0x000018, "Member 'BP_Scoreboard_C_Refresh::Big_Scoreboard_Entry' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, Small_Scoreboard_Entry) == 0x000020, "Member 'BP_Scoreboard_C_Refresh::Small_Scoreboard_Entry' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, EntryPlayerState) == 0x000028, "Member 'BP_Scoreboard_C_Refresh::EntryPlayerState' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_Create_ReturnValue) == 0x000030, "Member 'BP_Scoreboard_C_Refresh::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'BP_Scoreboard_C_Refresh::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'BP_Scoreboard_C_Refresh::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, K2Node_DynamicCast_AsBP_Mordhau_Game_State) == 0x000048, "Member 'BP_Scoreboard_C_Refresh::K2Node_DynamicCast_AsBP_Mordhau_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Scoreboard_C_Refresh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_Create_ReturnValue_1) == 0x000058, "Member 'BP_Scoreboard_C_Refresh::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_AddChild_ReturnValue) == 0x000060, "Member 'BP_Scoreboard_C_Refresh::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_AddChild_ReturnValue_1) == 0x000068, "Member 'BP_Scoreboard_C_Refresh::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_Create_ReturnValue_2) == 0x000070, "Member 'BP_Scoreboard_C_Refresh::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_AddChild_ReturnValue_2) == 0x000078, "Member 'BP_Scoreboard_C_Refresh::CallFunc_AddChild_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_GetDesiredSize_ReturnValue) == 0x000080, "Member 'BP_Scoreboard_C_Refresh::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_BreakVector2D_X) == 0x000088, "Member 'BP_Scoreboard_C_Refresh::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_BreakVector2D_Y) == 0x00008C, "Member 'BP_Scoreboard_C_Refresh::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_Scoreboard_C_Refresh::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_GetCachedGeometry_ReturnValue) == 0x000094, "Member 'BP_Scoreboard_C_Refresh::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_GetChildIndex_ReturnValue) == 0x0000CC, "Member 'BP_Scoreboard_C_Refresh::CallFunc_GetChildIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_GetLocalSize_ReturnValue) == 0x0000D0, "Member 'BP_Scoreboard_C_Refresh::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_BreakVector2D_X_1) == 0x0000D8, "Member 'BP_Scoreboard_C_Refresh::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_BreakVector2D_Y_1) == 0x0000DC, "Member 'BP_Scoreboard_C_Refresh::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000E0, "Member 'BP_Scoreboard_C_Refresh::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_FTrunc_ReturnValue) == 0x0000E4, "Member 'BP_Scoreboard_C_Refresh::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_Scoreboard_C_Refresh::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, K2Node_DynamicCast_AsBP_One_Team_Scoreboard_Horde_Skill_Tree) == 0x0000F0, "Member 'BP_Scoreboard_C_Refresh::K2Node_DynamicCast_AsBP_One_Team_Scoreboard_Horde_Skill_Tree' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, K2Node_DynamicCast_bSuccess_1) == 0x0000F8, "Member 'BP_Scoreboard_C_Refresh::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_Create_ReturnValue_3) == 0x000100, "Member 'BP_Scoreboard_C_Refresh::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_AddChild_ReturnValue_3) == 0x000108, "Member 'BP_Scoreboard_C_Refresh::CallFunc_AddChild_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_GetPlayerController_ReturnValue) == 0x000110, "Member 'BP_Scoreboard_C_Refresh::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000118, "Member 'BP_Scoreboard_C_Refresh::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000119, "Member 'BP_Scoreboard_C_Refresh::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_Array_Get_Item) == 0x00011C, "Member 'BP_Scoreboard_C_Refresh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_BooleanAND_ReturnValue) == 0x000120, "Member 'BP_Scoreboard_C_Refresh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_Subtract_IntInt_ReturnValue) == 0x000124, "Member 'BP_Scoreboard_C_Refresh::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_BooleanAND_ReturnValue_1) == 0x000128, "Member 'BP_Scoreboard_C_Refresh::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_GetChildAt_ReturnValue) == 0x000130, "Member 'BP_Scoreboard_C_Refresh::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_BooleanAND_ReturnValue_2) == 0x000138, "Member 'BP_Scoreboard_C_Refresh::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, K2Node_DynamicCast_AsBP_Scoreboard_Entry_Parent) == 0x000140, "Member 'BP_Scoreboard_C_Refresh::K2Node_DynamicCast_AsBP_Scoreboard_Entry_Parent' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, K2Node_DynamicCast_bSuccess_2) == 0x000148, "Member 'BP_Scoreboard_C_Refresh::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_Array_Get_Item_1) == 0x00014C, "Member 'BP_Scoreboard_C_Refresh::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_Array_Get_Item_2) == 0x000150, "Member 'BP_Scoreboard_C_Refresh::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_Add_IntInt_ReturnValue) == 0x000158, "Member 'BP_Scoreboard_C_Refresh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Refresh, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00015C, "Member 'BP_Scoreboard_C_Refresh::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.Update
// 0x0070 (0x0070 - 0x0000)
struct BP_Scoreboard_C_Update final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ScoreboardTeamEntries_C*            CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveChildAt_ReturnValue;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauPlayerState*                    CallFunc_Array_Get_Item_2;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Scoreboard_C_Update) == 0x000008, "Wrong alignment on BP_Scoreboard_C_Update");
static_assert(sizeof(BP_Scoreboard_C_Update) == 0x000070, "Wrong size on BP_Scoreboard_C_Update");
static_assert(offsetof(BP_Scoreboard_C_Update, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_Scoreboard_C_Update::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_Scoreboard_C_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_Scoreboard_C_Update::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_Scoreboard_C_Update::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_Scoreboard_C_Update::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_Scoreboard_C_Update::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, Temp_int_Array_Index_Variable_2) == 0x000018, "Member 'BP_Scoreboard_C_Update::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, Temp_int_Loop_Counter_Variable_2) == 0x00001C, "Member 'BP_Scoreboard_C_Update::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, CallFunc_Add_IntInt_ReturnValue_2) == 0x000020, "Member 'BP_Scoreboard_C_Update::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, CallFunc_IsVisible_ReturnValue) == 0x000024, "Member 'BP_Scoreboard_C_Update::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Scoreboard_C_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_Scoreboard_C_Update::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_Scoreboard_C_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Scoreboard_C_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, CallFunc_GetChildrenCount_ReturnValue) == 0x000040, "Member 'BP_Scoreboard_C_Update::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, CallFunc_Subtract_IntInt_ReturnValue) == 0x000044, "Member 'BP_Scoreboard_C_Update::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'BP_Scoreboard_C_Update::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, CallFunc_RemoveChildAt_ReturnValue) == 0x000049, "Member 'BP_Scoreboard_C_Update::CallFunc_RemoveChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, CallFunc_Array_Get_Item_2) == 0x000050, "Member 'BP_Scoreboard_C_Update::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_Scoreboard_C_Update::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, CallFunc_Less_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_Scoreboard_C_Update::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, CallFunc_MakeLiteralInt_ReturnValue) == 0x000060, "Member 'BP_Scoreboard_C_Update::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, CallFunc_Array_Length_ReturnValue_2) == 0x000064, "Member 'BP_Scoreboard_C_Update::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Update, CallFunc_Less_IntInt_ReturnValue_2) == 0x000068, "Member 'BP_Scoreboard_C_Update::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_Scoreboard.BP_Scoreboard_C.Get Team Color
// 0x0078 (0x0078 - 0x0000)
struct BP_Scoreboard_C_Get_Team_Color final
{
public:
	int32                                         Team;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Output__Linear_;                                   // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            Output__Slate_;                                    // 0x0018(0x0028)(Parm, OutParm)
	struct FLinearColor                           CallFunc_GetTeamColor_Output__Linear_;             // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetTeamColor_Output__Slate_;              // 0x0050(0x0028)()
};
static_assert(alignof(BP_Scoreboard_C_Get_Team_Color) == 0x000008, "Wrong alignment on BP_Scoreboard_C_Get_Team_Color");
static_assert(sizeof(BP_Scoreboard_C_Get_Team_Color) == 0x000078, "Wrong size on BP_Scoreboard_C_Get_Team_Color");
static_assert(offsetof(BP_Scoreboard_C_Get_Team_Color, Team) == 0x000000, "Member 'BP_Scoreboard_C_Get_Team_Color::Team' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Get_Team_Color, Output__Linear_) == 0x000004, "Member 'BP_Scoreboard_C_Get_Team_Color::Output__Linear_' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Get_Team_Color, Output__Slate_) == 0x000018, "Member 'BP_Scoreboard_C_Get_Team_Color::Output__Slate_' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Get_Team_Color, CallFunc_GetTeamColor_Output__Linear_) == 0x000040, "Member 'BP_Scoreboard_C_Get_Team_Color::CallFunc_GetTeamColor_Output__Linear_' has a wrong offset!");
static_assert(offsetof(BP_Scoreboard_C_Get_Team_Color, CallFunc_GetTeamColor_Output__Slate_) == 0x000050, "Member 'BP_Scoreboard_C_Get_Team_Color::CallFunc_GetTeamColor_Output__Slate_' has a wrong offset!");

}

