#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ArmorTierFilterTab

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_ArmorTierFilterTab.BP_ArmorTierFilterTab_C
// 0x0168 (0x03C8 - 0x0260)
class UBP_ArmorTierFilterTab_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UBP_ArmorLevelIndicator_C*              BP_ArmorLevelIndicator;                            // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ItemPointCost_C*                    BP_ItemPointCost;                                  // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_0;                                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_73;                                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_106;                                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_519;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_729;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Background;                                  // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay;                                           // 0x02B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint8                                         Filter_Tab_Armor_Level;                            // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Selected;                                          // 0x02B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BA[0x6];                                      // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UBP_ArmorTierFilterTab_C* Tab)> On_Click;                                          // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FCharacterProfile                      Profile;                                           // 0x02D0(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Equipped_Armor_Level;                              // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ArmorTierFilterTooltip_C*           Tooltip;                                           // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanAfford;                                        // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Has_Selected_Item;                                 // 0x0399(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A[0x6];                                      // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Description;                                       // 0x03A0(0x0018)(Edit, BlueprintVisible)
	bool                                          bIsPeasant;                                        // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EWearableSlot                                 WearableSlot;                                      // 0x03B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA[0x2];                                      // 0x03BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Cost;                                              // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CostOfEquippedWearable;                            // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ArmorTierFilterTab(int32 EntryPoint);
	void Construct();
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void Update();
	struct FLinearColor GetColorAndOpacity_0();
	class UWidget* Get_Button_0_ToolTipWidget_0();
	ESlateVisibility GetVisibility_0();
	bool GetbIsEnabled_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ArmorTierFilterTab_C">();
	}
	static class UBP_ArmorTierFilterTab_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ArmorTierFilterTab_C>();
	}
};
static_assert(alignof(UBP_ArmorTierFilterTab_C) == 0x000008, "Wrong alignment on UBP_ArmorTierFilterTab_C");
static_assert(sizeof(UBP_ArmorTierFilterTab_C) == 0x0003C8, "Wrong size on UBP_ArmorTierFilterTab_C");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, UberGraphFrame) == 0x000260, "Member 'UBP_ArmorTierFilterTab_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, BP_ArmorLevelIndicator) == 0x000268, "Member 'UBP_ArmorTierFilterTab_C::BP_ArmorLevelIndicator' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, BP_ItemPointCost) == 0x000270, "Member 'UBP_ArmorTierFilterTab_C::BP_ItemPointCost' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, Button_0) == 0x000278, "Member 'UBP_ArmorTierFilterTab_C::Button_0' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, Image) == 0x000280, "Member 'UBP_ArmorTierFilterTab_C::Image' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, Image_73) == 0x000288, "Member 'UBP_ArmorTierFilterTab_C::Image_73' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, Image_106) == 0x000290, "Member 'UBP_ArmorTierFilterTab_C::Image_106' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, Image_519) == 0x000298, "Member 'UBP_ArmorTierFilterTab_C::Image_519' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, Image_729) == 0x0002A0, "Member 'UBP_ArmorTierFilterTab_C::Image_729' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, Image_Background) == 0x0002A8, "Member 'UBP_ArmorTierFilterTab_C::Image_Background' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, Overlay) == 0x0002B0, "Member 'UBP_ArmorTierFilterTab_C::Overlay' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, Filter_Tab_Armor_Level) == 0x0002B8, "Member 'UBP_ArmorTierFilterTab_C::Filter_Tab_Armor_Level' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, Selected) == 0x0002B9, "Member 'UBP_ArmorTierFilterTab_C::Selected' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, On_Click) == 0x0002C0, "Member 'UBP_ArmorTierFilterTab_C::On_Click' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, Profile) == 0x0002D0, "Member 'UBP_ArmorTierFilterTab_C::Profile' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, Equipped_Armor_Level) == 0x000388, "Member 'UBP_ArmorTierFilterTab_C::Equipped_Armor_Level' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, Tooltip) == 0x000390, "Member 'UBP_ArmorTierFilterTab_C::Tooltip' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, bCanAfford) == 0x000398, "Member 'UBP_ArmorTierFilterTab_C::bCanAfford' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, Has_Selected_Item) == 0x000399, "Member 'UBP_ArmorTierFilterTab_C::Has_Selected_Item' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, Description) == 0x0003A0, "Member 'UBP_ArmorTierFilterTab_C::Description' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, bIsPeasant) == 0x0003B8, "Member 'UBP_ArmorTierFilterTab_C::bIsPeasant' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, WearableSlot) == 0x0003B9, "Member 'UBP_ArmorTierFilterTab_C::WearableSlot' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, Cost) == 0x0003BC, "Member 'UBP_ArmorTierFilterTab_C::Cost' has a wrong offset!");
static_assert(offsetof(UBP_ArmorTierFilterTab_C, CostOfEquippedWearable) == 0x0003C0, "Member 'UBP_ArmorTierFilterTab_C::CostOfEquippedWearable' has a wrong offset!");

}

