#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MOTD

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_MOTD.BP_MOTD_C
// 0x0058 (0x02B8 - 0x0260)
class UBP_MOTD_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       HideAnim;                                          // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowAnim;                                          // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBP_MordhauNewsWidget_C*                BP_MordhauNewsWidget;                              // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                CloseButton;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_background;                                  // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Outline;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Seperator;                                   // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_1;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_1;                                       // 0x02A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          WasShown;                                          // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WasClosed;                                         // 0x02B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_MOTD(int32 EntryPoint);
	void OnInitialized();
	void Show();
	void BndEvt__CloseButton_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature();
	void OnHideAnimFinish();
	void Hide();
	class FText Get_TextBlock_1_Text_0();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MOTD_C">();
	}
	static class UBP_MOTD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MOTD_C>();
	}
};
static_assert(alignof(UBP_MOTD_C) == 0x000008, "Wrong alignment on UBP_MOTD_C");
static_assert(sizeof(UBP_MOTD_C) == 0x0002B8, "Wrong size on UBP_MOTD_C");
static_assert(offsetof(UBP_MOTD_C, UberGraphFrame) == 0x000260, "Member 'UBP_MOTD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MOTD_C, HideAnim) == 0x000268, "Member 'UBP_MOTD_C::HideAnim' has a wrong offset!");
static_assert(offsetof(UBP_MOTD_C, ShowAnim) == 0x000270, "Member 'UBP_MOTD_C::ShowAnim' has a wrong offset!");
static_assert(offsetof(UBP_MOTD_C, BP_MordhauNewsWidget) == 0x000278, "Member 'UBP_MOTD_C::BP_MordhauNewsWidget' has a wrong offset!");
static_assert(offsetof(UBP_MOTD_C, CloseButton) == 0x000280, "Member 'UBP_MOTD_C::CloseButton' has a wrong offset!");
static_assert(offsetof(UBP_MOTD_C, Image_background) == 0x000288, "Member 'UBP_MOTD_C::Image_background' has a wrong offset!");
static_assert(offsetof(UBP_MOTD_C, Image_Outline) == 0x000290, "Member 'UBP_MOTD_C::Image_Outline' has a wrong offset!");
static_assert(offsetof(UBP_MOTD_C, Image_Seperator) == 0x000298, "Member 'UBP_MOTD_C::Image_Seperator' has a wrong offset!");
static_assert(offsetof(UBP_MOTD_C, SizeBox_1) == 0x0002A0, "Member 'UBP_MOTD_C::SizeBox_1' has a wrong offset!");
static_assert(offsetof(UBP_MOTD_C, TextBlock_1) == 0x0002A8, "Member 'UBP_MOTD_C::TextBlock_1' has a wrong offset!");
static_assert(offsetof(UBP_MOTD_C, WasShown) == 0x0002B0, "Member 'UBP_MOTD_C::WasShown' has a wrong offset!");
static_assert(offsetof(UBP_MOTD_C, WasClosed) == 0x0002B1, "Member 'UBP_MOTD_C::WasClosed' has a wrong offset!");

}

