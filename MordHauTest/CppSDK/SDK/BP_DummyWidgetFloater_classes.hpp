#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DummyWidgetFloater

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_DummyWidgetFloater.BP_DummyWidgetFloater_C
// 0x0028 (0x0290 - 0x0268)
class UBP_DummyWidgetFloater_C final : public UMordhauUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UImage*                                 Glow;                                              // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_0;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             IconToShow;                                        // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DummyWidgetFloater(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DummyWidgetFloater_C">();
	}
	static class UBP_DummyWidgetFloater_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_DummyWidgetFloater_C>();
	}
};
static_assert(alignof(UBP_DummyWidgetFloater_C) == 0x000008, "Wrong alignment on UBP_DummyWidgetFloater_C");
static_assert(sizeof(UBP_DummyWidgetFloater_C) == 0x000290, "Wrong size on UBP_DummyWidgetFloater_C");
static_assert(offsetof(UBP_DummyWidgetFloater_C, UberGraphFrame) == 0x000268, "Member 'UBP_DummyWidgetFloater_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_DummyWidgetFloater_C, Glow) == 0x000270, "Member 'UBP_DummyWidgetFloater_C::Glow' has a wrong offset!");
static_assert(offsetof(UBP_DummyWidgetFloater_C, Icon) == 0x000278, "Member 'UBP_DummyWidgetFloater_C::Icon' has a wrong offset!");
static_assert(offsetof(UBP_DummyWidgetFloater_C, Overlay_0) == 0x000280, "Member 'UBP_DummyWidgetFloater_C::Overlay_0' has a wrong offset!");
static_assert(offsetof(UBP_DummyWidgetFloater_C, IconToShow) == 0x000288, "Member 'UBP_DummyWidgetFloater_C::IconToShow' has a wrong offset!");

}

