#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_GoblinSeller

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AB_GoblinSeller.AB_GoblinSeller_C.ExecuteUbergraph_AB_GoblinSeller
// 0x002C (0x002C - 0x0000)
struct AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_2; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_3; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_3;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_4; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_4;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller) == 0x000004, "Wrong alignment on AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller");
static_assert(sizeof(AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller) == 0x00002C, "Wrong size on AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller");
static_assert(offsetof(AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller, EntryPoint) == 0x000000, "Member 'AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue) == 0x000004, "Member 'AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1) == 0x00000C, "Member 'AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000010, "Member 'AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000011, "Member 'AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000012, "Member 'AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000013, "Member 'AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_2) == 0x000014, "Member 'AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x000018, "Member 'AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_3) == 0x00001C, "Member 'AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller, CallFunc_LessEqual_FloatFloat_ReturnValue_3) == 0x000020, "Member 'AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller::CallFunc_LessEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000021, "Member 'AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_4) == 0x000024, "Member 'AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller, CallFunc_LessEqual_FloatFloat_ReturnValue_4) == 0x000028, "Member 'AB_GoblinSeller_C_ExecuteUbergraph_AB_GoblinSeller::CallFunc_LessEqual_FloatFloat_ReturnValue_4' has a wrong offset!");

// Function AB_GoblinSeller.AB_GoblinSeller_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AB_GoblinSeller_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_GoblinSeller_C_AnimGraph) == 0x000008, "Wrong alignment on AB_GoblinSeller_C_AnimGraph");
static_assert(sizeof(AB_GoblinSeller_C_AnimGraph) == 0x000010, "Wrong size on AB_GoblinSeller_C_AnimGraph");
static_assert(offsetof(AB_GoblinSeller_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AB_GoblinSeller_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

