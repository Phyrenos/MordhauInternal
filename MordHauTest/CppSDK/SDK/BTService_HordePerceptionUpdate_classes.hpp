#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTService_HordePerceptionUpdate

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTService_HordePerceptionUpdate.BTService_HordePerceptionUpdate_C
// 0x0068 (0x0100 - 0x0098)
class UBTService_HordePerceptionUpdate_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	struct FBlackboardKeySelector                 bPerceivesEnemy;                                   // 0x00A0(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 ClosestEnemyDistance;                              // 0x00C8(0x0028)(Edit, BlueprintVisible)
	class AMordhauCharacter*                      TargetEnemy;                                       // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauCharacter*                      KillObj;                                           // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTService_HordePerceptionUpdate(int32 EntryPoint);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTService_HordePerceptionUpdate_C">();
	}
	static class UBTService_HordePerceptionUpdate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTService_HordePerceptionUpdate_C>();
	}
};
static_assert(alignof(UBTService_HordePerceptionUpdate_C) == 0x000008, "Wrong alignment on UBTService_HordePerceptionUpdate_C");
static_assert(sizeof(UBTService_HordePerceptionUpdate_C) == 0x000100, "Wrong size on UBTService_HordePerceptionUpdate_C");
static_assert(offsetof(UBTService_HordePerceptionUpdate_C, UberGraphFrame) == 0x000098, "Member 'UBTService_HordePerceptionUpdate_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTService_HordePerceptionUpdate_C, bPerceivesEnemy) == 0x0000A0, "Member 'UBTService_HordePerceptionUpdate_C::bPerceivesEnemy' has a wrong offset!");
static_assert(offsetof(UBTService_HordePerceptionUpdate_C, ClosestEnemyDistance) == 0x0000C8, "Member 'UBTService_HordePerceptionUpdate_C::ClosestEnemyDistance' has a wrong offset!");
static_assert(offsetof(UBTService_HordePerceptionUpdate_C, TargetEnemy) == 0x0000F0, "Member 'UBTService_HordePerceptionUpdate_C::TargetEnemy' has a wrong offset!");
static_assert(offsetof(UBTService_HordePerceptionUpdate_C, KillObj) == 0x0000F8, "Member 'UBTService_HordePerceptionUpdate_C::KillObj' has a wrong offset!");

}

