#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PaviseShield

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PaviseShield.BP_PaviseShield_C.ExecuteUbergraph_BP_PaviseShield
// 0x02F8 (0x02F8 - 0x0000)
struct BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AAdvancedCharacter* Character)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Origin;                               // 0x001C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_Orientation;                          // 0x0028(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_OwningController;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ExpectedDelay;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetParentCharacter_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AAdvancedCharacter* Character)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauEquipment*                      CallFunc_DropEquipment_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMordhauCharacter*                      K2Node_Event_Character_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0080(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_DynamicCast_AsMordhau_Character;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauMotion*                         CallFunc_GetMotion_ReturnValue;                    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttackMotion*                          K2Node_DynamicCast_AsAttack_Motion;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x00F0(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauVehicle*                        K2Node_DynamicCast_AsMordhau_Vehicle;              // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAdvancedCharacter*                     K2Node_CustomEvent_Character_1;                    // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAdvancedCharacter*                     K2Node_CustomEvent_Character;                      // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLifeSpan_ReturnValue;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetAmmo_ReturnValue;                      // 0x01AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetAmmo_ReturnValue_1;                    // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MordhauPlayerController_C*          K2Node_DynamicCast_AsBP_Mordhau_Player_Controller; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      K2Node_Event_Character;                            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MordhauPlayerController_C*          K2Node_DynamicCast_AsBP_Mordhau_Player_Controller_1; // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MordhauPlayerController_C*          K2Node_DynamicCast_AsBP_Mordhau_Player_Controller_2; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_PlaceInPlaceableArray_RemovedActor;       // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PaviseShield_C*                     K2Node_DynamicCast_AsBP_Pavise_Shield;             // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ValidateSpot_OutLocation;                 // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ValidateSpot_OutRotation;                 // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_ValidateSpot_AttachToComponent;           // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBuildableTraceBase*                    CallFunc_ValidateSpot_BuildableTraceHit;           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateSpot_ReturnValue;                 // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULandscapeHeightfieldCollisionComponent* K2Node_DynamicCast_AsLandscape_Heightfield_Collision_Component; // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULandscapeMeshCollisionComponent*       K2Node_DynamicCast_AsLandscape_Mesh_Collision_Component; // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0264(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetAmmo_ReturnValue_2;                    // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x02F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield) == 0x000008, "Wrong alignment on BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield");
static_assert(sizeof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield) == 0x0002F8, "Wrong size on BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, EntryPoint) == 0x000000, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_HasAuthority_ReturnValue_1) == 0x000005, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_IsDedicatedServer_ReturnValue) == 0x000006, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_HasAuthority_ReturnValue_2) == 0x000018, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_Event_Origin) == 0x00001C, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_Event_Origin' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_Event_Orientation) == 0x000028, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_Event_Orientation' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_Event_OwningController) == 0x000038, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_Event_OwningController' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_Event_ExpectedDelay) == 0x000040, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_Event_ExpectedDelay' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_GetParentCharacter_ReturnValue) == 0x000048, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_GetParentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_DropEquipment_ReturnValue) == 0x000068, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_DropEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_Event_Character_1) == 0x000070, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_Event_Character_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_Event_Damage) == 0x000078, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_Event_DamageType) == 0x000080, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_Event_InstigatedBy) == 0x000088, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_Event_DamageCauser) == 0x000090, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_HasAuthority_ReturnValue_3) == 0x000098, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_DynamicCast_AsMordhau_Character) == 0x0000A0, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_DynamicCast_AsMordhau_Character' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_GetMotion_ReturnValue) == 0x0000B0, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_GetMotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_DynamicCast_AsAttack_Motion) == 0x0000B8, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_DynamicCast_AsAttack_Motion' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C1, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0000C8, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000D0, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_ComponentBoundEvent_OtherActor) == 0x0000D8, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_ComponentBoundEvent_OtherComp) == 0x0000E0, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000E8, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_ComponentBoundEvent_bFromSweep) == 0x0000EC, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_ComponentBoundEvent_SweepResult) == 0x0000F0, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_DynamicCast_AsMordhau_Vehicle) == 0x000180, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_DynamicCast_AsMordhau_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_DynamicCast_bSuccess_2) == 0x000188, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_CustomEvent_Character_1) == 0x000190, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_CustomEvent_Character_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_GetController_ReturnValue) == 0x000198, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_CustomEvent_Character) == 0x0001A0, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_GetLifeSpan_ReturnValue) == 0x0001A8, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_GetLifeSpan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_IsValid_ReturnValue_1) == 0x0001AC, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0001AD, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_GetAmmo_ReturnValue) == 0x0001AE, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_GetAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001AF, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_IsValid_ReturnValue_2) == 0x0001B0, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_HasAuthority_ReturnValue_4) == 0x0001B1, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_GetAmmo_ReturnValue_1) == 0x0001B2, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_GetAmmo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0001B3, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001B4, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_IsValid_ReturnValue_3) == 0x0001C0, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_DynamicCast_AsBP_Mordhau_Player_Controller) == 0x0001C8, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_DynamicCast_AsBP_Mordhau_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_DynamicCast_bSuccess_3) == 0x0001D0, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_Event_Character) == 0x0001D8, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_DynamicCast_AsBP_Mordhau_Player_Controller_1) == 0x0001E0, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_DynamicCast_AsBP_Mordhau_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_DynamicCast_bSuccess_4) == 0x0001E8, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_DynamicCast_AsBP_Mordhau_Player_Controller_2) == 0x0001F0, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_DynamicCast_AsBP_Mordhau_Player_Controller_2' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_DynamicCast_bSuccess_5) == 0x0001F8, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_PlaceInPlaceableArray_RemovedActor) == 0x000200, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_PlaceInPlaceableArray_RemovedActor' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_DynamicCast_AsBP_Pavise_Shield) == 0x000208, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_DynamicCast_AsBP_Pavise_Shield' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_DynamicCast_bSuccess_6) == 0x000210, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_ValidateSpot_OutLocation) == 0x000214, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_ValidateSpot_OutLocation' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_ValidateSpot_OutRotation) == 0x000220, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_ValidateSpot_OutRotation' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_ValidateSpot_AttachToComponent) == 0x000230, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_ValidateSpot_AttachToComponent' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_ValidateSpot_BuildableTraceHit) == 0x000238, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_ValidateSpot_BuildableTraceHit' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_ValidateSpot_ReturnValue) == 0x000240, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_ValidateSpot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_DynamicCast_AsLandscape_Heightfield_Collision_Component) == 0x000248, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_DynamicCast_AsLandscape_Heightfield_Collision_Component' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_DynamicCast_bSuccess_7) == 0x000250, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_DynamicCast_AsLandscape_Mesh_Collision_Component) == 0x000258, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_DynamicCast_AsLandscape_Mesh_Collision_Component' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, K2Node_DynamicCast_bSuccess_8) == 0x000260, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000264, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0002F0, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_GetAmmo_ReturnValue_2) == 0x0002F1, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_GetAmmo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0002F2, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_Not_PreBool_ReturnValue) == 0x0002F3, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0002F4, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_HasAuthority_ReturnValue_5) == 0x0002F5, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_BooleanAND_ReturnValue) == 0x0002F6, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield, CallFunc_BooleanAND_ReturnValue_1) == 0x0002F7, "Member 'BP_PaviseShield_C_ExecuteUbergraph_BP_PaviseShield::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_PaviseShield.BP_PaviseShield_C.OnHeldInteractionStart
// 0x0008 (0x0008 - 0x0000)
struct BP_PaviseShield_C_OnHeldInteractionStart final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PaviseShield_C_OnHeldInteractionStart) == 0x000008, "Wrong alignment on BP_PaviseShield_C_OnHeldInteractionStart");
static_assert(sizeof(BP_PaviseShield_C_OnHeldInteractionStart) == 0x000008, "Wrong size on BP_PaviseShield_C_OnHeldInteractionStart");
static_assert(offsetof(BP_PaviseShield_C_OnHeldInteractionStart, Character) == 0x000000, "Member 'BP_PaviseShield_C_OnHeldInteractionStart::Character' has a wrong offset!");

// Function BP_PaviseShield.BP_PaviseShield_C.PlanterDied
// 0x0008 (0x0008 - 0x0000)
struct BP_PaviseShield_C_PlanterDied final
{
public:
	class AAdvancedCharacter*                     Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PaviseShield_C_PlanterDied) == 0x000008, "Wrong alignment on BP_PaviseShield_C_PlanterDied");
static_assert(sizeof(BP_PaviseShield_C_PlanterDied) == 0x000008, "Wrong size on BP_PaviseShield_C_PlanterDied");
static_assert(offsetof(BP_PaviseShield_C_PlanterDied, Character) == 0x000000, "Member 'BP_PaviseShield_C_PlanterDied::Character' has a wrong offset!");

// Function BP_PaviseShield.BP_PaviseShield_C.PlanterDestroyed
// 0x0008 (0x0008 - 0x0000)
struct BP_PaviseShield_C_PlanterDestroyed final
{
public:
	class AAdvancedCharacter*                     Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PaviseShield_C_PlanterDestroyed) == 0x000008, "Wrong alignment on BP_PaviseShield_C_PlanterDestroyed");
static_assert(sizeof(BP_PaviseShield_C_PlanterDestroyed) == 0x000008, "Wrong size on BP_PaviseShield_C_PlanterDestroyed");
static_assert(offsetof(BP_PaviseShield_C_PlanterDestroyed, Character) == 0x000000, "Member 'BP_PaviseShield_C_PlanterDestroyed::Character' has a wrong offset!");

// Function BP_PaviseShield.BP_PaviseShield_C.BndEvt__MovementBlocker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PaviseShield_C_BndEvt__MovementBlocker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PaviseShield_C_BndEvt__MovementBlocker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_PaviseShield_C_BndEvt__MovementBlocker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_PaviseShield_C_BndEvt__MovementBlocker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_PaviseShield_C_BndEvt__MovementBlocker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_PaviseShield_C_BndEvt__MovementBlocker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_PaviseShield_C_BndEvt__MovementBlocker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_BndEvt__MovementBlocker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_PaviseShield_C_BndEvt__MovementBlocker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_BndEvt__MovementBlocker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_PaviseShield_C_BndEvt__MovementBlocker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_BndEvt__MovementBlocker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_PaviseShield_C_BndEvt__MovementBlocker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_BndEvt__MovementBlocker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_PaviseShield_C_BndEvt__MovementBlocker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_BndEvt__MovementBlocker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_PaviseShield_C_BndEvt__MovementBlocker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_PaviseShield.BP_PaviseShield_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_PaviseShield_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PaviseShield_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BP_PaviseShield_C_ReceiveAnyDamage");
static_assert(sizeof(BP_PaviseShield_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BP_PaviseShield_C_ReceiveAnyDamage");
static_assert(offsetof(BP_PaviseShield_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'BP_PaviseShield_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BP_PaviseShield_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BP_PaviseShield_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BP_PaviseShield_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function BP_PaviseShield.BP_PaviseShield_C.OnInteractionStart
// 0x0008 (0x0008 - 0x0000)
struct BP_PaviseShield_C_OnInteractionStart final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PaviseShield_C_OnInteractionStart) == 0x000008, "Wrong alignment on BP_PaviseShield_C_OnInteractionStart");
static_assert(sizeof(BP_PaviseShield_C_OnInteractionStart) == 0x000008, "Wrong size on BP_PaviseShield_C_OnInteractionStart");
static_assert(offsetof(BP_PaviseShield_C_OnInteractionStart, Character) == 0x000000, "Member 'BP_PaviseShield_C_OnInteractionStart::Character' has a wrong offset!");

// Function BP_PaviseShield.BP_PaviseShield_C.FireProjectile
// 0x0028 (0x0028 - 0x0000)
struct BP_PaviseShield_C_FireProjectile final
{
public:
	struct FVector                                Origin;                                            // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Orientation;                                       // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class AController*                            OwningController;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExpectedDelay;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PaviseShield_C_FireProjectile) == 0x000008, "Wrong alignment on BP_PaviseShield_C_FireProjectile");
static_assert(sizeof(BP_PaviseShield_C_FireProjectile) == 0x000028, "Wrong size on BP_PaviseShield_C_FireProjectile");
static_assert(offsetof(BP_PaviseShield_C_FireProjectile, Origin) == 0x000000, "Member 'BP_PaviseShield_C_FireProjectile::Origin' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_FireProjectile, Orientation) == 0x00000C, "Member 'BP_PaviseShield_C_FireProjectile::Orientation' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_FireProjectile, OwningController) == 0x000018, "Member 'BP_PaviseShield_C_FireProjectile::OwningController' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_FireProjectile, ExpectedDelay) == 0x000020, "Member 'BP_PaviseShield_C_FireProjectile::ExpectedDelay' has a wrong offset!");

// Function BP_PaviseShield.BP_PaviseShield_C.ValidatePlantSpot
// 0x0448 (0x0448 - 0x0000)
struct BP_PaviseShield_C_ValidatePlantSpot final
{
public:
	struct FVector                                PlantLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CameraRotation1P;                                  // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Succeeded;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x001C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0028(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        AttachToComponent;                                 // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               FoundRot;                                          // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0050(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_PlaneTrace_LeftHit;                       // 0x0130(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_PlaneTrace_RightHit;                      // 0x01BC(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_PlaneTrace_ForwardHit;                    // 0x0248(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_PlaneTrace_BackHit;                       // 0x02D4(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_PlaneTrace_OutRight;                      // 0x0360(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_PlaneTrace_OutForward;                    // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlaneTrace_ReturnValue;                   // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x037A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37B[0x1];                                      // 0x037B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0390(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x039C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DestroyableActor_C*                 K2Node_DynamicCast_AsBP_Destroyable_Actor;         // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Ladder_C*                           K2Node_DynamicCast_AsBP_Ladder;                    // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_411[0x3];                                      // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0414(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0420(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x042C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXY_ReturnValue;                // 0x0438(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PaviseShield_C_ValidatePlantSpot) == 0x000008, "Wrong alignment on BP_PaviseShield_C_ValidatePlantSpot");
static_assert(sizeof(BP_PaviseShield_C_ValidatePlantSpot) == 0x000448, "Wrong size on BP_PaviseShield_C_ValidatePlantSpot");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, PlantLocation) == 0x000000, "Member 'BP_PaviseShield_C_ValidatePlantSpot::PlantLocation' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CameraRotation1P) == 0x00000C, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CameraRotation1P' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, Succeeded) == 0x000018, "Member 'BP_PaviseShield_C_ValidatePlantSpot::Succeeded' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, Location) == 0x00001C, "Member 'BP_PaviseShield_C_ValidatePlantSpot::Location' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, Rotation) == 0x000028, "Member 'BP_PaviseShield_C_ValidatePlantSpot::Rotation' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, AttachToComponent) == 0x000038, "Member 'BP_PaviseShield_C_ValidatePlantSpot::AttachToComponent' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, FoundRot) == 0x000040, "Member 'BP_PaviseShield_C_ValidatePlantSpot::FoundRot' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, Temp_object_Variable) == 0x000050, "Member 'BP_PaviseShield_C_ValidatePlantSpot::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakRotator_Roll) == 0x000060, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakRotator_Pitch) == 0x000064, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakRotator_Yaw) == 0x000068, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_MakeRotator_ReturnValue) == 0x00006C, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_GetUpVector_ReturnValue) == 0x000078, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_GetRightVector_ReturnValue) == 0x000084, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_Dot_VectorVector_ReturnValue) == 0x000090, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000094, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_DegAcos_ReturnValue) == 0x0000A0, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000A4, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_GetForwardVector_ReturnValue) == 0x0000B4, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0000C0, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0000CC, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D8, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000E4, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0000F0, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0000FC, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_ComposeRotators_ReturnValue) == 0x000108, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000114, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, K2Node_MakeArray_Array) == 0x000120, "Member 'BP_PaviseShield_C_ValidatePlantSpot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_PlaneTrace_LeftHit) == 0x000130, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_PlaneTrace_LeftHit' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_PlaneTrace_RightHit) == 0x0001BC, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_PlaneTrace_RightHit' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_PlaneTrace_ForwardHit) == 0x000248, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_PlaneTrace_ForwardHit' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_PlaneTrace_BackHit) == 0x0002D4, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_PlaneTrace_BackHit' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_PlaneTrace_OutRight) == 0x000360, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_PlaneTrace_OutRight' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_PlaneTrace_OutForward) == 0x00036C, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_PlaneTrace_OutForward' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_PlaneTrace_ReturnValue) == 0x000378, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_PlaneTrace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakHitResult_bBlockingHit) == 0x000379, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakHitResult_bInitialOverlap) == 0x00037A, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakHitResult_Time) == 0x00037C, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakHitResult_Distance) == 0x000380, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakHitResult_Location) == 0x000384, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakHitResult_ImpactPoint) == 0x000390, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakHitResult_Normal) == 0x00039C, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakHitResult_ImpactNormal) == 0x0003A8, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakHitResult_PhysMat) == 0x0003B8, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakHitResult_HitActor) == 0x0003C0, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakHitResult_HitComponent) == 0x0003C8, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakHitResult_HitBoneName) == 0x0003D0, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakHitResult_HitItem) == 0x0003D8, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakHitResult_FaceIndex) == 0x0003DC, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakHitResult_TraceStart) == 0x0003E0, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_BreakHitResult_TraceEnd) == 0x0003EC, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, K2Node_DynamicCast_AsBP_Destroyable_Actor) == 0x0003F8, "Member 'BP_PaviseShield_C_ValidatePlantSpot::K2Node_DynamicCast_AsBP_Destroyable_Actor' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, K2Node_DynamicCast_bSuccess) == 0x000400, "Member 'BP_PaviseShield_C_ValidatePlantSpot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, K2Node_DynamicCast_AsBP_Ladder) == 0x000408, "Member 'BP_PaviseShield_C_ValidatePlantSpot::K2Node_DynamicCast_AsBP_Ladder' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, K2Node_DynamicCast_bSuccess_1) == 0x000410, "Member 'BP_PaviseShield_C_ValidatePlantSpot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000414, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000420, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x00042C, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ValidatePlantSpot, CallFunc_MakeRotFromXY_ReturnValue) == 0x000438, "Member 'BP_PaviseShield_C_ValidatePlantSpot::CallFunc_MakeRotFromXY_ReturnValue' has a wrong offset!");

// Function BP_PaviseShield.BP_PaviseShield_C.ShouldShine
// 0x0002 (0x0002 - 0x0000)
struct BP_PaviseShield_C_ShouldShine final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldShine_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PaviseShield_C_ShouldShine) == 0x000001, "Wrong alignment on BP_PaviseShield_C_ShouldShine");
static_assert(sizeof(BP_PaviseShield_C_ShouldShine) == 0x000002, "Wrong size on BP_PaviseShield_C_ShouldShine");
static_assert(offsetof(BP_PaviseShield_C_ShouldShine, ReturnValue) == 0x000000, "Member 'BP_PaviseShield_C_ShouldShine::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_ShouldShine, CallFunc_ShouldShine_ReturnValue) == 0x000001, "Member 'BP_PaviseShield_C_ShouldShine::CallFunc_ShouldShine_ReturnValue' has a wrong offset!");

// Function BP_PaviseShield.BP_PaviseShield_C.OnRequestFire
// 0x0040 (0x0040 - 0x0000)
struct BP_PaviseShield_C_OnRequestFire final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAirborne_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ValidateSpot_OutLocation;                 // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ValidateSpot_OutRotation;                 // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_ValidateSpot_AttachToComponent;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBuildableTraceBase*                    CallFunc_ValidateSpot_BuildableTraceHit;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateSpot_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnRequestFire_ReturnValue;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PaviseShield_C_OnRequestFire) == 0x000008, "Wrong alignment on BP_PaviseShield_C_OnRequestFire");
static_assert(sizeof(BP_PaviseShield_C_OnRequestFire) == 0x000040, "Wrong size on BP_PaviseShield_C_OnRequestFire");
static_assert(offsetof(BP_PaviseShield_C_OnRequestFire, Character) == 0x000000, "Member 'BP_PaviseShield_C_OnRequestFire::Character' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_OnRequestFire, ReturnValue) == 0x000008, "Member 'BP_PaviseShield_C_OnRequestFire::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_OnRequestFire, CallFunc_IsAirborne_ReturnValue) == 0x000009, "Member 'BP_PaviseShield_C_OnRequestFire::CallFunc_IsAirborne_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_OnRequestFire, CallFunc_ValidateSpot_OutLocation) == 0x00000C, "Member 'BP_PaviseShield_C_OnRequestFire::CallFunc_ValidateSpot_OutLocation' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_OnRequestFire, CallFunc_ValidateSpot_OutRotation) == 0x000018, "Member 'BP_PaviseShield_C_OnRequestFire::CallFunc_ValidateSpot_OutRotation' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_OnRequestFire, CallFunc_ValidateSpot_AttachToComponent) == 0x000028, "Member 'BP_PaviseShield_C_OnRequestFire::CallFunc_ValidateSpot_AttachToComponent' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_OnRequestFire, CallFunc_ValidateSpot_BuildableTraceHit) == 0x000030, "Member 'BP_PaviseShield_C_OnRequestFire::CallFunc_ValidateSpot_BuildableTraceHit' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_OnRequestFire, CallFunc_ValidateSpot_ReturnValue) == 0x000038, "Member 'BP_PaviseShield_C_OnRequestFire::CallFunc_ValidateSpot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_OnRequestFire, CallFunc_OnRequestFire_ReturnValue) == 0x000039, "Member 'BP_PaviseShield_C_OnRequestFire::CallFunc_OnRequestFire_ReturnValue' has a wrong offset!");

// Function BP_PaviseShield.BP_PaviseShield_C.HandleTakeDamage
// 0x0010 (0x0010 - 0x0000)
struct BP_PaviseShield_C_HandleTakeDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PaviseShield_C_HandleTakeDamage) == 0x000004, "Wrong alignment on BP_PaviseShield_C_HandleTakeDamage");
static_assert(sizeof(BP_PaviseShield_C_HandleTakeDamage) == 0x000010, "Wrong size on BP_PaviseShield_C_HandleTakeDamage");
static_assert(offsetof(BP_PaviseShield_C_HandleTakeDamage, Damage) == 0x000000, "Member 'BP_PaviseShield_C_HandleTakeDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_HandleTakeDamage, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_PaviseShield_C_HandleTakeDamage::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_HandleTakeDamage, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_PaviseShield_C_HandleTakeDamage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_HandleTakeDamage, CallFunc_FMax_ReturnValue) == 0x00000C, "Member 'BP_PaviseShield_C_HandleTakeDamage::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_PaviseShield.BP_PaviseShield_C.CanInteract
// 0x0078 (0x0078 - 0x0000)
struct BP_PaviseShield_C_CanInteract final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanInteract_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue_1;                   // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DotProduct2D_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PaviseShield_C_CanInteract) == 0x000008, "Wrong alignment on BP_PaviseShield_C_CanInteract");
static_assert(sizeof(BP_PaviseShield_C_CanInteract) == 0x000078, "Wrong size on BP_PaviseShield_C_CanInteract");
static_assert(offsetof(BP_PaviseShield_C_CanInteract, Character) == 0x000000, "Member 'BP_PaviseShield_C_CanInteract::Character' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanInteract, ReturnValue) == 0x000008, "Member 'BP_PaviseShield_C_CanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanInteract, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_PaviseShield_C_CanInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanInteract, CallFunc_CanInteract_ReturnValue) == 0x00000A, "Member 'BP_PaviseShield_C_CanInteract::CallFunc_CanInteract_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanInteract, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_PaviseShield_C_CanInteract::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanInteract, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_PaviseShield_C_CanInteract::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000024, "Member 'BP_PaviseShield_C_CanInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanInteract, CallFunc_GetActorForwardVector_ReturnValue) == 0x000028, "Member 'BP_PaviseShield_C_CanInteract::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanInteract, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000034, "Member 'BP_PaviseShield_C_CanInteract::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanInteract, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000040, "Member 'BP_PaviseShield_C_CanInteract::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanInteract, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'BP_PaviseShield_C_CanInteract::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanInteract, CallFunc_Normal2D_ReturnValue) == 0x000054, "Member 'BP_PaviseShield_C_CanInteract::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanInteract, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x00005C, "Member 'BP_PaviseShield_C_CanInteract::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanInteract, CallFunc_Normal2D_ReturnValue_1) == 0x000064, "Member 'BP_PaviseShield_C_CanInteract::CallFunc_Normal2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanInteract, CallFunc_DotProduct2D_ReturnValue) == 0x00006C, "Member 'BP_PaviseShield_C_CanInteract::CallFunc_DotProduct2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanInteract, CallFunc_DegAcos_ReturnValue) == 0x000070, "Member 'BP_PaviseShield_C_CanInteract::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanInteract, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_PaviseShield_C_CanInteract::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanInteract, CallFunc_BooleanAND_ReturnValue) == 0x000075, "Member 'BP_PaviseShield_C_CanInteract::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PaviseShield.BP_PaviseShield_C.CanHeldInteract
// 0x0078 (0x0078 - 0x0000)
struct BP_PaviseShield_C_CanHeldInteract final
{
public:
	class AMordhauCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanHeldInteract_ReturnValue;              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue_1;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DotProduct2D_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PaviseShield_C_CanHeldInteract) == 0x000008, "Wrong alignment on BP_PaviseShield_C_CanHeldInteract");
static_assert(sizeof(BP_PaviseShield_C_CanHeldInteract) == 0x000078, "Wrong size on BP_PaviseShield_C_CanHeldInteract");
static_assert(offsetof(BP_PaviseShield_C_CanHeldInteract, Character) == 0x000000, "Member 'BP_PaviseShield_C_CanHeldInteract::Character' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanHeldInteract, ReturnValue) == 0x000008, "Member 'BP_PaviseShield_C_CanHeldInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanHeldInteract, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_PaviseShield_C_CanHeldInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanHeldInteract, CallFunc_CanHeldInteract_ReturnValue) == 0x00000A, "Member 'BP_PaviseShield_C_CanHeldInteract::CallFunc_CanHeldInteract_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanHeldInteract, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_PaviseShield_C_CanHeldInteract::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanHeldInteract, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_PaviseShield_C_CanHeldInteract::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanHeldInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'BP_PaviseShield_C_CanHeldInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanHeldInteract, CallFunc_GetActorForwardVector_ReturnValue) == 0x000024, "Member 'BP_PaviseShield_C_CanHeldInteract::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanHeldInteract, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000030, "Member 'BP_PaviseShield_C_CanHeldInteract::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanHeldInteract, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x00003C, "Member 'BP_PaviseShield_C_CanHeldInteract::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanHeldInteract, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000044, "Member 'BP_PaviseShield_C_CanHeldInteract::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanHeldInteract, CallFunc_Normal2D_ReturnValue) == 0x000050, "Member 'BP_PaviseShield_C_CanHeldInteract::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanHeldInteract, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x000058, "Member 'BP_PaviseShield_C_CanHeldInteract::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanHeldInteract, CallFunc_Normal2D_ReturnValue_1) == 0x000060, "Member 'BP_PaviseShield_C_CanHeldInteract::CallFunc_Normal2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanHeldInteract, CallFunc_DotProduct2D_ReturnValue) == 0x000068, "Member 'BP_PaviseShield_C_CanHeldInteract::CallFunc_DotProduct2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanHeldInteract, CallFunc_DegAcos_ReturnValue) == 0x00006C, "Member 'BP_PaviseShield_C_CanHeldInteract::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanHeldInteract, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000070, "Member 'BP_PaviseShield_C_CanHeldInteract::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PaviseShield_C_CanHeldInteract, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'BP_PaviseShield_C_CanHeldInteract::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

