#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentInfoDisplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_EquipmentInfoDisplay.BP_EquipmentInfoDisplay_C.ExecuteUbergraph_BP_EquipmentInfoDisplay
// 0x0038 (0x0038 - 0x0000)
struct BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauEquipment*                      K2Node_CustomEvent_Equipment;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Amount;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay) == 0x000008, "Wrong alignment on BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay");
static_assert(sizeof(BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay) == 0x000038, "Wrong size on BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay, EntryPoint) == 0x000000, "Member 'BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay, K2Node_CustomEvent_Equipment) == 0x000018, "Member 'BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay::K2Node_CustomEvent_Equipment' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay, K2Node_CustomEvent_Amount) == 0x000020, "Member 'BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay::K2Node_CustomEvent_Amount' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000028, "Member 'BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'BP_EquipmentInfoDisplay_C_ExecuteUbergraph_BP_EquipmentInfoDisplay::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInfoDisplay.BP_EquipmentInfoDisplay_C.OnRestockedAmmo
// 0x0010 (0x0010 - 0x0000)
struct BP_EquipmentInfoDisplay_C_OnRestockedAmmo final
{
public:
	class AMordhauEquipment*                      Equipment;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInfoDisplay_C_OnRestockedAmmo) == 0x000008, "Wrong alignment on BP_EquipmentInfoDisplay_C_OnRestockedAmmo");
static_assert(sizeof(BP_EquipmentInfoDisplay_C_OnRestockedAmmo) == 0x000010, "Wrong size on BP_EquipmentInfoDisplay_C_OnRestockedAmmo");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_OnRestockedAmmo, Equipment) == 0x000000, "Member 'BP_EquipmentInfoDisplay_C_OnRestockedAmmo::Equipment' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_OnRestockedAmmo, Amount) == 0x000008, "Member 'BP_EquipmentInfoDisplay_C_OnRestockedAmmo::Amount' has a wrong offset!");

// Function BP_EquipmentInfoDisplay.BP_EquipmentInfoDisplay_C.GetText_0
// 0x01C0 (0x01C0 - 0x0000)
struct BP_EquipmentInfoDisplay_C_GetText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AMordhauEquipment*                      Equipment;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetCurrentMaxAmmo_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetAmmo_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0018)()
	class AMordhauCharacter*                      CallFunc_GetViewTargetCharacter_ReturnValue;       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawnOwner_ReturnValue;                 // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DeployableBallista_C*               K2Node_DynamicCast_AsBP_Deployable_Ballista;       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0108(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0150(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0198(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01A8(0x0018)()
};
static_assert(alignof(BP_EquipmentInfoDisplay_C_GetText_0) == 0x000008, "Wrong alignment on BP_EquipmentInfoDisplay_C_GetText_0");
static_assert(sizeof(BP_EquipmentInfoDisplay_C_GetText_0) == 0x0001C0, "Wrong size on BP_EquipmentInfoDisplay_C_GetText_0");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, ReturnValue) == 0x000000, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, Equipment) == 0x000018, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::Equipment' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, CallFunc_GetCurrentMaxAmmo_ReturnValue) == 0x000021, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::CallFunc_GetCurrentMaxAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000024, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, CallFunc_GetAmmo_ReturnValue) == 0x000028, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::CallFunc_GetAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000070, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000074, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, CallFunc_GetViewTargetCharacter_ReturnValue) == 0x0000E0, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::CallFunc_GetViewTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, CallFunc_IsValid_ReturnValue_1) == 0x0000E8, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, CallFunc_IsValid_ReturnValue_2) == 0x0000E9, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, CallFunc_GetPawnOwner_ReturnValue) == 0x0000F0, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::CallFunc_GetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, K2Node_DynamicCast_AsBP_Deployable_Ballista) == 0x0000F8, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::K2Node_DynamicCast_AsBP_Deployable_Ballista' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, K2Node_MakeStruct_FormatArgumentData_2) == 0x000108, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000148, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, K2Node_MakeStruct_FormatArgumentData_3) == 0x000150, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, CallFunc_IsValid_ReturnValue_3) == 0x000190, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, K2Node_MakeArray_Array_1) == 0x000198, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_0, CallFunc_Format_ReturnValue_1) == 0x0001A8, "Member 'BP_EquipmentInfoDisplay_C_GetText_0::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function BP_EquipmentInfoDisplay.BP_EquipmentInfoDisplay_C.GetVisibility_0
// 0x0050 (0x0050 - 0x0000)
struct BP_EquipmentInfoDisplay_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauEquipment*                      Equipment;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetAmmo_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      CallFunc_GetViewTargetCharacter_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawnOwner_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DeployableBallista_C*               K2Node_DynamicCast_AsBP_Deployable_Ballista;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauGameUserSettings*               CallFunc_GetMordhauGameUserSettings_ReturnValue;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowAmmo_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EquipmentInfoDisplay_C_GetVisibility_0) == 0x000008, "Wrong alignment on BP_EquipmentInfoDisplay_C_GetVisibility_0");
static_assert(sizeof(BP_EquipmentInfoDisplay_C_GetVisibility_0) == 0x000050, "Wrong size on BP_EquipmentInfoDisplay_C_GetVisibility_0");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_EquipmentInfoDisplay_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetVisibility_0, Equipment) == 0x000008, "Member 'BP_EquipmentInfoDisplay_C_GetVisibility_0::Equipment' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetVisibility_0, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EquipmentInfoDisplay_C_GetVisibility_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetVisibility_0, CallFunc_GetAmmo_ReturnValue) == 0x000011, "Member 'BP_EquipmentInfoDisplay_C_GetVisibility_0::CallFunc_GetAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetVisibility_0, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000012, "Member 'BP_EquipmentInfoDisplay_C_GetVisibility_0::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetVisibility_0, CallFunc_GetViewTargetCharacter_ReturnValue) == 0x000018, "Member 'BP_EquipmentInfoDisplay_C_GetVisibility_0::CallFunc_GetViewTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetVisibility_0, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_EquipmentInfoDisplay_C_GetVisibility_0::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetVisibility_0, CallFunc_IsValid_ReturnValue_2) == 0x000021, "Member 'BP_EquipmentInfoDisplay_C_GetVisibility_0::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetVisibility_0, CallFunc_GetPawnOwner_ReturnValue) == 0x000028, "Member 'BP_EquipmentInfoDisplay_C_GetVisibility_0::CallFunc_GetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetVisibility_0, K2Node_DynamicCast_AsBP_Deployable_Ballista) == 0x000030, "Member 'BP_EquipmentInfoDisplay_C_GetVisibility_0::K2Node_DynamicCast_AsBP_Deployable_Ballista' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetVisibility_0, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EquipmentInfoDisplay_C_GetVisibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetVisibility_0, CallFunc_IsValid_ReturnValue_3) == 0x000039, "Member 'BP_EquipmentInfoDisplay_C_GetVisibility_0::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetVisibility_0, CallFunc_GetMordhauGameUserSettings_ReturnValue) == 0x000040, "Member 'BP_EquipmentInfoDisplay_C_GetVisibility_0::CallFunc_GetMordhauGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetVisibility_0, CallFunc_ShouldShowAmmo_ReturnValue) == 0x000048, "Member 'BP_EquipmentInfoDisplay_C_GetVisibility_0::CallFunc_ShouldShowAmmo_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInfoDisplay.BP_EquipmentInfoDisplay_C.GetText_1
// 0x0080 (0x0080 - 0x0000)
struct BP_EquipmentInfoDisplay_C_GetText_1 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0018)()
};
static_assert(alignof(BP_EquipmentInfoDisplay_C_GetText_1) == 0x000008, "Wrong alignment on BP_EquipmentInfoDisplay_C_GetText_1");
static_assert(sizeof(BP_EquipmentInfoDisplay_C_GetText_1) == 0x000080, "Wrong size on BP_EquipmentInfoDisplay_C_GetText_1");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_1, ReturnValue) == 0x000000, "Member 'BP_EquipmentInfoDisplay_C_GetText_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_1, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'BP_EquipmentInfoDisplay_C_GetText_1::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_1, K2Node_MakeArray_Array) == 0x000058, "Member 'BP_EquipmentInfoDisplay_C_GetText_1::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInfoDisplay_C_GetText_1, CallFunc_Format_ReturnValue) == 0x000068, "Member 'BP_EquipmentInfoDisplay_C_GetText_1::CallFunc_Format_ReturnValue' has a wrong offset!");

}

