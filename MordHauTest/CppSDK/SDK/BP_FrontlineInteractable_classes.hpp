#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrontlineInteractable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FrontlineInteractable.BP_FrontlineInteractable_C
// 0x0060 (0x0450 - 0x03F0)
class ABP_FrontlineInteractable_C final : public AMordhauInteractable
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UDecalComponent*                        Decal;                                             // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UMordhauWidgetComponent*                MordhauWidget;                                     // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         RequiredInteractions;                              // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CapturePoint_C*                     CapturePoint;                                      // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             ObjectiveIcon;                                     // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScoreAwardPerInteract;                             // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ObjectiveWeight;                                   // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              EventOnInteractionsChanged;                        // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         NumTimesToGiveScore;                               // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Widget_Height_Indicator;                      // 0x043C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43D[0x3];                                      // 0x043D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Widget_Height_Tolerance;                           // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Score;                                             // 0x0444(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FrontlineInteractable(int32 EntryPoint);
	void OnInteractionsChanged(uint8 OldValue);
	void OnHoldCountChanged();
	void ReceiveBeginPlay();
	void OnCooperativeHoldProgressUpdated(float Progress, float OldValue);
	void OnInteractionStart(class AMordhauCharacter* Character);
	void OnAnyObjectiveProgressChanged();
	void OnHeldInteractionStart(class AMordhauCharacter* Character);
	void ProgressVisualStage();
	void OnUpdateUIWidgets();
	void OnEnemyLostPrerequisites();
	void OnEnemyGainedPrerequisites();
	void OnInitialize(class ABP_CapturePoint_C* Point);
	void Activate();
	void Disable();
	void Initialize(class ABP_CapturePoint_C* CapturePoint_0);
	void EnemyGainedPrerequisites();
	void EnemyLostPrerequisites();
	void IncrementInteractions(class AController* Interactor);
	void UpdateUIWidgets();
	void IsCompleted(bool* Completed);
	void IsInObjectiveArea(const struct FVector& Location, bool* InArea);

	bool CanInteract(class AMordhauCharacter* Character) const;
	bool CanHeldInteract(class AMordhauCharacter* Character) const;
	void GetObjectiveProgress(float* Progress) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FrontlineInteractable_C">();
	}
	static class ABP_FrontlineInteractable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FrontlineInteractable_C>();
	}
};
static_assert(alignof(ABP_FrontlineInteractable_C) == 0x000010, "Wrong alignment on ABP_FrontlineInteractable_C");
static_assert(sizeof(ABP_FrontlineInteractable_C) == 0x000450, "Wrong size on ABP_FrontlineInteractable_C");
static_assert(offsetof(ABP_FrontlineInteractable_C, UberGraphFrame) == 0x0003F0, "Member 'ABP_FrontlineInteractable_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineInteractable_C, Decal) == 0x0003F8, "Member 'ABP_FrontlineInteractable_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineInteractable_C, MordhauWidget) == 0x000400, "Member 'ABP_FrontlineInteractable_C::MordhauWidget' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineInteractable_C, RequiredInteractions) == 0x000408, "Member 'ABP_FrontlineInteractable_C::RequiredInteractions' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineInteractable_C, CapturePoint) == 0x000410, "Member 'ABP_FrontlineInteractable_C::CapturePoint' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineInteractable_C, ObjectiveIcon) == 0x000418, "Member 'ABP_FrontlineInteractable_C::ObjectiveIcon' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineInteractable_C, ScoreAwardPerInteract) == 0x000420, "Member 'ABP_FrontlineInteractable_C::ScoreAwardPerInteract' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineInteractable_C, ObjectiveWeight) == 0x000424, "Member 'ABP_FrontlineInteractable_C::ObjectiveWeight' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineInteractable_C, EventOnInteractionsChanged) == 0x000428, "Member 'ABP_FrontlineInteractable_C::EventOnInteractionsChanged' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineInteractable_C, NumTimesToGiveScore) == 0x000438, "Member 'ABP_FrontlineInteractable_C::NumTimesToGiveScore' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineInteractable_C, Show_Widget_Height_Indicator) == 0x00043C, "Member 'ABP_FrontlineInteractable_C::Show_Widget_Height_Indicator' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineInteractable_C, Widget_Height_Tolerance) == 0x000440, "Member 'ABP_FrontlineInteractable_C::Widget_Height_Tolerance' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineInteractable_C, Score) == 0x000444, "Member 'ABP_FrontlineInteractable_C::Score' has a wrong offset!");

}

