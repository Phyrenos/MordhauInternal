#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerAvatar

#include "Basic.hpp"

#include "MordhauOnlineSubsystem_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerAvatar.BP_PlayerAvatar_C.ExecuteUbergraph_BP_PlayerAvatar
// 0x0090 (0x0090 - 0x0000)
struct BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FPlayFabPlayer& Player)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayFabPlayer                         K2Node_CustomEvent_Player;                         // 0x0020(0x0060)(ConstParm, HasGetValueTypeHash)
	class UBP_MordhauGameInstance_C*              K2Node_DynamicCast_AsBP_Mordhau_Game_Instance;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Equal_PlayFabPlayer_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar) == 0x000008, "Wrong alignment on BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar");
static_assert(sizeof(BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar) == 0x000090, "Wrong size on BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar");
static_assert(offsetof(BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar, EntryPoint) == 0x000000, "Member 'BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar, K2Node_Event_IsDesignTime) == 0x000014, "Member 'BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar, K2Node_CustomEvent_Player) == 0x000020, "Member 'BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar, K2Node_DynamicCast_AsBP_Mordhau_Game_Instance) == 0x000080, "Member 'BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar::K2Node_DynamicCast_AsBP_Mordhau_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar, CallFunc_Equal_PlayFabPlayer_ReturnValue) == 0x000089, "Member 'BP_PlayerAvatar_C_ExecuteUbergraph_BP_PlayerAvatar::CallFunc_Equal_PlayFabPlayer_ReturnValue' has a wrong offset!");

// Function BP_PlayerAvatar.BP_PlayerAvatar_C.OnPlayerInformationReceived
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerAvatar_C_OnPlayerInformationReceived final
{
public:
	struct FPlayFabPlayer                         Player_0;                                          // 0x0000(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerAvatar_C_OnPlayerInformationReceived) == 0x000008, "Wrong alignment on BP_PlayerAvatar_C_OnPlayerInformationReceived");
static_assert(sizeof(BP_PlayerAvatar_C_OnPlayerInformationReceived) == 0x000060, "Wrong size on BP_PlayerAvatar_C_OnPlayerInformationReceived");
static_assert(offsetof(BP_PlayerAvatar_C_OnPlayerInformationReceived, Player_0) == 0x000000, "Member 'BP_PlayerAvatar_C_OnPlayerInformationReceived::Player_0' has a wrong offset!");

// Function BP_PlayerAvatar.BP_PlayerAvatar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerAvatar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerAvatar_C_PreConstruct) == 0x000001, "Wrong alignment on BP_PlayerAvatar_C_PreConstruct");
static_assert(sizeof(BP_PlayerAvatar_C_PreConstruct) == 0x000001, "Wrong size on BP_PlayerAvatar_C_PreConstruct");
static_assert(offsetof(BP_PlayerAvatar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_PlayerAvatar_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_PlayerAvatar.BP_PlayerAvatar_C.Update
// 0x0090 (0x0090 - 0x0000)
struct BP_PlayerAvatar_C_Update final
{
public:
	struct FPlayFabPlayer                         Player_0;                                          // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_PlayFabPlayer_ReturnValue;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2DDynamic*                      CallFunc_GetPlayerAvatar_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_PlayFabPlayer_ReturnValue;       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MordhauGameInstance_C*              K2Node_DynamicCast_AsBP_Mordhau_Game_Instance;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerAvatar_C_Update) == 0x000008, "Wrong alignment on BP_PlayerAvatar_C_Update");
static_assert(sizeof(BP_PlayerAvatar_C_Update) == 0x000090, "Wrong size on BP_PlayerAvatar_C_Update");
static_assert(offsetof(BP_PlayerAvatar_C_Update, Player_0) == 0x000000, "Member 'BP_PlayerAvatar_C_Update::Player_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerAvatar_C_Update, CallFunc_IsValid_PlayFabPlayer_ReturnValue) == 0x000060, "Member 'BP_PlayerAvatar_C_Update::CallFunc_IsValid_PlayFabPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerAvatar_C_Update, CallFunc_GetPlayerAvatar_ReturnValue) == 0x000068, "Member 'BP_PlayerAvatar_C_Update::CallFunc_GetPlayerAvatar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerAvatar_C_Update, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_PlayerAvatar_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerAvatar_C_Update, CallFunc_NotEqual_PlayFabPlayer_ReturnValue) == 0x000071, "Member 'BP_PlayerAvatar_C_Update::CallFunc_NotEqual_PlayFabPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerAvatar_C_Update, CallFunc_GetGameInstance_ReturnValue) == 0x000078, "Member 'BP_PlayerAvatar_C_Update::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerAvatar_C_Update, K2Node_DynamicCast_AsBP_Mordhau_Game_Instance) == 0x000080, "Member 'BP_PlayerAvatar_C_Update::K2Node_DynamicCast_AsBP_Mordhau_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_PlayerAvatar_C_Update, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_PlayerAvatar_C_Update::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

