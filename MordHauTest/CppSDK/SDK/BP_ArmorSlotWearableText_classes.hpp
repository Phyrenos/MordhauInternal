#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ArmorSlotWearableText

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_ArmorSlotWearableText.BP_ArmorSlotWearableText_C
// 0x0020 (0x0280 - 0x0260)
class UBP_ArmorSlotWearableText_C final : public UUserWidget
{
public:
	class UBP_ArmorLevelIndicator_C*              BP_ArmorLevelIndicator;                            // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Text;                                      // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Slot;                                    // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Wearable;                                // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Update(uint8 Armor_Class, const class FText& Slot_Name, const class FText& Wearable_Name);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ArmorSlotWearableText_C">();
	}
	static class UBP_ArmorSlotWearableText_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ArmorSlotWearableText_C>();
	}
};
static_assert(alignof(UBP_ArmorSlotWearableText_C) == 0x000008, "Wrong alignment on UBP_ArmorSlotWearableText_C");
static_assert(sizeof(UBP_ArmorSlotWearableText_C) == 0x000280, "Wrong size on UBP_ArmorSlotWearableText_C");
static_assert(offsetof(UBP_ArmorSlotWearableText_C, BP_ArmorLevelIndicator) == 0x000260, "Member 'UBP_ArmorSlotWearableText_C::BP_ArmorLevelIndicator' has a wrong offset!");
static_assert(offsetof(UBP_ArmorSlotWearableText_C, Overlay_Text) == 0x000268, "Member 'UBP_ArmorSlotWearableText_C::Overlay_Text' has a wrong offset!");
static_assert(offsetof(UBP_ArmorSlotWearableText_C, TextBlock_Slot) == 0x000270, "Member 'UBP_ArmorSlotWearableText_C::TextBlock_Slot' has a wrong offset!");
static_assert(offsetof(UBP_ArmorSlotWearableText_C, TextBlock_Wearable) == 0x000278, "Member 'UBP_ArmorSlotWearableText_C::TextBlock_Wearable' has a wrong offset!");

}

