#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ColorPatternWidget

#include "Basic.hpp"

#include "S_ArmorySlotColorInfo_structs.hpp"
#include "Mordhau_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_ColorPatternWidget.BP_ColorPatternWidget_C.ExecuteUbergraph_BP_ColorPatternWidget
// 0x00E0 (0x00E0 - 0x0000)
struct BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CustomizationItemEntry_C*           K2Node_CustomEvent_Entry;                          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UBP_CustomizationItemEntry_C* Entry)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TArray<class UBP_ColorEntry_C*>               K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ColorEntry_C*                       CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ArmorySlotColorInfo>         K2Node_CustomEvent_Colors;                         // 0x0058(0x0010)(ConstParm, ReferenceParm)
	TArray<int32>                                 K2Node_CustomEvent_Pattern_Values;                 // 0x0068(0x0010)(ConstParm, ReferenceParm)
	struct FPatternInfo                           K2Node_CustomEvent_Selected_Pattern;               // 0x0078(0x0010)(NoDestructor)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ArmorySlotColorInfo                 CallFunc_Array_Get_Item_3;                         // 0x0098(0x0020)(HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_4;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Discretize_Value_Discretized_Value;       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CustomizationItemEntry_C*           K2Node_ComponentBoundEvent_Entry;                  // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget) == 0x000008, "Wrong alignment on BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget");
static_assert(sizeof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget) == 0x0000E0, "Wrong size on BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, EntryPoint) == 0x000000, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, Temp_bool_Variable) == 0x000008, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, Temp_byte_Variable) == 0x000010, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, Temp_byte_Variable_1) == 0x000011, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, Temp_bool_Variable_1) == 0x000012, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, Temp_byte_Variable_2) == 0x000013, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, Temp_byte_Variable_3) == 0x000014, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, Temp_bool_Variable_2) == 0x000015, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, Temp_byte_Variable_4) == 0x000016, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, Temp_byte_Variable_5) == 0x000017, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, K2Node_CustomEvent_Entry) == 0x000018, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::K2Node_CustomEvent_Entry' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, K2Node_CustomEvent_Colors) == 0x000058, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::K2Node_CustomEvent_Colors' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, K2Node_CustomEvent_Pattern_Values) == 0x000068, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::K2Node_CustomEvent_Pattern_Values' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, K2Node_CustomEvent_Selected_Pattern) == 0x000078, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::K2Node_CustomEvent_Selected_Pattern' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, K2Node_ComponentBoundEvent_Value) == 0x000088, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, CallFunc_Array_Get_Item_1) == 0x00008C, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, CallFunc_Array_Get_Item_2) == 0x000090, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, CallFunc_Greater_IntInt_ReturnValue) == 0x000094, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, CallFunc_Array_Get_Item_3) == 0x000098, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, K2Node_Select_Default) == 0x0000B8, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, K2Node_Select_Default_1) == 0x0000B9, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, CallFunc_Array_Get_Item_4) == 0x0000C0, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, CallFunc_Discretize_Value_Discretized_Value) == 0x0000C8, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::CallFunc_Discretize_Value_Discretized_Value' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, K2Node_ComponentBoundEvent_Entry) == 0x0000D0, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::K2Node_ComponentBoundEvent_Entry' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget, K2Node_Select_Default_2) == 0x0000D8, "Member 'BP_ColorPatternWidget_C_ExecuteUbergraph_BP_ColorPatternWidget::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_ColorPatternWidget.BP_ColorPatternWidget_C.BndEvt__BP_ColorPatternWidget_BP_PatternEntry_K2Node_ComponentBoundEvent_0_OnClick__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_ColorPatternWidget_C_BndEvt__BP_ColorPatternWidget_BP_PatternEntry_K2Node_ComponentBoundEvent_0_OnClick__DelegateSignature final
{
public:
	class UBP_CustomizationItemEntry_C*           Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ColorPatternWidget_C_BndEvt__BP_ColorPatternWidget_BP_PatternEntry_K2Node_ComponentBoundEvent_0_OnClick__DelegateSignature) == 0x000008, "Wrong alignment on BP_ColorPatternWidget_C_BndEvt__BP_ColorPatternWidget_BP_PatternEntry_K2Node_ComponentBoundEvent_0_OnClick__DelegateSignature");
static_assert(sizeof(BP_ColorPatternWidget_C_BndEvt__BP_ColorPatternWidget_BP_PatternEntry_K2Node_ComponentBoundEvent_0_OnClick__DelegateSignature) == 0x000008, "Wrong size on BP_ColorPatternWidget_C_BndEvt__BP_ColorPatternWidget_BP_PatternEntry_K2Node_ComponentBoundEvent_0_OnClick__DelegateSignature");
static_assert(offsetof(BP_ColorPatternWidget_C_BndEvt__BP_ColorPatternWidget_BP_PatternEntry_K2Node_ComponentBoundEvent_0_OnClick__DelegateSignature, Entry) == 0x000000, "Member 'BP_ColorPatternWidget_C_BndEvt__BP_ColorPatternWidget_BP_PatternEntry_K2Node_ComponentBoundEvent_0_OnClick__DelegateSignature::Entry' has a wrong offset!");

// Function BP_ColorPatternWidget.BP_ColorPatternWidget_C.BndEvt__BP_ColorPatternWidget_BP_MordhauSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_ColorPatternWidget_C_BndEvt__BP_ColorPatternWidget_BP_MordhauSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ColorPatternWidget_C_BndEvt__BP_ColorPatternWidget_BP_MordhauSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on BP_ColorPatternWidget_C_BndEvt__BP_ColorPatternWidget_BP_MordhauSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature");
static_assert(sizeof(BP_ColorPatternWidget_C_BndEvt__BP_ColorPatternWidget_BP_MordhauSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on BP_ColorPatternWidget_C_BndEvt__BP_ColorPatternWidget_BP_MordhauSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature");
static_assert(offsetof(BP_ColorPatternWidget_C_BndEvt__BP_ColorPatternWidget_BP_MordhauSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'BP_ColorPatternWidget_C_BndEvt__BP_ColorPatternWidget_BP_MordhauSlider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function BP_ColorPatternWidget.BP_ColorPatternWidget_C.Update 
// 0x0030 (0x0030 - 0x0000)
struct BP_ColorPatternWidget_C_Update_ final
{
public:
	TArray<struct FS_ArmorySlotColorInfo>         Colors;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Pattern_Values;                                    // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FPatternInfo                           Selected_Pattern;                                  // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_ColorPatternWidget_C_Update_) == 0x000008, "Wrong alignment on BP_ColorPatternWidget_C_Update_");
static_assert(sizeof(BP_ColorPatternWidget_C_Update_) == 0x000030, "Wrong size on BP_ColorPatternWidget_C_Update_");
static_assert(offsetof(BP_ColorPatternWidget_C_Update_, Colors) == 0x000000, "Member 'BP_ColorPatternWidget_C_Update_::Colors' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_Update_, Pattern_Values) == 0x000010, "Member 'BP_ColorPatternWidget_C_Update_::Pattern_Values' has a wrong offset!");
static_assert(offsetof(BP_ColorPatternWidget_C_Update_, Selected_Pattern) == 0x000020, "Member 'BP_ColorPatternWidget_C_Update_::Selected_Pattern' has a wrong offset!");

// Function BP_ColorPatternWidget.BP_ColorPatternWidget_C.EntryClicked
// 0x0008 (0x0008 - 0x0000)
struct BP_ColorPatternWidget_C_EntryClicked final
{
public:
	class UBP_CustomizationItemEntry_C*           Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ColorPatternWidget_C_EntryClicked) == 0x000008, "Wrong alignment on BP_ColorPatternWidget_C_EntryClicked");
static_assert(sizeof(BP_ColorPatternWidget_C_EntryClicked) == 0x000008, "Wrong size on BP_ColorPatternWidget_C_EntryClicked");
static_assert(offsetof(BP_ColorPatternWidget_C_EntryClicked, Entry) == 0x000000, "Member 'BP_ColorPatternWidget_C_EntryClicked::Entry' has a wrong offset!");

}

