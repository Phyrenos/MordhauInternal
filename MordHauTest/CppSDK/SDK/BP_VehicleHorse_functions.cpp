#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VehicleHorse

#include "Basic.hpp"

#include "BP_VehicleHorse_classes.hpp"
#include "BP_VehicleHorse_parameters.hpp"


namespace SDK
{

// Function BP_VehicleHorse.BP_VehicleHorse_C.ExecuteUbergraph_BP_VehicleHorse
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VehicleHorse_C::ExecuteUbergraph_BP_VehicleHorse(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleHorse_C", "ExecuteUbergraph_BP_VehicleHorse");

	Params::BP_VehicleHorse_C_ExecuteUbergraph_BP_VehicleHorse Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleHorse.BP_VehicleHorse_C.OnDriverChanged
// (Event, Protected, BlueprintEvent)

void UBP_VehicleHorse_C::OnDriverChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleHorse_C", "OnDriverChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleHorse.BP_VehicleHorse_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_VehicleHorse_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleHorse_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleHorse.BP_VehicleHorse_C.GetVehicleEnterInfo
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       FromTransform                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FVehicleTransitionInfo           ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor)

struct FVehicleTransitionInfo UBP_VehicleHorse_C::GetVehicleEnterInfo(class AMordhauCharacter* Character, const struct FTransform& FromTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleHorse_C", "GetVehicleEnterInfo");

	Params::BP_VehicleHorse_C_GetVehicleEnterInfo Parms{};

	Parms.Character = Character;
	Parms.FromTransform = std::move(FromTransform);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_VehicleHorse.BP_VehicleHorse_C.GetVehicleLeaveInfo
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       FromTransform                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FVehicleTransitionInfo           ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor)

struct FVehicleTransitionInfo UBP_VehicleHorse_C::GetVehicleLeaveInfo(class AMordhauCharacter* Character, const struct FTransform& FromTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleHorse_C", "GetVehicleLeaveInfo");

	Params::BP_VehicleHorse_C_GetVehicleLeaveInfo Parms{};

	Parms.Character = Character;
	Parms.FromTransform = std::move(FromTransform);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_VehicleHorse.BP_VehicleHorse_C.OverrideAttackAngle
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAttackMotion*                    Motion                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_VehicleHorse_C::OverrideAttackAngle(class UAttackMotion* Motion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleHorse_C", "OverrideAttackAngle");

	Params::BP_VehicleHorse_C_OverrideAttackAngle Parms{};

	Parms.Motion = Motion;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

