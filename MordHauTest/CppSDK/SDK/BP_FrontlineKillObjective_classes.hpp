#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrontlineKillObjective

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_structs.hpp"
#include "BP_MordhauCharacter_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FrontlineKillObjective.BP_FrontlineKillObjective_C
// 0x0150 (0x1430 - 0x12E0)
class ABP_FrontlineKillObjective_C final : public ABP_MordhauCharacter_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_FrontlineKillObjective_C;        // 0x12E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UMordhauWidgetComponent*                MordhauWidget;                                     // 0x12E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FCharacterProfile                      ProfileToAssign;                                   // 0x12F0(0x00B8)(Edit, BlueprintVisible)
	float                                         OriginalReceivedDamageModifier;                    // 0x13A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13AC[0x4];                                     // 0x13AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CapturePoint_C*                     Point;                                             // 0x13B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         EquipmentToSpawn;                                  // 0x13B8(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentPatrolIdx;                                  // 0x13C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13CC[0x4];                                     // 0x13CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_FrontlinePatrolPoint_C*>     PatrolPoints;                                      // 0x13D0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class UClass*                                 BehaviorProfile;                                   // 0x13E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScorePerDamageMultiplier;                          // 0x13E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AwardedKillPoints;                                 // 0x13EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13ED[0x3];                                     // 0x13ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ScorePerKill;                                      // 0x13F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EngagementDistance2DFromHomePoint;                 // 0x13F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OfferPlayersToPossess;                             // 0x13F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13F9[0x3];                                     // 0x13F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentCandidateTimeLeft;                          // 0x13FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_FrontlinePlayerController_C*> CandidatesForPossess;                              // 0x1400(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         CandidateTimeToDecline;                            // 0x1410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ObjectiveWasCompleted;                             // 0x1414(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Destroyed;                                         // 0x1415(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1416[0x2];                                     // 0x1416(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DefaultKnockbackFlinch;                            // 0x1418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultKnockbackClash;                             // 0x141C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultKnockbackParry;                             // 0x1420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultKnockbackWorld;                             // 0x1424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FrontlinePatrolPoint_C*             HomePoint;                                         // 0x1428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FrontlineKillObjective(int32 EntryPoint);
	void ReceiveDestroyed();
	void MoveBlockedBySlow(const struct FHitResult& Impact);
	void OnAnyObjectiveProgressChanged();
	void BPLODTick(float DeltaTime);
	void OnHealthChanged();
	void OnUpdateUIWidgets();
	void OnInitialize(class ABP_CapturePoint_C* Point_0);
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnEnemyLostPrerequisites();
	void OnEnemyGainedPrerequisites();
	void SpawnOurEquipment();
	void UpdateUIWidgets();
	void NotifyCandidateForPossession();
	void IsCandidateValidForPossession(class ABP_FrontlinePlayerController_C* Candidate, bool* Valid);
	void CompileCandidatesList();
	void AwardScorePointsIfApplicable(class AController* Instigator_0, int32 Points);
	void IsCompleted(bool* Completed);
	void IsInObjectiveArea(const struct FVector& Location, bool* InArea);
	void OnDied(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point_0, class AActor* Source, class AActor* Agent);
	void ReceiveBeginPlay();
	void UserConstructionScript();

	void GetObjectiveProgress(float* Progress) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FrontlineKillObjective_C">();
	}
	static class ABP_FrontlineKillObjective_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FrontlineKillObjective_C>();
	}
};
static_assert(alignof(ABP_FrontlineKillObjective_C) == 0x000010, "Wrong alignment on ABP_FrontlineKillObjective_C");
static_assert(sizeof(ABP_FrontlineKillObjective_C) == 0x001430, "Wrong size on ABP_FrontlineKillObjective_C");
static_assert(offsetof(ABP_FrontlineKillObjective_C, UberGraphFrame_BP_FrontlineKillObjective_C) == 0x0012E0, "Member 'ABP_FrontlineKillObjective_C::UberGraphFrame_BP_FrontlineKillObjective_C' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, MordhauWidget) == 0x0012E8, "Member 'ABP_FrontlineKillObjective_C::MordhauWidget' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, ProfileToAssign) == 0x0012F0, "Member 'ABP_FrontlineKillObjective_C::ProfileToAssign' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, OriginalReceivedDamageModifier) == 0x0013A8, "Member 'ABP_FrontlineKillObjective_C::OriginalReceivedDamageModifier' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, Point) == 0x0013B0, "Member 'ABP_FrontlineKillObjective_C::Point' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, EquipmentToSpawn) == 0x0013B8, "Member 'ABP_FrontlineKillObjective_C::EquipmentToSpawn' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, CurrentPatrolIdx) == 0x0013C8, "Member 'ABP_FrontlineKillObjective_C::CurrentPatrolIdx' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, PatrolPoints) == 0x0013D0, "Member 'ABP_FrontlineKillObjective_C::PatrolPoints' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, BehaviorProfile) == 0x0013E0, "Member 'ABP_FrontlineKillObjective_C::BehaviorProfile' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, ScorePerDamageMultiplier) == 0x0013E8, "Member 'ABP_FrontlineKillObjective_C::ScorePerDamageMultiplier' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, AwardedKillPoints) == 0x0013EC, "Member 'ABP_FrontlineKillObjective_C::AwardedKillPoints' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, ScorePerKill) == 0x0013F0, "Member 'ABP_FrontlineKillObjective_C::ScorePerKill' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, EngagementDistance2DFromHomePoint) == 0x0013F4, "Member 'ABP_FrontlineKillObjective_C::EngagementDistance2DFromHomePoint' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, OfferPlayersToPossess) == 0x0013F8, "Member 'ABP_FrontlineKillObjective_C::OfferPlayersToPossess' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, CurrentCandidateTimeLeft) == 0x0013FC, "Member 'ABP_FrontlineKillObjective_C::CurrentCandidateTimeLeft' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, CandidatesForPossess) == 0x001400, "Member 'ABP_FrontlineKillObjective_C::CandidatesForPossess' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, CandidateTimeToDecline) == 0x001410, "Member 'ABP_FrontlineKillObjective_C::CandidateTimeToDecline' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, ObjectiveWasCompleted) == 0x001414, "Member 'ABP_FrontlineKillObjective_C::ObjectiveWasCompleted' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, Destroyed) == 0x001415, "Member 'ABP_FrontlineKillObjective_C::Destroyed' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, DefaultKnockbackFlinch) == 0x001418, "Member 'ABP_FrontlineKillObjective_C::DefaultKnockbackFlinch' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, DefaultKnockbackClash) == 0x00141C, "Member 'ABP_FrontlineKillObjective_C::DefaultKnockbackClash' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, DefaultKnockbackParry) == 0x001420, "Member 'ABP_FrontlineKillObjective_C::DefaultKnockbackParry' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, DefaultKnockbackWorld) == 0x001424, "Member 'ABP_FrontlineKillObjective_C::DefaultKnockbackWorld' has a wrong offset!");
static_assert(offsetof(ABP_FrontlineKillObjective_C, HomePoint) == 0x001428, "Member 'ABP_FrontlineKillObjective_C::HomePoint' has a wrong offset!");

}

