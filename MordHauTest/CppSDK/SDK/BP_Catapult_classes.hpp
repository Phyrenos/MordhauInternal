#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Catapult

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_structs.hpp"
#include "Mordhau_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Catapult.BP_Catapult_C
// 0x0040 (0x0C00 - 0x0BC0)
class ABP_Catapult_C final : public AMordhauWheeledVehicle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BC0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UBP_VehicleCatapult_C*                  BP_VehicleCatapult;                                // 0x0BC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMoveSoundComponent*                    MoveSound;                                         // 0x0BD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileArmShooterComponent*         ProjectileArmShooter;                              // 0x0BD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Projectile;                                        // 0x0BE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      BackCapsule;                                       // 0x0BE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box1;                                              // 0x0BF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0BF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Catapult(int32 EntryPoint);
	void ReceiveBeginPlay();
	void InpAxisEvt_Turn_Right_K2Node_InputAxisEvent_6(float AxisValue);
	void InpAxisEvt_Look_Up_K2Node_InputAxisEvent_35(float AxisValue);
	void InpAxisEvt_Move_Right_K2Node_InputAxisEvent_20(float AxisValue);
	void OnCosmeticHit(EMordhauDamageType DamageType, uint8 SubType, const struct FHitResult& Hit, class AActor* Agent);
	void OnDied(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source, class AActor* Agent);
	void ReceiveUnpossessed(class AController* OldController);
	void InpActEvt_Lower_Catapult_Arm_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_Raise_Catapult_Arm_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_Fire_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_Cycle_Camera_K2Node_InputActionEvent_3(const struct FKey& Key);
	void InpActEvt_Cycle_Camera_K2Node_InputActionEvent_4(const struct FKey& Key);
	void UserConstructionScript();
	struct FPOV PostProcessCameraPOV(const struct FPOV& InPOV);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Catapult_C">();
	}
	static class ABP_Catapult_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Catapult_C>();
	}
};
static_assert(alignof(ABP_Catapult_C) == 0x000010, "Wrong alignment on ABP_Catapult_C");
static_assert(sizeof(ABP_Catapult_C) == 0x000C00, "Wrong size on ABP_Catapult_C");
static_assert(offsetof(ABP_Catapult_C, UberGraphFrame) == 0x000BC0, "Member 'ABP_Catapult_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, BP_VehicleCatapult) == 0x000BC8, "Member 'ABP_Catapult_C::BP_VehicleCatapult' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, MoveSound) == 0x000BD0, "Member 'ABP_Catapult_C::MoveSound' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, ProjectileArmShooter) == 0x000BD8, "Member 'ABP_Catapult_C::ProjectileArmShooter' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, Projectile) == 0x000BE0, "Member 'ABP_Catapult_C::Projectile' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, BackCapsule) == 0x000BE8, "Member 'ABP_Catapult_C::BackCapsule' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, Box1) == 0x000BF0, "Member 'ABP_Catapult_C::Box1' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, Box) == 0x000BF8, "Member 'ABP_Catapult_C::Box' has a wrong offset!");

}

