#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LoadoutPicker

#include "Basic.hpp"

#include "BP_LoadoutPicker_classes.hpp"
#include "BP_LoadoutPicker_parameters.hpp"


namespace SDK
{

// Function BP_LoadoutPicker.BP_LoadoutPicker_C.ExecuteUbergraph_BP_LoadoutPicker
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::ExecuteUbergraph_BP_LoadoutPicker(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "ExecuteUbergraph_BP_LoadoutPicker");

	Params::BP_LoadoutPicker_C_ExecuteUbergraph_BP_LoadoutPicker Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.BndEvt__BP_LoadoutPicker_BP_LoadoutSelectionMenu_K2Node_ComponentBoundEvent_0_ToggleDefaultLoadouts__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bHideDefaults                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LoadoutPicker_C::BndEvt__BP_LoadoutPicker_BP_LoadoutSelectionMenu_K2Node_ComponentBoundEvent_0_ToggleDefaultLoadouts__DelegateSignature(bool bHideDefaults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "BndEvt__BP_LoadoutPicker_BP_LoadoutSelectionMenu_K2Node_ComponentBoundEvent_0_ToggleDefaultLoadouts__DelegateSignature");

	Params::BP_LoadoutPicker_C_BndEvt__BP_LoadoutPicker_BP_LoadoutSelectionMenu_K2Node_ComponentBoundEvent_0_ToggleDefaultLoadouts__DelegateSignature Parms{};

	Parms.bHideDefaults = bHideDefaults;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.CloneProfileCanceled
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::CloneProfileCanceled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "CloneProfileCanceled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.CloneProfileConfirmed
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::CloneProfileConfirmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "CloneProfileConfirmed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Repeat Key Pressed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::Repeat_Key_Pressed(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Repeat Key Pressed");

	Params::BP_LoadoutPicker_C_Repeat_Key_Pressed Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.List Unhovered
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::List_Unhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "List Unhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Key Pressed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             KeyName                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::Key_Pressed(const struct FKey& KeyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Key Pressed");

	Params::BP_LoadoutPicker_C_Key_Pressed Parms{};

	Parms.KeyName = std::move(KeyName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Confirm Clicked
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Confirm_Clicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Confirm Clicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Show Perks
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Show_Perks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Show Perks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Show Wearable Slot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EWearableSlot                           Slot_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::Show_Wearable_Slot(EWearableSlot Slot_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Show Wearable Slot");

	Params::BP_LoadoutPicker_C_Show_Wearable_Slot Parms{};

	Parms.Slot_0 = Slot_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Show Equipment Slot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::Show_Equipment_Slot(int32 Slot_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Show Equipment Slot");

	Params::BP_LoadoutPicker_C_Show_Equipment_Slot Parms{};

	Parms.Slot_0 = Slot_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Appearance Button Clicked
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Appearance_Button_Clicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Appearance Button Clicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Loadout Selection Back
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Loadout_Selection_Back()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Loadout Selection Back");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Play button clicked
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Play_button_clicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Play button clicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Entry Double Clicked
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Entry_Double_Clicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Entry Double Clicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.CategoryDeleteCancel
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::CategoryDeleteCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "CategoryDeleteCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.CategoryDeleteConfirm
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::CategoryDeleteConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "CategoryDeleteConfirm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.DeleteCategoryEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_LoadoutCategory_C*            Category_To_Delete                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::DeleteCategoryEvent(class UBP_LoadoutCategory_C* Category_To_Delete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "DeleteCategoryEvent");

	Params::BP_LoadoutPicker_C_DeleteCategoryEvent Parms{};

	Parms.Category_To_Delete = Category_To_Delete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Cancelled
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Cancelled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Cancelled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Confirmed
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Confirmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Confirmed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Add Category
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Add_Category()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Add Category");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Clone Loadout
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Clone_Loadout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Clone Loadout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Add Loadout
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Add_Loadout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Add Loadout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Delete Loadout
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Delete_Loadout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Delete Loadout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Rename Loadout
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Rename_Loadout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Rename Loadout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.RegisterPreviewEvents
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::RegisterPreviewEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "RegisterPreviewEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.DeleteConfirm
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::DeleteConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "DeleteConfirm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.DeleteCancel
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::DeleteCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "DeleteCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.OnDrag
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaDistance                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::OnDrag(float DeltaDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "OnDrag");

	Params::BP_LoadoutPicker_C_OnDrag Parms{};

	Parms.DeltaDistance = DeltaDistance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.NewProfileNameCanceled
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::NewProfileNameCanceled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "NewProfileNameCanceled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.NewProfileNameEntered
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::NewProfileNameEntered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "NewProfileNameEntered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.RenameConfirm
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::RenameConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "RenameConfirm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.RenameCancel
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::RenameCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "RenameCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_LoadoutPicker_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.OnScroll
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ScrollDelta                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::OnScroll(float ScrollDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "OnScroll");

	Params::BP_LoadoutPicker_C_OnScroll Parms{};

	Parms.ScrollDelta = ScrollDelta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.SetActive
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::SetActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "SetActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.UpdatePreviewDoll
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCharacterProfile                New_Profile                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_LoadoutPicker_C::UpdatePreviewDoll(const struct FCharacterProfile& New_Profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "UpdatePreviewDoll");

	Params::BP_LoadoutPicker_C_UpdatePreviewDoll Parms{};

	Parms.New_Profile = std::move(New_Profile);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.GetSelectedIDInCustomProfiles
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   SelectedId_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::GetSelectedIDInCustomProfiles(int32* SelectedId_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "GetSelectedIDInCustomProfiles");

	Params::BP_LoadoutPicker_C_GetSelectedIDInCustomProfiles Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SelectedId_0 != nullptr)
		*SelectedId_0 = Parms.SelectedId_0;
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.GetDefaultOrCustomProfileFromSingleton
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SelectedIdx                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCharacterProfile                Profile                                                (Parm, OutParm)

void UBP_LoadoutPicker_C::GetDefaultOrCustomProfileFromSingleton(int32 SelectedIdx, struct FCharacterProfile* Profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "GetDefaultOrCustomProfileFromSingleton");

	Params::BP_LoadoutPicker_C_GetDefaultOrCustomProfileFromSingleton Parms{};

	Parms.SelectedIdx = SelectedIdx;

	UObject::ProcessEvent(Func, &Parms);

	if (Profile != nullptr)
		*Profile = std::move(Parms.Profile);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Get_MenuToggleButtonOverlay_Visibility_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_LoadoutPicker_C::Get_MenuToggleButtonOverlay_Visibility_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Get_MenuToggleButtonOverlay_Visibility_0");

	Params::BP_LoadoutPicker_C_Get_MenuToggleButtonOverlay_Visibility_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Get_BP_CloseButton_Visibility_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_LoadoutPicker_C::Get_BP_CloseButton_Visibility_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Get_BP_CloseButton_Visibility_0");

	Params::BP_LoadoutPicker_C_Get_BP_CloseButton_Visibility_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Show Entries
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Show_Entries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Show Entries");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Generate Categories
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Generate_Categories()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Generate Categories");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Category Clicked
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CustomizationItemEntry_C*     Entry                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::Category_Clicked(class UBP_CustomizationItemEntry_C* Entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Category Clicked");

	Params::BP_LoadoutPicker_C_Category_Clicked Parms{};

	Parms.Entry = Entry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Initialize Loadout Data
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Initialize_Loadout_Data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Initialize Loadout Data");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Add Category To Profile
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCharacterProfile                Profile                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class UBP_LoadoutCategory_C*            New_Category                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::Add_Category_To_Profile(const struct FCharacterProfile& Profile, class UBP_LoadoutCategory_C* New_Category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Add Category To Profile");

	Params::BP_LoadoutPicker_C_Add_Category_To_Profile Parms{};

	Parms.Profile = std::move(Profile);
	Parms.New_Category = New_Category;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.DeleteCategory
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_LoadoutCategory_C*            Category_To_Delete                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::DeleteCategory(class UBP_LoadoutCategory_C* Category_To_Delete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "DeleteCategory");

	Params::BP_LoadoutPicker_C_DeleteCategory Parms{};

	Parms.Category_To_Delete = Category_To_Delete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Generate and Update Entries
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Generate_and_Update_Entries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Generate and Update Entries");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Move Loadout Entry
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Dragged_Entry                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Target_Entry                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::Move_Loadout_Entry(int32 Dragged_Entry, int32 Target_Entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Move Loadout Entry");

	Params::BP_LoadoutPicker_C_Move_Loadout_Entry Parms{};

	Parms.Dragged_Entry = Dragged_Entry;
	Parms.Target_Entry = Target_Entry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Set Selected Loadout
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   New_Selected_Id                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::Set_Selected_Loadout(int32 New_Selected_Id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Set Selected Loadout");

	Params::BP_LoadoutPicker_C_Set_Selected_Loadout Parms{};

	Parms.New_Selected_Id = New_Selected_Id;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Update Entry Ids
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Update_Entry_Ids()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Update Entry Ids");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Select New Loadout
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsSelected                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LoadoutPicker_C::Select_New_Loadout(class UObject* Item, bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Select New Loadout");

	Params::BP_LoadoutPicker_C_Select_New_Loadout Parms{};

	Parms.Item = Item;
	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.On Loadout Entry Generated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::On_Loadout_Entry_Generated(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "On Loadout Entry Generated");

	Params::BP_LoadoutPicker_C_On_Loadout_Entry_Generated Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Listview Entry Double Clicked
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::Listview_Entry_Double_Clicked(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Listview Entry Double Clicked");

	Params::BP_LoadoutPicker_C_Listview_Entry_Double_Clicked Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Select initial loadout
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Select_initial_loadout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Select initial loadout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Handle Key Shortcuts
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::Handle_Key_Shortcuts(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Handle Key Shortcuts");

	Params::BP_LoadoutPicker_C_Handle_Key_Shortcuts Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Update Breadcrumb Header
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Update_Breadcrumb_Header()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Update Breadcrumb Header");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.On Loadout Entry Hovered
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsHovered                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LoadoutPicker_C::On_Loadout_Entry_Hovered(class UObject* Item, bool bIsHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "On Loadout Entry Hovered");

	Params::BP_LoadoutPicker_C_On_Loadout_Entry_Hovered Parms{};

	Parms.Item = Item;
	Parms.bIsHovered = bIsHovered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Update Hovered Profile
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCharacterProfile                New_Profile                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   Hovered_Id_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::Update_Hovered_Profile(const struct FCharacterProfile& New_Profile, int32 Hovered_Id_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Update Hovered Profile");

	Params::BP_LoadoutPicker_C_Update_Hovered_Profile Parms{};

	Parms.New_Profile = std::move(New_Profile);
	Parms.Hovered_Id_0 = Hovered_Id_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Update Loadout Breakdown
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCharacterProfile                New_Profile                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_LoadoutPicker_C::Update_Loadout_Breakdown(const struct FCharacterProfile& New_Profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Update Loadout Breakdown");

	Params::BP_LoadoutPicker_C_Update_Loadout_Breakdown Parms{};

	Parms.New_Profile = std::move(New_Profile);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Handle Gamepad Camera Controls
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::Handle_Gamepad_Camera_Controls(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Handle Gamepad Camera Controls");

	Params::BP_LoadoutPicker_C_Handle_Gamepad_Camera_Controls Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.CreateNewCategoryFromDrop
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCharacterProfile                Profile                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class UBP_LoadoutCategory_C*            New_Category                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::CreateNewCategoryFromDrop(const struct FCharacterProfile& Profile, class UBP_LoadoutCategory_C* New_Category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "CreateNewCategoryFromDrop");

	Params::BP_LoadoutPicker_C_CreateNewCategoryFromDrop Parms{};

	Parms.Profile = std::move(Profile);
	Parms.New_Category = New_Category;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.ClearCategoryFromDrop
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCharacterProfile                Profile                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class UBP_LoadoutCategory_C*            New_Category                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::ClearCategoryFromDrop(const struct FCharacterProfile& Profile, class UBP_LoadoutCategory_C* New_Category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "ClearCategoryFromDrop");

	Params::BP_LoadoutPicker_C_ClearCategoryFromDrop Parms{};

	Parms.Profile = std::move(Profile);
	Parms.New_Category = New_Category;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.OnItemUnequipped
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::OnItemUnequipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "OnItemUnequipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Play Entry Anim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bLeftToRight                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LoadoutPicker_C::Play_Entry_Anim(bool bLeftToRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Play Entry Anim");

	Params::BP_LoadoutPicker_C_Play_Entry_Anim Parms{};

	Parms.bLeftToRight = bLeftToRight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Select Previous Category
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Select_Previous_Category()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Select Previous Category");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Select Next Category
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Select_Next_Category()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Select Next Category");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Select Next Loadout
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Select_Next_Loadout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Select Next Loadout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Select Previous Loadout
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Select_Previous_Loadout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Select Previous Loadout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Set Selected Loadout Data
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_LoadoutData_C*                Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::Set_Selected_Loadout_Data(class UBP_LoadoutData_C* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Set Selected Loadout Data");

	Params::BP_LoadoutPicker_C_Set_Selected_Loadout_Data Parms{};

	Parms.Data = Data;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.Select All Category
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutPicker_C::Select_All_Category()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "Select All Category");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.GetIsDefaultCategoryActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_LoadoutPicker_C::GetIsDefaultCategoryActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "GetIsDefaultCategoryActive");

	Params::BP_LoadoutPicker_C_GetIsDefaultCategoryActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutPicker.BP_LoadoutPicker_C.OnCharacterDollUpdated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMordhauCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutPicker_C::OnCharacterDollUpdated(class AMordhauCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutPicker_C", "OnCharacterDollUpdated");

	Params::BP_LoadoutPicker_C_OnCharacterDollUpdated Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}

}

