#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HolyGunProjectileBlessing_DIH

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_HolyGunProjectile_DIH_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HolyGunProjectileBlessing_DIH.BP_HolyGunProjectileBlessing_DIH_C
// 0x0040 (0x08B0 - 0x0870)
class ABP_HolyGunProjectileBlessing_DIH_C final : public ABP_HolyGunProjectile_DIH_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_HolyGunProjectileBlessing_DIH_C; // 0x0868(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UStaticMeshComponent*                   Sphere2;                                           // 0x0870(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere1;                                           // 0x0878(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_SlashTrail;                                      // 0x0880(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0888(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0890(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MatProgress_SlashMask_06C145F64D6B484F6AB6A08D6040BF75; // 0x0898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            MatProgress__Direction_06C145F64D6B484F6AB6A08D6040BF75; // 0x089C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_89D[0x3];                                      // 0x089D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     MatProgress;                                       // 0x08A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         LifeTime;                                          // 0x08A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxBrightness;                                     // 0x08AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_HolyGunProjectileBlessing_DIH(int32 EntryPoint);
	void OnProjectileHit(const struct FVector& HitLocation, const struct FVector& HitNormal, float BounceForce, uint8 Surface, bool bHasHitWorld, bool bHasStopped);
	void HitEffectsMulti(const struct FVector& Location);
	void ReceiveBeginPlay();
	void BndEvt__BP_HolyGunProjectileBlessing_DIH_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void MatProgress__UpdateFunc();
	void MatProgress__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HolyGunProjectileBlessing_DIH_C">();
	}
	static class ABP_HolyGunProjectileBlessing_DIH_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HolyGunProjectileBlessing_DIH_C>();
	}
};
static_assert(alignof(ABP_HolyGunProjectileBlessing_DIH_C) == 0x000010, "Wrong alignment on ABP_HolyGunProjectileBlessing_DIH_C");
static_assert(sizeof(ABP_HolyGunProjectileBlessing_DIH_C) == 0x0008B0, "Wrong size on ABP_HolyGunProjectileBlessing_DIH_C");
static_assert(offsetof(ABP_HolyGunProjectileBlessing_DIH_C, UberGraphFrame_BP_HolyGunProjectileBlessing_DIH_C) == 0x000868, "Member 'ABP_HolyGunProjectileBlessing_DIH_C::UberGraphFrame_BP_HolyGunProjectileBlessing_DIH_C' has a wrong offset!");
static_assert(offsetof(ABP_HolyGunProjectileBlessing_DIH_C, Sphere2) == 0x000870, "Member 'ABP_HolyGunProjectileBlessing_DIH_C::Sphere2' has a wrong offset!");
static_assert(offsetof(ABP_HolyGunProjectileBlessing_DIH_C, Sphere1) == 0x000878, "Member 'ABP_HolyGunProjectileBlessing_DIH_C::Sphere1' has a wrong offset!");
static_assert(offsetof(ABP_HolyGunProjectileBlessing_DIH_C, P_SlashTrail) == 0x000880, "Member 'ABP_HolyGunProjectileBlessing_DIH_C::P_SlashTrail' has a wrong offset!");
static_assert(offsetof(ABP_HolyGunProjectileBlessing_DIH_C, PointLight) == 0x000888, "Member 'ABP_HolyGunProjectileBlessing_DIH_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_HolyGunProjectileBlessing_DIH_C, Sphere) == 0x000890, "Member 'ABP_HolyGunProjectileBlessing_DIH_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_HolyGunProjectileBlessing_DIH_C, MatProgress_SlashMask_06C145F64D6B484F6AB6A08D6040BF75) == 0x000898, "Member 'ABP_HolyGunProjectileBlessing_DIH_C::MatProgress_SlashMask_06C145F64D6B484F6AB6A08D6040BF75' has a wrong offset!");
static_assert(offsetof(ABP_HolyGunProjectileBlessing_DIH_C, MatProgress__Direction_06C145F64D6B484F6AB6A08D6040BF75) == 0x00089C, "Member 'ABP_HolyGunProjectileBlessing_DIH_C::MatProgress__Direction_06C145F64D6B484F6AB6A08D6040BF75' has a wrong offset!");
static_assert(offsetof(ABP_HolyGunProjectileBlessing_DIH_C, MatProgress) == 0x0008A0, "Member 'ABP_HolyGunProjectileBlessing_DIH_C::MatProgress' has a wrong offset!");
static_assert(offsetof(ABP_HolyGunProjectileBlessing_DIH_C, LifeTime) == 0x0008A8, "Member 'ABP_HolyGunProjectileBlessing_DIH_C::LifeTime' has a wrong offset!");
static_assert(offsetof(ABP_HolyGunProjectileBlessing_DIH_C, MaxBrightness) == 0x0008AC, "Member 'ABP_HolyGunProjectileBlessing_DIH_C::MaxBrightness' has a wrong offset!");

}

