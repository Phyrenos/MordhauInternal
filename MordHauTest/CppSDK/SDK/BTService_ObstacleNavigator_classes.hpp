#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTService_ObstacleNavigator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTService_ObstacleNavigator.BTService_ObstacleNavigator_C
// 0x0050 (0x00E8 - 0x0098)
class UBTService_ObstacleNavigator_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	struct FVector                                LastActorLocation;                                 // 0x00A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentMovementDistance;                           // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GiveTurdIfCantReach;                               // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempSlot;                                          // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBlackboardKeySelector                 CantReach;                                         // 0x00B8(0x0028)(Edit, BlueprintVisible)
	bool                                          PartialPath;                                       // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasGivenTurd;                                      // 0x00E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BTService_ObstacleNavigator(int32 EntryPoint);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTService_ObstacleNavigator_C">();
	}
	static class UBTService_ObstacleNavigator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTService_ObstacleNavigator_C>();
	}
};
static_assert(alignof(UBTService_ObstacleNavigator_C) == 0x000008, "Wrong alignment on UBTService_ObstacleNavigator_C");
static_assert(sizeof(UBTService_ObstacleNavigator_C) == 0x0000E8, "Wrong size on UBTService_ObstacleNavigator_C");
static_assert(offsetof(UBTService_ObstacleNavigator_C, UberGraphFrame) == 0x000098, "Member 'UBTService_ObstacleNavigator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTService_ObstacleNavigator_C, LastActorLocation) == 0x0000A0, "Member 'UBTService_ObstacleNavigator_C::LastActorLocation' has a wrong offset!");
static_assert(offsetof(UBTService_ObstacleNavigator_C, CurrentMovementDistance) == 0x0000AC, "Member 'UBTService_ObstacleNavigator_C::CurrentMovementDistance' has a wrong offset!");
static_assert(offsetof(UBTService_ObstacleNavigator_C, GiveTurdIfCantReach) == 0x0000B0, "Member 'UBTService_ObstacleNavigator_C::GiveTurdIfCantReach' has a wrong offset!");
static_assert(offsetof(UBTService_ObstacleNavigator_C, TempSlot) == 0x0000B4, "Member 'UBTService_ObstacleNavigator_C::TempSlot' has a wrong offset!");
static_assert(offsetof(UBTService_ObstacleNavigator_C, CantReach) == 0x0000B8, "Member 'UBTService_ObstacleNavigator_C::CantReach' has a wrong offset!");
static_assert(offsetof(UBTService_ObstacleNavigator_C, PartialPath) == 0x0000E0, "Member 'UBTService_ObstacleNavigator_C::PartialPath' has a wrong offset!");
static_assert(offsetof(UBTService_ObstacleNavigator_C, HasGivenTurd) == 0x0000E1, "Member 'UBTService_ObstacleNavigator_C::HasGivenTurd' has a wrong offset!");

}

