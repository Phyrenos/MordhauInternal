#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Ballista

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MordhauVehicle_classes.hpp"
#include "Mordhau_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Ballista.BP_Ballista_C
// 0x0030 (0x0BC0 - 0x0B90)
class ABP_Ballista_C final : public ABP_MordhauVehicle_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B90(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UBP_VehicleBallista_C*                  BP_VehicleBallista;                                // 0x0B98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UMoveSoundComponent*                    MoveSound;                                         // 0x0BA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UProjectileTurretShooterComponent*      ProjectileTurretShooter;                           // 0x0BA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Bolt;                                              // 0x0BB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Ballista(int32 EntryPoint);
	void InpAxisEvt_Turn_Right_K2Node_InputAxisEvent_4(float AxisValue);
	void InpAxisEvt_Look_Up_K2Node_InputAxisEvent_18(float AxisValue);
	void OnCosmeticHit(EMordhauDamageType DamageType, uint8 SubType, const struct FHitResult& Hit, class AActor* Agent);
	void OnDied(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source, class AActor* Agent);
	void ReceiveBeginPlay();
	void InpActEvt_Cycle_Camera_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_Cycle_Camera_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_Fire_K2Node_InputActionEvent_2(const struct FKey& Key);
	void UserConstructionScript();
	struct FPOV PostProcessCameraPOV(const struct FPOV& InPOV);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Ballista_C">();
	}
	static class ABP_Ballista_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Ballista_C>();
	}
};
static_assert(alignof(ABP_Ballista_C) == 0x000010, "Wrong alignment on ABP_Ballista_C");
static_assert(sizeof(ABP_Ballista_C) == 0x000BC0, "Wrong size on ABP_Ballista_C");
static_assert(offsetof(ABP_Ballista_C, UberGraphFrame) == 0x000B90, "Member 'ABP_Ballista_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Ballista_C, BP_VehicleBallista) == 0x000B98, "Member 'ABP_Ballista_C::BP_VehicleBallista' has a wrong offset!");
static_assert(offsetof(ABP_Ballista_C, MoveSound) == 0x000BA0, "Member 'ABP_Ballista_C::MoveSound' has a wrong offset!");
static_assert(offsetof(ABP_Ballista_C, ProjectileTurretShooter) == 0x000BA8, "Member 'ABP_Ballista_C::ProjectileTurretShooter' has a wrong offset!");
static_assert(offsetof(ABP_Ballista_C, Bolt) == 0x000BB0, "Member 'ABP_Ballista_C::Bolt' has a wrong offset!");

}

