#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HordeKillObjective

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mordhau_structs.hpp"
#include "BP_MordhauCharacter_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HordeKillObjective.BP_HordeKillObjective_C
// 0x0100 (0x13E0 - 0x12E0)
class ABP_HordeKillObjective_C : public ABP_MordhauCharacter_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_HordeKillObjective_C;            // 0x12E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UMordhauWidgetComponent*                MordhauWidget;                                     // 0x12E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<class UClass*>                         EquipmentToSpawn;                                  // 0x12F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CurrentPatrolIdx;                                  // 0x1300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1304[0x4];                                     // 0x1304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_FrontlinePatrolPoint_C*>     PatrolPoints;                                      // 0x1308(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class UClass*                                 BehaviorProfile;                                   // 0x1318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FrontlinePatrolPoint_C*             HomePoint;                                         // 0x1320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EngagementDistance2DFromHomePoint;                 // 0x1328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         DefenseUpgrades;                                   // 0x132C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         OffenseUpgrades;                                   // 0x132D(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132E[0x2];                                     // 0x132E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class UClass*>                    WaveToEquipmentMap;                                // 0x1330(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FCharacterProfile>         DefenseLevelToProfileMap;                          // 0x1380(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AMordhauEquipment*                      LastSpawnedEquipment;                              // 0x13D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class AMordhauAIController>       Controller_Class;                                  // 0x13D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_HordeKillObjective(int32 EntryPoint);
	void MoveBlockedBySlow(const struct FHitResult& Impact);
	void OnHealthChanged();
	void ReceiveTick(float DeltaSeconds);
	void SpawnOurEquipment();
	void OnRep_DefenseUpgrades();
	void OnRep_OffenseUpgrades();
	void OnWaveProgressed(int32 NewWave);
	void OnDied(float Angle, EMordhauDamageType Type, uint8 SubType, class FName bone, const struct FVector& Point, class AActor* Source, class AActor* Agent);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HordeKillObjective_C">();
	}
	static class ABP_HordeKillObjective_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HordeKillObjective_C>();
	}
};
static_assert(alignof(ABP_HordeKillObjective_C) == 0x000010, "Wrong alignment on ABP_HordeKillObjective_C");
static_assert(sizeof(ABP_HordeKillObjective_C) == 0x0013E0, "Wrong size on ABP_HordeKillObjective_C");
static_assert(offsetof(ABP_HordeKillObjective_C, UberGraphFrame_BP_HordeKillObjective_C) == 0x0012E0, "Member 'ABP_HordeKillObjective_C::UberGraphFrame_BP_HordeKillObjective_C' has a wrong offset!");
static_assert(offsetof(ABP_HordeKillObjective_C, MordhauWidget) == 0x0012E8, "Member 'ABP_HordeKillObjective_C::MordhauWidget' has a wrong offset!");
static_assert(offsetof(ABP_HordeKillObjective_C, EquipmentToSpawn) == 0x0012F0, "Member 'ABP_HordeKillObjective_C::EquipmentToSpawn' has a wrong offset!");
static_assert(offsetof(ABP_HordeKillObjective_C, CurrentPatrolIdx) == 0x001300, "Member 'ABP_HordeKillObjective_C::CurrentPatrolIdx' has a wrong offset!");
static_assert(offsetof(ABP_HordeKillObjective_C, PatrolPoints) == 0x001308, "Member 'ABP_HordeKillObjective_C::PatrolPoints' has a wrong offset!");
static_assert(offsetof(ABP_HordeKillObjective_C, BehaviorProfile) == 0x001318, "Member 'ABP_HordeKillObjective_C::BehaviorProfile' has a wrong offset!");
static_assert(offsetof(ABP_HordeKillObjective_C, HomePoint) == 0x001320, "Member 'ABP_HordeKillObjective_C::HomePoint' has a wrong offset!");
static_assert(offsetof(ABP_HordeKillObjective_C, EngagementDistance2DFromHomePoint) == 0x001328, "Member 'ABP_HordeKillObjective_C::EngagementDistance2DFromHomePoint' has a wrong offset!");
static_assert(offsetof(ABP_HordeKillObjective_C, DefenseUpgrades) == 0x00132C, "Member 'ABP_HordeKillObjective_C::DefenseUpgrades' has a wrong offset!");
static_assert(offsetof(ABP_HordeKillObjective_C, OffenseUpgrades) == 0x00132D, "Member 'ABP_HordeKillObjective_C::OffenseUpgrades' has a wrong offset!");
static_assert(offsetof(ABP_HordeKillObjective_C, WaveToEquipmentMap) == 0x001330, "Member 'ABP_HordeKillObjective_C::WaveToEquipmentMap' has a wrong offset!");
static_assert(offsetof(ABP_HordeKillObjective_C, DefenseLevelToProfileMap) == 0x001380, "Member 'ABP_HordeKillObjective_C::DefenseLevelToProfileMap' has a wrong offset!");
static_assert(offsetof(ABP_HordeKillObjective_C, LastSpawnedEquipment) == 0x0013D0, "Member 'ABP_HordeKillObjective_C::LastSpawnedEquipment' has a wrong offset!");
static_assert(offsetof(ABP_HordeKillObjective_C, Controller_Class) == 0x0013D8, "Member 'ABP_HordeKillObjective_C::Controller_Class' has a wrong offset!");

}

