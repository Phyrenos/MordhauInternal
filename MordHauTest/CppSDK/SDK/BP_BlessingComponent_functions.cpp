#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BlessingComponent

#include "Basic.hpp"

#include "BP_BlessingComponent_classes.hpp"
#include "BP_BlessingComponent_parameters.hpp"


namespace SDK
{

// Function BP_BlessingComponent.BP_BlessingComponent_C.ExecuteUbergraph_BP_BlessingComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BlessingComponent_C::ExecuteUbergraph_BP_BlessingComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BlessingComponent_C", "ExecuteUbergraph_BP_BlessingComponent");

	Params::BP_BlessingComponent_C_ExecuteUbergraph_BP_BlessingComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BlessingComponent.BP_BlessingComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BlessingComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BlessingComponent_C", "ReceiveTick");

	Params::BP_BlessingComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BlessingComponent.BP_BlessingComponent_C.CleanBloodLoop
// (BlueprintCallable, BlueprintEvent)

void UBP_BlessingComponent_C::CleanBloodLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BlessingComponent_C", "CleanBloodLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BlessingComponent.BP_BlessingComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_BlessingComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BlessingComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BlessingComponent.BP_BlessingComponent_C.ApplyVisuals
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BlessingComponent_C::ApplyVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BlessingComponent_C", "ApplyVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BlessingComponent.BP_BlessingComponent_C.AddPointLight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BlessingComponent_C::AddPointLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BlessingComponent_C", "AddPointLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BlessingComponent.BP_BlessingComponent_C.AddShineMesh
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BlessingComponent_C::AddShineMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BlessingComponent_C", "AddShineMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BlessingComponent.BP_BlessingComponent_C.CloneMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          LocationOffset                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ScaleMultiplier                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BlessingComponent_C::CloneMesh(const struct FVector& LocationOffset, const struct FVector& ScaleMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BlessingComponent_C", "CloneMesh");

	Params::BP_BlessingComponent_C_CloneMesh Parms{};

	Parms.LocationOffset = std::move(LocationOffset);
	Parms.ScaleMultiplier = std::move(ScaleMultiplier);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BlessingComponent.BP_BlessingComponent_C.AddParticleEmitter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BlessingComponent_C::AddParticleEmitter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BlessingComponent_C", "AddParticleEmitter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BlessingComponent.BP_BlessingComponent_C.SetWeaponStats
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BlessingComponent_C::SetWeaponStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BlessingComponent_C", "SetWeaponStats");

	UObject::ProcessEvent(Func, nullptr);
}

}

