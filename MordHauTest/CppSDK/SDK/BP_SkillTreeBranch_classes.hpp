#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillTreeBranch

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_HordeSkill_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_SkillTreeBranch.BP_SkillTreeBranch_C
// 0x00A0 (0x0300 - 0x0260)
class UBP_SkillTreeBranch_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UBP_SkillTreeNode_C*                    BP_SkillTreeNode;                                  // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTreeNode_C*                    BP_SkillTreeNode_C_5;                              // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTreeNode_C*                    BP_SkillTreeNode_C_6;                              // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTreeNode_C*                    BP_SkillTreeNode_C_7;                              // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTreeNode_C*                    BP_SkillTreeNode_C_8;                              // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTreeNode_C*                    BP_SkillTreeNode_C_9;                              // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MiddleStripe_Border;                               // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MiddleStripe_Fill;                                 // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OuterStripe_Border;                                // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OuterStripe_Fill;                                  // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_2;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UBP_SkillTreeNode_C*>            SkillTreeNodes;                                    // 0x02C8(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UTexture2D*                             TreeEntryIcon;                                     // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   TreeEntryName;                                     // 0x02E0(0x0018)(Edit, BlueprintVisible)
	class UBP_SkillTreeEntry_C*                   SkillTreeEntry;                                    // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SkillTreeBranch(int32 EntryPoint);
	void Construct();
	void AddNodeToBranch(E_HordeSkill Skill, class UBP_SkillTreeNode_C** Node);
	void Clear();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SkillTreeBranch_C">();
	}
	static class UBP_SkillTreeBranch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SkillTreeBranch_C>();
	}
};
static_assert(alignof(UBP_SkillTreeBranch_C) == 0x000008, "Wrong alignment on UBP_SkillTreeBranch_C");
static_assert(sizeof(UBP_SkillTreeBranch_C) == 0x000300, "Wrong size on UBP_SkillTreeBranch_C");
static_assert(offsetof(UBP_SkillTreeBranch_C, UberGraphFrame) == 0x000260, "Member 'UBP_SkillTreeBranch_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeBranch_C, BP_SkillTreeNode) == 0x000268, "Member 'UBP_SkillTreeBranch_C::BP_SkillTreeNode' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeBranch_C, BP_SkillTreeNode_C_5) == 0x000270, "Member 'UBP_SkillTreeBranch_C::BP_SkillTreeNode_C_5' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeBranch_C, BP_SkillTreeNode_C_6) == 0x000278, "Member 'UBP_SkillTreeBranch_C::BP_SkillTreeNode_C_6' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeBranch_C, BP_SkillTreeNode_C_7) == 0x000280, "Member 'UBP_SkillTreeBranch_C::BP_SkillTreeNode_C_7' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeBranch_C, BP_SkillTreeNode_C_8) == 0x000288, "Member 'UBP_SkillTreeBranch_C::BP_SkillTreeNode_C_8' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeBranch_C, BP_SkillTreeNode_C_9) == 0x000290, "Member 'UBP_SkillTreeBranch_C::BP_SkillTreeNode_C_9' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeBranch_C, Image_1) == 0x000298, "Member 'UBP_SkillTreeBranch_C::Image_1' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeBranch_C, MiddleStripe_Border) == 0x0002A0, "Member 'UBP_SkillTreeBranch_C::MiddleStripe_Border' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeBranch_C, MiddleStripe_Fill) == 0x0002A8, "Member 'UBP_SkillTreeBranch_C::MiddleStripe_Fill' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeBranch_C, OuterStripe_Border) == 0x0002B0, "Member 'UBP_SkillTreeBranch_C::OuterStripe_Border' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeBranch_C, OuterStripe_Fill) == 0x0002B8, "Member 'UBP_SkillTreeBranch_C::OuterStripe_Fill' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeBranch_C, VerticalBox_2) == 0x0002C0, "Member 'UBP_SkillTreeBranch_C::VerticalBox_2' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeBranch_C, SkillTreeNodes) == 0x0002C8, "Member 'UBP_SkillTreeBranch_C::SkillTreeNodes' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeBranch_C, TreeEntryIcon) == 0x0002D8, "Member 'UBP_SkillTreeBranch_C::TreeEntryIcon' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeBranch_C, TreeEntryName) == 0x0002E0, "Member 'UBP_SkillTreeBranch_C::TreeEntryName' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeBranch_C, SkillTreeEntry) == 0x0002F8, "Member 'UBP_SkillTreeBranch_C::SkillTreeEntry' has a wrong offset!");

}

