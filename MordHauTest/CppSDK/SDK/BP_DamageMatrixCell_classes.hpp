#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DamageMatrixCell

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_DamageMatrixCell.BP_DamageMatrixCell_C
// 0x0028 (0x0288 - 0x0260)
class UBP_DamageMatrixCell_C final : public UUserWidget
{
public:
	class UImage*                                 cell_bg;                                           // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             cell_text;                                         // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSlateColor>                    Damage_Colors;                                     // 0x0278(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Update(float Value_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DamageMatrixCell_C">();
	}
	static class UBP_DamageMatrixCell_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_DamageMatrixCell_C>();
	}
};
static_assert(alignof(UBP_DamageMatrixCell_C) == 0x000008, "Wrong alignment on UBP_DamageMatrixCell_C");
static_assert(sizeof(UBP_DamageMatrixCell_C) == 0x000288, "Wrong size on UBP_DamageMatrixCell_C");
static_assert(offsetof(UBP_DamageMatrixCell_C, cell_bg) == 0x000260, "Member 'UBP_DamageMatrixCell_C::cell_bg' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrixCell_C, cell_text) == 0x000268, "Member 'UBP_DamageMatrixCell_C::cell_text' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrixCell_C, Value) == 0x000270, "Member 'UBP_DamageMatrixCell_C::Value' has a wrong offset!");
static_assert(offsetof(UBP_DamageMatrixCell_C, Damage_Colors) == 0x000278, "Member 'UBP_DamageMatrixCell_C::Damage_Colors' has a wrong offset!");

}

