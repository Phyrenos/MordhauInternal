#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BleedDebuff

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BleedDebuff.BP_BleedDebuff_C.ExecuteUbergraph_BP_BleedDebuff
// 0x0108 (0x0108 - 0x0000)
struct BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AAdvancedCharacter* Character)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAdvancedCharacter*                     K2Node_DynamicCast_AsAdvanced_Character;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAdvancedCharacter*                     K2Node_DynamicCast_AsAdvanced_Character_1;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0064(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AAdvancedCharacter*                     K2Node_CustomEvent_Character;                      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetControllerIncludingVehicle_ReturnValue; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MordhauTakeDamage_ReturnValue;            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff) == 0x000008, "Wrong alignment on BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff");
static_assert(sizeof(BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff) == 0x000108, "Wrong size on BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff");
static_assert(offsetof(BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff, EntryPoint) == 0x000000, "Member 'BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff, K2Node_DynamicCast_AsAdvanced_Character) == 0x000038, "Member 'BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff::K2Node_DynamicCast_AsAdvanced_Character' has a wrong offset!");
static_assert(offsetof(BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff, CallFunc_GetOwner_ReturnValue_1) == 0x000048, "Member 'BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000050, "Member 'BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff, K2Node_DynamicCast_AsAdvanced_Character_1) == 0x000058, "Member 'BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff::K2Node_DynamicCast_AsAdvanced_Character_1' has a wrong offset!");
static_assert(offsetof(BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff, CallFunc_MakeHitResult_ReturnValue) == 0x000064, "Member 'BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff, K2Node_CustomEvent_Character) == 0x0000F0, "Member 'BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff, CallFunc_GetControllerIncludingVehicle_ReturnValue) == 0x0000F8, "Member 'BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff::CallFunc_GetControllerIncludingVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff, CallFunc_MordhauTakeDamage_ReturnValue) == 0x000100, "Member 'BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff::CallFunc_MordhauTakeDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff, CallFunc_IsValid_ReturnValue) == 0x000104, "Member 'BP_BleedDebuff_C_ExecuteUbergraph_BP_BleedDebuff::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BleedDebuff.BP_BleedDebuff_C.OnDied
// 0x0008 (0x0008 - 0x0000)
struct BP_BleedDebuff_C_OnDied final
{
public:
	class AAdvancedCharacter*                     Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BleedDebuff_C_OnDied) == 0x000008, "Wrong alignment on BP_BleedDebuff_C_OnDied");
static_assert(sizeof(BP_BleedDebuff_C_OnDied) == 0x000008, "Wrong size on BP_BleedDebuff_C_OnDied");
static_assert(offsetof(BP_BleedDebuff_C_OnDied, Character) == 0x000000, "Member 'BP_BleedDebuff_C_OnDied::Character' has a wrong offset!");

}

