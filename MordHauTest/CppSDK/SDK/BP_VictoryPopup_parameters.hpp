#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VictoryPopup

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_VictoryPopup.BP_VictoryPopup_C.ExecuteUbergraph_BP_VictoryPopup
// 0x0078 (0x0078 - 0x0000)
struct BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Main_Text;                      // 0x0038(0x0018)()
	class FText                                   K2Node_CustomEvent_Sub_Text;                       // 0x0050(0x0018)()
	float                                         K2Node_CustomEvent_Duration;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup) == 0x000008, "Wrong alignment on BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup");
static_assert(sizeof(BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup) == 0x000078, "Wrong size on BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup");
static_assert(offsetof(BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup, EntryPoint) == 0x000000, "Member 'BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup, CallFunc_PlayAnimation_ReturnValue) == 0x000028, "Member 'BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup, CallFunc_PlayAnimation_ReturnValue_1) == 0x000030, "Member 'BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup, K2Node_CustomEvent_Main_Text) == 0x000038, "Member 'BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup::K2Node_CustomEvent_Main_Text' has a wrong offset!");
static_assert(offsetof(BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup, K2Node_CustomEvent_Sub_Text) == 0x000050, "Member 'BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup::K2Node_CustomEvent_Sub_Text' has a wrong offset!");
static_assert(offsetof(BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup, K2Node_CustomEvent_Duration) == 0x000068, "Member 'BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000070, "Member 'BP_VictoryPopup_C_ExecuteUbergraph_BP_VictoryPopup::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_VictoryPopup.BP_VictoryPopup_C.Show
// 0x0038 (0x0038 - 0x0000)
struct BP_VictoryPopup_C_Show final
{
public:
	class FText                                   Main_Text;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Sub_Text;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         Duration;                                          // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VictoryPopup_C_Show) == 0x000008, "Wrong alignment on BP_VictoryPopup_C_Show");
static_assert(sizeof(BP_VictoryPopup_C_Show) == 0x000038, "Wrong size on BP_VictoryPopup_C_Show");
static_assert(offsetof(BP_VictoryPopup_C_Show, Main_Text) == 0x000000, "Member 'BP_VictoryPopup_C_Show::Main_Text' has a wrong offset!");
static_assert(offsetof(BP_VictoryPopup_C_Show, Sub_Text) == 0x000018, "Member 'BP_VictoryPopup_C_Show::Sub_Text' has a wrong offset!");
static_assert(offsetof(BP_VictoryPopup_C_Show, Duration) == 0x000030, "Member 'BP_VictoryPopup_C_Show::Duration' has a wrong offset!");

// Function BP_VictoryPopup.BP_VictoryPopup_C.GetVisibility_0
// 0x0001 (0x0001 - 0x0000)
struct BP_VictoryPopup_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VictoryPopup_C_GetVisibility_0) == 0x000001, "Wrong alignment on BP_VictoryPopup_C_GetVisibility_0");
static_assert(sizeof(BP_VictoryPopup_C_GetVisibility_0) == 0x000001, "Wrong size on BP_VictoryPopup_C_GetVisibility_0");
static_assert(offsetof(BP_VictoryPopup_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_VictoryPopup_C_GetVisibility_0::ReturnValue' has a wrong offset!");

}

