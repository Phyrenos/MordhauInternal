#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LoadoutEntry

#include "Basic.hpp"

#include "BP_LoadoutEntry_classes.hpp"
#include "BP_LoadoutEntry_parameters.hpp"


namespace SDK
{

// Function BP_LoadoutEntry.BP_LoadoutEntry_C.ExecuteUbergraph_BP_LoadoutEntry
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutEntry_C::ExecuteUbergraph_BP_LoadoutEntry(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "ExecuteUbergraph_BP_LoadoutEntry");

	Params::BP_LoadoutEntry_C_ExecuteUbergraph_BP_LoadoutEntry Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.CreateWrapper_Complex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FString, class FText>        InOptions                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// TArray<class UTexture2D*>               Icons                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FLinearColor>             Colors                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             Title                                                  (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_LoadoutEntry_C::CreateWrapper_Complex(const TMap<class FString, class FText>& InOptions, const TArray<class UTexture2D*>& Icons, const TArray<struct FLinearColor>& Colors, const class FText& Title)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "CreateWrapper_Complex");

	Params::BP_LoadoutEntry_C_CreateWrapper_Complex Parms{};

	Parms.InOptions = std::move(InOptions);
	Parms.Icons = std::move(Icons);
	Parms.Colors = std::move(Colors);
	Parms.Title = std::move(Title);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.Show Loadout Options
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutEntry_C::Show_Loadout_Options()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "Show Loadout Options");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.OptionSelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Option                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_LoadoutEntry_C::OptionSelected(const class FString& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "OptionSelected");

	Params::BP_LoadoutEntry_C_OptionSelected Parms{};

	Parms.Option = std::move(Option);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.Refresh Widget
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutEntry_C::Refresh_Widget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "Refresh Widget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.BndEvt__BP_LoadoutEntry_Button_176_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_LoadoutEntry_C::BndEvt__BP_LoadoutEntry_Button_176_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "BndEvt__BP_LoadoutEntry_Button_176_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.OnDragCancelled
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    PointerEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutEntry_C::OnDragCancelled(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "OnDragCancelled");

	Params::BP_LoadoutEntry_C_OnDragCancelled Parms{};

	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.OnDragLeave
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutEntry_C::OnDragLeave(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "OnDragLeave");

	Params::BP_LoadoutEntry_C_OnDragLeave Parms{};

	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.On Clicked
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutEntry_C::On_Clicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "On Clicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.On Double Click
// (BlueprintCallable, BlueprintEvent)

void UBP_LoadoutEntry_C::On_Double_Click()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "On Double Click");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.CreateWrapper
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FString, class FText>        InOptions                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_LoadoutEntry_C::CreateWrapper(const TMap<class FString, class FText>& InOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "CreateWrapper");

	Params::BP_LoadoutEntry_C_CreateWrapper Parms{};

	Parms.InOptions = std::move(InOptions);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_LoadoutEntry_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.Get_Index_Text_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_LoadoutEntry_C::Get_Index_Text_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "Get_Index_Text_0");

	Params::BP_LoadoutEntry_C_Get_Index_Text_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.Get_EquipmentPoints_Visibility_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_LoadoutEntry_C::Get_EquipmentPoints_Visibility_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "Get_EquipmentPoints_Visibility_0");

	Params::BP_LoadoutEntry_C_Get_EquipmentPoints_Visibility_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.Get_NameText_ColorAndOpacity_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSlateColor                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FSlateColor UBP_LoadoutEntry_C::Get_NameText_ColorAndOpacity_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "Get_NameText_ColorAndOpacity_0");

	Params::BP_LoadoutEntry_C_Get_NameText_ColorAndOpacity_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.UpdateBannedIndicators
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutEntry_C::UpdateBannedIndicators()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "UpdateBannedIndicators");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.OnDragDetected
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    PointerEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UDragDropOperation*               Operation                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutEntry_C::OnDragDetected(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "OnDragDetected");

	Params::BP_LoadoutEntry_C_OnDragDetected Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);

	UObject::ProcessEvent(Func, &Parms);

	if (Operation != nullptr)
		*Operation = Parms.Operation;
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.Get_TextBlock_0_Text_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_LoadoutEntry_C::Get_TextBlock_0_Text_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "Get_TextBlock_0_Text_0");

	Params::BP_LoadoutEntry_C_Get_TextBlock_0_Text_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.OnDragOver
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_LoadoutEntry_C::OnDragOver(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "OnDragOver");

	Params::BP_LoadoutEntry_C_OnDragOver Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.OnDrop
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_LoadoutEntry_C::OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "OnDrop");

	Params::BP_LoadoutEntry_C_OnDrop Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.GetBrushColor_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor UBP_LoadoutEntry_C::GetBrushColor_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "GetBrushColor_0");

	Params::BP_LoadoutEntry_C_GetBrushColor_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.OnMouseButtonDown_1
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_LoadoutEntry_C::OnMouseButtonDown_1(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "OnMouseButtonDown_1");

	Params::BP_LoadoutEntry_C_OnMouseButtonDown_1 Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.OnMouseDoubleClick_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_LoadoutEntry_C::OnMouseDoubleClick_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "OnMouseDoubleClick_0");

	Params::BP_LoadoutEntry_C_OnMouseDoubleClick_0 Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.Update Entry
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutEntry_C::Update_Entry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "Update Entry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.BP_OnEntryReleased
// (Event, Protected, BlueprintEvent)

void UBP_LoadoutEntry_C::BP_OnEntryReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "BP_OnEntryReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.BP_OnItemSelectionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LoadoutEntry_C::BP_OnItemSelectionChanged(bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "BP_OnItemSelectionChanged");

	Params::BP_LoadoutEntry_C_BP_OnItemSelectionChanged Parms{};

	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.OnListItemObjectSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UObject*                          ListItemObject                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadoutEntry_C::OnListItemObjectSet(class UObject* ListItemObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "OnListItemObjectSet");

	Params::BP_LoadoutEntry_C_OnListItemObjectSet Parms{};

	Parms.ListItemObject = ListItemObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.Update Name
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Param_Name_0                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_LoadoutEntry_C::Update_Name(const class FText& Param_Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "Update Name");

	Params::BP_LoadoutEntry_C_Update_Name Parms{};

	Parms.Param_Name_0 = std::move(Param_Name_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.On Data Set
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutEntry_C::On_Data_Set()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "On Data Set");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.GetColorAndOpacity_1
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor UBP_LoadoutEntry_C::GetColorAndOpacity_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "GetColorAndOpacity_1");

	Params::BP_LoadoutEntry_C_GetColorAndOpacity_1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.Get_Image_Hovered_ColorAndOpacity_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor UBP_LoadoutEntry_C::Get_Image_Hovered_ColorAndOpacity_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "Get_Image_Hovered_ColorAndOpacity_0");

	Params::BP_LoadoutEntry_C_Get_Image_Hovered_ColorAndOpacity_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.GetVisibility_CollapseIfDefaultOrNotSelected
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_LoadoutEntry_C::GetVisibility_CollapseIfDefaultOrNotSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "GetVisibility_CollapseIfDefaultOrNotSelected");

	Params::BP_LoadoutEntry_C_GetVisibility_CollapseIfDefaultOrNotSelected Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.Create Context Options
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutEntry_C::Create_Context_Options()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "Create Context Options");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.GetVisibility_CollapseIfNoCategory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_LoadoutEntry_C::GetVisibility_CollapseIfNoCategory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "GetVisibility_CollapseIfNoCategory");

	Params::BP_LoadoutEntry_C_GetVisibility_CollapseIfNoCategory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.GetVisibility_CollapseIfNotDefault
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_LoadoutEntry_C::GetVisibility_CollapseIfNotDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "GetVisibility_CollapseIfNotDefault");

	Params::BP_LoadoutEntry_C_GetVisibility_CollapseIfNotDefault Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.Get_Overlay_Prompts_Visibility_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_LoadoutEntry_C::Get_Overlay_Prompts_Visibility_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "Get_Overlay_Prompts_Visibility_0");

	Params::BP_LoadoutEntry_C_Get_Overlay_Prompts_Visibility_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.GetVisibility_CollapseIfFirstListIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_LoadoutEntry_C::GetVisibility_CollapseIfFirstListIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "GetVisibility_CollapseIfFirstListIndex");

	Params::BP_LoadoutEntry_C_GetVisibility_CollapseIfFirstListIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.GetVisibility_CollapseIfLastLoadout
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UBP_LoadoutEntry_C::GetVisibility_CollapseIfLastLoadout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "GetVisibility_CollapseIfLastLoadout");

	Params::BP_LoadoutEntry_C_GetVisibility_CollapseIfLastLoadout Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.SetContextOptions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_LoadoutEntry_C::SetContextOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "SetContextOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadoutEntry.BP_LoadoutEntry_C.InitializeOptions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FString, class FText>        OptionsMap                                             (Parm, OutParm)

void UBP_LoadoutEntry_C::InitializeOptions(TMap<class FString, class FText>* OptionsMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadoutEntry_C", "InitializeOptions");

	Params::BP_LoadoutEntry_C_InitializeOptions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OptionsMap != nullptr)
		*OptionsMap = std::move(Parms.OptionsMap);
}

}

