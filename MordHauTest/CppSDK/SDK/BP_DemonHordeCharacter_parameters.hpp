#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DemonHordeCharacter

#include "Basic.hpp"

#include "Mordhau_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.ExecuteUbergraph_BP_DemonHordeCharacter
// 0x04F0 (0x04F0 - 0x0000)
struct BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Angle;                                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            K2Node_Event_Type;                                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SubType;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Bone;                                 // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Point;                                // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Source_1;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Agent_1;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_DemonHordeCharacter_C*>      CallFunc_GetAllActorsOfClass_OutActors;            // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DemonHordeGamestate_C*              K2Node_DynamicCast_AsBP_Demon_Horde_Gamestate;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMordhauMotion*                         CallFunc_GetMotion_ReturnValue;                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttackMotion*                          K2Node_DynamicCast_AsAttack_Motion;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C3[0x1];                                       // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00C4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0100(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AFistsWeapon*                           K2Node_DynamicCast_AsFists_Weapon;                 // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitResult_1;                          // 0x0118(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EMordhauDamageType                            K2Node_Event_DamageType;                           // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SubDamageType;                        // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A6[0x2];                                      // 0x01A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Source;                               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Agent;                                // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_EventInstigator_1;                    // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BattleAxe_DIH_C*                    K2Node_DynamicCast_AsBP_Battle_Axe_DIH;            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BlessingComponent_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x01DC(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AMordhauCharacter*                      K2Node_Event_Attacker;                             // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordeEnemy_C*                       K2Node_Event_Enemy;                                // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State;        // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_292[0x2];                                      // 0x0292(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HordePlayerState_C*                 K2Node_DynamicCast_AsBP_Horde_Player_State_1;      // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   Temp_byte_Variable;                                // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD[0x3];                                      // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_6;               // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CA[0x2];                                      // 0x02CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyDamage_ReturnValue_1;                // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x02D0(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_MordhauTakeDamage_ReturnValue;            // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor_1;                         // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BloatedPuke_C*                      K2Node_DynamicCast_AsBP_Bloated_Puke;              // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BloatedPuke_C*                      K2Node_DynamicCast_AsBP_Bloated_Puke_1;            // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_7;               // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A[0x2];                                      // 0x038A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0390(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x03A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_1; // 0x03B8(0x0010)(ReferenceParm)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD[0x3];                                      // 0x03CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x03D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Delay;                          // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_LaunchVelocity;                 // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bXYOverride;                    // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bZOverride;                     // 0x03ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAirborne_ReturnValue;                   // 0x03EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EF[0x1];                                      // 0x03EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MordhauCharacter_C*                 K2Node_DynamicCast_AsBP_Mordhau_Character;         // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FA[0x2];                                      // 0x03FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x03FC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_EventInstigator;                      // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x0418(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0x3];                                      // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0424(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DemonHordeGamestate_C*              K2Node_DynamicCast_AsBP_Demon_Horde_Gamestate_1;   // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RestockEquipmentFromAmmoBox_ReturnValue;  // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CA[0x6];                                      // 0x04CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SetupDemonHorde_C*                  CallFunc_GetActorOfClass_ReturnValue;              // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RestockEquipmentFromAmmoBox_ReturnValue_1; // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetSkill_Level;                           // 0x04D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DA[0x2];                                      // 0x04DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSkill_PercentA;                        // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSkill_PercentB;                        // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkill_IntegerA;                        // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSkill_TimeA;                           // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter) == 0x000008, "Wrong alignment on BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter");
static_assert(sizeof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter) == 0x0004F0, "Wrong size on BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, EntryPoint) == 0x000000, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_HasAuthority_ReturnValue_1) == 0x000018, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_HasAuthority_ReturnValue_2) == 0x000028, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_HasAuthority_ReturnValue_3) == 0x000029, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_Angle) == 0x00002C, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_Angle' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_Type) == 0x000030, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_SubType) == 0x000031, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_SubType' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_Bone) == 0x000034, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_Bone' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_Point) == 0x00003C, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_Point' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_Source_1) == 0x000048, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_Source_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_Agent_1) == 0x000050, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_Agent_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_GetAllActorsOfClass_OutActors) == 0x000058, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_GetGameState_ReturnValue) == 0x000070, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000078, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_AsBP_Demon_Horde_Gamestate) == 0x000080, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_AsBP_Demon_Horde_Gamestate' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_GetMotion_ReturnValue) == 0x000090, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_GetMotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_AsAttack_Motion) == 0x000098, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_AsAttack_Motion' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A1, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A4, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000A8, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000AC, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000B0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_BooleanOR_ReturnValue) == 0x0000B1, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000B2, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000B3, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_BooleanOR_ReturnValue_1) == 0x0000B4, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B8, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000BC, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0000C0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_HasAuthority_ReturnValue_4) == 0x0000C1, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_HasAuthority_ReturnValue_5) == 0x0000C2, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000C4, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000D4, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0000E8, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000F0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000100, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_AsFists_Weapon) == 0x000108, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_AsFists_Weapon' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_bSuccess_2) == 0x000110, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_Damage) == 0x000114, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_HitResult_1) == 0x000118, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_HitResult_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_DamageType) == 0x0001A4, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_SubDamageType) == 0x0001A5, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_SubDamageType' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_Source) == 0x0001A8, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_Source' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_Agent) == 0x0001B0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_Agent' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_EventInstigator_1) == 0x0001B8, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_EventInstigator_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_AsBP_Battle_Axe_DIH) == 0x0001C0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_AsBP_Battle_Axe_DIH' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_bSuccess_3) == 0x0001C8, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_FMax_ReturnValue) == 0x0001CC, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_GetComponentByClass_ReturnValue) == 0x0001D0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_IsValid_ReturnValue) == 0x0001D8, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_HitResult) == 0x0001DC, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_Attacker) == 0x000268, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_Attacker' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_Enemy) == 0x000270, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_Enemy' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000278, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_MapRangeClamped_ReturnValue) == 0x00027C, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000280, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_AsBP_Horde_Player_State) == 0x000288, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_AsBP_Horde_Player_State' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_bSuccess_4) == 0x000290, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_Add_ByteByte_ReturnValue) == 0x000291, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000294, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_AsBP_Horde_Player_State_1) == 0x000298, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_AsBP_Horde_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_bSuccess_5) == 0x0002A0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_Multiply_IntInt_ReturnValue) == 0x0002A4, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002A8, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_IsValid_ReturnValue_1) == 0x0002AC, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_Max_ReturnValue) == 0x0002B0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, Temp_byte_Variable) == 0x0002B4, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Select_Default) == 0x0002B8, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_IsValid_ReturnValue_2) == 0x0002BC, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0002C0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_ApplyDamage_ReturnValue) == 0x0002C4, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_HasAuthority_ReturnValue_6) == 0x0002C8, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_HasAuthority_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_IsValid_ReturnValue_3) == 0x0002C9, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_ApplyDamage_ReturnValue_1) == 0x0002CC, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_ApplyDamage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_MakeHitResult_ReturnValue) == 0x0002D0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_MordhauTakeDamage_ReturnValue) == 0x00035C, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_MordhauTakeDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_OtherActor_1) == 0x000360, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_OtherActor) == 0x000368, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_AsBP_Bloated_Puke) == 0x000370, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_AsBP_Bloated_Puke' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_bSuccess_6) == 0x000378, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_AsBP_Bloated_Puke_1) == 0x000380, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_AsBP_Bloated_Puke_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_bSuccess_7) == 0x000388, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_HasAuthority_ReturnValue_7) == 0x000389, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_HasAuthority_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_DeltaSeconds) == 0x00038C, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000390, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0003A0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_Normal_ReturnValue) == 0x0003A4, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_VSize_ReturnValue) == 0x0003B0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_GetOverlappingActors_OverlappingActors_1) == 0x0003B8, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_GetOverlappingActors_OverlappingActors_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_FMin_ReturnValue) == 0x0003C8, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0003CC, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0003D0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_CustomEvent_Delay) == 0x0003DC, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_CustomEvent_LaunchVelocity) == 0x0003E0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_CustomEvent_LaunchVelocity' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_CustomEvent_bXYOverride) == 0x0003EC, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_CustomEvent_bXYOverride' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_CustomEvent_bZOverride) == 0x0003ED, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_CustomEvent_bZOverride' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_IsAirborne_ReturnValue) == 0x0003EE, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_IsAirborne_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_AsBP_Mordhau_Character) == 0x0003F0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_AsBP_Mordhau_Character' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_bSuccess_8) == 0x0003F8, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_IsLocallyControlled_ReturnValue) == 0x0003F9, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_CreateDelegate_OutputDelegate_4) == 0x0003FC, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_Event_EventInstigator) == 0x000410, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_Event_EventInstigator' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x000418, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_IsValid_ReturnValue_4) == 0x000420, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000424, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0004B0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_GetGameState_ReturnValue_1) == 0x0004B8, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_AsBP_Demon_Horde_Gamestate_1) == 0x0004C0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_AsBP_Demon_Horde_Gamestate_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, K2Node_DynamicCast_bSuccess_9) == 0x0004C8, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_RestockEquipmentFromAmmoBox_ReturnValue) == 0x0004C9, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_RestockEquipmentFromAmmoBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_GetActorOfClass_ReturnValue) == 0x0004D0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_RestockEquipmentFromAmmoBox_ReturnValue_1) == 0x0004D8, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_RestockEquipmentFromAmmoBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_GetSkill_Level) == 0x0004D9, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_GetSkill_Level' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_GetSkill_PercentA) == 0x0004DC, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_GetSkill_PercentA' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_GetSkill_PercentB) == 0x0004E0, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_GetSkill_PercentB' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_GetSkill_IntegerA) == 0x0004E4, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_GetSkill_IntegerA' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_GetSkill_TimeA) == 0x0004E8, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_GetSkill_TimeA' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter, CallFunc_Greater_ByteByte_ReturnValue) == 0x0004EC, "Member 'BP_DemonHordeCharacter_C_ExecuteUbergraph_BP_DemonHordeCharacter::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.DelayedLaunch
// 0x0014 (0x0014 - 0x0000)
struct BP_DemonHordeCharacter_C_DelayedLaunch final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LaunchVelocity;                                    // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bXYOverride;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bZOverride;                                        // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DemonHordeCharacter_C_DelayedLaunch) == 0x000004, "Wrong alignment on BP_DemonHordeCharacter_C_DelayedLaunch");
static_assert(sizeof(BP_DemonHordeCharacter_C_DelayedLaunch) == 0x000014, "Wrong size on BP_DemonHordeCharacter_C_DelayedLaunch");
static_assert(offsetof(BP_DemonHordeCharacter_C_DelayedLaunch, Delay) == 0x000000, "Member 'BP_DemonHordeCharacter_C_DelayedLaunch::Delay' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_DelayedLaunch, LaunchVelocity) == 0x000004, "Member 'BP_DemonHordeCharacter_C_DelayedLaunch::LaunchVelocity' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_DelayedLaunch, bXYOverride) == 0x000010, "Member 'BP_DemonHordeCharacter_C_DelayedLaunch::bXYOverride' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_DelayedLaunch, bZOverride) == 0x000011, "Member 'BP_DemonHordeCharacter_C_DelayedLaunch::bZOverride' has a wrong offset!");

// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_DemonHordeCharacter_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeCharacter_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_DemonHordeCharacter_C_ReceiveTick");
static_assert(sizeof(BP_DemonHordeCharacter_C_ReceiveTick) == 0x000004, "Wrong size on BP_DemonHordeCharacter_C_ReceiveTick");
static_assert(offsetof(BP_DemonHordeCharacter_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_DemonHordeCharacter_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.ReceiveActorEndOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_DemonHordeCharacter_C_ReceiveActorEndOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeCharacter_C_ReceiveActorEndOverlap) == 0x000008, "Wrong alignment on BP_DemonHordeCharacter_C_ReceiveActorEndOverlap");
static_assert(sizeof(BP_DemonHordeCharacter_C_ReceiveActorEndOverlap) == 0x000008, "Wrong size on BP_DemonHordeCharacter_C_ReceiveActorEndOverlap");
static_assert(offsetof(BP_DemonHordeCharacter_C_ReceiveActorEndOverlap, OtherActor) == 0x000000, "Member 'BP_DemonHordeCharacter_C_ReceiveActorEndOverlap::OtherActor' has a wrong offset!");

// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_DemonHordeCharacter_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeCharacter_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BP_DemonHordeCharacter_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BP_DemonHordeCharacter_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BP_DemonHordeCharacter_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BP_DemonHordeCharacter_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BP_DemonHordeCharacter_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.OnBlockedMelee
// 0x0098 (0x0098 - 0x0000)
struct BP_DemonHordeCharacter_C_OnBlockedMelee final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMordhauCharacter*                      Attacker;                                          // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeCharacter_C_OnBlockedMelee) == 0x000008, "Wrong alignment on BP_DemonHordeCharacter_C_OnBlockedMelee");
static_assert(sizeof(BP_DemonHordeCharacter_C_OnBlockedMelee) == 0x000098, "Wrong size on BP_DemonHordeCharacter_C_OnBlockedMelee");
static_assert(offsetof(BP_DemonHordeCharacter_C_OnBlockedMelee, HitResult) == 0x000000, "Member 'BP_DemonHordeCharacter_C_OnBlockedMelee::HitResult' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_OnBlockedMelee, Attacker) == 0x000090, "Member 'BP_DemonHordeCharacter_C_OnBlockedMelee::Attacker' has a wrong offset!");

// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.ReceiveMordhauDamage
// 0x00B0 (0x00B0 - 0x0000)
struct BP_DemonHordeCharacter_C_ReceiveMordhauDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0004(0x008C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EMordhauDamageType                            DamageType;                                        // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SubDamageType;                                     // 0x0091(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Agent;                                             // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            EventInstigator;                                   // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeCharacter_C_ReceiveMordhauDamage) == 0x000008, "Wrong alignment on BP_DemonHordeCharacter_C_ReceiveMordhauDamage");
static_assert(sizeof(BP_DemonHordeCharacter_C_ReceiveMordhauDamage) == 0x0000B0, "Wrong size on BP_DemonHordeCharacter_C_ReceiveMordhauDamage");
static_assert(offsetof(BP_DemonHordeCharacter_C_ReceiveMordhauDamage, Damage) == 0x000000, "Member 'BP_DemonHordeCharacter_C_ReceiveMordhauDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ReceiveMordhauDamage, HitResult) == 0x000004, "Member 'BP_DemonHordeCharacter_C_ReceiveMordhauDamage::HitResult' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ReceiveMordhauDamage, DamageType) == 0x000090, "Member 'BP_DemonHordeCharacter_C_ReceiveMordhauDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ReceiveMordhauDamage, SubDamageType) == 0x000091, "Member 'BP_DemonHordeCharacter_C_ReceiveMordhauDamage::SubDamageType' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ReceiveMordhauDamage, Source) == 0x000098, "Member 'BP_DemonHordeCharacter_C_ReceiveMordhauDamage::Source' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ReceiveMordhauDamage, Agent) == 0x0000A0, "Member 'BP_DemonHordeCharacter_C_ReceiveMordhauDamage::Agent' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ReceiveMordhauDamage, EventInstigator) == 0x0000A8, "Member 'BP_DemonHordeCharacter_C_ReceiveMordhauDamage::EventInstigator' has a wrong offset!");

// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.UpdateRespawnCrossLocation
// 0x01B8 (0x01B8 - 0x0000)
struct BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation final
{
public:
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0000(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_1; // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_2; // 0x0028(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_3; // 0x0068(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_4; // 0x0078(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_3;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_4;         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0090(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00A0(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation) == 0x000008, "Wrong alignment on BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation");
static_assert(sizeof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation) == 0x0001B8, "Wrong size on BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000000, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_GetOverlappingActors_OverlappingActors_1) == 0x000010, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_GetOverlappingActors_OverlappingActors_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000021, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_Not_PreBool_ReturnValue_1) == 0x000023, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_GetOverlappingActors_OverlappingActors_2) == 0x000028, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_GetOverlappingActors_OverlappingActors_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000044, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000048, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_Not_PreBool_ReturnValue_2) == 0x000054, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, K2Node_MakeArray_Array) == 0x000058, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_GetOverlappingActors_OverlappingActors_3) == 0x000068, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_GetOverlappingActors_OverlappingActors_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_GetOverlappingActors_OverlappingActors_4) == 0x000078, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_GetOverlappingActors_OverlappingActors_4' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_Array_IsValidIndex_ReturnValue_3) == 0x000088, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_Array_IsValidIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_Array_IsValidIndex_ReturnValue_4) == 0x000089, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_Array_IsValidIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_Not_PreBool_ReturnValue_3) == 0x00008A, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_Not_PreBool_ReturnValue_4) == 0x00008B, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, Temp_object_Variable) == 0x000090, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000A0, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x00012C, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_IsFalling_ReturnValue) == 0x00012D, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_Not_PreBool_ReturnValue_5) == 0x00012E, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x00012F, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x000130, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BreakHitResult_Time) == 0x000134, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BreakHitResult_Distance) == 0x000138, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BreakHitResult_Location) == 0x00013C, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x000148, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BreakHitResult_Normal) == 0x000154, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x000160, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BreakHitResult_PhysMat) == 0x000170, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BreakHitResult_HitActor) == 0x000178, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BreakHitResult_HitComponent) == 0x000180, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BreakHitResult_HitBoneName) == 0x000188, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BreakHitResult_FaceIndex) == 0x000194, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BreakHitResult_TraceStart) == 0x000198, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BreakHitResult_TraceEnd) == 0x0001A4, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BooleanAND_ReturnValue) == 0x0001B0, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BooleanAND_ReturnValue_1) == 0x0001B1, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BooleanAND_ReturnValue_2) == 0x0001B2, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BooleanAND_ReturnValue_3) == 0x0001B3, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation, CallFunc_BooleanAND_ReturnValue_4) == 0x0001B4, "Member 'BP_DemonHordeCharacter_C_UpdateRespawnCrossLocation::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.OnKilled
// 0x0008 (0x0008 - 0x0000)
struct BP_DemonHordeCharacter_C_OnKilled final
{
public:
	class AController*                            EventInstigator;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeCharacter_C_OnKilled) == 0x000008, "Wrong alignment on BP_DemonHordeCharacter_C_OnKilled");
static_assert(sizeof(BP_DemonHordeCharacter_C_OnKilled) == 0x000008, "Wrong size on BP_DemonHordeCharacter_C_OnKilled");
static_assert(offsetof(BP_DemonHordeCharacter_C_OnKilled, EventInstigator) == 0x000000, "Member 'BP_DemonHordeCharacter_C_OnKilled::EventInstigator' has a wrong offset!");

// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.ModifyOutgoingDamage
// 0x00B0 (0x00B0 - 0x0000)
struct BP_DemonHordeCharacter_C_ModifyOutgoingDamage final
{
public:
	class AActor*                                 Receiver;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            DamageType;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitInfo;                                           // 0x000C(0x008C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 Agent;                                             // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InDamage;                                          // 0x00A0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutDamage;                                         // 0x00A4(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ModifyOutgoingDamage_OutDamage;           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DemonHordeCharacter_C_ModifyOutgoingDamage) == 0x000008, "Wrong alignment on BP_DemonHordeCharacter_C_ModifyOutgoingDamage");
static_assert(sizeof(BP_DemonHordeCharacter_C_ModifyOutgoingDamage) == 0x0000B0, "Wrong size on BP_DemonHordeCharacter_C_ModifyOutgoingDamage");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyOutgoingDamage, Receiver) == 0x000000, "Member 'BP_DemonHordeCharacter_C_ModifyOutgoingDamage::Receiver' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyOutgoingDamage, DamageType) == 0x000008, "Member 'BP_DemonHordeCharacter_C_ModifyOutgoingDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyOutgoingDamage, HitInfo) == 0x00000C, "Member 'BP_DemonHordeCharacter_C_ModifyOutgoingDamage::HitInfo' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyOutgoingDamage, Agent) == 0x000098, "Member 'BP_DemonHordeCharacter_C_ModifyOutgoingDamage::Agent' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyOutgoingDamage, InDamage) == 0x0000A0, "Member 'BP_DemonHordeCharacter_C_ModifyOutgoingDamage::InDamage' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyOutgoingDamage, OutDamage) == 0x0000A4, "Member 'BP_DemonHordeCharacter_C_ModifyOutgoingDamage::OutDamage' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyOutgoingDamage, CallFunc_ModifyOutgoingDamage_OutDamage) == 0x0000A8, "Member 'BP_DemonHordeCharacter_C_ModifyOutgoingDamage::CallFunc_ModifyOutgoingDamage_OutDamage' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyOutgoingDamage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000AC, "Member 'BP_DemonHordeCharacter_C_ModifyOutgoingDamage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyOutgoingDamage, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000AD, "Member 'BP_DemonHordeCharacter_C_ModifyOutgoingDamage::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.ModifyDamage
// 0x00D0 (0x00D0 - 0x0000)
struct BP_DemonHordeCharacter_C_ModifyDamage final
{
public:
	float                                         DamageAmount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMordhauDamageInfo                     DamageInfo;                                        // 0x0008(0x00A8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	class AController*                            EventInstigator;                                   // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x00B8(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ModifyDamage_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAirborne_ReturnValue;                   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x1];                                       // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeCharacter_C_ModifyDamage) == 0x000008, "Wrong alignment on BP_DemonHordeCharacter_C_ModifyDamage");
static_assert(sizeof(BP_DemonHordeCharacter_C_ModifyDamage) == 0x0000D0, "Wrong size on BP_DemonHordeCharacter_C_ModifyDamage");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyDamage, DamageAmount) == 0x000000, "Member 'BP_DemonHordeCharacter_C_ModifyDamage::DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyDamage, DamageInfo) == 0x000008, "Member 'BP_DemonHordeCharacter_C_ModifyDamage::DamageInfo' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyDamage, EventInstigator) == 0x0000B0, "Member 'BP_DemonHordeCharacter_C_ModifyDamage::EventInstigator' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyDamage, ReturnValue) == 0x0000B8, "Member 'BP_DemonHordeCharacter_C_ModifyDamage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyDamage, Temp_bool_Variable) == 0x0000BC, "Member 'BP_DemonHordeCharacter_C_ModifyDamage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyDamage, CallFunc_ModifyDamage_ReturnValue) == 0x0000C0, "Member 'BP_DemonHordeCharacter_C_ModifyDamage::CallFunc_ModifyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyDamage, Temp_float_Variable) == 0x0000C4, "Member 'BP_DemonHordeCharacter_C_ModifyDamage::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyDamage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C8, "Member 'BP_DemonHordeCharacter_C_ModifyDamage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyDamage, CallFunc_IsAirborne_ReturnValue) == 0x0000C9, "Member 'BP_DemonHordeCharacter_C_ModifyDamage::CallFunc_IsAirborne_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyDamage, CallFunc_BooleanAND_ReturnValue) == 0x0000CA, "Member 'BP_DemonHordeCharacter_C_ModifyDamage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_ModifyDamage, K2Node_Select_Default) == 0x0000CC, "Member 'BP_DemonHordeCharacter_C_ModifyDamage::K2Node_Select_Default' has a wrong offset!");

// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.OnKilledEnemy
// 0x0008 (0x0008 - 0x0000)
struct BP_DemonHordeCharacter_C_OnKilledEnemy final
{
public:
	class ABP_HordeEnemy_C*                       Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeCharacter_C_OnKilledEnemy) == 0x000008, "Wrong alignment on BP_DemonHordeCharacter_C_OnKilledEnemy");
static_assert(sizeof(BP_DemonHordeCharacter_C_OnKilledEnemy) == 0x000008, "Wrong size on BP_DemonHordeCharacter_C_OnKilledEnemy");
static_assert(offsetof(BP_DemonHordeCharacter_C_OnKilledEnemy, Enemy) == 0x000000, "Member 'BP_DemonHordeCharacter_C_OnKilledEnemy::Enemy' has a wrong offset!");

// Function BP_DemonHordeCharacter.BP_DemonHordeCharacter_C.OnDied
// 0x0030 (0x0030 - 0x0000)
struct BP_DemonHordeCharacter_C_OnDied final
{
public:
	float                                         Angle;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMordhauDamageType                            Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SubType;                                           // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   bone;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Agent;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonHordeCharacter_C_OnDied) == 0x000008, "Wrong alignment on BP_DemonHordeCharacter_C_OnDied");
static_assert(sizeof(BP_DemonHordeCharacter_C_OnDied) == 0x000030, "Wrong size on BP_DemonHordeCharacter_C_OnDied");
static_assert(offsetof(BP_DemonHordeCharacter_C_OnDied, Angle) == 0x000000, "Member 'BP_DemonHordeCharacter_C_OnDied::Angle' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_OnDied, Type) == 0x000004, "Member 'BP_DemonHordeCharacter_C_OnDied::Type' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_OnDied, SubType) == 0x000005, "Member 'BP_DemonHordeCharacter_C_OnDied::SubType' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_OnDied, bone) == 0x000008, "Member 'BP_DemonHordeCharacter_C_OnDied::bone' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_OnDied, Point) == 0x000010, "Member 'BP_DemonHordeCharacter_C_OnDied::Point' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_OnDied, Source) == 0x000020, "Member 'BP_DemonHordeCharacter_C_OnDied::Source' has a wrong offset!");
static_assert(offsetof(BP_DemonHordeCharacter_C_OnDied, Agent) == 0x000028, "Member 'BP_DemonHordeCharacter_C_OnDied::Agent' has a wrong offset!");

}

